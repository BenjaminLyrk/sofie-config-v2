{
    "version": "1.3.0",
    "studioId": null,
    "snapshot": {
        "_id": "47HZxAdckSXuRTXEJ",
        "type": "system",
        "created": 1590652861108,
        "name": "System_2020-05-28 08:01:01",
        "version": "1.3.0"
    },
    "studios": [
        {
            "_id": "studio0",
            "name": "Default studio",
            "supportedShowStyleBase": [
                "show0"
            ],
            "settings": {
                "mediaPreviewsUrl": "http://10.201.76.11:8000/",
                "sofieUrl": "http://10.209.81.11",
                "slackEvaluationUrls": "https://hooks.slack.com/services/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",
                "supportedMediaFormats": "1920x1080i5000tff,1920x1080p5000,1920x1080i2500tff,1920x1080p2500,1920x1080i2500",
                "supportedAudioStreams": "",
                "autoRewindLeavingSegment": true
            },
            "mappings": {
                "core_abstract": {
                    "device": 0,
                    "deviceId": "abstract0",
                    "lookahead": 0
                },
                "casparcg_dve_loop": {
                    "device": 1,
                    "deviceId": "caspar02",
                    "lookahead": 3,
                    "previewWhenNotOnAir": true,
                    "channel": 2,
                    "layer": 110
                },
                "casparcg_cg_dve_template": {
                    "device": 1,
                    "deviceId": "caspar02",
                    "lookahead": 2,
                    "channel": 2,
                    "layer": 120,
                    "previewWhenNotOnAir": true
                },
                "casparcg_dve_key": {
                    "device": 1,
                    "deviceId": "caspar02",
                    "lookahead": 3,
                    "previewWhenNotOnAir": true,
                    "channel": 2,
                    "layer": 109
                },
                "casparcg_dve_frame": {
                    "device": 1,
                    "deviceId": "caspar02",
                    "lookahead": 3,
                    "previewWhenNotOnAir": true,
                    "channel": 2,
                    "layer": 111
                },
                "casparcg_player_jingle": {
                    "device": 1,
                    "deviceId": "caspar02",
                    "lookahead": 1,
                    "channel": 1,
                    "layer": 120,
                    "previewWhenNotOnAir": true
                },
                "casparcg_countdown": {
                    "device": 1,
                    "deviceId": "caspar02",
                    "lookahead": 0,
                    "previewWhenNotOnAir": true,
                    "channel": 3,
                    "layer": 120
                },
                "casparcg_audio_lyd": {
                    "device": 1,
                    "deviceId": "caspar02",
                    "lookahead": 1,
                    "channel": 1,
                    "layer": 101
                },
                "atem_me_program": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 0,
                    "mappingType": 0,
                    "index": 0
                },
                "atem_me_clean": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 0,
                    "mappingType": 0,
                    "index": 3
                },
                "atem_clean_usk_effect": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 0,
                    "mappingType": 0,
                    "index": 3
                },
                "atem_aux_pgm": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 0,
                    "mappingType": 3,
                    "index": 0
                },
                "atem_aux_clean": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 0,
                    "mappingType": 3,
                    "index": 1
                },
                "atem_aux_wall": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "mappingType": 3,
                    "index": 2
                },
                "atem_aux_ar": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "mappingType": 3,
                    "index": 3
                },
                "atem_aux_viz_ovl_in_1": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "mappingType": 3,
                    "index": 4
                },
                "atem_aux_video_mix_minus": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "mappingType": 3,
                    "index": 6
                },
                "atem_aux_venue": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "mappingType": 3,
                    "index": 7
                },
                "atem_aux_lookahead": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "mappingType": 3,
                    "index": 10
                },
                "atem_aux_ssrc": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "mappingType": 3,
                    "index": 11
                },
                "atem_dsk_graphics": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 0,
                    "mappingType": 1,
                    "index": 0
                },
                "atem_dsk_effect": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 0,
                    "mappingType": 1,
                    "index": 1
                },
                "atem_supersource_art": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 0,
                    "mappingType": 5,
                    "index": 0
                },
                "atem_supersource_default": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "mappingType": 2,
                    "index": 0
                },
                "atem_supersource_z_box1": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "lookaheadMaxSearchDistance": 1,
                    "mappingType": 2,
                    "index": 0
                },
                "atem_supersource_z_box2": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "lookaheadMaxSearchDistance": 1,
                    "mappingType": 2,
                    "index": 0
                },
                "atem_supersource_z_box3": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "lookaheadMaxSearchDistance": 1,
                    "mappingType": 2,
                    "index": 0
                },
                "casparcg_player_clip_pending": {
                    "device": 0,
                    "deviceId": "abstract0",
                    "lookahead": 1,
                    "lookaheadDepth": 2
                },
                "casparcg_player_clip_1": {
                    "device": 1,
                    "deviceId": "caspar01",
                    "lookahead": 0,
                    "channel": 1,
                    "layer": 110,
                    "previewWhenNotOnAir": true
                },
                "casparcg_player_clip_2": {
                    "device": 1,
                    "deviceId": "caspar01",
                    "lookahead": 0,
                    "channel": 2,
                    "layer": 110,
                    "previewWhenNotOnAir": true
                },
                "sisyfos_source_clip_pending": {
                    "device": 0,
                    "deviceId": "abstract0",
                    "lookahead": 0,
                    "lookaheadDepth": 0
                },
                "sisyfos_source_Host_1_st_a": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 0,
                    "lookahead": 0
                },
                "sisyfos_source_Host_2_st_a": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 1,
                    "lookahead": 0
                },
                "sisyfos_source_Guest_1_st_a": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 2,
                    "lookahead": 0
                },
                "sisyfos_source_Guest_2_st_a": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 3,
                    "lookahead": 0
                },
                "sisyfos_source_Guest_3_st_a": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 4,
                    "lookahead": 0
                },
                "sisyfos_source_Guest_4_st_a": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 5,
                    "lookahead": 0
                },
                "sisyfos_source_Host_1_st_b": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 6,
                    "lookahead": 0
                },
                "sisyfos_source_Host_2_st_b": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 7,
                    "lookahead": 0
                },
                "sisyfos_source_Guest_1_st_b": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 8,
                    "lookahead": 0
                },
                "sisyfos_source_Guest_2_st_b": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 9,
                    "lookahead": 0
                },
                "sisyfos_source_Guest_3_st_b": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 10,
                    "lookahead": 0
                },
                "sisyfos_source_Guest_4_st_b": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 11,
                    "lookahead": 0
                },
                "sisyfos_source_live_1": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 12,
                    "lookahead": 0
                },
                "sisyfos_source_live_2": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 13,
                    "lookahead": 0
                },
                "sisyfos_source_live_3": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 14,
                    "lookahead": 0
                },
                "sisyfos_source_live_4": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 15,
                    "lookahead": 0
                },
                "sisyfos_source_live_5": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 16,
                    "lookahead": 0
                },
                "sisyfos_source_live_6": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 17,
                    "lookahead": 0
                },
                "sisyfos_source_live_7": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 18,
                    "lookahead": 0
                },
                "sisyfos_source_live_8": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 19,
                    "lookahead": 0
                },
                "sisyfos_source_live_9": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 20,
                    "lookahead": 0
                },
                "sisyfos_source_live_10": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 21,
                    "lookahead": 0
                },
                "sisyfos_source_server_a": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 22,
                    "lookahead": 0
                },
                "sisyfos_source_server_b": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 23,
                    "lookahead": 0
                },
                "sisyfos_source_evs_1": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 24,
                    "lookahead": 0
                },
                "sisyfos_source_evs_2": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 25,
                    "lookahead": 0
                },
                "sisyfos_source_jingle": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 26,
                    "lookahead": 0
                },
                "sisyfos_source_audiobed": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 27,
                    "lookahead": 0
                },
                "sisyfos_source_tlf_hybrid": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": 28,
                    "lookahead": 0
                },
                "viz_layer_overlay": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "viz_layer_overlay_ident": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "viz_layer_overlay_topt": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "viz_layer_overlay_lower": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "viz_layer_overlay_headline": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "viz_layer_overlay_tema": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "viz_layer_pilot": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "viz_layer_design": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "viz_layer_adlibs": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "casparcg_full_bg": {
                    "device": 1,
                    "deviceId": "caspar02",
                    "lookahead": 0,
                    "channel": 4,
                    "layer": 110
                },
                "viz_layer_pilot_overlay": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "abstract_server_enable": {
                    "device": 0,
                    "deviceId": "abstract0",
                    "lookahead": 0
                },
                "casparcg_player_clip_1_loading_loop": {
                    "device": 1,
                    "deviceId": "caspar01",
                    "lookahead": 0,
                    "channel": 1,
                    "layer": 109
                },
                "casparcg_player_clip_2_loading_loop": {
                    "device": 1,
                    "deviceId": "caspar01",
                    "lookahead": 0,
                    "channel": 2,
                    "layer": 109
                },
                "viz_layer_wall": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "sisyfos_resync": {
                    "device": 11,
                    "deviceId": "sisyfos0",
                    "channel": -1,
                    "lookahead": 0
                },
                "atem_supersource_z_box4": {
                    "device": 2,
                    "deviceId": "atem0",
                    "lookahead": 3,
                    "lookaheadMaxSearchDistance": 1,
                    "mappingType": 2,
                    "index": 0
                },
                "graphic_overlay": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "graphic_overlay_ident": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "graphic_overlay_topt": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "graphic_overlay_lower": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "graphic_overlay_headline": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "graphic_overlay_tema": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "graphic_pilot": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "graphic_pilot_overlay": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "graphic_design": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "graphic_adlibs": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                },
                "graphic_wall": {
                    "device": 13,
                    "deviceId": "viz0",
                    "lookahead": 0
                }
            },
            "config": [
                {
                    "_id": "SourcesCam",
                    "value": [
                        {
                            "_id": "0",
                            "SourceName": "1",
                            "AtemSource": "11",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "1",
                            "SourceName": "2",
                            "AtemSource": "12",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "2",
                            "SourceName": "3",
                            "AtemSource": "13",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "3",
                            "SourceName": "4",
                            "AtemSource": "14",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "4",
                            "SourceName": "5",
                            "AtemSource": "15",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "5",
                            "SourceName": "1S",
                            "AtemSource": "16",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "6",
                            "SourceName": "2S",
                            "AtemSource": "17",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "7",
                            "SourceName": "3S",
                            "AtemSource": "18",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "8",
                            "SourceName": "4S",
                            "AtemSource": "19",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "9",
                            "SourceName": "5S",
                            "AtemSource": "20",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "10",
                            "SourceName": "CS 3",
                            "AtemSource": "29",
                            "SisyfosLayers": [],
                            "StudioMics": false
                        },
                        {
                            "_id": "11",
                            "SourceName": "CS3",
                            "AtemSource": "29",
                            "SisyfosLayers": [],
                            "StudioMics": false
                        },
                        {
                            "_id": "12",
                            "SourceName": "SORT",
                            "AtemSource": "0",
                            "SisyfosLayers": [],
                            "StudioMics": false
                        },
                        {
                            "_id": "13",
                            "SourceName": "HVID",
                            "AtemSource": "2002",
                            "SisyfosLayers": [],
                            "StudioMics": false
                        },
                        {
                            "_id": "14",
                            "SourceName": "COLOR",
                            "AtemSource": "2001",
                            "SisyfosLayers": [],
                            "StudioMics": false
                        },
                        {
                            "_id": "15",
                            "SourceName": "A",
                            "AtemSource": "26",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "16",
                            "SourceName": "B",
                            "AtemSource": "27",
                            "SisyfosLayers": [],
                            "StudioMics": true
                        }
                    ]
                },
                {
                    "_id": "ABMediaPlayers",
                    "value": [
                        {
                            "_id": "0",
                            "SourceName": "1",
                            "AtemSource": "26",
                            "SisyfosLayers": [],
                            "StudioMics": false
                        },
                        {
                            "_id": "1",
                            "SourceName": "2",
                            "AtemSource": "27",
                            "SisyfosLayers": [],
                            "StudioMics": false
                        }
                    ]
                },
                {
                    "_id": "MediaPlayerType",
                    "value": "CasparAB"
                },
                {
                    "_id": "SourcesRM",
                    "value": [
                        {
                            "_id": "0",
                            "SourceName": "1",
                            "AtemSource": "1",
                            "SisyfosLayers": [
                                "sisyfos_source_live_1"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "1",
                            "SourceName": "2",
                            "AtemSource": "2",
                            "SisyfosLayers": [
                                "sisyfos_source_live_2"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "2",
                            "SourceName": "3",
                            "AtemSource": "3",
                            "SisyfosLayers": [
                                "sisyfos_source_live_3"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "3",
                            "SourceName": "4",
                            "AtemSource": "4",
                            "SisyfosLayers": [
                                "sisyfos_source_live_4"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "4",
                            "SourceName": "5",
                            "AtemSource": "5",
                            "SisyfosLayers": [
                                "sisyfos_source_live_5"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "5",
                            "SourceName": "6",
                            "AtemSource": "6",
                            "SisyfosLayers": [
                                "sisyfos_source_live_6"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "6",
                            "SourceName": "7",
                            "AtemSource": "7",
                            "SisyfosLayers": [
                                "sisyfos_source_live_7"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "7",
                            "SourceName": "8",
                            "AtemSource": "8",
                            "SisyfosLayers": [
                                "sisyfos_source_live_8"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "8",
                            "SourceName": "9",
                            "AtemSource": "9",
                            "SisyfosLayers": [
                                "sisyfos_source_live_9"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "9",
                            "SourceName": "10",
                            "AtemSource": "10",
                            "SisyfosLayers": [
                                "sisyfos_source_live_10"
                            ],
                            "StudioMics": true
                        }
                    ]
                },
                {
                    "_id": "SourcesSkype",
                    "value": [
                        {
                            "_id": "0",
                            "SourceName": "1",
                            "AtemSource": "1",
                            "SisyfosLayers": [
                                "sisyfos_source_live_1"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "1",
                            "SourceName": "2",
                            "AtemSource": "2",
                            "SisyfosLayers": [
                                "sisyfos_source_live_2"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "2",
                            "SourceName": "3",
                            "AtemSource": "3",
                            "SisyfosLayers": [
                                "sisyfos_source_live_3"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "3",
                            "SourceName": "4",
                            "AtemSource": "4",
                            "SisyfosLayers": [
                                "sisyfos_source_live_4"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "4",
                            "SourceName": "5",
                            "AtemSource": "5",
                            "SisyfosLayers": [
                                "sisyfos_source_live_5"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "5",
                            "SourceName": "6",
                            "AtemSource": "6",
                            "SisyfosLayers": [
                                "sisyfos_source_live_6"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "6",
                            "SourceName": "7",
                            "AtemSource": "7",
                            "SisyfosLayers": [
                                "sisyfos_source_live_7"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "7",
                            "SourceName": "8",
                            "AtemSource": "8",
                            "SisyfosLayers": [
                                "sisyfos_source_live_8"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "8",
                            "SourceName": "9",
                            "AtemSource": "9",
                            "SisyfosLayers": [
                                "sisyfos_source_live_9"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "9",
                            "SourceName": "10",
                            "AtemSource": "10",
                            "SisyfosLayers": [
                                "sisyfos_source_live_10"
                            ],
                            "StudioMics": true
                        }
                    ]
                },
                {
                    "_id": "AtemSource.DSK1F",
                    "value": 21
                },
                {
                    "_id": "AtemSource.DSK1K",
                    "value": 34
                },
                {
                    "_id": "AtemSource.ServerC",
                    "value": 28
                },
                {
                    "_id": "AtemSource.JingleFill",
                    "value": 29
                },
                {
                    "_id": "AtemSource.JingleKey",
                    "value": 31
                },
                {
                    "_id": "AtemSource.SplitArtF",
                    "value": 30
                },
                {
                    "_id": "AtemSource.SplitArtK",
                    "value": 32
                },
                {
                    "_id": "AtemSource.Default",
                    "value": 2001
                },
                {
                    "_id": "CasparPrerollDuration",
                    "value": 280
                },
                {
                    "_id": "PilotPrerollDuration",
                    "value": 2000
                },
                {
                    "_id": "AtemSource.MixMinusDefault",
                    "value": 2
                },
                {
                    "_id": "ClipFileExtension",
                    "value": ".mxf"
                },
                {
                    "_id": "ClipSourcePath",
                    "value": "\\\\vantageod1.tv2.local\\sofie\\ccg"
                },
                {
                    "_id": "DVEPrerollDuration",
                    "value": 80
                },
                {
                    "_id": "AtemSettings.VizClip",
                    "value": 50
                },
                {
                    "_id": "AtemSettings.VizGain",
                    "value": 12.5
                },
                {
                    "_id": "AtemSettings.CCGClip",
                    "value": 50
                },
                {
                    "_id": "AtemSettings.CCGGain",
                    "value": 12.5
                },
                {
                    "_id": "AudioBedSettings.fadeIn",
                    "value": 25
                },
                {
                    "_id": "AudioBedSettings.fadeOut",
                    "value": 25
                },
                {
                    "_id": "AudioBedSettings.volume",
                    "value": 80
                },
                {
                    "_id": "PilotKeepaliveDuration",
                    "value": 700
                },
                {
                    "_id": "AtemSource.DelayedPlayback",
                    "value": 22
                },
                {
                    "_id": "AtemSource.Continuity",
                    "value": 2002
                },
                {
                    "_id": "MediaFlowId",
                    "value": " omneon_to_casparcg01"
                },
                {
                    "_id": "AtemSource.FullFrameGrafikBackground",
                    "value": 36
                },
                {
                    "_id": "PilotCutToMediaPlayer",
                    "value": 1500
                },
                {
                    "_id": "PilotOutTransitionDuration",
                    "value": 280
                },
                {
                    "_id": "MaximumKamDisplayDuration",
                    "value": 10000
                },
                {
                    "_id": "SourcesDelayedPlayback",
                    "value": [
                        {
                            "_id": "0",
                            "SourceName": "1",
                            "AtemSource": "22",
                            "SisyfosLayers": [
                                "sisyfos_source_evs_1"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "1",
                            "SourceName": "2",
                            "AtemSource": 23,
                            "SisyfosLayers": [
                                "sisyfos_source_evs_2"
                            ],
                            "StudioMics": true
                        }
                    ]
                },
                {
                    "_id": "StudioMics",
                    "value": [
                        "sisyfos_source_Host_1_st_a",
                        "sisyfos_source_Host_2_st_a",
                        "sisyfos_source_Guest_1_st_a",
                        "sisyfos_source_Guest_2_st_a",
                        "sisyfos_source_Guest_3_st_a",
                        "sisyfos_source_Guest_4_st_a"
                    ]
                },
                {
                    "_id": "MaximumPartDuration",
                    "value": 10000
                },
                {
                    "_id": "DefaultPartDuration",
                    "value": 4000
                }
            ],
            "_rundownVersionHash": "02n7XW0hUTpgDmhFEjwUCx_rG2o_",
            "blueprintId": "tv2_afvd_studio"
        }
    ],
    "showStyleBases": [
        {
            "_id": "show0",
            "name": "Default showstyle",
            "blueprintId": "tv2_afvd_showstyle",
            "config": [
                {
                    "_id": "DVEStyles",
                    "value": [
                        {
                            "_id": "MYnRQMEncGnwMTAAH",
                            "DVEName": "sommerfugl",
                            "DVEInputs": "1:INP1;2:INP2",
                            "DVEJSON": "{\"boxes\":{\"0\":{\"enabled\":true,\"source\":11,\"x\":-800,\"y\":25,\"size\":550,\"cropped\":true,\"cropTop\":0,\"cropBottom\":150,\"cropLeft\":0,\"cropRight\":1500},\"1\":{\"enabled\":true,\"source\":1,\"x\":800,\"y\":25,\"size\":550,\"cropped\":true,\"cropTop\":160,\"cropBottom\":150,\"cropLeft\":0,\"cropRight\":0},\"2\":{\"enabled\":false,\"source\":2001,\"x\":0,\"y\":0,\"size\":1000,\"cropped\":false,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":0},\"3\":{\"enabled\":false,\"source\":2001,\"x\":0,\"y\":0,\"size\":1000,\"cropped\":false,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":0}},\"index\":0,\"properties\":{\"artFillSource\":30,\"artCutSource\":32,\"artOption\":1,\"artPreMultiplied\":true,\"artClip\":0,\"artGain\":0,\"artInvertKey\":false},\"border\":{\"borderEnabled\":false,\"borderBevel\":0,\"borderOuterWidth\":0,\"borderInnerWidth\":0,\"borderOuterSoftness\":0,\"borderInnerSoftness\":0,\"borderBevelSoftness\":0,\"borderBevelPosition\":0,\"borderHue\":0,\"borderSaturation\":0,\"borderLuma\":0,\"borderLightSourceDirection\":0,\"borderLightSourceAltitude\":10}}",
                            "DVEGraphicsTemplate": "dve/locators",
                            "DVEGraphicsTemplateJSON": "{\"common\":{\"font-family\":\"Alright Sans LT\",\"font-weight\":\"bold\",\"font-variant\":\"italic\",\"color\":\"#ffffff\",\"font-size\":\"35px\",\"background\":\"rgba(0, 0, 0, 0.5)\",\"height\":\"45px\",\"line-height\":\"48px\",\"padding-left\":\"13px\",\"padding-right\":\"13px\"},\"locator1\":{\"left\":\"120px\",\"top\":\"825px\"},\"locator2\":{\"right\":\"100px\",\"top\":\"825px\"}}",
                            "DVEGraphicsKey": "dve/sommerfuglK",
                            "DVEGraphicsFrame": "dve/sommerfugl"
                        },
                        {
                            "_id": "g8G9JHgtwAfKtDQS7",
                            "DVEName": "morbarn",
                            "DVEInputs": "3:INP1;2:INP2",
                            "DVEJSON": "{\"boxes\":{\"0\":{\"enabled\":false,\"source\":12,\"x\":-500,\"y\":140,\"size\":760,\"cropped\":true,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":1000},\"1\":{\"enabled\":true,\"source\":2001,\"x\":1100,\"y\":-245,\"size\":350,\"cropped\":true,\"cropTop\":500,\"cropBottom\":0,\"cropLeft\":1600,\"cropRight\":0},\"2\":{\"enabled\":true,\"source\":2,\"x\":-460,\"y\":130,\"size\":760,\"cropped\":true,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":1230},\"3\":{\"enabled\":false,\"source\":2001,\"x\":0,\"y\":0,\"size\":1000,\"cropped\":true,\"cropTop\":0,\"cropBottom\":119,\"cropLeft\":0,\"cropRight\":0}},\"index\":0,\"properties\":{\"artFillSource\":30,\"artCutSource\":32,\"artOption\":1,\"artPreMultiplied\":true,\"artClip\":0,\"artGain\":0,\"artInvertKey\":false},\"border\":{\"borderEnabled\":false,\"borderBevel\":0,\"borderOuterWidth\":0,\"borderInnerWidth\":0,\"borderOuterSoftness\":0,\"borderInnerSoftness\":0,\"borderBevelSoftness\":0,\"borderBevelPosition\":0,\"borderHue\":0,\"borderSaturation\":0,\"borderLuma\":0,\"borderLightSourceDirection\":0,\"borderLightSourceAltitude\":10}}",
                            "DVEGraphicsTemplate": "dve/locators",
                            "DVEGraphicsTemplateJSON": "{\"common\":{\"font-family\":\"Alright Sans LT\",\"font-weight\":\"bold\",\"font-variant\":\"italic\",\"color\":\"#ffffff\",\"font-size\":\"35px\",\"background\":\"rgba(0, 0, 0, 0.5)\",\"height\":\"45px\",\"line-height\":\"48px\",\"padding-left\":\"13px\",\"padding-right\":\"13px\"},\"locator1\":{\"left\":\"120px\",\"top\":\"880px\"},\"locator2\":{\"left\":\"1800px\",\"top\":\"880px\"}}",
                            "DVEGraphicsKey": "dve/morbarnK",
                            "DVEGraphicsFrame": "dve/morbarn"
                        },
                        {
                            "_id": "MSnPgnyxWsQ5ibh8i",
                            "DVEName": "barnmor",
                            "DVEInputs": "2:INP2;1:INP1",
                            "DVEJSON": "{\"boxes\":{\"0\":{\"enabled\":true,\"source\":13,\"x\":-1100,\"y\":-250,\"size\":350,\"cropped\":true,\"cropTop\":0,\"cropBottom\":530,\"cropLeft\":0,\"cropRight\":1700},\"1\":{\"enabled\":true,\"source\":3,\"x\":500,\"y\":130,\"size\":760,\"cropped\":true,\"cropTop\":70,\"cropBottom\":0,\"cropLeft\":770,\"cropRight\":0},\"2\":{\"enabled\":false,\"source\":2001,\"x\":-460,\"y\":130,\"size\":760,\"cropped\":true,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":1230},\"3\":{\"enabled\":false,\"source\":2001,\"x\":0,\"y\":0,\"size\":1000,\"cropped\":false,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":0}},\"index\":0,\"properties\":{\"artFillSource\":30,\"artCutSource\":32,\"artOption\":1,\"artPreMultiplied\":true,\"artClip\":0,\"artGain\":0,\"artInvertKey\":false},\"border\":{\"borderEnabled\":false,\"borderBevel\":0,\"borderOuterWidth\":0,\"borderInnerWidth\":0,\"borderOuterSoftness\":0,\"borderInnerSoftness\":0,\"borderBevelSoftness\":0,\"borderBevelPosition\":0,\"borderHue\":0,\"borderSaturation\":0,\"borderLuma\":0,\"borderLightSourceDirection\":0,\"borderLightSourceAltitude\":10}}",
                            "DVEGraphicsTemplate": "dve/locators",
                            "DVEGraphicsTemplateJSON": "{\"common\":{\"font-family\":\"Alright Sans LT\",\"font-weight\":\"bold\",\"font-variant\":\"italic\",\"color\":\"#ffffff\",\"font-size\":\"35px\",\"background\":\"rgba(0, 0, 0, 0.5)\",\"height\":\"45px\",\"line-height\":\"48px\",\"padding-left\":\"13px\",\"padding-right\":\"13px\"},\"locator1\":{\"left\":\"120px\",\"top\":\"880px\"},\"locator2\":{\"left\":\"1800px\",\"top\":\"880px\"}}",
                            "DVEGraphicsKey": "dve/barnmorK",
                            "DVEGraphicsFrame": "dve/barnmor"
                        },
                        {
                            "_id": "HtsDeJorsSAjLL9bo",
                            "DVEName": "barnMorIpad",
                            "DVEInputs": "1:INP1;2:INP2",
                            "DVEJSON": "{\"boxes\":{\"0\":{\"enabled\":true,\"source\":11,\"x\":-850,\"y\":-250,\"size\":350,\"cropped\":true,\"cropTop\":240,\"cropBottom\":530,\"cropLeft\":550,\"cropRight\":2580},\"1\":{\"enabled\":true,\"source\":10,\"x\":507,\"y\":130,\"size\":800,\"cropped\":true,\"cropTop\":250,\"cropBottom\":0,\"cropLeft\":4380,\"cropRight\":4170},\"2\":{\"enabled\":false,\"source\":2001,\"x\":-460,\"y\":130,\"size\":760,\"cropped\":true,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":1230},\"3\":{\"enabled\":false,\"source\":2001,\"x\":0,\"y\":0,\"size\":1000,\"cropped\":false,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":0}},\"index\":0,\"properties\":{\"artFillSource\":30,\"artCutSource\":32,\"artOption\":1,\"artPreMultiplied\":true,\"artClip\":0,\"artGain\":0,\"artInvertKey\":false},\"border\":{\"borderEnabled\":false,\"borderBevel\":0,\"borderOuterWidth\":0,\"borderInnerWidth\":0,\"borderOuterSoftness\":0,\"borderInnerSoftness\":0,\"borderBevelSoftness\":0,\"borderBevelPosition\":0,\"borderHue\":0,\"borderSaturation\":0,\"borderLuma\":0,\"borderLightSourceDirection\":0,\"borderLightSourceAltitude\":10}}",
                            "DVEGraphicsTemplate": "dve/locators",
                            "DVEGraphicsTemplateJSON": "{\"common\":{\"font-family\":\"Alright Sans LT\",\"font-weight\":\"bold\",\"font-variant\":\"italic\",\"color\":\"#ffffff\",\"font-size\":\"35px\",\"background\":\"rgba(0, 0, 0, 0.5)\",\"height\":\"45px\",\"line-height\":\"48px\",\"padding-left\":\"13px\",\"padding-right\":\"13px\"},\"locator1\":{\"left\":\"120px\",\"top\":\"880px\"},\"locator2\":{\"left\":\"1650px\",\"top\":\"880px\"}}",
                            "DVEGraphicsKey": "dve/barnipadK",
                            "DVEGraphicsFrame": "dve/barnipad"
                        },
                        {
                            "_id": "GCdcZnR3kJBQ3m4fz",
                            "DVEName": "3split",
                            "DVEInputs": "1:INP1;2:INP2;3:INP3",
                            "DVEJSON": "{\"boxes\":{\"0\":{\"enabled\":true,\"source\":2,\"x\":-1058,\"y\":-30,\"size\":830,\"cropped\":true,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":9700},\"1\":{\"enabled\":true,\"source\":3,\"x\":0,\"y\":-30,\"size\":830,\"cropped\":true,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":9500},\"2\":{\"enabled\":true,\"source\":1000,\"x\":1090,\"y\":-30,\"size\":830,\"cropped\":false,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":0},\"3\":{\"enabled\":true,\"source\":2001,\"x\":758,\"y\":-425,\"size\":417,\"cropped\":false,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":0}},\"index\":0,\"properties\":{\"artFillSource\":30,\"artCutSource\":32,\"artOption\":1,\"artPreMultiplied\":true,\"artClip\":0,\"artGain\":0,\"artInvertKey\":false},\"border\":{\"borderEnabled\":false,\"borderBevel\":0,\"borderOuterWidth\":0,\"borderInnerWidth\":0,\"borderOuterSoftness\":0,\"borderInnerSoftness\":0,\"borderBevelSoftness\":0,\"borderBevelPosition\":0,\"borderHue\":0,\"borderSaturation\":0,\"borderLuma\":0,\"borderLightSourceDirection\":0,\"borderLightSourceAltitude\":10}}",
                            "DVEGraphicsTemplate": "",
                            "DVEGraphicsTemplateJSON": "{\"common\":{\"font-family\":\"Alright Sans LT\",\"font-weight\":\"bold\",\"font-variant\":\"italic\",\"color\":\"#ffffff\",\"font-size\":\"35px\",\"background\":\"rgba(0, 0, 0, 0.5)\",\"height\":\"45px\",\"line-height\":\"48px\",\"padding-left\":\"13px\",\"padding-right\":\"13px\"},\"locator1\":{\"left\":\"120px\",\"top\":\"920px\"},\"locator2\":{\"left\":\"1650px\",\"top\":\"920px\"}}",
                            "DVEGraphicsKey": "dve/3splitK",
                            "DVEGraphicsFrame": "dve/3split"
                        },
                        {
                            "_id": "hN2ZZDh8Q4gff7WeN",
                            "DVEName": "3barnMor",
                            "DVEInputs": "1:INP1;2:INP2;3:INP3;4:INP4",
                            "DVEJSON": "{\"boxes\":{\"0\":{\"enabled\":true,\"source\":2002,\"x\":-1055,\"y\":-390,\"size\":230,\"cropped\":true,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":700},\"1\":{\"enabled\":true,\"source\":2,\"x\":358,\"y\":0,\"size\":680,\"cropped\":true,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":400,\"cropRight\":0},\"2\":{\"enabled\":true,\"source\":4,\"x\":-1055,\"y\":10,\"size\":230,\"cropped\":true,\"cropTop\":500,\"cropBottom\":200,\"cropLeft\":0,\"cropRight\":700},\"3\":{\"enabled\":true,\"source\":1000,\"x\":-1055,\"y\":400,\"size\":230,\"cropped\":true,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":700}},\"index\":0,\"properties\":{\"artFillSource\":30,\"artCutSource\":32,\"artOption\":1,\"artPreMultiplied\":true,\"artClip\":0,\"artGain\":0,\"artInvertKey\":false},\"border\":{\"borderEnabled\":false,\"borderBevel\":0,\"borderOuterWidth\":0,\"borderInnerWidth\":0,\"borderOuterSoftness\":0,\"borderInnerSoftness\":0,\"borderBevelSoftness\":0,\"borderBevelPosition\":0,\"borderHue\":0,\"borderSaturation\":0,\"borderLuma\":0,\"borderLightSourceDirection\":0,\"borderLightSourceAltitude\":10}}",
                            "DVEGraphicsTemplate": "dve/locators",
                            "DVEGraphicsTemplateJSON": "{\"common\":{\"font-family\":\"Alright Sans LT\",\"font-weight\":\"bold\",\"font-variant\":\"italic\",\"color\":\"#ffffff\",\"font-size\":\"35px\",\"background\":\"rgba(0, 0, 0, 0.5)\",\"height\":\"45px\",\"line-height\":\"48px\",\"padding-left\":\"13px\",\"padding-right\":\"13px\"},\"locator1\":{\"left\":\"120px\",\"top\":\"920px\"},\"locator2\":{\"left\":\"1650px\",\"top\":\"920px\"}}",
                            "DVEGraphicsKey": "dve/3barnMorK",
                            "DVEGraphicsFrame": "dve/3barnMor"
                        },
                        {
                            "_id": "kojPsRspNeEK6AmWn",
                            "DVEName": "2barnMor",
                            "DVEInputs": "1:INP1;2:INP2;3:INP3",
                            "DVEJSON": "{\"boxes\":{\"0\":{\"enabled\":true,\"source\":2,\"x\":-1075,\"y\":-335,\"size\":350,\"cropped\":true,\"cropTop\":650,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":660},\"1\":{\"enabled\":true,\"source\":3,\"x\":520,\"y\":-35,\"size\":670,\"cropped\":true,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":270,\"cropRight\":0},\"2\":{\"enabled\":true,\"source\":2,\"x\":-1075,\"y\":275,\"size\":350,\"cropped\":true,\"cropTop\":650,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":660},\"3\":{\"enabled\":true,\"source\":2001,\"x\":758,\"y\":-425,\"size\":417,\"cropped\":false,\"cropTop\":0,\"cropBottom\":0,\"cropLeft\":0,\"cropRight\":0}},\"index\":0,\"properties\":{\"artFillSource\":30,\"artCutSource\":32,\"artOption\":1,\"artPreMultiplied\":true,\"artClip\":0,\"artGain\":0,\"artInvertKey\":false},\"border\":{\"borderEnabled\":false,\"borderBevel\":0,\"borderOuterWidth\":0,\"borderInnerWidth\":0,\"borderOuterSoftness\":0,\"borderInnerSoftness\":0,\"borderBevelSoftness\":0,\"borderBevelPosition\":0,\"borderHue\":0,\"borderSaturation\":0,\"borderLuma\":0,\"borderLightSourceDirection\":0,\"borderLightSourceAltitude\":10}}",
                            "DVEGraphicsTemplate": "dve/locators",
                            "DVEGraphicsTemplateJSON": "{\"common\":{\"font-family\":\"Alright Sans LT\",\"font-weight\":\"bold\",\"font-variant\":\"italic\",\"color\":\"#ffffff\",\"font-size\":\"35px\",\"background\":\"rgba(0, 0, 0, 0.5)\",\"height\":\"45px\",\"line-height\":\"48px\",\"padding-left\":\"13px\",\"padding-right\":\"13px\"},\"locator1\":{\"left\":\"120px\",\"top\":\"930px\"},\"locator2\":{\"left\":\"1650px\",\"top\":\"930px\"}}",
                            "DVEGraphicsKey": "dve/2barnMorK",
                            "DVEGraphicsFrame": "dve/2barnMor"
                        }
                    ]
                },
                {
                    "_id": "GFXTemplates",
                    "value": [
                        {
                            "_id": "JWq2tc7JPqrTaNgge",
                            "VizTemplate": "arkiv",
                            "SourceLayer": "studio0_graphicsIdent",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "arkiv",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "BWxCppKQz3q6b67Z4",
                            "VizTemplate": "ident_news",
                            "SourceLayer": "studio0_graphicsIdent",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "ident_blank",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "5723tFYNafb9MzvzB",
                            "VizTemplate": "direkte",
                            "SourceLayer": "studio0_graphicsIdent",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "direkte",
                            "VizDestination": "OVL1",
                            "OutType": "B",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "WTd3T8mHax7cDrorc",
                            "VizTemplate": "billederfra_txt",
                            "SourceLayer": "studio0_graphicsIdent",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "billederfra_txt",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "WxM8ES6kH22csjZ3W",
                            "VizTemplate": "billederfra_logo",
                            "SourceLayer": "studio0_graphicsIdent",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "billederfra_logo",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "7NXe6tKiotLueo7bF",
                            "VizTemplate": "ident_nyhederne",
                            "SourceLayer": "studio0_graphicsIdent",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "ident_nyhederne",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "LAK5AxmHHX8ZqtASs",
                            "VizTemplate": "ident_news",
                            "SourceLayer": "studio0_graphicsIdent",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "ident_news",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "qJSFtEybfeDdC6SW6",
                            "VizTemplate": "ident_tv2sport",
                            "SourceLayer": "studio0_graphicsIdent",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "ident_tv2sport",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "FEDo9ywYGsr59ACFR",
                            "VizTemplate": "tlfdirekte",
                            "SourceLayer": "studio0_graphicsIdent",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "tlfdirekte",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "L9ippawJeBAQyctnZ",
                            "VizTemplate": "topt",
                            "SourceLayer": "studio0_graphicsTop",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "topt",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "dumx2LeJ3jpZ9adCq",
                            "VizTemplate": "tlftopt",
                            "SourceLayer": "studio0_graphicsTop",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "tlftopt",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "oSGTyqkvHwLHuvue4",
                            "VizTemplate": "tlftoptlive",
                            "SourceLayer": "studio0_graphicsTop",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "tlftoptlive",
                            "VizDestination": "OVL1",
                            "OutType": "S",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "GQgCZRu7CScrgQqwM",
                            "VizTemplate": "bund",
                            "SourceLayer": "studio0_graphicsLower",
                            "LayerMapping": "graphic_overlay_lower",
                            "INewsCode": "#kg",
                            "INewsName": "bund",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "2wsQGsK7KtzyqtMAm",
                            "VizTemplate": "vaerter",
                            "SourceLayer": "studio0_graphicsLower",
                            "LayerMapping": "graphic_overlay_lower",
                            "INewsCode": "#kg",
                            "INewsName": "vaerter",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "dyHaroFxb6XS9g2mY",
                            "VizTemplate": "vo",
                            "SourceLayer": "studio0_graphicsHeadline",
                            "LayerMapping": "graphic_overlay_headline",
                            "INewsCode": "DIGI=",
                            "INewsName": "vo",
                            "VizDestination": "OVL1",
                            "OutType": "S",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "dFhqxiDNRYtYMsKu8",
                            "VizTemplate": "trompet",
                            "SourceLayer": "studio0_graphicsHeadline",
                            "LayerMapping": "graphic_overlay_headline",
                            "INewsCode": "DIGI=",
                            "INewsName": "trompet",
                            "VizDestination": "OVL1",
                            "OutType": "B",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "Q2GPQtzF5f5ncrwus",
                            "VizTemplate": "bund_right",
                            "SourceLayer": "studio0_graphicsTema",
                            "LayerMapping": "graphic_overlay_tema",
                            "INewsCode": "KG=",
                            "INewsName": "bundright",
                            "VizDestination": "OVL1",
                            "OutType": "S",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "jBCynErkKJKbS8zjq",
                            "VizTemplate": "TEMA_Default",
                            "SourceLayer": "studio0_graphicsTema",
                            "LayerMapping": "graphic_overlay_tema",
                            "INewsCode": "KG=",
                            "INewsName": "TEMA_default",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "LqHS3JX76bK9yLFST",
                            "VizTemplate": "TEMA_UPDATE",
                            "SourceLayer": "studio0_graphicsTema",
                            "LayerMapping": "graphic_overlay_tema",
                            "INewsCode": "KG=",
                            "INewsName": "TEMA_UPDATE",
                            "VizDestination": "OVL1",
                            "OutType": "S",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "EQB6r9FvuRDChsW3x",
                            "VizTemplate": "DESIGN_AFTERAAR_CYKEL",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_AFTERAAR_CYKEL",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "p7CrFa48C67KfHkCW",
                            "VizTemplate": "DESIGN_HANDBOLD",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_HANDBOLD",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "QWnBaKGm8p2KRzpiC",
                            "VizTemplate": "DESIGN_ISHOCKEY",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_ISHOCKEY",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "KL87EN8DH7jXwm9wd",
                            "VizTemplate": "DESIGN_KONTRA",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_KONTRA",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "5ujwWuZYZbBBnoJny",
                            "VizTemplate": "DESIGN_NBA",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_NBA",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "qNQ4pBpNinDRm9feH",
                            "VizTemplate": "DESIGN_SPORTS_LAB",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_SPORTS_LAB",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "vGtywWoCHXsF5wBw9",
                            "VizTemplate": "DESIGN_WTA",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_WTA",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "MCL4jaP5NTesKJsAL",
                            "VizTemplate": "DESIGN_VUELTA",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_VUELTA",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "CF6hgcbRcxXuNdQnZ",
                            "VizTemplate": "DESIGN_VM",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_VM",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "m9ymx2Z9wBodDaeyg",
                            "VizTemplate": "DESIGN_WIMBLEDON",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_WIMBLEDON",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "ARceY2KjwMKJ5RMxj",
                            "VizTemplate": "DESIGN_TDF",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_TDF",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "P4qhwcDcKLLuZZpgM",
                            "VizTemplate": "DESIGN_ESPORT",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_ESPORT",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "XjTuv9G6hi9LyPyw6",
                            "VizTemplate": "altud",
                            "SourceLayer": "",
                            "LayerMapping": "",
                            "INewsCode": "#kg",
                            "INewsName": "altud",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "PPXH2iTLb5HdRDG9Z",
                            "VizTemplate": "altud",
                            "SourceLayer": "",
                            "LayerMapping": "",
                            "INewsCode": "#kg",
                            "INewsName": "ovl-all-out",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "QJB3rgocpkzZE2xwT",
                            "VizTemplate": "DESIGN_FODBOLD_20",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_FODBOLD_20",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "Jba6tmeLicDeBm3mA",
                            "VizTemplate": "OUT_TEMA_H",
                            "SourceLayer": "",
                            "LayerMapping": "",
                            "INewsCode": "#kg",
                            "INewsName": "temaud",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "hWHoqk52ju5AJmuty",
                            "VizTemplate": "DESIGN_ATP",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_ATP",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        },
                        {
                            "_id": "FjwSKoh2BazojAgn2",
                            "VizTemplate": "altud",
                            "SourceLayer": "",
                            "LayerMapping": "",
                            "INewsCode": "KG",
                            "INewsName": "ovl-all-out",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "5sK4j9pZ27QCp8wFi",
                            "VizTemplate": "ident_play",
                            "SourceLayer": "studio0_graphicsIdent",
                            "LayerMapping": "graphic_overlay_ident",
                            "INewsCode": "#kg",
                            "INewsName": "ident_play",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "WR2PtzcMTdXp3Mwwi",
                            "VizTemplate": "VCP",
                            "SourceLayer": "studio0_wall_graphics",
                            "LayerMapping": "graphic_wall",
                            "INewsCode": "SS",
                            "INewsName": "sc-stills",
                            "VizDestination": "WALL1",
                            "OutType": "O",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "PvExvx8NqY4jWHHLQ",
                            "VizTemplate": "SC_LOOP_ON",
                            "SourceLayer": "studio0_wall_graphics",
                            "LayerMapping": "graphic_wall",
                            "INewsCode": "SS",
                            "INewsName": "sc-loop",
                            "VizDestination": "WALL1",
                            "OutType": "O",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "7mb36fjHho2PrXcmh",
                            "VizTemplate": "SN_S4_LOOP_CLEAN",
                            "SourceLayer": "studio0_wall_graphics",
                            "LayerMapping": "graphic_wall",
                            "INewsCode": "SS",
                            "INewsName": "sc_loop_clean",
                            "VizDestination": "WALL1",
                            "OutType": "O",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "7shXt3LpqeaZafzT7",
                            "VizTemplate": "VCP",
                            "SourceLayer": "",
                            "LayerMapping": "",
                            "INewsCode": "GRAFIK",
                            "INewsName": "FULL",
                            "VizDestination": "FULL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        },
                        {
                            "_id": "Nmt46Xij6Gj8nDWL5",
                            "VizTemplate": "DESIGN_X_GAMES",
                            "SourceLayer": "studio0_design",
                            "LayerMapping": "graphic_design",
                            "INewsCode": "#kg",
                            "INewsName": "DESIGN_X_GAMES",
                            "VizDestination": "OVL1",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": true
                        }
                    ]
                },
                {
                    "_id": "JingleTimings",
                    "value": []
                },
                {
                    "_id": "BreakerConfig",
                    "value": [
                        {
                            "_id": "cPakwJTbeBFJnZ5d6",
                            "BreakerName": "WTA-OUTRO",
                            "ClipName": "2020_wta_outro_v01",
                            "Duration": 251,
                            "StartAlpha": 11,
                            "EndAlpha": 0,
                            "Autonext": false
                        },
                        {
                            "_id": "P7SSdokSKj9kKxsBy",
                            "BreakerName": "WTA-breaker01",
                            "ClipName": "2020_wta_breaker_v01",
                            "Duration": 351,
                            "StartAlpha": 26,
                            "EndAlpha": 188,
                            "Autonext": true
                        },
                        {
                            "_id": "7jfCpG9ZSjEyNhxq6",
                            "BreakerName": "WTA-INTRO",
                            "ClipName": "2020_wta_intro_v01",
                            "Duration": 451,
                            "StartAlpha": 0,
                            "EndAlpha": 127,
                            "Autonext": true
                        },
                        {
                            "_id": "FYArH3XvqJhh9nK3C",
                            "BreakerName": "NBA16_Sunday_intro_LEAD_OUT",
                            "ClipName": "NBA Sunday - Intro LEAD OUT",
                            "Duration": 491,
                            "StartAlpha": 24,
                            "EndAlpha": 193,
                            "Autonext": true
                        },
                        {
                            "_id": "8upe6qqWhQYeidcfa",
                            "BreakerName": "NBA18_LEAD_OUT",
                            "ClipName": "NBA - Intro LEAD OUT",
                            "Duration": 491,
                            "StartAlpha": 24,
                            "EndAlpha": 193,
                            "Autonext": true
                        },
                        {
                            "_id": "Fn8L8Q4PkogPRHF9s",
                            "BreakerName": "NBA18_intro_kort",
                            "ClipName": "NBA - Intro KORT",
                            "Duration": 347,
                            "StartAlpha": 0,
                            "EndAlpha": 196,
                            "Autonext": true
                        },
                        {
                            "_id": "aDnuPSWu3j54Z8mDy",
                            "BreakerName": "outro_serie_a",
                            "ClipName": "soccer_outro_la_seria_a",
                            "Duration": 175,
                            "StartAlpha": 7,
                            "EndAlpha": 0,
                            "Autonext": false
                        },
                        {
                            "_id": "7FQAcQomW85v6vNRR",
                            "BreakerName": "outro_la_liga",
                            "ClipName": "soccer_outro_la_liga",
                            "Duration": 175,
                            "StartAlpha": 7,
                            "EndAlpha": 0,
                            "Autonext": false
                        },
                        {
                            "_id": "2maxMtqdNjQZgs7A9",
                            "BreakerName": "intro_serie_a",
                            "ClipName": "soccer_intro_short_serie_a",
                            "Duration": 240,
                            "StartAlpha": 0,
                            "EndAlpha": 84,
                            "Autonext": true
                        },
                        {
                            "_id": "vX52vNcCjKicFFPEk",
                            "BreakerName": "intro_la_liga",
                            "ClipName": "soccer_intro_short_la_liga",
                            "Duration": 240,
                            "StartAlpha": 0,
                            "EndAlpha": 84,
                            "Autonext": true
                        },
                        {
                            "_id": "CvRpa9NLYkXwGzFA7",
                            "BreakerName": "intro_lang_studiet_serie_a",
                            "ClipName": "soccer_intro_long_studiet_seria_a",
                            "Duration": 425,
                            "StartAlpha": 0,
                            "EndAlpha": 87,
                            "Autonext": true
                        },
                        {
                            "_id": "XeCTmEL3MmKtCXsx2",
                            "BreakerName": "intro_lang_studiet_la_liga",
                            "ClipName": "soccer_intro_long_studiet_la_liga",
                            "Duration": 425,
                            "StartAlpha": 0,
                            "EndAlpha": 87,
                            "Autonext": true
                        },
                        {
                            "_id": "BejkNC37M9a9uy9aF",
                            "BreakerName": "intro_lang_la_liga",
                            "ClipName": "soccer_intro_long_la_liga",
                            "Duration": 425,
                            "StartAlpha": 0,
                            "EndAlpha": 87,
                            "Autonext": true
                        },
                        {
                            "_id": "yZiwFC6DY3GrMjbJr",
                            "BreakerName": "intro_lang_serie_a",
                            "ClipName": "soccer_intro_long_seria_a",
                            "Duration": 425,
                            "StartAlpha": 0,
                            "EndAlpha": 87,
                            "Autonext": true
                        },
                        {
                            "_id": "bKSvsYh2qsDzxTHsn",
                            "BreakerName": "Breaker02_serie_a",
                            "ClipName": "soccer_breaker_2_seria_a",
                            "Duration": 168,
                            "StartAlpha": 8,
                            "EndAlpha": 65,
                            "Autonext": true
                        },
                        {
                            "_id": "nr8K67Xp2GosXca2Q",
                            "BreakerName": "Breaker02_la_liga",
                            "ClipName": "soccer_breaker_2_la_liga",
                            "Duration": 168,
                            "StartAlpha": 8,
                            "EndAlpha": 65,
                            "Autonext": true
                        },
                        {
                            "_id": "pnbEJTWxs8MXunZ6r",
                            "BreakerName": "Breaker_serie_a",
                            "ClipName": "soccer_breaker_1_seria_a",
                            "Duration": 168,
                            "StartAlpha": 8,
                            "EndAlpha": 61,
                            "Autonext": true
                        },
                        {
                            "_id": "7S9ibh2HcoAJBCRDz",
                            "BreakerName": "Breaker_la_liga",
                            "ClipName": "soccer_breaker_1_la_liga",
                            "Duration": 168,
                            "StartAlpha": 8,
                            "EndAlpha": 61,
                            "Autonext": true
                        },
                        {
                            "_id": "4ZFzdZk5QmHFpCjLy",
                            "BreakerName": "SN_breaker_kortnyt_start",
                            "ClipName": "2019_sporten_kortnyt_v03",
                            "Duration": 125,
                            "StartAlpha": 5,
                            "EndAlpha": 75,
                            "Autonext": true
                        },
                        {
                            "_id": "CJJPtsHzkcn5yMZJQ",
                            "BreakerName": "SN_breaker_kortnyt_lukker",
                            "ClipName": "2019_sporten_kortnyt_outro_v03",
                            "Duration": 125,
                            "StartAlpha": 5,
                            "EndAlpha": 75,
                            "Autonext": true
                        },
                        {
                            "_id": "T8ayawSqQ4vt9xDmt",
                            "BreakerName": "SN_outro_19",
                            "ClipName": "2019_sporten_outro_v02_uden_delay",
                            "Duration": 214,
                            "StartAlpha": 32,
                            "EndAlpha": 0,
                            "Autonext": false
                        },
                        {
                            "_id": "mYwJm8HKcptbRkv8W",
                            "BreakerName": "SN_breaker_intro_lukker",
                            "ClipName": "2019_sporten_teaser_outro_v02",
                            "Duration": 125,
                            "StartAlpha": 5,
                            "EndAlpha": 70,
                            "Autonext": true
                        },
                        {
                            "_id": "2tRY8rvcYZQFjc8Yk",
                            "BreakerName": "SN_intro_19",
                            "ClipName": "2019_sporten_intro_v02",
                            "Duration": 83,
                            "StartAlpha": 22,
                            "EndAlpha": 6,
                            "Autonext": true
                        },
                        {
                            "_id": "ERTL7XdpJkvnQKT9a",
                            "BreakerName": "1",
                            "ClipName": "2019_sporten_wipe_a_v02",
                            "Duration": 83,
                            "StartAlpha": 7,
                            "EndAlpha": 76,
                            "Autonext": false
                        },
                        {
                            "_id": "tvjuKkrKfzJmbgxYi",
                            "BreakerName": "30",
                            "ClipName": "NBA - Wipe Alpha IN - 75f",
                            "Duration": 76,
                            "StartAlpha": 11,
                            "EndAlpha": 27,
                            "Autonext": false
                        },
                        {
                            "_id": "XHhkcbbyqcmq8z2eS",
                            "BreakerName": "37",
                            "ClipName": "soccer_wipe_1_la_liga",
                            "Duration": 84,
                            "StartAlpha": 7,
                            "EndAlpha": 47,
                            "Autonext": false
                        },
                        {
                            "_id": "xemw7qwvuFm2jKuvM",
                            "BreakerName": "38",
                            "ClipName": "soccer_wipe_1_la_seria_a",
                            "Duration": 84,
                            "StartAlpha": 7,
                            "EndAlpha": 47,
                            "Autonext": false
                        },
                        {
                            "_id": "GgnEknGjNh4YgeKCv",
                            "BreakerName": "NBA16_Intro_kort",
                            "ClipName": "NBA - Intro KORT",
                            "Duration": 347,
                            "StartAlpha": 0,
                            "EndAlpha": 196,
                            "Autonext": true
                        },
                        {
                            "_id": "fCSww6vR8sBdkkQDk",
                            "BreakerName": "ATP_Intro_Breaker",
                            "ClipName": "ATP_Intro",
                            "Duration": 501,
                            "StartAlpha": 13,
                            "EndAlpha": 190,
                            "Autonext": true
                        },
                        {
                            "_id": "YyiNxj8gLqNHFGeFo",
                            "BreakerName": "ATP_Breaker_Direkte",
                            "ClipName": "ATP_Breaker_Direkte",
                            "Duration": 350,
                            "StartAlpha": 25,
                            "EndAlpha": 189,
                            "Autonext": true
                        },
                        {
                            "_id": "Qj29Tp2iMBoufTRsE",
                            "BreakerName": "ATP_Outro",
                            "ClipName": "ATP_Outro",
                            "Duration": 251,
                            "StartAlpha": 12,
                            "EndAlpha": 0,
                            "Autonext": false
                        },
                        {
                            "_id": "EhkH3wmk6TvdvcpZC",
                            "BreakerName": "cyk-16-brk-1-logo",
                            "ClipName": "2019_cykling_breaker_1_logo",
                            "Duration": 275,
                            "StartAlpha": 36,
                            "EndAlpha": 129,
                            "Autonext": true
                        },
                        {
                            "_id": "Ty4vLatWzqhrnYYvh",
                            "BreakerName": "cyk-16-brk-2-short",
                            "ClipName": "2019_cykling_breaker_2_short",
                            "Duration": 244,
                            "StartAlpha": 20,
                            "EndAlpha": 150,
                            "Autonext": true
                        },
                        {
                            "_id": "gC3WwSjSfBD6v9mN7",
                            "BreakerName": "CYK-16-intro",
                            "ClipName": "2019_cykling_intro_v01",
                            "Duration": 572,
                            "StartAlpha": 0,
                            "EndAlpha": 325,
                            "Autonext": true
                        },
                        {
                            "_id": "67LhsHLoBsB3KMS7s",
                            "BreakerName": "X_GAMES_INTRO_LANG",
                            "ClipName": "X_25sek_intro_Snow",
                            "Duration": 952,
                            "StartAlpha": 0,
                            "EndAlpha": 384,
                            "Autonext": true
                        },
                        {
                            "_id": "9qQa44wvPkscMMaWf",
                            "BreakerName": "X_GAMES_INTRO_KORT",
                            "ClipName": "X_5sek_intro_Snow",
                            "Duration": 601,
                            "StartAlpha": 0,
                            "EndAlpha": 488,
                            "Autonext": true
                        },
                        {
                            "_id": "zyCHLnFCTPdrEDECq",
                            "BreakerName": "X_GAMES_BREAKER",
                            "ClipName": "X_5sek_breaker_Snow",
                            "Duration": 176,
                            "StartAlpha": 16,
                            "EndAlpha": 131,
                            "Autonext": true
                        },
                        {
                            "_id": "Jyw74xNdzaRPkKghJ",
                            "BreakerName": "X_GAMES_OUTRO",
                            "ClipName": "X_5sek_outro_Snow",
                            "Duration": 226,
                            "StartAlpha": 16,
                            "EndAlpha": 0,
                            "Autonext": false
                        },
                        {
                            "_id": "Bfb6Yp7mx4etkZ5nA",
                            "BreakerName": "47",
                            "ClipName": "X_Games_wipe_Snow",
                            "Duration": 101,
                            "StartAlpha": 14,
                            "EndAlpha": 86,
                            "Autonext": true
                        },
                        {
                            "_id": "6P2DFZ5sLzXXntqkQ",
                            "BreakerName": "TENNIS_GEN_2020_INTRO",
                            "ClipName": "2020_tennis_generel_intro_v01",
                            "Duration": 451,
                            "StartAlpha": 0,
                            "EndAlpha": 126,
                            "Autonext": true
                        },
                        {
                            "_id": "s5iz5R4BAjbLPP54w",
                            "BreakerName": "TENNIS_GEN_2020_BREAKER",
                            "ClipName": "2020_tennis_generel_breaker_v01",
                            "Duration": 351,
                            "StartAlpha": 27,
                            "EndAlpha": 188,
                            "Autonext": true
                        },
                        {
                            "_id": "S5FESnJFci2D2W4gv",
                            "BreakerName": "TENNIS_GEN_2020_OUTRO",
                            "ClipName": "2020_tennis_generel_outro_v01",
                            "Duration": 251,
                            "StartAlpha": 102,
                            "EndAlpha": 0,
                            "Autonext": false
                        },
                        {
                            "_id": "W5SJh7kBYX9LszDu8",
                            "BreakerName": "44",
                            "ClipName": "2019_cs_wipe_zulu_v01",
                            "Duration": 136,
                            "StartAlpha": 2,
                            "EndAlpha": 104,
                            "Autonext": true
                        },
                        {
                            "_id": "M9jSNARL2dk9dELpp",
                            "BreakerName": "43",
                            "ClipName": "2019_cs_wipe_cs_v01",
                            "Duration": 136,
                            "StartAlpha": 3,
                            "EndAlpha": 94,
                            "Autonext": true
                        },
                        {
                            "_id": "Hx3qwkitM6kf5zAhp",
                            "BreakerName": "ESPORT_INTRO_CS_kort",
                            "ClipName": "2019_cs_intro_kort_v01",
                            "Duration": 1036,
                            "StartAlpha": 0,
                            "EndAlpha": 784,
                            "Autonext": true
                        },
                        {
                            "_id": "hMFLjRnf5RHGQhsGA",
                            "BreakerName": "ESPORT_INTRO_CS_lang",
                            "ClipName": "2020_cs_intro_lang_v01",
                            "Duration": 1201,
                            "StartAlpha": 0,
                            "EndAlpha": 673,
                            "Autonext": true
                        },
                        {
                            "_id": "DDpSBySRxCuPc4ppD",
                            "BreakerName": "ESPORT_INTRO_CS_breaker_explode",
                            "ClipName": "2019_cs_breaker_explode_v02",
                            "Duration": 294,
                            "StartAlpha": 6,
                            "EndAlpha": 108,
                            "Autonext": true
                        },
                        {
                            "_id": "E6HaTHbfbpe2Y32ta",
                            "BreakerName": "ESPORT_INTRO_CS_breaker_roll",
                            "ClipName": "2019_cs_breaker_roll_v02",
                            "Duration": 265,
                            "StartAlpha": 6,
                            "EndAlpha": 120,
                            "Autonext": true
                        },
                        {
                            "_id": "dbhQreG8i9KEDHJso",
                            "BreakerName": "ESPORT_INTRO_CS_outro",
                            "ClipName": "2020_cs_outro_v01",
                            "Duration": 254,
                            "StartAlpha": 15,
                            "EndAlpha": 0,
                            "Autonext": false
                        }
                    ]
                },
                {
                    "_id": "DefaultTemplateDuration",
                    "value": 4
                },
                {
                    "_id": "LYDConfig",
                    "value": [
                        {
                            "_id": "",
                            "iNewsName": "SN_intro",
                            "FileName": "TV 2 Sportsnyhederne 2019 INTRO DEL 2 MASTER",
                            "INewsName": "SN_Intro",
                            "FadeIn": 15,
                            "FadeOut": 0
                        },
                        {
                            "_id": "97Sa66cJbLWCDtKb2",
                            "iNewsName": "SN_soundbed_1",
                            "FileName": "TV 2 Sportsnyhederne 2018 opening bed V1 MASTER",
                            "FadeIn": 0,
                            "FadeOut": 15,
                            "INewsName": "SN_SOUNDBED_INTRO"
                        },
                        {
                            "_id": "2gGAj3K6hqKjDxu4R",
                            "iNewsName": "SN_SOUNDBED_INTRO",
                            "FileName": "TV 2 Sportsnyhederne 2018 opening bed V1 MASTER",
                            "FadeIn": 0,
                            "FadeOut": 50,
                            "INewsName": "SN_soundbed_1"
                        },
                        {
                            "_id": "bzt2SLic6QgCXbabM",
                            "INewsName": "ATP_soundbed",
                            "FileName": "TV 2 Sport X ATP Loop Main V1",
                            "FadeIn": 0,
                            "FadeOut": 0
                        },
                        {
                            "_id": "vug5oetgJYJMjH9w3",
                            "INewsName": "SN_Intro_bed",
                            "FileName": "TV 2 Sportsnyhederne 2019 INTRO DEL 2 MASTER",
                            "FadeIn": 15,
                            "FadeOut": 0
                        }
                    ]
                },
                {
                    "_id": "CasparCGLoadingClip",
                    "value": "default/LoadingLoop"
                },
                {
                    "_id": "MakeAdlibsForFulls",
                    "value": true
                }
            ],
            "_rundownVersionHash": "LXG7lxjCOGcZnvozWcTynSbGZVM_",
            "outputLayers": [
                {
                    "_id": "overlay",
                    "name": "OVERLAY",
                    "isPGM": false,
                    "_rank": 10,
                    "isDefaultCollapsed": true
                },
                {
                    "_id": "jingle",
                    "name": "JINGLE",
                    "isPGM": false,
                    "_rank": 19
                },
                {
                    "_id": "pgm",
                    "name": "PGM",
                    "isPGM": true,
                    "_rank": 20,
                    "isFlattened": true
                },
                {
                    "_id": "musik",
                    "name": "MUSIK",
                    "isPGM": false,
                    "_rank": 22
                },
                {
                    "_id": "manus",
                    "name": "MANUS",
                    "isPGM": false,
                    "_rank": 23
                },
                {
                    "_id": "sec",
                    "name": "SEC",
                    "isPGM": false,
                    "_rank": 30,
                    "isDefaultCollapsed": true
                },
                {
                    "_id": "aux",
                    "name": "AUX",
                    "isPGM": false,
                    "_rank": 40,
                    "isDefaultCollapsed": true
                }
            ],
            "sourceLayers": [
                {
                    "_id": "studio0_graphicsIdent",
                    "_rank": 10,
                    "name": "Ident",
                    "abbreviation": "G",
                    "type": 5,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",q,ctrl+shift+a",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_graphicsIdent_persistent",
                    "_rank": 10,
                    "name": "Ident Persistent",
                    "abbreviation": "G",
                    "type": 5,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",q,ctrl+shift+a",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_graphicsTop",
                    "_rank": 20,
                    "name": "Top",
                    "abbreviation": "G",
                    "type": 5,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",q,ctrl+shift+s",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": true,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_graphicsLower",
                    "_rank": 30,
                    "name": "Bund",
                    "abbreviation": "G",
                    "type": 5,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "a,s,d,f,g",
                    "clearKeyboardHotkey": ",q,ctrl+shift+d",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": true,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_graphicsHeadline",
                    "_rank": 40,
                    "name": "Headline",
                    "abbreviation": "G",
                    "type": 5,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",q,ctrl+shift+f",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": true,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_graphicsTema",
                    "_rank": 50,
                    "name": "Tema",
                    "abbreviation": "G",
                    "type": 5,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",q,ctrl+shift+g",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": true,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_overlay",
                    "_rank": 55,
                    "name": "Overlay",
                    "abbreviation": "O",
                    "type": 5,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",q",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": true,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_pilotOverlay",
                    "_rank": 60,
                    "name": "Overlay",
                    "abbreviation": "O",
                    "type": 5,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",q",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": true,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_jingle",
                    "_rank": 10,
                    "name": "Jingle",
                    "abbreviation": "",
                    "type": 13,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_camera",
                    "_rank": 0,
                    "name": "Kam",
                    "abbreviation": "K",
                    "type": 1,
                    "exclusiveGroup": "me1",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "f1,f2,f3,f4,ctrl+shift+alt+c,shift+ctrl+f1,shift+ctrl+f2,shift+ctrl+f3,shift+ctrl+f4,shift+ctrl+f5",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": true,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_live",
                    "_rank": 0,
                    "name": "Live",
                    "abbreviation": "L",
                    "type": 3,
                    "exclusiveGroup": "me1",
                    "isRemoteInput": true,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "1,2,3,4,5,6,7,8,9,0",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": true,
                    "stickyOriginalOnly": true,
                    "activateStickyKeyboardHotkey": "ctrl+shift+alt+b",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": true,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_dve",
                    "_rank": 0,
                    "name": "DVE",
                    "abbreviation": "D",
                    "type": 6,
                    "exclusiveGroup": "me1",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": true,
                    "stickyOriginalOnly": true,
                    "activateStickyKeyboardHotkey": "f10",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": true,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_dve_adlib",
                    "_rank": 0,
                    "name": "DVE",
                    "abbreviation": "D",
                    "type": 6,
                    "exclusiveGroup": "me1",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "m,comma,.,n,c,b,v",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": true,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_dve_box1",
                    "_rank": 0,
                    "name": "DVE INP1",
                    "abbreviation": "DB1",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "shift+f1,shift+f2,shift+f3,shift+f4,shift+f5,shift+1,shift+2,shift+3,shift+4,shift+5,shift+6,shift+7,shift+8,shift+9,shift+0,shift+e,shift+d,ctrl+alt+shift+h",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_dve_box2",
                    "_rank": 0,
                    "name": "DVE INP2",
                    "abbreviation": "DB2",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "ctrl+f1,ctrl+f2,ctrl+f3,ctrl+shift+alt+f4,ctrl+f5,ctrl+1,ctrl+2,ctrl+3,ctrl+4,ctrl+5,ctrl+6,ctrl+7,ctrl+8,ctrl+9,ctrl+0,ctrl+e,ctrl+d,ctrl+alt+shift+g",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": true,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_dve_box3",
                    "_rank": 0,
                    "name": "DVE INP3",
                    "abbreviation": "DB3",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "alt+shift+f1,alt+shift+f2,alt+shift+f3,alt+shift+f4,alt+shift+f5,alt+shift+1,alt+shift+2,alt+shift+3,alt+shift+4,alt+shift+5,alt+shift+6,alt+shift+7,alt+shift+8,alt+shift+9,alt+shift+0,alt+shift+e,alt+shift+d,alt+shift+g",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": true,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_clip",
                    "_rank": 0,
                    "name": "Server",
                    "abbreviation": "S",
                    "type": 2,
                    "exclusiveGroup": "me1",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": true,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_voiceover",
                    "_rank": 0,
                    "name": "Voice Over",
                    "abbreviation": "VO",
                    "type": 11,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": true,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_pilot",
                    "_rank": 0,
                    "name": "Full",
                    "abbreviation": "F",
                    "type": 5,
                    "exclusiveGroup": "me1",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": true,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_graphicsTelefon",
                    "_rank": 0,
                    "name": "Telefon",
                    "abbreviation": "TLF",
                    "type": 5,
                    "exclusiveGroup": "me1",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "i",
                    "clearKeyboardHotkey": ",q",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": true,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": true,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_delayed",
                    "_rank": 0,
                    "name": "EVS",
                    "abbreviation": "EVS",
                    "type": 2,
                    "exclusiveGroup": "me1",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "e,r,u,i",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": true,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_continuity",
                    "_rank": 0,
                    "name": "CONTINUITY",
                    "abbreviation": "CONTINUITY",
                    "type": 9,
                    "exclusiveGroup": "me1",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": true,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_audio_bed",
                    "_rank": 30,
                    "name": "Audio bed",
                    "abbreviation": "VO",
                    "type": 7,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",add",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_script",
                    "_rank": 20,
                    "name": "Manus",
                    "abbreviation": "",
                    "type": 4,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_adlib_viz_cmd",
                    "_rank": 10,
                    "name": "Viz Full",
                    "abbreviation": "",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": ",space,q",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_dsk_cmd",
                    "_rank": 20,
                    "name": "DSK off",
                    "abbreviation": "",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": ",",
                    "clearKeyboardHotkey": ",",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_design",
                    "_rank": 30,
                    "name": "VIZ Design",
                    "abbreviation": "",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "shift+a",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": true,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_dve_back",
                    "_rank": 40,
                    "name": "DVE Background",
                    "abbreviation": "",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": true,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_sisyfos_adlibs",
                    "_rank": 50,
                    "name": "Sisyfos Adlibs",
                    "abbreviation": "",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "ctrl+shift+alt+e,ctrl+shift+alt+d",
                    "clearKeyboardHotkey": ",",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_aux_viz_full1",
                    "_rank": 10,
                    "name": "Viz Full",
                    "abbreviation": "",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "ctrl+shift+alt+f",
                    "clearKeyboardHotkey": ",",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": true,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_aux_studio_screen",
                    "_rank": 20,
                    "name": "Studio",
                    "abbreviation": "",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "shift+ctrl+1,shift+ctrl+2,shift+ctrl+3,shift+ctrl+4,shift+ctrl+5,shift+ctrl+6,shift+ctrl+7,shift+ctrl+8,shift+ctrl+9,shift+ctrl+0,shift+ctrl+e",
                    "clearKeyboardHotkey": ",",
                    "assignHotkeysToGlobalAdlibs": true,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": false,
                    "unlimited": false,
                    "onPGMClean": false
                },
                {
                    "_id": "studio0_current_server_clip",
                    "_rank": 50,
                    "name": "Current Clip",
                    "abbreviation": "",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": ",",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": true,
                    "allowDisable": false,
                    "onPresenterScreen": false
                },
                {
                    "_id": "studio0_wall_graphics",
                    "_rank": 60,
                    "name": "Wall Graphics",
                    "abbreviation": "",
                    "type": 5,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": false,
                    "allowDisable": false,
                    "onPresenterScreen": false
                },
                {
                    "_id": "studio0_dve_box4",
                    "_rank": 0,
                    "name": "DVE INP4",
                    "abbreviation": "DB4",
                    "type": 0,
                    "exclusiveGroup": "",
                    "isRemoteInput": false,
                    "isGuestInput": false,
                    "activateKeyboardHotkeys": "",
                    "clearKeyboardHotkey": "",
                    "assignHotkeysToGlobalAdlibs": false,
                    "isSticky": false,
                    "activateStickyKeyboardHotkey": "",
                    "isQueueable": false,
                    "isHidden": true,
                    "allowDisable": false,
                    "onPresenterScreen": false
                }
            ],
            "runtimeArguments": [
                {
                    "_id": "x-mix-10",
                    "label": "Dissolve 10f",
                    "hotkeys": "x",
                    "property": "transition-mix",
                    "value": "10"
                }
            ],
            "hotkeyLegend": [
                {
                    "_id": "Sh6uBxuK863qbpjv5",
                    "key": "F10",
                    "label": "LAST DVE",
                    "platformKey": "F10"
                },
                {
                    "_id": "8octZjZ4Gv8e9znfY",
                    "key": "F11",
                    "label": "LAST LIVE",
                    "platformKey": "F11"
                },
                {
                    "_id": "o9uBaS6mz3o5xvdbL",
                    "key": "½",
                    "label": "Activate rundown",
                    "platformKey": "½"
                },
                {
                    "_id": "sFNSxWoqkyrcgfte9",
                    "key": "q",
                    "label": "overlay ALT UD",
                    "platformKey": "q"
                },
                {
                    "_id": "bBbedkTgD4an2ZGPd",
                    "key": "E",
                    "label": "EVS 1 VO",
                    "platformKey": "E"
                },
                {
                    "_id": "v5aQsLC2HLF937DuC",
                    "key": "R",
                    "label": "EVS 1 100%",
                    "platformKey": "R"
                },
                {
                    "_id": "Kxc4j4BcsaYmgBLnH",
                    "key": "U",
                    "label": "EVS 2 VO",
                    "platformKey": "U"
                },
                {
                    "_id": "nkanpzNYW7yjPL3oj",
                    "key": "I",
                    "label": "EVS 2 100%",
                    "platformKey": "I"
                },
                {
                    "_id": "B78EM5q9tTTB682K7",
                    "key": "C",
                    "label": "3 SPLIT",
                    "platformKey": "C",
                    "sourceLayerType": 6
                },
                {
                    "_id": "mBdCSEwhmYQx6Aqzf",
                    "key": "V",
                    "label": "2BM",
                    "platformKey": "V",
                    "sourceLayerType": 6
                },
                {
                    "_id": "9F6pZx9iNwLCXdG8B",
                    "key": "B",
                    "label": "3BM",
                    "platformKey": "B",
                    "sourceLayerType": 6
                },
                {
                    "_id": "YERhQENwkrmxtMveF",
                    "key": "N",
                    "label": "BM Ipad",
                    "platformKey": "N",
                    "sourceLayerType": 6
                },
                {
                    "_id": "cXGy2cCsX5drAsvx4",
                    "key": "M",
                    "label": "SOM",
                    "platformKey": "M",
                    "sourceLayerType": 6
                },
                {
                    "_id": "NpzZXm8iwYLqRZQ8n",
                    "key": ",",
                    "label": "MB",
                    "platformKey": ",",
                    "sourceLayerType": 6
                },
                {
                    "_id": "dfYg63e9xnm7XwkC8",
                    "key": ".",
                    "label": "BM",
                    "platformKey": ".",
                    "sourceLayerType": 6
                },
                {
                    "_id": "DYpRKBy7nQd55SBdu",
                    "key": "SHIFT+e",
                    "label": "EVS 1 100% inp 1",
                    "platformKey": "SHIFT+e",
                    "sourceLayerType": 2
                },
                {
                    "_id": "2smh8BLkLtnPEpkdm",
                    "key": "SHIFT+D",
                    "label": "EVS 1 VO inp 1",
                    "platformKey": "SHIFT+D",
                    "sourceLayerType": 2
                },
                {
                    "_id": "DWjtLbY4sMZr5rB47",
                    "key": "SHIFT+A",
                    "label": "Design Style SC",
                    "platformKey": "SHIFT+A",
                    "sourceLayerType": 5
                },
                {
                    "_id": "N9bp22mGjXTbdD8Nt",
                    "key": "+",
                    "label": "STOP soundpl.",
                    "platformKey": "+"
                },
                {
                    "_id": "2hF2CYJQu8Z43MNLm",
                    "key": "SHIFT+U",
                    "label": "EVS 2 VO inp 1",
                    "platformKey": "SHIFT+U",
                    "sourceLayerType": 2
                },
                {
                    "_id": "jC2G7QPrwPrzLeZ2u",
                    "key": "SHIFT+I",
                    "label": "EVS 2 100% inp 1",
                    "platformKey": "SHIFT+I",
                    "sourceLayerType": 2
                },
                {
                    "_id": "xYLrn37gxnevYzYbR",
                    "key": "SHIFT+F1",
                    "label": "KAM 1 inp 1",
                    "platformKey": "SHIFT+F1",
                    "sourceLayerType": 1
                },
                {
                    "_id": "QABCLCz9MsRLvwHdf",
                    "key": "SHIFT+F2",
                    "label": "KAM 2 inp 1",
                    "platformKey": "SHIFT+F2",
                    "sourceLayerType": 1
                },
                {
                    "_id": "WXtWyK34sRjWwEhfp",
                    "key": "SHIFT+F3",
                    "label": "KAM 3 inp 1",
                    "platformKey": "SHIFT+F3",
                    "sourceLayerType": 1
                },
                {
                    "_id": "CrTHjzPmyZWSuxog7",
                    "key": "SHIFT+F4",
                    "label": "KAM 4 inp 1",
                    "platformKey": "SHIFT+F4",
                    "sourceLayerType": 1
                },
                {
                    "_id": "h3ABGQedQxRFxsP47",
                    "key": "SHIFT+F5",
                    "label": "KAM 5 inp 1",
                    "platformKey": "SHIFT+F5",
                    "sourceLayerType": 1
                },
                {
                    "_id": "9DCiEdMX73mnBsf5m",
                    "key": "1",
                    "label": "LIVE 1",
                    "platformKey": "1",
                    "sourceLayerType": 3
                },
                {
                    "_id": "FxcJAWsr574WKPJSF",
                    "key": "2",
                    "label": "LIVE 2",
                    "platformKey": "2",
                    "sourceLayerType": 3
                },
                {
                    "_id": "ZpAMfE9YeQg9g7k4k",
                    "key": "3",
                    "label": "LIVE 3",
                    "platformKey": "3",
                    "sourceLayerType": 3
                },
                {
                    "_id": "e9JcgW6fxsNnna9i4",
                    "key": "4",
                    "label": "LIVE 4",
                    "platformKey": "4",
                    "sourceLayerType": 3
                },
                {
                    "_id": "GS63kW9zN33354KD7",
                    "key": "5",
                    "label": "LIVE 5",
                    "platformKey": "5",
                    "sourceLayerType": 3
                },
                {
                    "_id": "Qj4DiTjthC3e2RKD7",
                    "key": "6",
                    "label": "LIVE 6",
                    "platformKey": "6",
                    "sourceLayerType": 3
                },
                {
                    "_id": "MaYKApWL3FyKpfwXj",
                    "key": "7",
                    "label": "LIVE 7",
                    "platformKey": "7",
                    "sourceLayerType": 3
                },
                {
                    "_id": "a7z3EKESgXQZPKeZJ",
                    "key": "8",
                    "label": "LIVE 8",
                    "platformKey": "8",
                    "sourceLayerType": 3
                },
                {
                    "_id": "iNS3fZKg8YgiBCY9w",
                    "key": "9",
                    "label": "LIVE 9",
                    "platformKey": "9",
                    "sourceLayerType": 3
                },
                {
                    "_id": "J8hcg9J4424wtShD9",
                    "key": "0",
                    "label": "LIVE 10",
                    "platformKey": "0",
                    "sourceLayerType": 3
                },
                {
                    "_id": "2RChKSjXxAAe9P3WN",
                    "key": "SHIFT+1",
                    "label": "LIVE 1 inp 1",
                    "platformKey": "SHIFT+1",
                    "sourceLayerType": 3
                },
                {
                    "_id": "h2ikmGnsRkwXtm3de",
                    "key": "SHIFT+2",
                    "label": "LIVE 2 inp 1",
                    "platformKey": "SHIFT+2",
                    "sourceLayerType": 3
                },
                {
                    "_id": "rmJ4YdFxsqYQPMPzG",
                    "key": "shift+3",
                    "label": "LIVE 3 inp 1",
                    "platformKey": "shift+3",
                    "sourceLayerType": 3
                },
                {
                    "_id": "f2fsBQh6JTTRmts5j",
                    "key": "shift+4",
                    "label": "LIVE 4 inp 1",
                    "platformKey": "shift+4",
                    "sourceLayerType": 3
                },
                {
                    "_id": "JmtWJNnTPFZZJpKPj",
                    "key": "shift+5",
                    "label": "LIVE 5 inp 1",
                    "platformKey": "shift+5",
                    "sourceLayerType": 3
                },
                {
                    "_id": "6Bkyoe3bCJnJtwGT9",
                    "key": "shift+6",
                    "label": "LIVE 6 inp 1",
                    "platformKey": "shift+6",
                    "sourceLayerType": 3
                },
                {
                    "_id": "8kekkedvM5D3Ee3zW",
                    "key": "shift+7",
                    "label": "LIVE 7 inp 1",
                    "platformKey": "shift+7",
                    "sourceLayerType": 3
                },
                {
                    "_id": "on7v9Jkrt2F8FWPxL",
                    "key": "shift+8",
                    "label": "LIVE 8 inp 1",
                    "platformKey": "shift+8",
                    "sourceLayerType": 3
                },
                {
                    "_id": "rZ39QuAgohfyQG95a",
                    "key": "shift+9",
                    "label": "LIVE 9 inp 1",
                    "platformKey": "shift+9",
                    "sourceLayerType": 3
                },
                {
                    "_id": "5t9ueAFhefnaSE7CK",
                    "key": "shift+0",
                    "label": "LIVE 10  inp 1",
                    "platformKey": "shift+0",
                    "sourceLayerType": 3
                },
                {
                    "_id": "kXGCJwhK7EDrznXaw",
                    "key": "ctrl+1",
                    "label": "LIVE 1 inp 2",
                    "platformKey": "ctrl+1",
                    "sourceLayerType": 3
                },
                {
                    "_id": "6PYdPdY5kQ2btdyQ9",
                    "key": "ctrl+2",
                    "label": "LIVE 2 inp 2",
                    "platformKey": "ctrl+2",
                    "sourceLayerType": 3
                },
                {
                    "_id": "jTMi9znASEoC4cns8",
                    "key": "ctrl+3",
                    "label": "LIVE 3 inp 2",
                    "platformKey": "ctrl+3",
                    "sourceLayerType": 3
                },
                {
                    "_id": "n2CZyydtrNu3WxCYF",
                    "key": "ctrl+4",
                    "label": "LIVE 4  inp 2",
                    "platformKey": "ctrl+4",
                    "sourceLayerType": 3
                },
                {
                    "_id": "knsZF8HAApSokZ4iC",
                    "key": "ctrl+5",
                    "label": "LIVE 5 inp 2",
                    "platformKey": "ctrl+5",
                    "sourceLayerType": 3
                },
                {
                    "_id": "KxMgNCu6cGZ6isAyZ",
                    "key": "ctrl+6",
                    "label": "LIVE 6 inp 2",
                    "platformKey": "ctrl+6",
                    "sourceLayerType": 3
                },
                {
                    "_id": "RPx5jfRYfWHoouf4b",
                    "key": "ctrl+7",
                    "label": "LIVE 7 inp 2",
                    "platformKey": "ctrl+7",
                    "sourceLayerType": 3
                },
                {
                    "_id": "Propqsd4RKJxhT5m3",
                    "key": "ctrl+8",
                    "label": "LIVE 8 inp 2",
                    "platformKey": "ctrl+8",
                    "sourceLayerType": 3
                },
                {
                    "_id": "BQdtsSaPCJS7xQ8Jn",
                    "key": "ctrl+9",
                    "label": "LIVE 9 inp 2",
                    "platformKey": "ctrl+9",
                    "sourceLayerType": 3
                },
                {
                    "_id": "Zw2ZfKqvcWDPfi6uz",
                    "key": "ctrl+0",
                    "label": "LIVE 10 inp 2",
                    "platformKey": "ctrl+0",
                    "sourceLayerType": 3
                },
                {
                    "_id": "oWw9zLSmX75ag6DPh",
                    "key": "ctrl+F1",
                    "label": "KAM 1 inp 2",
                    "platformKey": "ctrl+F1",
                    "sourceLayerType": 1
                },
                {
                    "_id": "jijXY9dcd3jsCYgkS",
                    "key": "ctrl+F2",
                    "label": "KAM 2 inp 2",
                    "platformKey": "ctrl+F2",
                    "sourceLayerType": 1
                },
                {
                    "_id": "fjonHP6Wkuyqq8vCq",
                    "key": "ctrl+F3",
                    "label": "KAM 3 inp 2",
                    "platformKey": "ctrl+F3",
                    "sourceLayerType": 1
                },
                {
                    "_id": "2mDp4FZnDv9ydL2Cb",
                    "key": "ctrl+F4",
                    "label": "KAM 4 inp 2",
                    "platformKey": "ctrl+F4",
                    "sourceLayerType": 1
                },
                {
                    "_id": "WDDWRRoMg4piNgRqZ",
                    "key": "ctrl+F5",
                    "label": "KAM 5 inp 2",
                    "platformKey": "ctrl+F5",
                    "sourceLayerType": 1
                },
                {
                    "_id": "uWDDzziq5x3uSBBYT",
                    "key": "SHIFT+ArrowUp",
                    "label": "hist. op SKIP",
                    "platformKey": "SHIFT+ArrowUp"
                },
                {
                    "_id": "rcCCAnNKZjiZjztzJ",
                    "key": "shift+ArrowDown",
                    "label": "hist. ned SKIP",
                    "platformKey": "shift+ArrowDown"
                },
                {
                    "_id": "vFXWpjdsCXcTKJwpu",
                    "key": "shift+Arrowleft",
                    "label": "hist. venstre SKIP",
                    "platformKey": "shift+Arrowleft"
                },
                {
                    "_id": "WRmPvMCHmHtKXNxCz",
                    "key": "shift+ArrowRight",
                    "label": "hist. højre SKIP",
                    "platformKey": "shift+ArrowRight"
                },
                {
                    "_id": "GMzcW5GjNNe9QCuMS",
                    "key": "shift+pgup",
                    "label": "UI max",
                    "platformKey": "shift+pgup"
                },
                {
                    "_id": "ednYDYx3GCtSm8oFd",
                    "key": "shift+pgdown",
                    "label": "UI min.",
                    "platformKey": "shift+pgdown"
                },
                {
                    "_id": "Swy5NnjncCNT8NcWG",
                    "key": "shift+home",
                    "label": "gå til aktiv linje",
                    "platformKey": "shift+home"
                },
                {
                    "_id": "iXe7ij2QGfnSxn4Jc",
                    "key": "shift+esc",
                    "label": "Reload runddown",
                    "platformKey": "shift+esc"
                },
                {
                    "_id": "t3ztCkSbGbwtDqoSN",
                    "key": "ctrl+½",
                    "label": "øve rundown",
                    "platformKey": "ctrl+½"
                },
                {
                    "_id": "2r5RTbzGj5n5YizeD",
                    "key": "ctr+e",
                    "label": "EVS 1 VO inp 2",
                    "platformKey": "ctrl+e",
                    "sourceLayerType": 2
                },
                {
                    "_id": "QLjtoNT4JYMwRNXKX",
                    "key": "ctrl+d",
                    "label": "EVS 1 100% inp 2",
                    "platformKey": "ctrl+d",
                    "sourceLayerType": 2
                },
                {
                    "_id": "rY5cskQinmvueWDMJ",
                    "key": "ctrl+u",
                    "label": "EVS 2 VO inp 2",
                    "platformKey": "ctrl+u",
                    "sourceLayerType": 2
                },
                {
                    "_id": "u55sb2rAthZkLthWN",
                    "key": "ctrl+i",
                    "label": "EVS 2 100% inp 2",
                    "platformKey": "ctrl+i",
                    "sourceLayerType": 2
                },
                {
                    "_id": "obeLvkDSvmxzQwjjy",
                    "key": "ctrl+home",
                    "label": "REW tidslinje",
                    "platformKey": "ctrl+home"
                },
                {
                    "_id": "pouj5jku7ZrvKJC6Q",
                    "key": "ctrl+ArrowUp",
                    "label": "mics OP",
                    "platformKey": "ctrl+ArrowUp"
                },
                {
                    "_id": "JqmMDb9Wm6r3bTeRF",
                    "key": "ctrl+ArrowDown",
                    "label": "mics NED",
                    "platformKey": "ctrl+ArrowDown"
                },
                {
                    "_id": "5NLNuLbEaGpLh69kY",
                    "key": "shift+ctrl+F1",
                    "label": "KAM 1 PVW",
                    "platformKey": "shift+ctrl+F1"
                },
                {
                    "_id": "gKCfsMPcYyQGEPwst",
                    "key": "shift+ctrl+F2",
                    "label": "KAM 2 PVW",
                    "platformKey": "shift+ctrl+F2"
                },
                {
                    "_id": "Lnwn3DGsMTeCD2yrY",
                    "key": "shift+ctrl+F3",
                    "label": "KAM 3 PVW",
                    "platformKey": "shift+ctrl+F3"
                },
                {
                    "_id": "XeomX9v2Rpnn4rQLj",
                    "key": "shift+ctrl+F4",
                    "label": "KAM 4 PVW",
                    "platformKey": "shift+ctrl+F4"
                },
                {
                    "_id": "F38sozbJGzf58qn3b",
                    "key": "shift+ctrl+F5",
                    "label": "KAM 5 PVW",
                    "platformKey": "shift+ctrl+F5"
                },
                {
                    "_id": "GgGx6jemtoDKQkJx3",
                    "key": "shift+ctrl+1",
                    "label": "LIVE 1 til SS",
                    "platformKey": "shift+ctrl+1",
                    "sourceLayerType": 3
                },
                {
                    "_id": "GFyvfJujH47cMgCFX",
                    "key": "shift+ctrl+2",
                    "label": "LIVE 2 til SS",
                    "platformKey": "shift+ctrl+2",
                    "sourceLayerType": 3
                },
                {
                    "_id": "kZD3R5rqqsnE4dpgA",
                    "key": "shift+ctrl+3",
                    "label": "LIVE 3 til SS",
                    "platformKey": "shift+ctrl+3",
                    "sourceLayerType": 3
                },
                {
                    "_id": "trRSSrxqDqYyR8xQW",
                    "key": "shift+ctrl+4",
                    "label": "LIVE 4 til SS",
                    "platformKey": "shift+ctrl+4",
                    "sourceLayerType": 3
                },
                {
                    "_id": "N8iGXkcMKqBNGTRBb",
                    "key": "shift+ctrl+5",
                    "label": "LIVE 5 til SS",
                    "platformKey": "shift+ctrl+5",
                    "sourceLayerType": 3
                },
                {
                    "_id": "EDEN7nE8nuTductne",
                    "key": "shift+ctrl+6",
                    "label": "LIVE 6 til SS",
                    "platformKey": "shift+ctrl+6",
                    "sourceLayerType": 3
                },
                {
                    "_id": "Xai3ww9hhSSSyjLCK",
                    "key": "shift+ctrl+7",
                    "label": "LIVE 7 til SS",
                    "platformKey": "shift+ctrl+7",
                    "sourceLayerType": 3
                },
                {
                    "_id": "o5AuXz5sEbxGyg2B6",
                    "key": "shift+ctrl+8",
                    "label": "LIVE 8 til SS",
                    "platformKey": "shift+ctrl+8",
                    "sourceLayerType": 3
                },
                {
                    "_id": "En9EzHJKH6HMEafwQ",
                    "key": "shift+ctrl+9",
                    "label": "LIVE 9 til SS",
                    "platformKey": "shift+ctrl+9",
                    "sourceLayerType": 3
                },
                {
                    "_id": "gqXts3PesaTq9GoWg",
                    "key": "shift+ctrl+10",
                    "label": "LIVE 10 til SS",
                    "platformKey": "shift+ctrl+10",
                    "sourceLayerType": 3
                },
                {
                    "_id": "qpddTh27ov2Giyr3c",
                    "key": "shift+ctrl+e",
                    "label": "EVS 1 til SS",
                    "platformKey": "shift+ctrl+e"
                },
                {
                    "_id": "JMsYPuYDGm9KSKaBa",
                    "key": "shift+ctrl+a",
                    "label": "ovl: ident OUT",
                    "platformKey": "shift+ctrl+a"
                },
                {
                    "_id": "eHdxPd5jBE5BjNTZq",
                    "key": "shift+ctrl+s",
                    "label": "ovl: top OUT",
                    "platformKey": "shift+ctrl+s"
                },
                {
                    "_id": "M6LkEoB2ioMaaZNcr",
                    "key": "shift+ctrl+d",
                    "label": "ovl:lower OUT",
                    "platformKey": "shift+ctrl+d"
                },
                {
                    "_id": "u8tT4d9ZvZ4gHWhWz",
                    "key": "shift+ctrl+F",
                    "label": "ovl:headline OUT",
                    "platformKey": "shift+ctrl+F"
                },
                {
                    "_id": "kgD3s2wDpq3m4CPN5",
                    "key": "shift+ctrl+G",
                    "label": "ovl: tema OUT",
                    "platformKey": "shift+ctrl+G"
                },
                {
                    "_id": "2XzLNs5M8WtgrDEqD",
                    "key": "shift+ctrl+½",
                    "label": "deaktivate rundown",
                    "platformKey": "shift+ctrl+½"
                }
            ]
        }
    ],
    "showStyleVariants": [
        {
            "_id": "L2XNHs8sTSuFP7Bg3",
            "name": "Default variant",
            "showStyleBaseId": "show0",
            "config": [],
            "_rundownVersionHash": "4OLnuVPds8gYmW8aGBK55O0DKgA_"
        },
        {
            "_id": "ocCyTj9uwHXpf23iKckW3BKDKaA_",
            "name": "Main",
            "showStyleBaseId": "show0",
            "config": [],
            "_rundownVersionHash": "4OLnuVPds8gYmW8aGBK55O0DKgA_"
        }
    ],
    "blueprints": [
        {
            "_id": "tv2_afvd_studio",
            "name": "tv2_afvd_studio",
            "created": 1574442209182,
            "code": "/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 135);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(41), exports);\ntslib_1.__exportStar(__webpack_require__(12), exports);\ntslib_1.__exportStar(__webpack_require__(42), exports);\ntslib_1.__exportStar(__webpack_require__(8), exports);\ntslib_1.__exportStar(__webpack_require__(49), exports);\ntslib_1.__exportStar(__webpack_require__(50), exports);\ntslib_1.__exportStar(__webpack_require__(51), exports);\ntslib_1.__exportStar(__webpack_require__(52), exports);\ntslib_1.__exportStar(__webpack_require__(53), exports);\ntslib_1.__exportStar(__webpack_require__(54), exports);\ntslib_1.__exportStar(__webpack_require__(55), exports);\ntslib_1.__exportStar(__webpack_require__(56), exports);\ntslib_1.__exportStar(__webpack_require__(57), exports);\ntslib_1.__exportStar(__webpack_require__(58), exports);\ntslib_1.__exportStar(__webpack_require__(61), exports);\ntslib_1.__exportStar(__webpack_require__(63), exports);\ntslib_1.__exportStar(__webpack_require__(66), exports);\ntslib_1.__exportStar(__webpack_require__(69), exports);\ntslib_1.__exportStar(__webpack_require__(16), exports);\ntslib_1.__exportStar(__webpack_require__(72), exports);\ntslib_1.__exportStar(__webpack_require__(73), exports);\ntslib_1.__exportStar(__webpack_require__(76), exports);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(25), exports);\ntslib_1.__exportStar(__webpack_require__(26), exports);\ntslib_1.__exportStar(__webpack_require__(27), exports);\ntslib_1.__exportStar(__webpack_require__(28), exports);\ntslib_1.__exportStar(__webpack_require__(29), exports);\ntslib_1.__exportStar(__webpack_require__(30), exports);\ntslib_1.__exportStar(__webpack_require__(31), exports);\ntslib_1.__exportStar(__webpack_require__(32), exports);\ntslib_1.__exportStar(__webpack_require__(33), exports);\ntslib_1.__exportStar(__webpack_require__(34), exports);\ntslib_1.__exportStar(__webpack_require__(35), exports);\ntslib_1.__exportStar(__webpack_require__(36), exports);\ntslib_1.__exportStar(__webpack_require__(37), exports);\nconst Timeline = __webpack_require__(38);\nexports.Timeline = Timeline;\nvar DeviceType;\n(function (DeviceType) {\n    DeviceType[DeviceType[\"ABSTRACT\"] = 0] = \"ABSTRACT\";\n    DeviceType[DeviceType[\"CASPARCG\"] = 1] = \"CASPARCG\";\n    DeviceType[DeviceType[\"ATEM\"] = 2] = \"ATEM\";\n    DeviceType[DeviceType[\"LAWO\"] = 3] = \"LAWO\";\n    DeviceType[DeviceType[\"HTTPSEND\"] = 4] = \"HTTPSEND\";\n    DeviceType[DeviceType[\"PANASONIC_PTZ\"] = 5] = \"PANASONIC_PTZ\";\n    DeviceType[DeviceType[\"TCPSEND\"] = 6] = \"TCPSEND\";\n    DeviceType[DeviceType[\"HYPERDECK\"] = 7] = \"HYPERDECK\";\n    DeviceType[DeviceType[\"PHAROS\"] = 8] = \"PHAROS\";\n    DeviceType[DeviceType[\"OSC\"] = 9] = \"OSC\";\n    DeviceType[DeviceType[\"HTTPWATCHER\"] = 10] = \"HTTPWATCHER\";\n    DeviceType[DeviceType[\"SISYFOS\"] = 11] = \"SISYFOS\";\n    DeviceType[DeviceType[\"QUANTEL\"] = 12] = \"QUANTEL\";\n    DeviceType[DeviceType[\"VIZMSE\"] = 13] = \"VIZMSE\";\n    DeviceType[DeviceType[\"SINGULAR_LIVE\"] = 14] = \"SINGULAR_LIVE\";\n})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(17), exports);\ntslib_1.__exportStar(__webpack_require__(18), exports);\ntslib_1.__exportStar(__webpack_require__(19), exports);\ntslib_1.__exportStar(__webpack_require__(20), exports);\ntslib_1.__exportStar(__webpack_require__(21), exports);\ntslib_1.__exportStar(__webpack_require__(22), exports);\ntslib_1.__exportStar(__webpack_require__(23), exports);\ntslib_1.__exportStar(__webpack_require__(24), exports);\ntslib_1.__exportStar(__webpack_require__(39), exports);\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = _;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(44), exports);\ntslib_1.__exportStar(__webpack_require__(45), exports);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n\n\n/***/ }),\n/* 6 */,\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\n/** Get all the Real LLayers (map to devices). Note: Does not include some which are dynamically generated */\nfunction RealLLayers() {\n    return (_.values(AtemLLayer)\n        // @ts-ignore\n        .concat(_.values(CasparLLayer))\n        .concat(_.values(SisyfosLLAyer))\n        .concat(_.values(tv2_common_1.GraphicLLayer))\n        .concat(_.values(VirtualAbstractLLayer)));\n}\nexports.RealLLayers = RealLLayers;\nfunction VirtualLLayers() {\n    return _.values(VirtualAbstractLLayer);\n}\nexports.VirtualLLayers = VirtualLLayers;\nvar VirtualAbstractLLayer;\n(function (VirtualAbstractLLayer) {\n})(VirtualAbstractLLayer = exports.VirtualAbstractLLayer || (exports.VirtualAbstractLLayer = {}));\nvar AtemLLayer;\n(function (AtemLLayer) {\n    AtemLLayer[\"AtemMEProgram\"] = \"atem_me_program\";\n    AtemLLayer[\"AtemMEClean\"] = \"atem_me_clean\";\n    AtemLLayer[\"AtemDSKGraphics\"] = \"atem_dsk_graphics\";\n    AtemLLayer[\"AtemDSKEffect\"] = \"atem_dsk_effect\";\n    AtemLLayer[\"AtemCleanUSKEffect\"] = \"atem_clean_usk_effect\";\n    AtemLLayer[\"AtemSSrcArt\"] = \"atem_supersource_art\";\n    AtemLLayer[\"AtemSSrcDefault\"] = \"atem_supersource_default\";\n    AtemLLayer[\"AtemSSrcBox1\"] = \"atem_supersource_z_box1\";\n    AtemLLayer[\"AtemSSrcBox2\"] = \"atem_supersource_z_box2\";\n    AtemLLayer[\"AtemSSrcBox3\"] = \"atem_supersource_z_box3\";\n    AtemLLayer[\"AtemSSrcBox4\"] = \"atem_supersource_z_box4\";\n    AtemLLayer[\"AtemAuxPGM\"] = \"atem_aux_pgm\";\n    AtemLLayer[\"AtemAuxClean\"] = \"atem_aux_clean\";\n    AtemLLayer[\"AtemAuxWall\"] = \"atem_aux_wall\";\n    AtemLLayer[\"AtemAuxAR\"] = \"atem_aux_ar\";\n    AtemLLayer[\"AtemAuxVizOvlIn1\"] = \"atem_aux_viz_ovl_in_1\";\n    // AtemAuxVizFullIn1 = 'atem_aux_viz_full_in_1',\n    AtemLLayer[\"AtemAuxVideoMixMinus\"] = \"atem_aux_video_mix_minus\";\n    AtemLLayer[\"AtemAuxVenue\"] = \"atem_aux_venue\";\n    AtemLLayer[\"AtemAuxLookahead\"] = \"atem_aux_lookahead\";\n    AtemLLayer[\"AtemAuxSSrc\"] = \"atem_aux_ssrc\";\n})(AtemLLayer = exports.AtemLLayer || (exports.AtemLLayer = {}));\nvar CasparLLayer;\n(function (CasparLLayer) {\n    CasparLLayer[\"CasparPlayerClipPending\"] = \"casparcg_player_clip_pending\";\n    CasparLLayer[\"CasparPlayerJingle\"] = \"casparcg_player_jingle\";\n    CasparLLayer[\"CasparCGDVELoop\"] = \"casparcg_dve_loop\";\n    CasparLLayer[\"CasparCGFullBg\"] = \"casparcg_full_bg\";\n    CasparLLayer[\"CasparCGLYD\"] = \"casparcg_audio_lyd\";\n    CasparLLayer[\"CasparCGDVETemplate\"] = \"casparcg_cg_dve_template\";\n    CasparLLayer[\"CasparCGDVEKey\"] = \"casparcg_dve_key\";\n    CasparLLayer[\"CasparCGDVEFrame\"] = \"casparcg_dve_frame\";\n    CasparLLayer[\"CasparCountdown\"] = \"casparcg_countdown\";\n})(CasparLLayer = exports.CasparLLayer || (exports.CasparLLayer = {}));\nvar SisyfosLLAyer;\n(function (SisyfosLLAyer) {\n    SisyfosLLAyer[\"SisyfosSourceClipPending\"] = \"sisyfos_source_clip_pending\";\n    SisyfosLLAyer[\"SisyfosSourceJingle\"] = \"sisyfos_source_jingle\";\n    SisyfosLLAyer[\"SisyfosSourceAudiobed\"] = \"sisyfos_source_audiobed\";\n    SisyfosLLAyer[\"SisyfosSourceTLF\"] = \"sisyfos_source_tlf_hybrid\";\n    SisyfosLLAyer[\"SisyfosSourceHost_1_ST_A\"] = \"sisyfos_source_Host_1_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceHost_2_ST_A\"] = \"sisyfos_source_Host_2_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_1_ST_A\"] = \"sisyfos_source_Guest_1_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_2_ST_A\"] = \"sisyfos_source_Guest_2_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_3_ST_A\"] = \"sisyfos_source_Guest_3_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_4_ST_A\"] = \"sisyfos_source_Guest_4_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceHost_1_ST_B\"] = \"sisyfos_source_Host_1_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceHost_2_ST_B\"] = \"sisyfos_source_Host_2_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_1_ST_B\"] = \"sisyfos_source_Guest_1_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_2_ST_B\"] = \"sisyfos_source_Guest_2_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_3_ST_B\"] = \"sisyfos_source_Guest_3_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_4_ST_B\"] = \"sisyfos_source_Guest_4_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceLive_1\"] = \"sisyfos_source_live_1\";\n    SisyfosLLAyer[\"SisyfosSourceLive_2\"] = \"sisyfos_source_live_2\";\n    SisyfosLLAyer[\"SisyfosSourceLive_3\"] = \"sisyfos_source_live_3\";\n    SisyfosLLAyer[\"SisyfosSourceLive_4\"] = \"sisyfos_source_live_4\";\n    SisyfosLLAyer[\"SisyfosSourceLive_5\"] = \"sisyfos_source_live_5\";\n    SisyfosLLAyer[\"SisyfosSourceLive_6\"] = \"sisyfos_source_live_6\";\n    SisyfosLLAyer[\"SisyfosSourceLive_7\"] = \"sisyfos_source_live_7\";\n    SisyfosLLAyer[\"SisyfosSourceLive_8\"] = \"sisyfos_source_live_8\";\n    SisyfosLLAyer[\"SisyfosSourceLive_9\"] = \"sisyfos_source_live_9\";\n    SisyfosLLAyer[\"SisyfosSourceLive_10\"] = \"sisyfos_source_live_10\";\n    SisyfosLLAyer[\"SisyfosSourceServerA\"] = \"sisyfos_source_server_a\";\n    SisyfosLLAyer[\"SisyfosSourceServerB\"] = \"sisyfos_source_server_b\";\n    // SisyfosSourceServerC = 'sisyfos_source_server_c',\n    SisyfosLLAyer[\"SisyfosSourceEVS_1\"] = \"sisyfos_source_evs_1\";\n    SisyfosLLAyer[\"SisyfosSourceEVS_2\"] = \"sisyfos_source_evs_2\";\n    SisyfosLLAyer[\"SisyfosResync\"] = \"sisyfos_resync\";\n})(SisyfosLLAyer = exports.SisyfosLLAyer || (exports.SisyfosLLAyer = {}));\nfunction CasparPlayerClip(i) {\n    return `casparcg_player_clip_${i}`;\n}\nexports.CasparPlayerClip = CasparPlayerClip;\nfunction CasparPlayerClipLoadingLoop(i) {\n    return `casparcg_player_clip_${i}_loading_loop`;\n}\nexports.CasparPlayerClipLoadingLoop = CasparPlayerClipLoadingLoop;\nfunction SisyfosEVSSource(i) {\n    return `sisyfos_source_evs_${i}`;\n}\nexports.SisyfosEVSSource = SisyfosEVSSource;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nfunction literal(o) {\n    return o;\n}\nexports.literal = literal;\nfunction assertUnreachable(_never) {\n    throw new Error('Switch validation failed, look for assertUnreachable(...)');\n}\nexports.assertUnreachable = assertUnreachable;\nfunction createVirtualPiece(layer, enable, mainPiece) {\n    return {\n        _id: '',\n        name: '',\n        externalId: mainPiece ? mainPiece.externalId : '-',\n        enable: typeof enable === 'number'\n            ? {\n                start: enable,\n                duration: 0\n            }\n            : enable,\n        sourceLayerId: layer,\n        outputLayerId: 'pgm',\n        virtual: true,\n        content: {\n            timelineObjects: []\n        }\n    };\n}\nexports.createVirtualPiece = createVirtualPiece;\nfunction createEmptyObject(obj) {\n    return literal(Object.assign(Object.assign({ id: '', priority: 0 }, obj), { content: {\n            deviceType: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n            type: 'empty'\n        } }));\n}\nexports.createEmptyObject = createEmptyObject;\n/**\n * Returs true if the piece is interface IBlueprintAdLibPiece\n * @param {IBlueprintPiece | IBlueprintAdLibPiece} piece Piece to check\n */\nfunction isAdLibPiece(piece) {\n    return '_rank' in piece;\n}\nexports.isAdLibPiece = isAdLibPiece;\n\n\n/***/ }),\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AtemSourceIndex;\n(function (AtemSourceIndex) {\n    AtemSourceIndex[AtemSourceIndex[\"Blk\"] = 0] = \"Blk\";\n    AtemSourceIndex[AtemSourceIndex[\"Bars\"] = 1000] = \"Bars\";\n    AtemSourceIndex[AtemSourceIndex[\"Col1\"] = 2001] = \"Col1\";\n    AtemSourceIndex[AtemSourceIndex[\"Col2\"] = 2002] = \"Col2\";\n    AtemSourceIndex[AtemSourceIndex[\"MP1\"] = 3010] = \"MP1\";\n    AtemSourceIndex[AtemSourceIndex[\"MP1K\"] = 3011] = \"MP1K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP2\"] = 3020] = \"MP2\";\n    AtemSourceIndex[AtemSourceIndex[\"MP2K\"] = 3021] = \"MP2K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP3\"] = 3030] = \"MP3\";\n    AtemSourceIndex[AtemSourceIndex[\"MP3K\"] = 3031] = \"MP3K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP4\"] = 3040] = \"MP4\";\n    AtemSourceIndex[AtemSourceIndex[\"MP4K\"] = 3041] = \"MP4K\";\n    AtemSourceIndex[AtemSourceIndex[\"SSrc\"] = 6000] = \"SSrc\";\n    AtemSourceIndex[AtemSourceIndex[\"SSrc2\"] = 6001] = \"SSrc2\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd1\"] = 7001] = \"Cfd1\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd2\"] = 7002] = \"Cfd2\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd3\"] = 7003] = \"Cfd3\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd4\"] = 7004] = \"Cfd4\";\n    AtemSourceIndex[AtemSourceIndex[\"Output1\"] = 8001] = \"Output1\";\n    AtemSourceIndex[AtemSourceIndex[\"Output2\"] = 8002] = \"Output2\";\n    AtemSourceIndex[AtemSourceIndex[\"Output3\"] = 8003] = \"Output3\";\n    AtemSourceIndex[AtemSourceIndex[\"Output4\"] = 8004] = \"Output4\";\n    AtemSourceIndex[AtemSourceIndex[\"Output5\"] = 8005] = \"Output5\";\n    AtemSourceIndex[AtemSourceIndex[\"Output6\"] = 8006] = \"Output6\";\n    AtemSourceIndex[AtemSourceIndex[\"Output7\"] = 8007] = \"Output7\";\n    AtemSourceIndex[AtemSourceIndex[\"Output8\"] = 8008] = \"Output8\";\n    AtemSourceIndex[AtemSourceIndex[\"Output9\"] = 8009] = \"Output9\";\n    AtemSourceIndex[AtemSourceIndex[\"Output10\"] = 80010] = \"Output10\";\n    AtemSourceIndex[AtemSourceIndex[\"Output11\"] = 80011] = \"Output11\";\n    AtemSourceIndex[AtemSourceIndex[\"Output12\"] = 80012] = \"Output12\";\n    AtemSourceIndex[AtemSourceIndex[\"Output13\"] = 80013] = \"Output13\";\n    AtemSourceIndex[AtemSourceIndex[\"Output14\"] = 80014] = \"Output14\";\n    AtemSourceIndex[AtemSourceIndex[\"Output15\"] = 80015] = \"Output15\";\n    AtemSourceIndex[AtemSourceIndex[\"Output16\"] = 80016] = \"Output16\";\n    AtemSourceIndex[AtemSourceIndex[\"Output17\"] = 80017] = \"Output17\";\n    AtemSourceIndex[AtemSourceIndex[\"Output18\"] = 80018] = \"Output18\";\n    AtemSourceIndex[AtemSourceIndex[\"Output19\"] = 80019] = \"Output19\";\n    AtemSourceIndex[AtemSourceIndex[\"Output20\"] = 80020] = \"Output20\";\n    AtemSourceIndex[AtemSourceIndex[\"Output21\"] = 80021] = \"Output21\";\n    AtemSourceIndex[AtemSourceIndex[\"Output22\"] = 80022] = \"Output22\";\n    AtemSourceIndex[AtemSourceIndex[\"Output23\"] = 80023] = \"Output23\";\n    AtemSourceIndex[AtemSourceIndex[\"Output24\"] = 80024] = \"Output24\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg1\"] = 10010] = \"Prg1\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv1\"] = 10011] = \"Prv1\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg2\"] = 10020] = \"Prg2\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv2\"] = 10021] = \"Prv2\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg3\"] = 10030] = \"Prg3\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv3\"] = 10031] = \"Prv3\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg4\"] = 10040] = \"Prg4\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv4\"] = 10041] = \"Prv4\";\n})(AtemSourceIndex = exports.AtemSourceIndex || (exports.AtemSourceIndex = {}));\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TimeFromFrames(frames) {\n    return (1000 / 25) * frames;\n}\nexports.TimeFromFrames = TimeFromFrames;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nfunction ParseCue(cue) {\n    if (!cue) {\n        return {\n            type: tv2_constants_1.CueType.Unknown,\n            iNewsCommand: ''\n        };\n    }\n    cue = cue.filter(c => c !== '');\n    // Replace multiple spaces / tabs with a single space\n    cue = cue.map(c => c.trim().replace(/\\s+/g, ' '));\n    if (cue.length === 0) {\n        return {\n            type: tv2_constants_1.CueType.Unknown,\n            iNewsCommand: ''\n        };\n    }\n    if (cue[0].match(/^[#* ]?kg[= ]ovl-all-out$/i) || cue[0].match(/^[#* ]?kg[= ]altud$/i)) {\n        // All out\n        return parseAllOut(cue);\n    }\n    else if (cue[0].match(/(?:^[*|#]?kg[ |=])|(?:^digi)/i)) {\n        // kg (Grafik)\n        return parsekg(cue);\n    }\n    else if (cue[0].match(/^]] [a-z]\\d\\.\\d [a-z] \\d \\[\\[$/i)) {\n        // MOS\n        return parseMOS(cue);\n    }\n    else if (cue[0].match(/[#|*]?cg\\d+[ -]pilotdata/i)) {\n        return parseMOS(cue);\n    }\n    else if (cue[0].match(/^EKSTERN=/i)) {\n        // EKSTERN\n        const eksternSource = cue[0].match(/^EKSTERN=(.+)$/i);\n        if (eksternSource) {\n            return {\n                type: tv2_constants_1.CueType.Ekstern,\n                source: eksternSource[1],\n                iNewsCommand: 'EKSTERN'\n            };\n        }\n    }\n    else if (cue[0].match(/^DVE=/i)) {\n        // DVE\n        return parseDVE(cue);\n    }\n    else if (cue[0].match(/^TELEFON=/i)) {\n        // Telefon\n        return parseTelefon(cue);\n    }\n    else if (cue[0].match(/^SS|(?:GRAFIK)=(?:.*)(?:$| )/i)) {\n        // Target engine\n        return parseTargetEngine(cue);\n    }\n    else if (cue[0].match(/^SS|(?:GRAFIK|VIZ)=(?:full|ovl|wall)(?:$| )/i)) {\n        return parseTargetEngine(cue);\n    }\n    else if (cue[0].match(/^VIZ=/i)) {\n        return parseVIZCues(cue);\n    }\n    else if (cue[0].match(/^STUDIE=MIC ON OFF$/i)) {\n        return parseMic(cue);\n    }\n    else if (cue[0].match(/^ADLIBPI?X=/i)) {\n        return parseAdLib(cue);\n    }\n    else if (cue[0].match(/^KOMMANDO=/i)) {\n        return parseKommando(cue);\n    }\n    else if (cue[0].match(/^LYD=/i)) {\n        return parseLYD(cue);\n    }\n    else if (cue[0].match(/^JINGLE\\d+=/i)) {\n        return parseJingle(cue);\n    }\n    return {\n        type: tv2_constants_1.CueType.Unknown,\n        iNewsCommand: ''\n    };\n}\nexports.ParseCue = ParseCue;\nfunction parsekg(cue) {\n    let kgCue = {\n        type: tv2_constants_1.CueType.Grafik,\n        template: '',\n        cue: '',\n        textFields: [],\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^([*|#]?kg|digi)/i);\n    kgCue.iNewsCommand = command ? command[1] : 'kg';\n    const firstLineValues = cue[0].match(/^[*|#]?kg[ |=]([\\w|\\d]+)( (.+))*$/i);\n    if (firstLineValues) {\n        kgCue.cue = cue[0].match(/kg/) ? 'kg' : 'KG'; // THIS ONE SHOULD NOT BE INSENSITIVE\n        kgCue.template = firstLineValues[1];\n        if (firstLineValues[3]) {\n            kgCue.textFields.push(firstLineValues[3]);\n        }\n    }\n    else if (cue[0].match(/^DIGI=/i)) {\n        kgCue.cue = 'DIGI';\n        const templateType = cue[0].match(/^DIGI=(.+)$/i);\n        if (templateType) {\n            kgCue.template = templateType[1];\n        }\n    }\n    let textFields = cue.length - 1;\n    if (isTime(cue[cue.length - 1])) {\n        kgCue = Object.assign(Object.assign({}, kgCue), parseTime(cue[cue.length - 1]));\n    }\n    else if (!cue[cue.length - 1].match(/;x.xx/i)) {\n        textFields += 1;\n    }\n    else {\n        kgCue.adlib = true;\n        const end = parseTime(cue[cue.length - 1]).end;\n        if (end) {\n            kgCue = Object.assign(Object.assign({}, kgCue), { end });\n        }\n    }\n    for (let i = 1; i < textFields; i++) {\n        kgCue.textFields.push(cue[i]);\n    }\n    if (!kgCue.start) {\n        kgCue.adlib = true;\n    }\n    return kgCue;\n}\nfunction parseMOS(cue) {\n    const mosCue = {\n        type: tv2_constants_1.CueType.MOS,\n        name: '',\n        vcpid: -1,\n        continueCount: -1,\n        iNewsCommand: 'VCP'\n    };\n    const realCue = [];\n    cue.forEach(line => {\n        if (!line.match(/[#|*]?cg\\d+[ -]pilotdata/i) &&\n            !line.match(/^]] [a-z]\\d\\.\\d [a-z] \\d \\[\\[$/i) &&\n            !line.match(/cg\\d+ \\]\\] .+? \\[\\[ pilotdata/i)) {\n            realCue.push(line);\n        }\n        else if (!!line.match(/[#|*]?cg\\d+[ -]pilotdata/i)) {\n            const engine = line.match(/[#|*]?cg(\\d+)[ -]pilotdata/i);\n            if (engine && engine[1]) {\n                mosCue.engine = engine[1];\n            }\n        }\n    });\n    if (realCue.length === 4) {\n        const vcpid = realCue[1].match(/^VCPID=(\\d+)$/i);\n        const continueCount = realCue[2].match(/^ContinueCount=(-?\\d+)$/i);\n        const timing = realCue[0].match(/L\\|(M|\\d{1,2}(?:\\:\\d{1,2}){0,2})\\|([SBO]|\\d{1,2}(?:\\:\\d{1,2}){0,2})$/i);\n        if (vcpid && continueCount) {\n            mosCue.name = realCue[0];\n            mosCue.vcpid = Number(vcpid[1]);\n            mosCue.continueCount = Number(continueCount[1]);\n            if (!!mosCue.name.match(/^ST4_WALL/i)) {\n                mosCue.isActuallyWall = true;\n            }\n            if (timing) {\n                if (timing[1] === 'M') {\n                    mosCue.adlib = true;\n                }\n                else if (isMosTime(timing[1])) {\n                    mosCue.start = parseTime(timing[1]).start;\n                }\n                if (timing[2].match(/[SBO]/i)) {\n                    mosCue.end = {\n                        infiniteMode: timing[2]\n                    };\n                }\n                else if (isMosTime(timing[2])) {\n                    mosCue.end = parseTime(timing[2]).start;\n                }\n            }\n            else {\n                mosCue.start = { seconds: 0 };\n            }\n        }\n    }\n    return mosCue;\n}\nfunction parseDVE(cue) {\n    let dvecue = {\n        type: tv2_constants_1.CueType.DVE,\n        template: '',\n        sources: {},\n        labels: [],\n        iNewsCommand: 'DVE'\n    };\n    cue.forEach(c => {\n        if (c.match(/^DVE=/i)) {\n            const template = c.match(/^DVE=(.+)$/i);\n            if (template) {\n                dvecue.template = template[1];\n            }\n        }\n        else if (c.match(/^INP\\d+=/i)) {\n            const input = c.match(/^(INP\\d)+=(.+)$/i);\n            if (input && input[1] && input[2]) {\n                dvecue.sources[input[1].toUpperCase()] = input[2];\n            }\n        }\n        else if (c.match(/^BYNAVN=/i)) {\n            const labels = c.match(/^BYNAVN=(.+)$/i);\n            if (labels) {\n                dvecue.labels = labels[1].split(/\\/|\\\\/i);\n            }\n        }\n        else if (isTime(c)) {\n            dvecue = Object.assign(Object.assign({}, dvecue), parseTime(c));\n        }\n    });\n    return dvecue;\n}\nfunction parseTelefon(cue) {\n    const telefonCue = {\n        type: tv2_constants_1.CueType.Telefon,\n        source: '',\n        iNewsCommand: 'TELEFON'\n    };\n    const source = cue[0].match(/^TELEFON=(.+)$/i);\n    if (source) {\n        telefonCue.source = source[1];\n    }\n    if (cue.length > 1) {\n        // tslint:disable-next-line:prefer-conditional-expression\n        if (cue[1].match(/(?:^[*|#]?kg[ |=])|(?:^digi)/i)) {\n            telefonCue.vizObj = parsekg(cue.slice(1, cue.length));\n        }\n        else {\n            telefonCue.vizObj = parseMOS(cue.slice(1, cue.length));\n        }\n    }\n    return telefonCue;\n}\nfunction parseVIZCues(cue) {\n    let vizCues = {\n        type: tv2_constants_1.CueType.VIZ,\n        rawType: cue[0],\n        content: {},\n        design: '',\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^(VIZ|GRAFIK)/i);\n    vizCues.iNewsCommand = command ? command[1] : 'VIZ';\n    const design = cue[0].match(/^(?:VIZ|GRAFIK)=(.*)$/i);\n    if (design) {\n        vizCues.design = design[1];\n    }\n    for (let i = 1; i < cue.length; i++) {\n        if (isTime(cue[i])) {\n            vizCues = Object.assign(Object.assign({}, vizCues), parseTime(cue[i]));\n        }\n        else {\n            const c = cue[i].split('=');\n            vizCues.content[c[0].toString().toUpperCase()] = c[1];\n        }\n    }\n    return vizCues;\n}\nfunction parseMic(cue) {\n    let micCue = {\n        type: tv2_constants_1.CueType.Mic,\n        mics: {},\n        iNewsCommand: 'STUDIE'\n    };\n    cue.forEach(c => {\n        if (!c.match(/^STUDIE=MIC ON OFF$/i)) {\n            if (isTime(c)) {\n                micCue = Object.assign(Object.assign({}, micCue), parseTime(c));\n            }\n            else {\n                const micState = c.match(/^(.+)=((?:ON)|(?:OFF))?$/i);\n                if (micState) {\n                    micCue.mics[micState[1].toString()] = micState[2] ? micState[2] === 'ON' : false;\n                }\n            }\n        }\n    });\n    return micCue;\n}\nfunction parseAdLib(cue) {\n    const adlib = {\n        type: tv2_constants_1.CueType.AdLib,\n        variant: '',\n        inputs: {},\n        iNewsCommand: 'ADLIBPIX'\n    };\n    const variant = cue[0].match(/^ADLIBPI?X=(.+)$/i);\n    if (variant) {\n        adlib.variant = variant[1];\n    }\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < cue.length; i++) {\n        const input = cue[i].match(/^(INP\\d)+=(.+)$/i);\n        if (input && input[1] && input[2] && adlib.inputs !== undefined) {\n            adlib.inputs[input[1].toString().toUpperCase()] = input[2];\n        }\n        const bynavn = cue[i].match(/^BYNAVN=(.)$/i);\n        if (bynavn) {\n            adlib.bynavn = bynavn[1];\n        }\n    }\n    return adlib;\n}\nfunction parseKommando(cue) {\n    let kommandoCue = {\n        type: tv2_constants_1.CueType.Profile,\n        profile: '',\n        iNewsCommand: 'KOMMANDO'\n    };\n    if (cue[1]) {\n        kommandoCue.profile = cue[1];\n    }\n    if (cue[2] && isTime(cue[2])) {\n        kommandoCue = Object.assign(Object.assign({}, kommandoCue), parseTime(cue[2]));\n    }\n    return kommandoCue;\n}\nfunction parseLYD(cue) {\n    let lydCue = {\n        type: tv2_constants_1.CueType.LYD,\n        variant: '',\n        iNewsCommand: 'LYD'\n    };\n    const command = cue[0].match(/^LYD=(.*)$/i);\n    if (command) {\n        lydCue.variant = command[1];\n    }\n    if (cue[1]) {\n        if (isTime(cue[1])) {\n            lydCue = Object.assign(Object.assign({}, lydCue), parseTime(cue[1]));\n        }\n        else if (cue[1].match(/;x.xx/i)) {\n            lydCue.adlib = true;\n        }\n    }\n    return lydCue;\n}\nfunction parseJingle(cue) {\n    const jingleCue = {\n        type: tv2_constants_1.CueType.Jingle,\n        clip: '',\n        iNewsCommand: 'JINGLE'\n    };\n    const clip = cue[0].match(/^JINGLE\\d+=(.*)$/i);\n    if (clip && clip[1]) {\n        jingleCue.clip = clip[1];\n    }\n    return jingleCue;\n}\nfunction parseTargetEngine(cue) {\n    let engineCue = {\n        type: tv2_constants_1.CueType.TargetEngine,\n        rawType: cue[0],\n        content: {},\n        data: {\n            engine: ''\n        },\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^(VIZ|GRAFIK|SS)/i);\n    engineCue.iNewsCommand = command ? command[1] : 'SS';\n    const engine = cue[0].match(/^(?:VIZ|GRAFIK|SS)=(.*)$/i);\n    if (engine) {\n        engineCue.data.engine = engine[1];\n    }\n    for (let i = 1; i < cue.length; i++) {\n        if (isTime(cue[i])) {\n            engineCue = Object.assign(Object.assign({}, engineCue), parseTime(cue[i]));\n        }\n        else {\n            const c = cue[i].split('=');\n            engineCue.content[c[0].toString().toUpperCase()] = c[1];\n        }\n    }\n    return engineCue;\n}\nfunction parseAllOut(cue) {\n    let clearCue = {\n        type: tv2_constants_1.CueType.ClearGrafiks,\n        iNewsCommand: ''\n    };\n    let time = false;\n    cue.forEach(c => {\n        const command = c.match(/^([#* ]?kg)/i);\n        if (command) {\n            clearCue.iNewsCommand = command[1];\n        }\n        if (isTime(c)) {\n            time = true;\n            clearCue = Object.assign(Object.assign({}, clearCue), parseTime(c));\n        }\n    });\n    if (!time) {\n        clearCue.adlib = true;\n    }\n    return clearCue;\n}\nfunction isTime(line) {\n    return (line &&\n        !!line\n            .replace(/\\s+/gi, '')\n            .match(/^;\\d{1,2}(?:(?:\\.\\d{1,2}){0,1}){0,2}(?:(?:-\\d{1,2}(?:(?:\\.\\d{1,2}){0,1}){0,2}){0,1}|(?:-[BSO]))$/i));\n}\nexports.isTime = isTime;\nfunction isMosTime(line) {\n    return !!line.replace(/\\s+/gi, '').match(/\\d{1,2}(?:\\:\\d{1,2}){1,2}/i);\n}\nexports.isMosTime = isMosTime;\nfunction parseTime(line) {\n    const retTime = {\n        start: {},\n        end: {}\n    };\n    const startAndEnd = line.split('-');\n    startAndEnd[0] = startAndEnd[0].replace(';', '');\n    startAndEnd.forEach((time, i) => {\n        time = time.replace(/\\s+/gi, '');\n        const field = i === 0 ? 'start' : 'end';\n        if (time.match(/^[BSO]$/i) && i !== 0) {\n            retTime[field].infiniteMode = time;\n        }\n        else {\n            if (!!time.match(/\\./i)) {\n                const timeSegments = time.split('.');\n                if (timeSegments[0]) {\n                    retTime[field].seconds = (Number(timeSegments[0]) || 0) * 60;\n                }\n                if (timeSegments[1]) {\n                    if (retTime[field].seconds) {\n                        retTime[field].seconds += Number(timeSegments[1].replace('.', '')) || 0;\n                    }\n                    else {\n                        retTime[field].seconds = Number(timeSegments[1].replace('.', '')) || 0;\n                    }\n                }\n                if (timeSegments[2]) {\n                    retTime[field].frames = Number(timeSegments[2].replace('.', '')) || 0;\n                }\n            }\n            else {\n                const timeSegments = time.split(':');\n                if (timeSegments[0]) {\n                    retTime[field].seconds = (Number(timeSegments[0]) || 0) * 60;\n                }\n                if (timeSegments[1]) {\n                    if (retTime[field].seconds) {\n                        retTime[field].seconds += Number(timeSegments[1]) || 0;\n                    }\n                    else {\n                        retTime[field].seconds = Number(timeSegments[1]) || 0;\n                    }\n                }\n            }\n        }\n    });\n    if (!Object.keys(retTime.start).length) {\n        retTime.start = undefined;\n    }\n    if (!Object.keys(retTime.end).length) {\n        retTime.end = undefined;\n    }\n    return retTime;\n}\nexports.parseTime = parseTime;\n/**\n * Creates a parent class for a part, for keeping children of the parent alive when the parent is alive.\n * @param studio Studio name that the part belongs to.\n * @param partDefinition Part to create parent string for.\n */\nfunction PartToParentClass(studio, partDefinition) {\n    switch (partDefinition.type) {\n        case \"Kam\" /* Kam */:\n            return CameraParentClass(studio, partDefinition.variant.name);\n        case \"Server\" /* Server */:\n            const clip = partDefinition.fields.videoId;\n            if (clip) {\n                return ServerParentClass(studio, clip);\n            }\n            else {\n                return;\n            }\n        case \"EVS\" /* EVS */:\n            return EVSParentClass(studio, partDefinition.variant.evs);\n        case \"Unknown\" /* Unknown */:\n            return UnknownPartParentClass(studio, partDefinition);\n        default:\n            return;\n    }\n}\nexports.PartToParentClass = PartToParentClass;\nfunction CameraParentClass(studio, cameraName) {\n    return `${studio.toLowerCase()}_parent_camera_${cameraName.toLowerCase()}`;\n}\nexports.CameraParentClass = CameraParentClass;\nfunction EksternParentClass(studio, source) {\n    return `${studio.toLowerCase()}_parent_ekstern_${source.toLowerCase()}`;\n}\nexports.EksternParentClass = EksternParentClass;\nfunction ServerParentClass(studio, clip) {\n    return `${studio.toLowerCase()}_parent_server_${clip.toLowerCase()}`;\n}\nexports.ServerParentClass = ServerParentClass;\nfunction EVSParentClass(studio, evs) {\n    return `${studio.toLowerCase()}_parent_evs_${evs.toLowerCase()}`;\n}\nexports.EVSParentClass = EVSParentClass;\nfunction DVEParentClass(studio, dve) {\n    return `${studio.toLowerCase()}_parent_dve_${dve.toLowerCase()}`;\n}\nexports.DVEParentClass = DVEParentClass;\nfunction TLFParentClass(studio, source) {\n    return `${studio.toLowerCase()}_parent_tlf_${source.toLowerCase()}`;\n}\nexports.TLFParentClass = TLFParentClass;\nfunction UnknownPartParentClass(studio, partDefinition) {\n    const firstCue = partDefinition.cues[0];\n    if (!firstCue) {\n        return;\n    }\n    switch (firstCue.type) {\n        case tv2_constants_1.CueType.DVE:\n            return DVEParentClass(studio, firstCue.template);\n        case tv2_constants_1.CueType.Ekstern:\n            return EksternParentClass(studio, firstCue.source);\n        case tv2_constants_1.CueType.Telefon:\n            return TLFParentClass(studio, firstCue.source);\n        default:\n            return;\n    }\n}\nexports.UnknownPartParentClass = UnknownPartParentClass;\nfunction AddParentClass(partDefinition) {\n    return !!partDefinition.cues.filter(cue => (cue.type === tv2_constants_1.CueType.Grafik || cue.type === tv2_constants_1.CueType.MOS) &&\n        cue.end &&\n        cue.end.infiniteMode &&\n        cue.end.infiniteMode === 'B').length;\n}\nexports.AddParentClass = AddParentClass;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nfunction CreatePartInvalid(ingestPart, externalIdSuffix) {\n    const part = tv2_common_1.literal({\n        externalId: ingestPart.externalId + (externalIdSuffix ? `_${externalIdSuffix}` : ''),\n        title: ingestPart.rawType || 'Unknown',\n        metaData: {},\n        typeVariant: '',\n        invalid: true,\n        autoNext: true\n    });\n    return {\n        part,\n        adLibPieces: [],\n        pieces: []\n    };\n}\nexports.CreatePartInvalid = CreatePartInvalid;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nfunction MakeContentServer(file, mediaPlayerSessionId, partDefinition, config, sourceLayers, adLib, offtubeOptions) {\n    return tv2_common_1.literal({\n        studioLabel: '',\n        fileName: file,\n        path: `${config.studio.ClipSourcePath}\\\\${file}${config.studio.ClipFileExtension}`,\n        mediaFlowIds: [config.studio.MediaFlowId],\n        firstWords: '',\n        lastWords: '',\n        timelineObjects: tv2_common_1.literal([\n            tv2_common_1.literal(Object.assign(Object.assign({ id: '', enable: {\n                    while: '1'\n                }, priority: 1, layer: sourceLayers.Caspar.ClipPending, content: Object.assign({ deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG, type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA, file, loop: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? false : adLib, noStarttime: true }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? { playing: false } : {})) }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? {\n                keyframes: [\n                    {\n                        id: '',\n                        enable: {\n                            while: `.${offtubeOptions.enabler}`\n                        },\n                        content: {\n                            inPoint: 0,\n                            playing: true\n                        }\n                    }\n                ]\n            }\n                : {})), { metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                }, classes: [...(tv2_common_1.AddParentClass(partDefinition) && !adLib ? [tv2_common_1.ServerParentClass('studio0', file)] : [])] })),\n            tv2_common_1.literal({\n                id: '',\n                enable: getServerAdlibEnable(!!adLib, config.studio.CasparPrerollDuration, offtubeOptions),\n                priority: 1,\n                layer: sourceLayers.ATEM.MEPGM,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                    me: {\n                        input: undefined,\n                        transition: partDefinition.transition\n                            ? tv2_common_1.TransitionFromString(partDefinition.transition.style)\n                            : timeline_state_resolver_types_1.AtemTransitionStyle.CUT,\n                        transitionSettings: tv2_common_1.TransitionSettings(partDefinition)\n                    }\n                },\n                metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                },\n                classes: [...(adLib ? ['adlib_deparent'] : [])]\n            }),\n            tv2_common_1.literal({\n                id: '',\n                enable: getServerAdlibEnable(!!adLib, 0, offtubeOptions),\n                priority: 1,\n                layer: sourceLayers.Sisyfos.ClipPending,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    // isPgm: voiceOver ? 2 : 1\n                    isPgm: 1\n                },\n                metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                },\n                classes: []\n            }),\n            ...(sourceLayers.STICKY_LAYERS\n                ? sourceLayers.STICKY_LAYERS.map(layer => {\n                    return tv2_common_1.literal({\n                        id: '',\n                        enable: getServerAdlibEnable(!!adLib, 0, offtubeOptions),\n                        priority: 1,\n                        layer,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                            isPgm: 0\n                        },\n                        metaData: {\n                            sisyfosPersistLevel: true\n                        }\n                    });\n                })\n                : [])\n        ])\n    });\n}\nexports.MakeContentServer = MakeContentServer;\nfunction getServerAdlibEnable(adlib, startTime, offtubeOptions) {\n    if (adlib && (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube)) {\n        return {\n            while: `.${offtubeOptions.enabler}`\n        };\n    }\n    return {\n        start: startTime\n    };\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(70), exports);\ntslib_1.__exportStar(__webpack_require__(71), exports);\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BlueprintManifestType;\n(function (BlueprintManifestType) {\n    BlueprintManifestType[\"SYSTEM\"] = \"system\";\n    BlueprintManifestType[\"STUDIO\"] = \"studio\";\n    BlueprintManifestType[\"SHOWSTYLE\"] = \"showstyle\";\n})(BlueprintManifestType = exports.BlueprintManifestType || (exports.BlueprintManifestType = {}));\n//# sourceMappingURL=api.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IBlueprintAsRunLogEventContent;\n(function (IBlueprintAsRunLogEventContent) {\n    IBlueprintAsRunLogEventContent[\"STARTEDPLAYBACK\"] = \"startedPlayback\";\n    IBlueprintAsRunLogEventContent[\"STOPPEDPLAYBACK\"] = \"stoppedPlayback\";\n})(IBlueprintAsRunLogEventContent = exports.IBlueprintAsRunLogEventContent || (exports.IBlueprintAsRunLogEventContent = {}));\n//# sourceMappingURL=asRunLog.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConfigManifestEntryType;\n(function (ConfigManifestEntryType) {\n    ConfigManifestEntryType[\"STRING\"] = \"string\";\n    ConfigManifestEntryType[\"NUMBER\"] = \"number\";\n    ConfigManifestEntryType[\"BOOLEAN\"] = \"boolean\";\n    ConfigManifestEntryType[\"ENUM\"] = \"enum\";\n    ConfigManifestEntryType[\"TABLE\"] = \"table\";\n    ConfigManifestEntryType[\"SELECT\"] = \"select\";\n    ConfigManifestEntryType[\"SOURCE_LAYERS\"] = \"source_layers\";\n    ConfigManifestEntryType[\"LAYER_MAPPINGS\"] = \"layer_mappings\";\n})(ConfigManifestEntryType = exports.ConfigManifestEntryType || (exports.ConfigManifestEntryType = {}));\n//# sourceMappingURL=config.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** The type of the source layer, used to enable specific functions for special-type layers */\nvar SourceLayerType;\n(function (SourceLayerType) {\n    SourceLayerType[SourceLayerType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    SourceLayerType[SourceLayerType[\"CAMERA\"] = 1] = \"CAMERA\";\n    SourceLayerType[SourceLayerType[\"VT\"] = 2] = \"VT\";\n    SourceLayerType[SourceLayerType[\"REMOTE\"] = 3] = \"REMOTE\";\n    SourceLayerType[SourceLayerType[\"SCRIPT\"] = 4] = \"SCRIPT\";\n    SourceLayerType[SourceLayerType[\"GRAPHICS\"] = 5] = \"GRAPHICS\";\n    SourceLayerType[SourceLayerType[\"SPLITS\"] = 6] = \"SPLITS\";\n    SourceLayerType[SourceLayerType[\"AUDIO\"] = 7] = \"AUDIO\";\n    SourceLayerType[SourceLayerType[\"CAMERA_MOVEMENT\"] = 8] = \"CAMERA_MOVEMENT\";\n    SourceLayerType[SourceLayerType[\"METADATA\"] = 9] = \"METADATA\";\n    SourceLayerType[SourceLayerType[\"LOWER_THIRD\"] = 10] = \"LOWER_THIRD\";\n    SourceLayerType[SourceLayerType[\"LIVE_SPEAK\"] = 11] = \"LIVE_SPEAK\";\n    SourceLayerType[SourceLayerType[\"MIC\"] = 12] = \"MIC\";\n    SourceLayerType[SourceLayerType[\"TRANSITION\"] = 13] = \"TRANSITION\";\n    SourceLayerType[SourceLayerType[\"LIGHTS\"] = 14] = \"LIGHTS\";\n})(SourceLayerType = exports.SourceLayerType || (exports.SourceLayerType = {}));\n//# sourceMappingURL=content.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IBlueprintExternalMessageQueueType;\n(function (IBlueprintExternalMessageQueueType) {\n    IBlueprintExternalMessageQueueType[\"SOAP\"] = \"soap\";\n    IBlueprintExternalMessageQueueType[\"SLACK\"] = \"slack\";\n    IBlueprintExternalMessageQueueType[\"RABBIT_MQ\"] = \"rabbitmq\";\n})(IBlueprintExternalMessageQueueType = exports.IBlueprintExternalMessageQueueType || (exports.IBlueprintExternalMessageQueueType = {}));\n//# sourceMappingURL=message.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PartHoldMode;\n(function (PartHoldMode) {\n    PartHoldMode[PartHoldMode[\"NONE\"] = 0] = \"NONE\";\n    PartHoldMode[PartHoldMode[\"FROM\"] = 1] = \"FROM\";\n    PartHoldMode[PartHoldMode[\"TO\"] = 2] = \"TO\";\n})(PartHoldMode = exports.PartHoldMode || (exports.PartHoldMode = {}));\nvar PieceLifespan;\n(function (PieceLifespan) {\n    PieceLifespan[PieceLifespan[\"Normal\"] = 0] = \"Normal\";\n    PieceLifespan[PieceLifespan[\"OutOnNextPart\"] = 1] = \"OutOnNextPart\";\n    PieceLifespan[PieceLifespan[\"OutOnNextSegment\"] = 2] = \"OutOnNextSegment\";\n    PieceLifespan[PieceLifespan[\"Infinite\"] = 3] = \"Infinite\";\n})(PieceLifespan = exports.PieceLifespan || (exports.PieceLifespan = {}));\n//# sourceMappingURL=rundown.js.map\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LookaheadMode;\n(function (LookaheadMode) {\n    LookaheadMode[LookaheadMode[\"NONE\"] = 0] = \"NONE\";\n    LookaheadMode[LookaheadMode[\"PRELOAD\"] = 1] = \"PRELOAD\";\n    LookaheadMode[LookaheadMode[\"RETAIN\"] = 2] = \"RETAIN\";\n    LookaheadMode[LookaheadMode[\"WHEN_CLEAR\"] = 3] = \"WHEN_CLEAR\";\n})(LookaheadMode = exports.LookaheadMode || (exports.LookaheadMode = {}));\n//# sourceMappingURL=studio.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nexports.Timeline = timeline_state_resolver_types_1.Timeline;\nvar PlayoutTimelinePrefixes;\n(function (PlayoutTimelinePrefixes) {\n    PlayoutTimelinePrefixes[\"PART_GROUP_PREFIX\"] = \"part_group_\";\n    PlayoutTimelinePrefixes[\"PART_GROUP_FIRST_ITEM_PREFIX\"] = \"part_group_firstobject_\";\n    PlayoutTimelinePrefixes[\"PIECE_GROUP_PREFIX\"] = \"piece_group_\";\n    PlayoutTimelinePrefixes[\"PIECE_GROUP_FIRST_ITEM_PREFIX\"] = \"piece_group_firstobject_\";\n})(PlayoutTimelinePrefixes = exports.PlayoutTimelinePrefixes || (exports.PlayoutTimelinePrefixes = {}));\nfunction getPartGroupId(part) {\n    if (typeof part === 'string') {\n        return PlayoutTimelinePrefixes.PART_GROUP_PREFIX + part;\n    }\n    return PlayoutTimelinePrefixes.PART_GROUP_PREFIX + part._id;\n}\nexports.getPartGroupId = getPartGroupId;\nfunction getPieceGroupId(piece) {\n    if (typeof piece === 'string') {\n        return PlayoutTimelinePrefixes.PIECE_GROUP_PREFIX + piece;\n    }\n    return PlayoutTimelinePrefixes.PIECE_GROUP_PREFIX + piece._id;\n}\nexports.getPieceGroupId = getPieceGroupId;\nfunction getPartFirstObjectId(part) {\n    if (typeof part === 'string') {\n        return PlayoutTimelinePrefixes.PART_GROUP_FIRST_ITEM_PREFIX + part;\n    }\n    return PlayoutTimelinePrefixes.PART_GROUP_FIRST_ITEM_PREFIX + part._id;\n}\nexports.getPartFirstObjectId = getPartFirstObjectId;\nfunction getPieceFirstObjectId(piece) {\n    if (typeof piece === 'string') {\n        return PlayoutTimelinePrefixes.PIECE_GROUP_FIRST_ITEM_PREFIX + piece;\n    }\n    return PlayoutTimelinePrefixes.PIECE_GROUP_FIRST_ITEM_PREFIX + piece._id;\n}\nexports.getPieceFirstObjectId = getPieceFirstObjectId;\nvar TimelineObjHoldMode;\n(function (TimelineObjHoldMode) {\n    TimelineObjHoldMode[TimelineObjHoldMode[\"NORMAL\"] = 0] = \"NORMAL\";\n    TimelineObjHoldMode[TimelineObjHoldMode[\"ONLY\"] = 1] = \"ONLY\";\n    TimelineObjHoldMode[TimelineObjHoldMode[\"EXCEPT\"] = 2] = \"EXCEPT\"; // Only use when not in HOLD\n})(TimelineObjHoldMode = exports.TimelineObjHoldMode || (exports.TimelineObjHoldMode = {}));\n//# sourceMappingURL=timeline.js.map\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingAtemType;\n(function (MappingAtemType) {\n    MappingAtemType[MappingAtemType[\"MixEffect\"] = 0] = \"MixEffect\";\n    MappingAtemType[MappingAtemType[\"DownStreamKeyer\"] = 1] = \"DownStreamKeyer\";\n    MappingAtemType[MappingAtemType[\"SuperSourceBox\"] = 2] = \"SuperSourceBox\";\n    MappingAtemType[MappingAtemType[\"Auxilliary\"] = 3] = \"Auxilliary\";\n    MappingAtemType[MappingAtemType[\"MediaPlayer\"] = 4] = \"MediaPlayer\";\n    MappingAtemType[MappingAtemType[\"SuperSourceProperties\"] = 5] = \"SuperSourceProperties\";\n    MappingAtemType[MappingAtemType[\"AudioChannel\"] = 6] = \"AudioChannel\";\n    MappingAtemType[MappingAtemType[\"MacroPlayer\"] = 7] = \"MacroPlayer\";\n})(MappingAtemType = exports.MappingAtemType || (exports.MappingAtemType = {}));\nvar TimelineContentTypeAtem;\n(function (TimelineContentTypeAtem) {\n    TimelineContentTypeAtem[\"ME\"] = \"me\";\n    TimelineContentTypeAtem[\"DSK\"] = \"dsk\";\n    TimelineContentTypeAtem[\"AUX\"] = \"aux\";\n    TimelineContentTypeAtem[\"SSRC\"] = \"ssrc\";\n    TimelineContentTypeAtem[\"SSRCPROPS\"] = \"ssrcProps\";\n    TimelineContentTypeAtem[\"MEDIAPLAYER\"] = \"mp\";\n    TimelineContentTypeAtem[\"AUDIOCHANNEL\"] = \"audioChan\";\n    TimelineContentTypeAtem[\"MACROPLAYER\"] = \"macroPlayer\";\n})(TimelineContentTypeAtem = exports.TimelineContentTypeAtem || (exports.TimelineContentTypeAtem = {}));\nvar AtemTransitionStyle;\n(function (AtemTransitionStyle) {\n    AtemTransitionStyle[AtemTransitionStyle[\"MIX\"] = 0] = \"MIX\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DIP\"] = 1] = \"DIP\";\n    AtemTransitionStyle[AtemTransitionStyle[\"WIPE\"] = 2] = \"WIPE\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DVE\"] = 3] = \"DVE\";\n    AtemTransitionStyle[AtemTransitionStyle[\"STING\"] = 4] = \"STING\";\n    AtemTransitionStyle[AtemTransitionStyle[\"CUT\"] = 5] = \"CUT\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DUMMY\"] = 6] = \"DUMMY\";\n})(AtemTransitionStyle = exports.AtemTransitionStyle || (exports.AtemTransitionStyle = {}));\n//# sourceMappingURL=atem.js.map\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeCasparCg;\n(function (TimelineContentTypeCasparCg) {\n    TimelineContentTypeCasparCg[\"MEDIA\"] = \"media\";\n    TimelineContentTypeCasparCg[\"IP\"] = \"ip\";\n    TimelineContentTypeCasparCg[\"INPUT\"] = \"input\";\n    TimelineContentTypeCasparCg[\"TEMPLATE\"] = \"template\";\n    TimelineContentTypeCasparCg[\"HTMLPAGE\"] = \"htmlpage\";\n    TimelineContentTypeCasparCg[\"ROUTE\"] = \"route\";\n    TimelineContentTypeCasparCg[\"RECORD\"] = \"record\";\n})(TimelineContentTypeCasparCg = exports.TimelineContentTypeCasparCg || (exports.TimelineContentTypeCasparCg = {}));\n// Note: enums copied from casparcg-connection\nvar Transition;\n(function (Transition) {\n    Transition[\"MIX\"] = \"MIX\";\n    Transition[\"CUT\"] = \"CUT\";\n    Transition[\"PUSH\"] = \"PUSH\";\n    Transition[\"WIPE\"] = \"WIPE\";\n    Transition[\"SLIDE\"] = \"SLIDE\";\n    Transition[\"STING\"] = \"STING\";\n})(Transition = exports.Transition || (exports.Transition = {}));\nvar Ease;\n(function (Ease) {\n    Ease[\"LINEAR\"] = \"LINEAR\";\n    Ease[\"NONE\"] = \"NONE\";\n    Ease[\"EASEINBACK\"] = \"EASEINBACK\";\n    Ease[\"EASEINBOUNCE\"] = \"EASEINBOUNCE\";\n    Ease[\"EASEINCIRC\"] = \"EASEINCIRC\";\n    Ease[\"EASEINCUBIC\"] = \"EASEINCUBIC\";\n    Ease[\"EASEINELASTIC\"] = \"EASEINELASTIC\";\n    Ease[\"EASEINEXPO\"] = \"EASEINEXPO\";\n    Ease[\"EASEINOUTBACK\"] = \"EASEINOUTBACK\";\n    Ease[\"EASEINOUTBOUNCE\"] = \"EASEINOUTBOUNCE\";\n    Ease[\"EASEINOUTCIRC\"] = \"EASEINOUTCIRC\";\n    Ease[\"EASEINOUTCUBIC\"] = \"EASEINOUTCUBIC\";\n    Ease[\"EASEINOUTELASTIC\"] = \"EASEINOUTELASTIC\";\n    Ease[\"EASEINOUTEXPO\"] = \"EASEINOUTEXPO\";\n    Ease[\"EASEINOUTQUAD\"] = \"EASEINOUTQUAD\";\n    Ease[\"EASEINOUTQUART\"] = \"EASEINOUTQUART\";\n    Ease[\"EASEINOUTQUINT\"] = \"EASEINOUTQUINT\";\n    Ease[\"EASEINOUTSINE\"] = \"EASEINOUTSINE\";\n    Ease[\"EASEINQUAD\"] = \"EASEINQUAD\";\n    Ease[\"EASEINQUART\"] = \"EASEINQUART\";\n    Ease[\"EASEINQUINT\"] = \"EASEINQUINT\";\n    Ease[\"EASEINSINE\"] = \"EASEINSINE\";\n    Ease[\"EASELINEAR\"] = \"EASELINEAR\";\n    Ease[\"EASENONE\"] = \"EASENONE\";\n    Ease[\"EASEOUTBACK\"] = \"EASEOUTBACK\";\n    Ease[\"EASEOUTBOUNCE\"] = \"EASEOUTBOUNCE\";\n    Ease[\"EASEOUTCIRC\"] = \"EASEOUTCIRC\";\n    Ease[\"EASEOUTCUBIC\"] = \"EASEOUTCUBIC\";\n    Ease[\"EASEOUTELASTIC\"] = \"EASEOUTELASTIC\";\n    Ease[\"EASEOUTEXPO\"] = \"EASEOUTEXPO\";\n    Ease[\"EASEOUTINBACK\"] = \"EASEOUTINBACK\";\n    Ease[\"EASEOUTINBOUNCE\"] = \"EASEOUTINBOUNCE\";\n    Ease[\"EASEOUTINCIRC\"] = \"EASEOUTINCIRC\";\n    Ease[\"EASEOUTINCUBIC\"] = \"EASEOUTINCUBIC\";\n    Ease[\"EASEOUTINELASTIC\"] = \"EASEOUTINELASTIC\";\n    Ease[\"EASEOUTINEXPO\"] = \"EASEOUTINEXPO\";\n    Ease[\"EASEOUTINQUAD\"] = \"EASEOUTINQUAD\";\n    Ease[\"EASEOUTINQUART\"] = \"EASEOUTINQUART\";\n    Ease[\"EASEOUTINQUINT\"] = \"EASEOUTINQUINT\";\n    Ease[\"EASEOUTINSINE\"] = \"EASEOUTINSINE\";\n    Ease[\"EASEOUTQUAD\"] = \"EASEOUTQUAD\";\n    Ease[\"EASEOUTQUART\"] = \"EASEOUTQUART\";\n    Ease[\"EASEOUTQUINT\"] = \"EASEOUTQUINT\";\n    Ease[\"EASEOUTSINE\"] = \"EASEOUTSINE\";\n    Ease[\"IN_BACK\"] = \"IN_BACK\";\n    Ease[\"IN_BOUNCE\"] = \"IN_BOUNCE\";\n    Ease[\"IN_CIRC\"] = \"IN_CIRC\";\n    Ease[\"IN_CUBIC\"] = \"IN_CUBIC\";\n    Ease[\"IN_ELASTIC\"] = \"IN_ELASTIC\";\n    Ease[\"IN_EXPO\"] = \"IN_EXPO\";\n    Ease[\"IN_OUT_BACK\"] = \"IN_OUT_BACK\";\n    Ease[\"IN_OUT_BOUNCE\"] = \"IN_OUT_BOUNCE\";\n    Ease[\"IN_OUT_CIRC\"] = \"IN_OUT_CIRC\";\n    Ease[\"IN_OUT_CUBIC\"] = \"IN_OUT_CUBIC\";\n    Ease[\"IN_OUT_ELASTIC\"] = \"IN_OUT_ELASTIC\";\n    Ease[\"IN_OUT_EXPO\"] = \"IN_OUT_EXPO\";\n    Ease[\"IN_OUT_QUAD\"] = \"IN_OUT_QUAD\";\n    Ease[\"IN_OUT_QUART\"] = \"IN_OUT_QUART\";\n    Ease[\"IN_OUT_QUINT\"] = \"IN_OUT_QUINT\";\n    Ease[\"IN_OUT_SINE\"] = \"IN_OUT_SINE\";\n    Ease[\"IN_QUAD\"] = \"IN_QUAD\";\n    Ease[\"IN_QUART\"] = \"IN_QUART\";\n    Ease[\"IN_QUINT\"] = \"IN_QUINT\";\n    Ease[\"IN_SINE\"] = \"IN_SINE\";\n    Ease[\"OUT_BACK\"] = \"OUT_BACK\";\n    Ease[\"OUT_BOUNCE\"] = \"OUT_BOUNCE\";\n    Ease[\"OUT_CIRC\"] = \"OUT_CIRC\";\n    Ease[\"OUT_CUBIC\"] = \"OUT_CUBIC\";\n    Ease[\"OUT_ELASTIC\"] = \"OUT_ELASTIC\";\n    Ease[\"OUT_EXPO\"] = \"OUT_EXPO\";\n    Ease[\"OUT_IN_BACK\"] = \"OUT_IN_BACK\";\n    Ease[\"OUT_IN_BOUNCE\"] = \"OUT_IN_BOUNCE\";\n    Ease[\"OUT_IN_CIRC\"] = \"OUT_IN_CIRC\";\n    Ease[\"OUT_IN_CUBIC\"] = \"OUT_IN_CUBIC\";\n    Ease[\"OUT_IN_ELASTIC\"] = \"OUT_IN_ELASTIC\";\n    Ease[\"OUT_IN_EXPO\"] = \"OUT_IN_EXPO\";\n    Ease[\"OUT_IN_QUAD\"] = \"OUT_IN_QUAD\";\n    Ease[\"OUT_IN_QUART\"] = \"OUT_IN_QUART\";\n    Ease[\"OUT_IN_QUINT\"] = \"OUT_IN_QUINT\";\n    Ease[\"OUT_IN_SINE\"] = \"OUT_IN_SINE\";\n    Ease[\"OUT_QUAD\"] = \"OUT_QUAD\";\n    Ease[\"OUT_QUART\"] = \"OUT_QUART\";\n    Ease[\"OUT_QUINT\"] = \"OUT_QUINT\";\n})(Ease = exports.Ease || (exports.Ease = {}));\nvar Direction;\n(function (Direction) {\n    Direction[\"LEFT\"] = \"LEFT\";\n    Direction[\"RIGHT\"] = \"RIGHT\";\n})(Direction = exports.Direction || (exports.Direction = {}));\nvar BlendMode;\n(function (BlendMode) {\n    BlendMode[\"ADD\"] = \"ADD\";\n    BlendMode[\"AVERAGE\"] = \"AVERAGE\";\n    BlendMode[\"COLOR\"] = \"COLOR\";\n    BlendMode[\"COLOR_BURN\"] = \"COLOR_BURN\";\n    BlendMode[\"COLOR_DODGE\"] = \"COLOR_DODGE\";\n    BlendMode[\"CONTRAST\"] = \"CONTRAST\";\n    BlendMode[\"DARKEN\"] = \"DARKEN\";\n    BlendMode[\"DIFFERENCE\"] = \"DIFFERENCE\";\n    BlendMode[\"EXCLUSION\"] = \"EXCLUSION\";\n    BlendMode[\"GLOW\"] = \"GLOW\";\n    BlendMode[\"HARD_LIGHT\"] = \"HARD_LIGHT\";\n    BlendMode[\"HARD_MIX\"] = \"HARD_MIX\";\n    BlendMode[\"LIGHTEN\"] = \"LIGHTEN\";\n    BlendMode[\"LINEAR_BURN\"] = \"LINEAR_BURN\";\n    BlendMode[\"LINEAR_DODGE\"] = \"LINEAR_DODGE\";\n    BlendMode[\"LINEAR_LIGHT\"] = \"LINEAR_LIGHT\";\n    BlendMode[\"LUMINOSITY\"] = \"LUMINOSITY\";\n    BlendMode[\"MULTIPLY\"] = \"MULTIPLY\";\n    BlendMode[\"NEGATION\"] = \"NEGATION\";\n    BlendMode[\"NORMAL\"] = \"NORMAL\";\n    BlendMode[\"OVERLAY\"] = \"OVERLAY\";\n    BlendMode[\"PHOENIX\"] = \"PHOENIX\";\n    BlendMode[\"PIN_LIGHT\"] = \"PIN_LIGHT\";\n    BlendMode[\"REFLECT\"] = \"REFLECT\";\n    BlendMode[\"SATURATION\"] = \"SATURATION\";\n    BlendMode[\"SCREEN\"] = \"SCREEN\";\n    BlendMode[\"SOFT_LIGHT\"] = \"SOFT_LIGHT\";\n    BlendMode[\"SUBTRACT\"] = \"SUBTRACT\";\n    BlendMode[\"VIVID_LIGHT\"] = \"VIVID_LIGHT\";\n})(BlendMode = exports.BlendMode || (exports.BlendMode = {}));\nvar ChannelFormat;\n(function (ChannelFormat) {\n    ChannelFormat[\"PAL\"] = \"PAL\";\n    ChannelFormat[\"NTSC\"] = \"NTSC\";\n    ChannelFormat[\"SD_576P2500\"] = \"SD_576P2500\";\n    ChannelFormat[\"HD_720P2398\"] = \"HD_720P2398\";\n    ChannelFormat[\"HD_720P2400\"] = \"HD_720P2400\";\n    ChannelFormat[\"HD_720P2500\"] = \"HD_720P2500\";\n    ChannelFormat[\"HD_720P2997\"] = \"HD_720P2997\";\n    ChannelFormat[\"HD_720P3000\"] = \"HD_720P3000\";\n    ChannelFormat[\"HD_720P5000\"] = \"HD_720P5000\";\n    ChannelFormat[\"HD_720P5994\"] = \"HD_720P5994\";\n    ChannelFormat[\"HD_720P6000\"] = \"HD_720P6000\";\n    ChannelFormat[\"HD_1080I5000\"] = \"HD_1080I5000\";\n    ChannelFormat[\"HD_1080I5994\"] = \"HD_1080I5994\";\n    ChannelFormat[\"HD_1080I6000\"] = \"HD_1080I6000\";\n    ChannelFormat[\"HD_1080P2398\"] = \"HD_1080P2398\";\n    ChannelFormat[\"HD_1080P2400\"] = \"HD_1080P2400\";\n    ChannelFormat[\"HD_1080P2500\"] = \"HD_1080P2500\";\n    ChannelFormat[\"HD_1080P2997\"] = \"HD_1080P2997\";\n    ChannelFormat[\"HD_1080P3000\"] = \"HD_1080P3000\";\n    ChannelFormat[\"HD_1080P5000\"] = \"HD_1080P5000\";\n    ChannelFormat[\"HD_1080P5994\"] = \"HD_1080P5994\";\n    ChannelFormat[\"HD_1080P6000\"] = \"HD_1080P6000\";\n    ChannelFormat[\"DCI_1080P2398\"] = \"DCI_1080P2398\";\n    ChannelFormat[\"DCI_1080P2400\"] = \"DCI_1080P2400\";\n    ChannelFormat[\"DCI_1080P2500\"] = \"DCI_1080P2500\";\n    ChannelFormat[\"DCI_2160P2398\"] = \"DCI_2160P2398\";\n    ChannelFormat[\"DCI_2160P2400\"] = \"DCI_2160P2400\";\n    ChannelFormat[\"DCI_2160P2500\"] = \"DCI_2160P2500\";\n    ChannelFormat[\"UCH_2160P2400\"] = \"UCH_2160P2400\";\n    ChannelFormat[\"UHD_1556P2398\"] = \"UHD_1556P2398\";\n    ChannelFormat[\"UHD_1556P2400\"] = \"UHD_1556P2400\";\n    ChannelFormat[\"UHD_1556P2500\"] = \"UHD_1556P2500\";\n    ChannelFormat[\"UHD_2160P2398\"] = \"UHD_2160P2398\";\n    ChannelFormat[\"UHD_2160P2500\"] = \"UHD_2160P2500\";\n    ChannelFormat[\"UHD_2160P2997\"] = \"UHD_2160P2997\";\n    ChannelFormat[\"UHD_2160P3000\"] = \"UHD_2160P3000\";\n    ChannelFormat[\"UHD_2160P5000\"] = \"UHD_2160P5000\";\n    ChannelFormat[\"UHD_2160P5994\"] = \"UHD_2160P5994\";\n    ChannelFormat[\"INVALID\"] = \"INVALID\";\n})(ChannelFormat = exports.ChannelFormat || (exports.ChannelFormat = {}));\nvar Chroma;\n(function (Chroma) {\n    Chroma[\"BLUE\"] = \"BLUE\";\n    Chroma[\"GREEN\"] = \"GREEN\";\n    Chroma[\"NONE\"] = \"NONE\";\n})(Chroma = exports.Chroma || (exports.Chroma = {}));\n//# sourceMappingURL=casparcg.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeHTTP;\n(function (TimelineContentTypeHTTP) {\n    TimelineContentTypeHTTP[\"GET\"] = \"get\";\n    TimelineContentTypeHTTP[\"POST\"] = \"post\";\n    TimelineContentTypeHTTP[\"PUT\"] = \"put\";\n    TimelineContentTypeHTTP[\"DELETE\"] = \"delete\";\n})(TimelineContentTypeHTTP = exports.TimelineContentTypeHTTP || (exports.TimelineContentTypeHTTP = {}));\n//# sourceMappingURL=httpSend.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingHyperdeckType;\n(function (MappingHyperdeckType) {\n    MappingHyperdeckType[\"TRANSPORT\"] = \"transport\";\n})(MappingHyperdeckType = exports.MappingHyperdeckType || (exports.MappingHyperdeckType = {}));\nvar TimelineContentTypeHyperdeck;\n(function (TimelineContentTypeHyperdeck) {\n    TimelineContentTypeHyperdeck[\"TRANSPORT\"] = \"transport\";\n})(TimelineContentTypeHyperdeck = exports.TimelineContentTypeHyperdeck || (exports.TimelineContentTypeHyperdeck = {}));\n// Note: These are copied from hyperdeck-connection -----------\nvar TransportStatus;\n(function (TransportStatus) {\n    TransportStatus[\"PREVIEW\"] = \"preview\";\n    TransportStatus[\"STOPPED\"] = \"stopped\";\n    TransportStatus[\"PLAY\"] = \"play\";\n    TransportStatus[\"FORWARD\"] = \"forward\";\n    TransportStatus[\"REWIND\"] = \"rewind\";\n    TransportStatus[\"JOG\"] = \"jog\";\n    TransportStatus[\"SHUTTLE\"] = \"shuttle\";\n    TransportStatus[\"RECORD\"] = \"record\";\n})(TransportStatus = exports.TransportStatus || (exports.TransportStatus = {}));\nvar SlotId;\n(function (SlotId) {\n    SlotId[SlotId[\"ONE\"] = 1] = \"ONE\";\n    SlotId[SlotId[\"TWO\"] = 2] = \"TWO\";\n})(SlotId = exports.SlotId || (exports.SlotId = {}));\nvar SlotStatus;\n(function (SlotStatus) {\n    SlotStatus[\"EMPTY\"] = \"empty\";\n    SlotStatus[\"MOUNTING\"] = \"mounting\";\n    SlotStatus[\"ERROR\"] = \"error\";\n    SlotStatus[\"MOUNTED\"] = \"mounted\";\n})(SlotStatus = exports.SlotStatus || (exports.SlotStatus = {}));\nvar VideoFormat;\n(function (VideoFormat) {\n    VideoFormat[\"NTSC\"] = \"NTSC\";\n    VideoFormat[\"PAL\"] = \"PAL\";\n    VideoFormat[\"NTSCp\"] = \"NTSCp\";\n    VideoFormat[\"PALp\"] = \"PALp\";\n    VideoFormat[\"_720p50\"] = \"720p50\";\n    VideoFormat[\"_720p5994\"] = \"720p5994\";\n    VideoFormat[\"_720p60\"] = \"720p60\";\n    VideoFormat[\"_1080p23976\"] = \"1080p23976\";\n    VideoFormat[\"_1080p24\"] = \"1080p24\";\n    VideoFormat[\"_1080p25\"] = \"1080p25\";\n    VideoFormat[\"_1080p2997\"] = \"1080p2997\";\n    VideoFormat[\"_1080p30\"] = \"1080p30\";\n    VideoFormat[\"_1080i50\"] = \"1080i50\";\n    VideoFormat[\"_1080i5994\"] = \"1080i5994\";\n    VideoFormat[\"_1080i60\"] = \"1080i60\";\n    VideoFormat[\"_4Kp23976\"] = \"4Kp23976\";\n    VideoFormat[\"_4Kp24\"] = \"4Kp24\";\n    VideoFormat[\"_4Kp25\"] = \"4Kp25\";\n    VideoFormat[\"_4Kp2997\"] = \"4Kp2997\";\n    VideoFormat[\"_4Kp30\"] = \"4Kp30\";\n    VideoFormat[\"_4Kp50\"] = \"4Kp50\";\n    VideoFormat[\"_4Kp5994\"] = \"4Kp5994\";\n    VideoFormat[\"_4Kp60\"] = \"4Kp60\";\n})(VideoFormat = exports.VideoFormat || (exports.VideoFormat = {}));\n//# sourceMappingURL=hyperdeck.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingLawoType;\n(function (MappingLawoType) {\n    MappingLawoType[\"SOURCE\"] = \"source\";\n    MappingLawoType[\"FULL_PATH\"] = \"fullpath\";\n    MappingLawoType[\"TRIGGER_VALUE\"] = \"triggerValue\";\n})(MappingLawoType = exports.MappingLawoType || (exports.MappingLawoType = {}));\nvar TimelineContentTypeLawo;\n(function (TimelineContentTypeLawo) {\n    TimelineContentTypeLawo[\"SOURCE\"] = \"lawosource\";\n    TimelineContentTypeLawo[\"EMBER_PROPERTY\"] = \"lawofullpathemberproperty\";\n    TimelineContentTypeLawo[\"TRIGGER_VALUE\"] = \"triggervalue\";\n})(TimelineContentTypeLawo = exports.TimelineContentTypeLawo || (exports.TimelineContentTypeLawo = {}));\nvar EmberTypes;\n(function (EmberTypes) {\n    EmberTypes[\"STRING\"] = \"string\";\n    EmberTypes[\"INTEGER\"] = \"integer\";\n    EmberTypes[\"REAL\"] = \"real\";\n    EmberTypes[\"BOOLEAN\"] = \"bool\";\n})(EmberTypes = exports.EmberTypes || (exports.EmberTypes = {}));\n//# sourceMappingURL=lawo.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeOSC;\n(function (TimelineContentTypeOSC) {\n    TimelineContentTypeOSC[\"OSC\"] = \"osc\";\n})(TimelineContentTypeOSC = exports.TimelineContentTypeOSC || (exports.TimelineContentTypeOSC = {}));\nvar OSCValueType;\n(function (OSCValueType) {\n    OSCValueType[\"INT\"] = \"i\";\n    OSCValueType[\"FLOAT\"] = \"f\";\n    OSCValueType[\"STRING\"] = \"s\";\n    OSCValueType[\"BLOB\"] = \"b\";\n})(OSCValueType = exports.OSCValueType || (exports.OSCValueType = {}));\n//# sourceMappingURL=osc.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypePharos;\n(function (TimelineContentTypePharos) {\n    TimelineContentTypePharos[\"SCENE\"] = \"scene\";\n    TimelineContentTypePharos[\"TIMELINE\"] = \"timeline\";\n})(TimelineContentTypePharos = exports.TimelineContentTypePharos || (exports.TimelineContentTypePharos = {}));\n//# sourceMappingURL=pharos.js.map\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingPanasonicPtzType;\n(function (MappingPanasonicPtzType) {\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"PRESET_SPEED\"] = 0] = \"PRESET_SPEED\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"PRESET\"] = 1] = \"PRESET\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"ZOOM\"] = 2] = \"ZOOM\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"ZOOM_SPEED\"] = 3] = \"ZOOM_SPEED\";\n})(MappingPanasonicPtzType = exports.MappingPanasonicPtzType || (exports.MappingPanasonicPtzType = {}));\nvar TimelineContentTypePanasonicPtz;\n(function (TimelineContentTypePanasonicPtz) {\n    TimelineContentTypePanasonicPtz[\"PRESET\"] = \"presetMem\";\n    TimelineContentTypePanasonicPtz[\"SPEED\"] = \"presetSpeed\";\n    TimelineContentTypePanasonicPtz[\"ZOOM_SPEED\"] = \"zoomSpeed\";\n    TimelineContentTypePanasonicPtz[\"ZOOM\"] = \"zoom\";\n})(TimelineContentTypePanasonicPtz = exports.TimelineContentTypePanasonicPtz || (exports.TimelineContentTypePanasonicPtz = {}));\n//# sourceMappingURL=panasonicPTZ.js.map\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeSisyfos;\n(function (TimelineContentTypeSisyfos) {\n    TimelineContentTypeSisyfos[\"SISYFOS\"] = \"sisyfos\";\n})(TimelineContentTypeSisyfos = exports.TimelineContentTypeSisyfos || (exports.TimelineContentTypeSisyfos = {}));\nvar Commands;\n(function (Commands) {\n    Commands[\"TOGGLE_PGM\"] = \"togglePgm\";\n    Commands[\"TOGGLE_PST\"] = \"togglePst\";\n    Commands[\"SET_FADER\"] = \"setFader\";\n    Commands[\"CLEAR_PST_ROW\"] = \"clearPstRow\";\n    Commands[\"LABEL\"] = \"label\";\n    Commands[\"TAKE\"] = \"take\";\n    Commands[\"VISIBLE\"] = \"visible\";\n    Commands[\"RESYNC\"] = \"resync\";\n})(Commands = exports.Commands || (exports.Commands = {}));\n// ------------------------------------------------------\n//# sourceMappingURL=sisyfos.js.map\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QuantelControlMode;\n(function (QuantelControlMode) {\n    /** Try to avoid freeze-frames when playing */\n    QuantelControlMode[\"QUALITY\"] = \"quality\";\n    /** Try to play as fast as possible */\n    QuantelControlMode[\"SPEED\"] = \"speed\";\n})(QuantelControlMode = exports.QuantelControlMode || (exports.QuantelControlMode = {}));\nvar QuantelTransitionType;\n(function (QuantelTransitionType) {\n    QuantelTransitionType[QuantelTransitionType[\"DELAY\"] = 0] = \"DELAY\";\n})(QuantelTransitionType = exports.QuantelTransitionType || (exports.QuantelTransitionType = {}));\n//# sourceMappingURL=quantel.js.map\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeTcp;\n(function (TimelineContentTypeTcp) {\n    TimelineContentTypeTcp[\"GET\"] = \"get\";\n    TimelineContentTypeTcp[\"POST\"] = \"post\";\n    TimelineContentTypeTcp[\"PUT\"] = \"put\";\n    TimelineContentTypeTcp[\"DELETE\"] = \"delete\";\n})(TimelineContentTypeTcp = exports.TimelineContentTypeTcp || (exports.TimelineContentTypeTcp = {}));\n//# sourceMappingURL=tcpSend.js.map\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeVizMSE;\n(function (TimelineContentTypeVizMSE) {\n    TimelineContentTypeVizMSE[\"ELEMENT_INTERNAL\"] = \"element_internal\";\n    TimelineContentTypeVizMSE[\"ELEMENT_PILOT\"] = \"element_pilot\";\n    TimelineContentTypeVizMSE[\"CONTINUE\"] = \"continue\";\n    TimelineContentTypeVizMSE[\"LOAD_ALL_ELEMENTS\"] = \"load_all_elements\";\n    TimelineContentTypeVizMSE[\"CLEAR_ALL_ELEMENTS\"] = \"clear_all_elements\";\n})(TimelineContentTypeVizMSE = exports.TimelineContentTypeVizMSE || (exports.TimelineContentTypeVizMSE = {}));\nvar VIZMSETransitionType;\n(function (VIZMSETransitionType) {\n    VIZMSETransitionType[VIZMSETransitionType[\"DELAY\"] = 0] = \"DELAY\";\n})(VIZMSETransitionType = exports.VIZMSETransitionType || (exports.VIZMSETransitionType = {}));\n//# sourceMappingURL=vizMSE.js.map\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeSingularLive;\n(function (TimelineContentTypeSingularLive) {\n    TimelineContentTypeSingularLive[\"COMPOSITION\"] = \"composition\";\n})(TimelineContentTypeSingularLive = exports.TimelineContentTypeSingularLive || (exports.TimelineContentTypeSingularLive = {}));\n//# sourceMappingURL=singularLive.js.map\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Note: These types are copies from superfly-timeline\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Enums ------------------------------------------------------------\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"START\"] = 0] = \"START\";\n    EventType[EventType[\"END\"] = 1] = \"END\";\n    EventType[EventType[\"KEYFRAME\"] = 2] = \"KEYFRAME\";\n})(EventType = exports.EventType || (exports.EventType = {}));\n//# sourceMappingURL=superfly-timeline.js.map\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\nconst _ = __webpack_require__(3);\nvar iterateDeeplyEnum;\n(function (iterateDeeplyEnum) {\n    iterateDeeplyEnum[\"CONTINUE\"] = \"$continue\";\n})(iterateDeeplyEnum = exports.iterateDeeplyEnum || (exports.iterateDeeplyEnum = {}));\n/**\n * Iterates deeply through object or array\n * @param obj the object or array to iterate through\n * @param iteratee function to apply on every attribute\n */\nfunction iterateDeeply(obj, iteratee, key) {\n    const newValue = iteratee(obj, key);\n    if (newValue === iterateDeeplyEnum.CONTINUE) {\n        // Continue iterate deeper if possible\n        if (_.isObject(obj)) {\n            // object or array\n            _.each(obj, (v, k) => {\n                obj[k] = iterateDeeply(v, iteratee, k);\n            });\n        }\n        else {\n            // don't change anything\n        }\n        return obj;\n    }\n    else {\n        return newValue;\n    }\n}\nexports.iterateDeeply = iterateDeeply;\n/**\n * Iterates deeply through object or array, using an asynchronous iteratee\n * @param obj the object or array to iterate through\n * @param iteratee function to apply on every attribute\n */\nfunction iterateDeeplyAsync(obj, iteratee, key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const newValue = yield iteratee(obj, key);\n        if (newValue === iterateDeeplyEnum.CONTINUE) {\n            // Continue iterate deeper if possible\n            if (_.isObject(obj)) {\n                // object or array\n                yield Promise.all(_.map(obj, (v, k) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                    obj[k] = yield iterateDeeplyAsync(v, iteratee, k);\n                })));\n            }\n            else {\n                // don't change anything\n            }\n            return obj;\n        }\n        else {\n            return newValue;\n        }\n    });\n}\nexports.iterateDeeplyAsync = iterateDeeplyAsync;\n//# sourceMappingURL=util.js.map\n\n/***/ }),\n/* 40 */,\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst FRAME_TIME = 1000 / 25; // TODO: This should be pulled from config.\nfunction CreateTiming(cue) {\n    if (cue.adlib) {\n        return CreateTimingAdLib(cue);\n    }\n    else {\n        return CreateTimingEnable(cue);\n    }\n}\nexports.CreateTiming = CreateTiming;\nfunction CreateTimingEnable(cue) {\n    const result = {\n        enable: {},\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal\n    };\n    if (cue.start) {\n        ;\n        result.enable.start = CalculateTime(cue.start);\n    }\n    else {\n        ;\n        result.enable.start = 0;\n    }\n    if (cue.end) {\n        if (cue.end.infiniteMode) {\n            result.infiniteMode = InfiniteMode(cue.end.infiniteMode, tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal);\n        }\n        else {\n            const end = CalculateTime(cue.end);\n            result.enable.duration = end\n                ? result.enable.start\n                    ? end - Number(result.enable.start)\n                    : end\n                : undefined;\n        }\n    }\n    else {\n        result.infiniteMode = tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart;\n    }\n    return result;\n}\nexports.CreateTimingEnable = CreateTimingEnable;\nfunction CreateTimingAdLib(cue) {\n    const result = {\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        expectedDuration: 0\n    };\n    if (cue.end) {\n        if (cue.end.infiniteMode) {\n            result.infiniteMode = InfiniteMode(cue.end.infiniteMode, tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart);\n        }\n        else {\n            result.expectedDuration = CalculateTime(cue.end);\n        }\n    }\n    return result;\n}\nexports.CreateTimingAdLib = CreateTimingAdLib;\nfunction InfiniteMode(mode, defaultLifespan) {\n    switch (mode) {\n        case 'B':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart;\n        case 'S':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment;\n        case 'O':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite;\n    }\n    return defaultLifespan;\n}\nexports.InfiniteMode = InfiniteMode;\nfunction CalculateTime(time) {\n    if (time.infiniteMode) {\n        return;\n    }\n    let result = 0;\n    if (time.seconds) {\n        result += time.seconds * 1000;\n    }\n    if (time.frames) {\n        result += time.frames * FRAME_TIME;\n    }\n    return result;\n}\nexports.CalculateTime = CalculateTime;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(43), exports);\ntslib_1.__exportStar(__webpack_require__(46), exports);\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nfunction TransformCuesIntoShowstyle(config, partDefinition) {\n    let i = -1;\n    while (i + 1 < partDefinition.cues.length) {\n        i++;\n        const cue = partDefinition.cues[i];\n        if (cue.type === tv2_constants_1.CueType.TargetEngine && cue.data.engine && cue.data.engine.toUpperCase() !== 'OVL1') {\n            const conf = config.GFXTemplates.find(gfx => gfx.INewsName.toUpperCase() === cue.data.engine.toUpperCase() &&\n                gfx.INewsCode.toUpperCase() === cue.iNewsCommand.toUpperCase());\n            if (!conf) {\n                continue;\n            }\n            if (conf.VizTemplate.toUpperCase() === 'VCP') {\n                const nextCue = partDefinition.cues[i + 1];\n                if (!nextCue) {\n                    if (!cue.grafik) {\n                        continue;\n                    }\n                    cue.data.grafik = cue.grafik;\n                    delete cue.grafik;\n                    cue.data.engine = conf.VizDestination.trim();\n                    partDefinition.cues[i] = cue;\n                }\n                else {\n                    if (nextCue.type !== tv2_constants_1.CueType.MOS) {\n                        continue;\n                    }\n                    cue.data.grafik = nextCue;\n                    cue.data.engine = conf.VizDestination.trim();\n                    partDefinition.cues[i] = cue;\n                    i++;\n                    partDefinition.cues.splice(i, 1);\n                }\n            }\n            else {\n                const gfxGue = {\n                    type: tv2_constants_1.CueType.Grafik,\n                    template: conf.VizTemplate.toUpperCase(),\n                    cue: `${cue.iNewsCommand}=${cue.data.engine}`,\n                    textFields: [],\n                    iNewsCommand: cue.iNewsCommand\n                };\n                cue.data.engine = conf.VizDestination.trim();\n                cue.data.grafik = gfxGue;\n                partDefinition.cues[i] = cue;\n            }\n        }\n    }\n    return partDefinition;\n}\nexports.TransformCuesIntoShowstyle = TransformCuesIntoShowstyle;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NoteType;\n(function (NoteType) {\n    NoteType[NoteType[\"WARNING\"] = 1] = \"WARNING\";\n    NoteType[NoteType[\"ERROR\"] = 2] = \"ERROR\";\n})(NoteType = exports.NoteType || (exports.NoteType = {}));\nvar MediaPlayerClaimType;\n(function (MediaPlayerClaimType) {\n    MediaPlayerClaimType[MediaPlayerClaimType[\"Preloaded\"] = 0] = \"Preloaded\";\n    MediaPlayerClaimType[MediaPlayerClaimType[\"Active\"] = 1] = \"Active\";\n})(MediaPlayerClaimType = exports.MediaPlayerClaimType || (exports.MediaPlayerClaimType = {}));\nvar CueType;\n(function (CueType) {\n    CueType[CueType[\"Unknown\"] = 0] = \"Unknown\";\n    CueType[CueType[\"Grafik\"] = 1] = \"Grafik\";\n    CueType[CueType[\"MOS\"] = 2] = \"MOS\";\n    CueType[CueType[\"Ekstern\"] = 3] = \"Ekstern\";\n    CueType[CueType[\"DVE\"] = 4] = \"DVE\";\n    CueType[CueType[\"Telefon\"] = 5] = \"Telefon\";\n    CueType[CueType[\"VIZ\"] = 6] = \"VIZ\";\n    CueType[CueType[\"Mic\"] = 7] = \"Mic\";\n    CueType[CueType[\"AdLib\"] = 8] = \"AdLib\";\n    CueType[CueType[\"LYD\"] = 9] = \"LYD\";\n    CueType[CueType[\"Jingle\"] = 10] = \"Jingle\";\n    CueType[CueType[\"Design\"] = 11] = \"Design\";\n    CueType[CueType[\"Profile\"] = 12] = \"Profile\";\n    CueType[CueType[\"TargetEngine\"] = 13] = \"TargetEngine\";\n    CueType[CueType[\"ClearGrafiks\"] = 14] = \"ClearGrafiks\";\n})(CueType = exports.CueType || (exports.CueType = {}));\nvar Enablers;\n(function (Enablers) {\n    Enablers[\"OFFTUBE_ENABLE_SERVER\"] = \"offtube_enable_server\";\n    Enablers[\"OFFTUBE_ENABLE_FULL\"] = \"offtube_enable_full\";\n    Enablers[\"OFFTUBE_ENABLE_DVE\"] = \"offtube_enable_dve\";\n})(Enablers = exports.Enablers || (exports.Enablers = {}));\nvar AdlibTags;\n(function (AdlibTags) {\n    AdlibTags[\"OFFTUBE_ADLIB_SERVER\"] = \"offtube_adlib_server\";\n    AdlibTags[\"OFFTUBE_100pc_SERVER\"] = \"offtube_adlib_100pc_server\";\n    AdlibTags[\"OFFTUBE_SET_CAM_NEXT\"] = \"offtube_set_cam_next\";\n    AdlibTags[\"OFFTUBE_SET_REMOTE_NEXT\"] = \"offtube_set_remote_next\";\n    AdlibTags[\"OFFTUBE_SET_FULL_NEXT\"] = \"offtube_set_full_next\";\n    AdlibTags[\"OFFTUBE_SET_JINGLE_NEXT\"] = \"offtube_set_jingle_next\";\n    AdlibTags[\"OFFTUBE_SET_SERVER_NEXT\"] = \"offtube_set_server_next\";\n    AdlibTags[\"OFFTUBE_SET_DVE_NEXT\"] = \"offtube_set_dve_next\";\n    AdlibTags[\"ADLIB_FLOW_PRODUCER\"] = \"flow_producer\";\n})(AdlibTags = exports.AdlibTags || (exports.AdlibTags = {}));\nvar ControlClasses;\n(function (ControlClasses) {\n    ControlClasses[\"ShowIdentGraphic\"] = \"show_ident_graphic\";\n    ControlClasses[\"DVEOnAir\"] = \"dve_on_air\"; // DVE Part is on air\n})(ControlClasses = exports.ControlClasses || (exports.ControlClasses = {}));\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONSTANTS = {\n    DefaultClipFadeOut: 35 * 40 // 35 frames\n};\n// Note: This doesnt play nice with transitions, so if they are required, then auto cannot be used\nexports.MEDIA_PLAYER_AUTO = 'auto';\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(47), exports);\ntslib_1.__exportStar(__webpack_require__(13), exports);\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nconst postProcessDefinitions_1 = __webpack_require__(48);\nconst ParseCue_1 = __webpack_require__(13);\nconst ACCEPTED_RED_TEXT = /\\b(KAM(?:\\d+)?|CAM(?:\\d+)?|KAMERA(?:\\d+)?|CAMERA(?:\\d+)?|SERVER|ATTACK|TEKNIK|GRAFIK|EVS ?\\d+(?:VOV?)?|VOV?|VOSB)+\\b/gi;\nfunction ParseBody(segmentId, segmentName, body, cues, fields, modified) {\n    const definitions = [];\n    let definition = initDefinition(fields, modified, segmentName);\n    // Handle intro segments, they have special behaviour.\n    if (segmentName === 'INTRO') {\n        ;\n        definition.type = \"INTRO\" /* INTRO */;\n        cues.forEach(cue => {\n            if (cue !== null) {\n                definition.cues.push(ParseCue_1.ParseCue(cue));\n            }\n        });\n        definition.rawType = 'INTRO';\n        definition.externalId = `${segmentId}-${definitions.length}`;\n        definition.segmentExternalId = segmentId;\n        definitions.push(definition);\n        definition = initDefinition(fields, modified, segmentName);\n        return definitions;\n    }\n    let lines = body.split('\\r\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = lines[i].replace(/<cc>(.*?)<\\/cc>/gi, '');\n    }\n    lines = lines.filter(line => line !== '<p></p>' && line !== '<p><pi></pi></p>');\n    lines.forEach(line => {\n        const type = line.match(/<pi>(.*?)<\\/pi>/i);\n        if (type) {\n            const typeStr = type[1]\n                .replace(/<[a-z]+>/gi, '')\n                .replace(/<\\/[a-z]+>/gi, '')\n                .replace(/[^\\w\\s]*\\B[^\\w\\s]/gi, '')\n                .replace(/[\\s]+/i, ' ')\n                .replace(/<tab>/i, '')\n                .replace(/<\\/tab>/i, '')\n                .trim();\n            if (typeStr && !!typeStr.match(ACCEPTED_RED_TEXT)) {\n                const inlineCues = line\n                    .replace(/<\\/?p>/g, '')\n                    .split(/<pi>(.*?)<\\/pi>/i)\n                    .filter(cue => cue !== '' && !cue.match(/<\\/a>/));\n                /** Hold any secondary cues in the form: `[] KAM 1` */\n                const secondaryInlineCues = [];\n                // Find all inline primaries appearing before the red text\n                let pos = 0;\n                let redTextFound = false;\n                while (pos < inlineCues.length && !redTextFound) {\n                    if (inlineCues[pos].match(ACCEPTED_RED_TEXT)) {\n                        redTextFound = true;\n                    }\n                    else {\n                        const parsedCues = getCuesInLine(inlineCues[pos], cues);\n                        parsedCues.forEach(cue => {\n                            // Create standalone parts for primary cues.\n                            if (isPrimaryCue(cue)) {\n                                if (shouldPushDefinition(definition)) {\n                                    definitions.push(definition);\n                                    definition = initDefinition(fields, modified, segmentName);\n                                }\n                                definition = makeDefinitionPrimaryCue(segmentId, definitions.length, '', fields, modified, segmentName, definition.type, cue);\n                                definition.cues.push(cue);\n                            }\n                            else {\n                                secondaryInlineCues.push(cue);\n                            }\n                            line = line.replace(inlineCues[pos], '');\n                        });\n                    }\n                    pos++;\n                }\n                line = line.replace(/<\\/a>/g, '');\n                if (shouldPushDefinition(definition)) {\n                    definitions.push(definition);\n                    definition = initDefinition(fields, modified, segmentName);\n                }\n                definition = makeDefinition(segmentId, definitions.length, typeStr, fields, modified, segmentName);\n                definition.cues.push(...secondaryInlineCues);\n            }\n            if (typeStr && typeStr.match(/SLUTORD/i)) {\n                if (definition.endWords) {\n                    definition.endWords += ` ${typeStr.replace(/^SLUTORD:? ?/i, '')}`;\n                }\n                else {\n                    definition.endWords = typeStr.replace(/^SLUTORD:? ?/i, '');\n                }\n            }\n        }\n        addScript(line, definition);\n        // Add any remaining cues in the line.\n        if (cueInLine(line)) {\n            const parsedCues = getCuesInLine(line, cues);\n            parsedCues.forEach(cue => {\n                if (isPrimaryCue(cue)) {\n                    let storedScript = '';\n                    if (shouldPushDefinition(definition)) {\n                        definitions.push(definition);\n                        definition = initDefinition(fields, modified, segmentName);\n                    }\n                    else if (definition.script.length) {\n                        storedScript = definition.script;\n                    }\n                    definition = makeDefinitionPrimaryCue(segmentId, definitions.length, definition.rawType, fields, modified, segmentName, definition.type, cue);\n                    definition.script = storedScript;\n                }\n                definition.cues.push(cue);\n            });\n        }\n    });\n    if (shouldPushDefinition(definition)) {\n        definitions.push(definition);\n        definition = initDefinition(fields, modified, segmentName);\n    }\n    // Flatten cues such as targetEngine.\n    definitions.forEach(partDefinition => {\n        if (partDefinition.cues.length) {\n            while (FindTargetPair(partDefinition)) {\n                // NO-OP\n            }\n        }\n    });\n    return postProcessDefinitions_1.PostProcessDefinitions(definitions, segmentId);\n}\nexports.ParseBody = ParseBody;\nfunction FindTargetPair(partDefinition) {\n    const index = partDefinition.cues.findIndex(cue => (cue.type === tv2_constants_1.CueType.TargetEngine && !cue.grafik && !!cue.data.engine.match(/FULL|WALL|OVL/i)) ||\n        (cue.type === tv2_constants_1.CueType.Telefon && !cue.vizObj));\n    if (index === -1) {\n        // No more targets\n        return false;\n    }\n    if (index + 1 < partDefinition.cues.length) {\n        if (partDefinition.cues[index + 1].type === tv2_constants_1.CueType.MOS) {\n            const mosCue = partDefinition.cues[index + 1];\n            if (partDefinition.cues[index].type === tv2_constants_1.CueType.TargetEngine) {\n                const targetCue = partDefinition.cues[index];\n                targetCue.grafik = mosCue;\n                partDefinition.cues[index] = targetCue;\n            }\n            else {\n                const targetCue = partDefinition.cues[index];\n                targetCue.vizObj = mosCue;\n                partDefinition.cues[index] = targetCue;\n            }\n            partDefinition.cues.splice(index + 1, 1);\n            return true;\n        }\n        else {\n            // Target with no grafik\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexports.FindTargetPair = FindTargetPair;\n/** Creates an initial part definition. */\nfunction initDefinition(fields, modified, segmentName) {\n    return {\n        externalId: '',\n        type: \"Unknown\" /* Unknown */,\n        rawType: '',\n        variant: {},\n        cues: [],\n        script: '',\n        fields,\n        modified,\n        storyName: segmentName,\n        segmentExternalId: ''\n    };\n}\n/** Returns true if there is a cue in the given line. */\nfunction cueInLine(line) {\n    return !!line.match(/<a idref=[\"|'](\\d+)[\"|']>/gi);\n}\n/** Returns all the cues in a given line as parsed cues. */\nfunction getCuesInLine(line, cues) {\n    if (!cueInLine(line)) {\n        return [];\n    }\n    const definitions = [];\n    const cue = line.match(/<a idref=[\"|'](\\d+)[\"|']>/gi);\n    cue === null || cue === void 0 ? void 0 : cue.forEach(c => {\n        const value = c.match(/<a idref=[\"|'](\\d+)[\"|']>/i);\n        if (value) {\n            const realCue = cues[Number(value[1])];\n            if (realCue) {\n                definitions.push(ParseCue_1.ParseCue(realCue));\n            }\n        }\n    });\n    return definitions;\n}\nfunction addScript(line, definition) {\n    const script = line.match(/<p>(.*)?<\\/p>/i);\n    if (script && script[1] && !script[1].match(/<pi>(.*?)<\\/pi>/i)) {\n        const trimscript = script[1]\n            .replace(/<.*?>/gi, '')\n            .replace('\\n\\r', '')\n            .trim();\n        if (trimscript) {\n            definition.script += `${trimscript}\\n`;\n        }\n    }\n}\nfunction isPrimaryCue(cue) {\n    return (cue.type === tv2_constants_1.CueType.Telefon ||\n        cue.type === tv2_constants_1.CueType.Ekstern ||\n        cue.type === tv2_constants_1.CueType.DVE ||\n        (cue.type === tv2_constants_1.CueType.TargetEngine && cue.data.engine.toUpperCase() === 'FULL'));\n}\nfunction shouldPushDefinition(definition) {\n    return ((definition.cues.length ||\n        (definition.script.length && definition.cues.length) ||\n        definition.type !== \"Unknown\" /* Unknown */) &&\n        !(definition.type === \"Grafik\" /* Grafik */ && definition.cues.length === 0));\n}\nfunction makeDefinitionPrimaryCue(segmentId, i, typeStr, fields, modified, storyName, partType, cue) {\n    const definition = makeDefinition(segmentId, i, typeStr, fields, modified, storyName);\n    switch (cue.type) {\n        case tv2_constants_1.CueType.Ekstern:\n            definition.type = \"Ekstern\" /* Ekstern */;\n            break;\n        case tv2_constants_1.CueType.DVE:\n            definition.type = \"DVE\" /* DVE */;\n            break;\n        case tv2_constants_1.CueType.Telefon:\n            definition.type = \"Telefon\" /* Telefon */;\n            break;\n        case tv2_constants_1.CueType.TargetEngine:\n            definition.type = partType;\n            break;\n        default:\n            // For log purposes + to catch future issues.\n            console.log(`Blueprint recieved non-primary cue when creating primary cue part. Likely a new primary cue type has been added recently.`);\n            break;\n    }\n    return definition;\n}\nfunction makeDefinition(segmentId, i, typeStr, fields, modified, storyName) {\n    const part = Object.assign(Object.assign({ externalId: `${segmentId}-${i}` }, extractTypeProperties(typeStr)), { rawType: typeStr\n            .replace(/effekt \\d+/gi, '')\n            .replace(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/gi, '')\n            .replace(/\\s+/gi, ' ')\n            .trim(), cues: [], script: '', fields,\n        modified,\n        storyName, segmentExternalId: '' });\n    return part;\n}\nfunction extractTypeProperties(typeStr) {\n    const effektMatch = typeStr.match(/effekt (\\d+)/i);\n    const transitionMatch = typeStr.match(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/i);\n    const definition = {};\n    if (effektMatch) {\n        definition.effekt = Number(effektMatch[1]);\n    }\n    if (transitionMatch) {\n        definition.transition = {\n            style: transitionMatch[1].toUpperCase(),\n            duration: transitionMatch[2] ? Number(transitionMatch[2]) : undefined\n        };\n    }\n    const tokens = typeStr\n        .replace(/effekt (\\d+)/gi, '')\n        .replace(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/gi, '')\n        .replace(/100%/g, '')\n        .replace(/\\s+/gi, ' ')\n        .trim()\n        .split(' ');\n    const firstToken = tokens[0];\n    if (firstToken.match(/KAM|CAM/i)) {\n        const adjacentKamNumber = tokens[0].match(/KAM(\\d+)/i);\n        return Object.assign({ type: \"Kam\" /* Kam */, variant: {\n                name: adjacentKamNumber ? adjacentKamNumber[1] : tokens[1]\n            } }, definition);\n    }\n    else if (firstToken.match(/SERVER/i) || firstToken.match(/ATTACK/i)) {\n        return Object.assign({ type: \"Server\" /* Server */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/TEKNIK/i)) {\n        return Object.assign({ type: \"Teknik\" /* Teknik */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/GRAFIK/i)) {\n        return Object.assign({ type: \"Grafik\" /* Grafik */, variant: {} }, definition);\n    }\n    else if (typeStr.match(/EVS ?\\d+(?:VOV?)?/i)) {\n        const strippedToken = typeStr.match(/EVS ?(\\d+)(VOV?)?/i);\n        return {\n            type: \"EVS\" /* EVS */,\n            variant: {\n                evs: strippedToken && strippedToken[1] ? strippedToken[1] : '1',\n                isVO: !!strippedToken && !!strippedToken[2]\n            }\n        };\n    }\n    else if (firstToken.match(/VOV?/i)) {\n        return Object.assign({ type: \"VO\" /* VO */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/VOSB/i)) {\n        return Object.assign({ type: \"VO\" /* VO */, variant: {} }, definition);\n    }\n    else {\n        return Object.assign({ type: \"Unknown\" /* Unknown */, variant: {} }, definition);\n    }\n}\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction PostProcessDefinitions(partDefinitions, segmentExternalId) {\n    const foundMap = {};\n    partDefinitions.forEach((part, i) => {\n        partDefinitions[i] = Object.assign(Object.assign({}, part), { externalId: getExternalId(segmentExternalId, part, foundMap), segmentExternalId });\n    });\n    return partDefinitions;\n}\nexports.PostProcessDefinitions = PostProcessDefinitions;\nfunction getExternalId(segmentId, partDefinition, foundMap) {\n    var _a, _b;\n    let id = `${segmentId}-${partDefinition.type.toString()}`;\n    switch (partDefinition.type) {\n        case \"EVS\" /* EVS */:\n            // Common pattern to see EV1 and EVS1VO in the same story. Changing from EVS1 to EVS1VO would mean a new part\n            id += `-${partDefinition.variant.evs}-${partDefinition.variant.isVO}`;\n            break;\n        case \"INTRO\" /* INTRO */:\n            // Intro must have a jingle cue, if it doesn't then padId will handle\n            const jingle = partDefinition.cues.find(cue => cue.type === tv2_constants_1.CueType.Jingle);\n            if (jingle) {\n                id += `-${jingle.clip}`;\n            }\n            break;\n        case \"Kam\" /* Kam */:\n            // No way of uniquely identifying, add some entropy from cues\n            id += `-${partDefinition.rawType}-${partDefinition.variant.name}-${partDefinition.cues.length}`;\n            break;\n        case \"Server\" /* Server */:\n            // Only one video Id per story. Changing the video Id will result in a new part\n            id += `-${partDefinition.fields.videoId ? partDefinition.fields.videoId : 'noId'}`;\n            break;\n        case \"Teknik\" /* Teknik */:\n            // Possibly an unused part type, not seen in production - only one example found in original test data\n            id += `-TEKNIK`;\n            break;\n        case \"VO\" /* VO */:\n            // Only one video Id per story. Changing the video Id will result in a new part\n            id += `-${partDefinition.fields.videoId}`;\n            break;\n        case \"Grafik\" /* Grafik */:\n        case \"DVE\" /* DVE */:\n        case \"Ekstern\" /* Ekstern */:\n        case \"Telefon\" /* Telefon */:\n        case \"Unknown\" /* Unknown */:\n            // Special cases based on cues\n            const firstCue = partDefinition.cues[0];\n            if (firstCue) {\n                switch (firstCue.type) {\n                    case tv2_constants_1.CueType.AdLib:\n                        id += `-${firstCue.variant}`;\n                        break;\n                    case tv2_constants_1.CueType.DVE:\n                        function countSources(sources) {\n                            let count = 0;\n                            for (const [key, value] of Object.entries(sources)) {\n                                if (key !== undefined && value !== undefined) {\n                                    count += 1;\n                                }\n                            }\n                            return count;\n                        }\n                        id += `-${firstCue.template}-${countSources(firstCue.sources)}`;\n                        break;\n                    case tv2_constants_1.CueType.Ekstern:\n                        // Identify based on live source. Changing live source will result in a new part\n                        id += `-${firstCue.source}`;\n                        break;\n                    case tv2_constants_1.CueType.Jingle:\n                        // Changing the jingle clip will result in a new part\n                        id += `-${firstCue.clip}`;\n                        break;\n                    case tv2_constants_1.CueType.TargetEngine:\n                        // Pair the engine will the graphic, common to see 'FULL' targeted multiple times in one story\n                        const end = ((_a = firstCue.grafik) === null || _a === void 0 ? void 0 : _a.type) === tv2_constants_1.CueType.Grafik\n                            ? firstCue.grafik.template\n                            : ((_b = firstCue.grafik) === null || _b === void 0 ? void 0 : _b.type) === tv2_constants_1.CueType.MOS\n                                ? firstCue.grafik.vcpid\n                                : '';\n                        id += `-${firstCue.data.engine}-${end}`;\n                        break;\n                    case tv2_constants_1.CueType.Telefon:\n                        id += `-${firstCue.source}`;\n                        break;\n                    case tv2_constants_1.CueType.MOS:\n                        id += `-${firstCue.vcpid}`;\n                        break;\n                }\n            }\n            else {\n                // This should never happen. Log it in case it ever occurs.\n                console.log(`Adding part with potentially bad Id: ${JSON.stringify(partDefinition)}`);\n                id += `UNKNOWN`;\n            }\n            break;\n        default:\n            tv2_common_1.assertUnreachable(partDefinition);\n    }\n    id = padId(id.trim().replace(/ /g, '-'), foundMap);\n    return id;\n    // return md5(`${id}`)\n}\nfunction padId(id, foundMap) {\n    if (Object.keys(foundMap).includes(id)) {\n        foundMap[id] += 1;\n        id = `${id}-${foundMap[id]}`;\n    }\n    else {\n        foundMap[id] = 1;\n    }\n    foundMap = foundMap;\n    return id;\n}\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nfunction parseMapStr(context, str, canBeStrings) {\n    str = str.trim();\n    const res = [];\n    const inputs = str.split(',');\n    inputs.forEach(i => {\n        if (i === '') {\n            return;\n        }\n        try {\n            const p = i.split(':');\n            if (p.length === 2) {\n                const ind = p[0];\n                const val = parseInt(p[1], 10);\n                if (!canBeStrings && !isNaN(val)) {\n                    res.push({ id: ind, val: parseInt(p[1], 10) });\n                    return;\n                }\n                else if (canBeStrings && p[1] !== undefined) {\n                    res.push({ id: ind, val: p[1] });\n                    return;\n                }\n            }\n        }\n        catch (e) {\n            // Ignore?\n        }\n        if (context) {\n            context.warning('Invalid input map chunk: ' + i);\n        }\n    });\n    return res;\n}\nexports.parseMapStr = parseMapStr;\nfunction ParseMappingTable(studioConfig, type) {\n    return studioConfig.map(conf => ({\n        type,\n        id: conf.SourceName,\n        port: conf.AtemSource,\n        sisyfosLayers: conf.SisyfosLayers\n    }));\n}\nexports.ParseMappingTable = ParseMappingTable;\nfunction FindSourceInfo(sources, type, id) {\n    id = id.replace(/\\s+/i, ' ').trim();\n    switch (type) {\n        case tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA:\n            const cameraName = id.match(/^(?:KAM|CAM)(?:ERA)? ?(.+)$/i);\n            if (cameraName === undefined || cameraName === null) {\n                return undefined;\n            }\n            return _.find(sources, s => s.type === type && s.id === cameraName[1].replace(/minus mic/i, '').trim());\n        case tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE:\n            const remoteName = id.match(/^(?:LIVE|SKYPE|EVS) ?(.+).*$/i);\n            if (!remoteName) {\n                return undefined;\n            }\n            if (id.match(/^LIVE/i)) {\n                return _.find(sources, s => s.type === type && s.id === remoteName[1]);\n            }\n            else if (id.match(/^EVS/i)) {\n                return _.find(sources, s => s.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE && s.id === `DP${remoteName[1]}`);\n            }\n            else {\n                // Skype\n                return _.find(sources, s => s.type === type && s.id === `S${remoteName[1]}`);\n            }\n        default:\n            return undefined;\n    }\n}\nexports.FindSourceInfo = FindSourceInfo;\nfunction FindSourceInfoStrict(context, sources, type, id) {\n    const source = FindSourceInfo(sources, type, id);\n    if (!source) {\n        context.warning(`Invalid source \"${id}\" of type \"${type}\"`);\n    }\n    return source;\n}\nexports.FindSourceInfoStrict = FindSourceInfoStrict;\nfunction FindSourceByName(context, sources, name) {\n    name = (name + '').toLowerCase();\n    if (name.indexOf('k') === 0 || name.indexOf('c') === 0) {\n        return FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, name);\n    }\n    // TODO: This will be different for TV 2\n    if (name.indexOf('r') === 0) {\n        return FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, name);\n    }\n    context.warning(`Invalid source name \"${name}\"`);\n    return undefined;\n}\nexports.FindSourceByName = FindSourceByName;\nfunction GetInputValue(context, sources, name) {\n    let input = 1000;\n    const source = FindSourceByName(context, sources, name);\n    if (source !== undefined) {\n        input = tv2_common_1.literal(source).port;\n    }\n    return input;\n}\nexports.GetInputValue = GetInputValue;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction PartTime(config, partDefinition, totalWords, defaultTime = true) {\n    const storyDuration = Number(partDefinition.fields.audioTime) * 1000 || 0;\n    const partTime = (partDefinition.script.replace(/[\\r\\n]/g, '').length / totalWords) * storyDuration;\n    return Math.min(partTime > 0 ? partTime : defaultTime ? config.studio.DefaultPartDuration : 0, config.studio.MaximumPartDuration || 10000);\n}\nexports.PartTime = PartTime;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PartContext2 {\n    constructor(baseContext, externalId) {\n        this.baseContext = baseContext;\n        this.externalId = externalId;\n        this.rundownId = baseContext.rundownId;\n        this.rundown = baseContext.rundown;\n    }\n    /** PartContext */\n    getRuntimeArguments() {\n        return this.baseContext.getRuntimeArguments(this.externalId) || {};\n    }\n    /** IShowStyleConfigContext */\n    getShowStyleConfig() {\n        return this.baseContext.getShowStyleConfig();\n    }\n    getShowStyleConfigRef(configKey) {\n        return this.baseContext.getShowStyleConfigRef(configKey);\n    }\n    /** IStudioContext */\n    getStudioMappings() {\n        return this.baseContext.getStudioMappings();\n    }\n    /** IStudioConfigContext */\n    getStudioConfig() {\n        return this.baseContext.getStudioConfig();\n    }\n    getStudioConfigRef(configKey) {\n        return this.baseContext.getStudioConfigRef(configKey);\n    }\n    /** NotesContext */\n    error(message) {\n        return this.baseContext.error(message);\n    }\n    warning(message) {\n        return this.baseContext.warning(message);\n    }\n    getNotes() {\n        return this.baseContext.getNotes();\n    }\n    /** ICommonContext */\n    getHashId(originString, originIsNotUnique) {\n        return this.baseContext.getHashId(`${this.externalId}_${originString}`, originIsNotUnique);\n    }\n    unhashId(hash) {\n        return this.baseContext.unhashId(hash);\n    }\n}\nexports.PartContext2 = PartContext2;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction getSegmentBase(context, ingestSegment, showStyleOptions) {\n    const segment = tv2_common_1.literal({\n        name: ingestSegment.name,\n        metaData: {},\n        identifier: ingestSegment.payload.iNewsStory.fields.pageNumber && ingestSegment.payload.iNewsStory.fields.pageNumber.trim()\n            ? ingestSegment.payload.iNewsStory.fields.pageNumber.trim()\n            : undefined\n    });\n    const config = showStyleOptions.parseConfig(context);\n    if (ingestSegment.payload.iNewsStory.meta.float === 'float') {\n        segment.isHidden = true;\n        return {\n            segment,\n            parts: []\n        };\n    }\n    else {\n        segment.isHidden = false;\n    }\n    let blueprintParts = [];\n    const parsedParts = tv2_common_1.ParseBody(ingestSegment.externalId, ingestSegment.name, ingestSegment.payload.iNewsStory.body, ingestSegment.payload.iNewsStory.cues, ingestSegment.payload.iNewsStory.fields, ingestSegment.payload.iNewsStory.fields.modifyDate);\n    const totalWords = parsedParts.reduce((prev, cur) => {\n        if (cur.type === \"Server\" /* Server */) {\n            return prev;\n        }\n        return prev + cur.script.replace(/\\n/g, '').replace(/\\r/g, '').length;\n    }, 0);\n    if (segment.name.trim().match(/^CONTINUITY$/i)) {\n        blueprintParts.push(showStyleOptions.CreatePartContinuity(config, ingestSegment));\n        return {\n            segment,\n            parts: blueprintParts\n        };\n    }\n    let serverParts = 0;\n    let jingleTime = 0;\n    let serverTime = 0;\n    for (const par of parsedParts) {\n        // Apply showstyle-specific transformations of cues.\n        const part = showStyleOptions.TransformCuesIntoShowstyle(config.showStyle, par);\n        const partContext = new tv2_common_1.PartContext2(context, part.externalId);\n        // Make orphaned secondary cues into adlibs\n        if (tv2_common_1.GetNextPartCue(part, -1) === -1 &&\n            part.type === \"Unknown\" /* Unknown */ &&\n            part.cues.filter(cue => cue.type === tv2_constants_1.CueType.Jingle || cue.type === tv2_constants_1.CueType.AdLib).length === 0) {\n            blueprintParts.push(showStyleOptions.CreatePartUnknown(partContext, config, part, totalWords, true));\n            continue;\n        }\n        switch (part.type) {\n            case \"INTRO\" /* INTRO */:\n                if (showStyleOptions.CreatePartIntro) {\n                    blueprintParts.push(showStyleOptions.CreatePartIntro(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Kam\" /* Kam */:\n                if (showStyleOptions.CreatePartKam) {\n                    blueprintParts.push(showStyleOptions.CreatePartKam(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Server\" /* Server */:\n                if (showStyleOptions.CreatePartServer) {\n                    blueprintParts.push(showStyleOptions.CreatePartServer(partContext, config, part, ingestSegment.externalId));\n                }\n                break;\n            case \"Teknik\" /* Teknik */:\n                if (showStyleOptions.CreatePartTeknik) {\n                    blueprintParts.push(showStyleOptions.CreatePartTeknik(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Grafik\" /* Grafik */:\n                if (showStyleOptions.CreatePartGrafik) {\n                    blueprintParts.push(showStyleOptions.CreatePartGrafik(partContext, config, part, totalWords));\n                }\n                break;\n            case \"VO\" /* VO */:\n                if (showStyleOptions.CreatePartVO) {\n                    blueprintParts.push(showStyleOptions.CreatePartVO(partContext, config, part, ingestSegment.externalId, totalWords, Number(ingestSegment.payload.iNewsStory.fields.totalTime)));\n                }\n                break;\n            case \"DVE\" /* DVE */:\n                if (showStyleOptions.CreatePartDVE) {\n                    blueprintParts.push(showStyleOptions.CreatePartDVE(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Ekstern\" /* Ekstern */:\n                if (showStyleOptions.CreatePartEkstern) {\n                    blueprintParts.push(showStyleOptions.CreatePartEkstern(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Telefon\" /* Telefon */:\n                if (showStyleOptions.CreatePartTelefon) {\n                    blueprintParts.push(showStyleOptions.CreatePartTelefon(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Unknown\" /* Unknown */:\n                if (part.cues.length) {\n                    blueprintParts.push(showStyleOptions.CreatePartUnknown(partContext, config, part, totalWords));\n                }\n                break;\n            case \"EVS\" /* EVS */:\n                if (showStyleOptions.CreatePartEVS) {\n                    blueprintParts.push(showStyleOptions.CreatePartEVS(partContext, config, part, totalWords));\n                }\n                break;\n            default:\n                tv2_common_1.assertUnreachable(part);\n                break;\n        }\n        if (part.type === \"Server\" /* Server */ ||\n            (part.type === \"VO\" /* VO */ && (Number(part.fields.tapeTime) > 0 || part.script.length))) {\n            if (blueprintParts[blueprintParts.length - 1]) {\n                serverTime += Number(blueprintParts[blueprintParts.length - 1].part.expectedDuration);\n                serverParts++;\n            }\n        }\n        if (part.cues.filter(cue => cue.type === tv2_constants_1.CueType.Jingle).length) {\n            if (blueprintParts[blueprintParts.length - 1]) {\n                const t = blueprintParts[blueprintParts.length - 1].part.expectedDuration;\n                if (t) {\n                    jingleTime += t;\n                }\n            }\n        }\n    }\n    let allocatedTime = blueprintParts.reduce((prev, cur) => {\n        return prev + (cur.part.expectedDuration ? cur.part.expectedDuration : 0);\n    }, 0) - jingleTime;\n    if (allocatedTime < 0) {\n        allocatedTime = 0;\n    }\n    blueprintParts.forEach(part => {\n        part.part.displayDurationGroup = ingestSegment.externalId;\n        if (!part.part.expectedDuration && Number(ingestSegment.payload.iNewsStory.fields.totalTime) > 0) {\n            part.part.expectedDuration =\n                (Number(ingestSegment.payload.iNewsStory.fields.totalTime) * 1000 - allocatedTime - serverTime || 0) /\n                    (blueprintParts.length - serverParts);\n            if (part.part.expectedDuration < 0) {\n                part.part.expectedDuration = 0;\n            }\n            if (part.part.expectedDuration > config.studio.MaximumPartDuration) {\n                part.part.expectedDuration = config.studio.MaximumPartDuration;\n            }\n        }\n    });\n    let extraTime = Number(ingestSegment.payload.iNewsStory.fields.totalTime) * 1000;\n    blueprintParts.forEach(part => {\n        if (part.part.expectedDuration === undefined || part.part.expectedDuration < 0) {\n            part.part.expectedDuration =\n                extraTime > config.studio.DefaultPartDuration\n                    ? extraTime > config.studio.MaximumPartDuration\n                        ? config.studio.MaximumPartDuration\n                        : extraTime\n                    : config.studio.DefaultPartDuration;\n        }\n        extraTime -= part.part.expectedDuration;\n        if (part.part.displayDuration && (part.part.displayDuration < 0 || isNaN(part.part.displayDuration))) {\n            part.part.displayDuration = 0;\n        }\n    });\n    if (blueprintParts.filter(part => part.pieces.length === 0 && part.adLibPieces.length).length === blueprintParts.length) {\n        segment.isHidden = true;\n    }\n    if (extraTime > 0 &&\n        // Filter out Jingle-only parts\n        (blueprintParts.length !== 1 ||\n            (blueprintParts[blueprintParts.length - 1] &&\n                !blueprintParts[blueprintParts.length - 1].pieces.some(piece => piece.sourceLayerId === 'studio0_jingle')))) {\n        const gapPart = tv2_common_1.literal({\n            part: tv2_common_1.literal({\n                externalId: `${ingestSegment.externalId}-GAP`,\n                title: `Adlib Gap`,\n                metaData: {},\n                typeVariant: '',\n                gap: true,\n                invalid: true,\n                expectedDuration: extraTime,\n                displayDurationGroup: ingestSegment.externalId\n            }),\n            pieces: [],\n            adLibPieces: []\n        });\n        blueprintParts.push(gapPart);\n    }\n    if (blueprintParts.filter(part => part.part.invalid === true).length === blueprintParts.length &&\n        ingestSegment.payload.iNewsStory.cues.length === 0) {\n        segment.isHidden = true;\n    }\n    blueprintParts = blueprintParts.map(part => {\n        const actualPart = part.part;\n        actualPart.metaData = tv2_common_1.literal(Object.assign(Object.assign({}, actualPart.metaData), { segmentExternalId: ingestSegment.externalId }));\n        if (actualPart.autoNext === undefined) {\n            actualPart.autoNext = false;\n        }\n        if (actualPart.invalid === undefined) {\n            actualPart.invalid = false;\n        }\n        return Object.assign(Object.assign({}, part), { part: actualPart });\n    });\n    return {\n        segment,\n        parts: blueprintParts\n    };\n}\nexports.getSegmentBase = getSegmentBase;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\n/**\n * Finds the index of the next primary cue.\n * @param partdefinition Part.\n * @param currentCue Index of current cue.\n */\nfunction GetNextPartCue(partdefinition, currentCue) {\n    const index = partdefinition.cues\n        .slice(currentCue + 1)\n        .findIndex(cue => cue.type === tv2_constants_1.CueType.DVE ||\n        cue.type === tv2_constants_1.CueType.Ekstern ||\n        (cue.type === tv2_constants_1.CueType.TargetEngine &&\n            cue.data.engine.match(/full/i) &&\n            partdefinition.type !== \"Grafik\" /* Grafik */) ||\n        cue.type === tv2_constants_1.CueType.Telefon);\n    if (index === -1) {\n        return -1;\n    }\n    return index + currentCue + 1;\n}\nexports.GetNextPartCue = GetNextPartCue;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nconst frameTime_1 = __webpack_require__(12);\n// TODO: OFFTUBE: find a way to do this for adlibs\nfunction GetJinglePartProperties(_context, config, part) {\n    if (part.cues) {\n        const cue = part.cues.find(c => c.type === tv2_constants_1.CueType.Jingle);\n        if (cue) {\n            const realBreaker = config.showStyle.BreakerConfig.find(conf => {\n                return conf.BreakerName && typeof conf.BreakerName === 'string'\n                    ? conf.BreakerName.toString()\n                        .trim()\n                        .toUpperCase() === cue.clip.toUpperCase()\n                    : false;\n            });\n            if (realBreaker) {\n                return {\n                    expectedDuration: frameTime_1.TimeFromFrames(Number(realBreaker.Duration)) -\n                        frameTime_1.TimeFromFrames(Number(realBreaker.EndAlpha)) -\n                        frameTime_1.TimeFromFrames(Number(realBreaker.StartAlpha)),\n                    prerollDuration: config.studio.CasparPrerollDuration + frameTime_1.TimeFromFrames(Number(realBreaker.StartAlpha)),\n                    autoNextOverlap: frameTime_1.TimeFromFrames(Number(realBreaker.EndAlpha)),\n                    disableOutTransition: false,\n                    autoNext: realBreaker.Autonext === true\n                };\n            }\n        }\n    }\n    return {};\n}\nexports.GetJinglePartProperties = GetJinglePartProperties;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction EvaluateCuesBase(showStyleOptions, context, config, pieces, adLibPieces, cues, partDefinition, options) {\n    var _a;\n    let adLibRank = 0;\n    for (const cue of cues) {\n        if (cue && !SkipCue(cue, options.selectedCueTypes, options.excludeAdlibs, options.adlibsOnly)) {\n            const shouldAdlib = /* config.showStyle.IsOfftube || */ options.adlib ? true : cue.adlib ? true : false;\n            switch (cue.type) {\n                case tv2_constants_1.CueType.Grafik:\n                    if (showStyleOptions.EvaluateCueGrafik) {\n                        showStyleOptions.EvaluateCueGrafik(config, context, pieces, adLibPieces, partDefinition.externalId, cue, 'OVL', shouldAdlib, partDefinition, false, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.MOS:\n                    if (showStyleOptions.EvaluateCueMOS) {\n                        showStyleOptions.EvaluateCueMOS(config, context, pieces, adLibPieces, partDefinition.externalId, cue, cue.type === tv2_constants_1.CueType.MOS && ((_a = cue.engine) === null || _a === void 0 ? void 0 : _a.match(/FULL/i)) ? 'FULL' : 'OVL', shouldAdlib, false, adLibRank, options.isGrafikPart);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Ekstern:\n                    if (showStyleOptions.EvaluateCueEkstern) {\n                        showStyleOptions.EvaluateCueEkstern(context, config, pieces, adLibPieces, partDefinition.externalId, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.DVE:\n                    if (showStyleOptions.EvaluateCueDVE) {\n                        showStyleOptions.EvaluateCueDVE(context, config, pieces, adLibPieces, partDefinition, cue, shouldAdlib, adLibRank);\n                        // Always make an adlib for DVEs\n                        if (!shouldAdlib) {\n                            showStyleOptions.EvaluateCueDVE(context, config, pieces, adLibPieces, partDefinition, cue, true, adLibRank);\n                        }\n                    }\n                    break;\n                case tv2_constants_1.CueType.AdLib:\n                    if (showStyleOptions.EvaluateCueAdLib) {\n                        showStyleOptions.EvaluateCueAdLib(context, config, adLibPieces, partDefinition.externalId, cue, partDefinition, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Telefon:\n                    if (showStyleOptions.EvaluateCueTelefon) {\n                        showStyleOptions.EvaluateCueTelefon(config, context, pieces, adLibPieces, partDefinition.externalId, partDefinition, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.VIZ:\n                    if (showStyleOptions.EvaluateCueVIZ) {\n                        showStyleOptions.EvaluateCueVIZ(context, config, pieces, adLibPieces, partDefinition.externalId, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Jingle:\n                    if (showStyleOptions.EvaluateCueJingle) {\n                        showStyleOptions.EvaluateCueJingle(context, config, pieces, adLibPieces, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.LYD:\n                    if (showStyleOptions.EvaluateCueLYD) {\n                        showStyleOptions.EvaluateCueLYD(context, config, pieces, adLibPieces, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Design:\n                    if (showStyleOptions.EvaluateCueDesign) {\n                        showStyleOptions.EvaluateCueDesign(config, context, pieces, adLibPieces, partDefinition.externalId, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.TargetEngine:\n                    if (showStyleOptions.EvaluateCueTargetEngine) {\n                        showStyleOptions.EvaluateCueTargetEngine(context, config, pieces, adLibPieces, partDefinition.externalId, partDefinition, cue, shouldAdlib);\n                    }\n                    break;\n                case tv2_constants_1.CueType.ClearGrafiks:\n                    if (showStyleOptions.EvaluateCueClearGrafiks) {\n                        showStyleOptions.EvaluateCueClearGrafiks(pieces, partDefinition.externalId, cue, shouldAdlib);\n                    }\n                    break;\n                default:\n                    if (cue.type !== tv2_constants_1.CueType.Unknown && cue.type !== tv2_constants_1.CueType.Profile && cue.type !== tv2_constants_1.CueType.Mic) {\n                        // TODO: Profile -> Change the profile as defined in VIZ device settings\n                        // TODO: Mic -> For the future\n                        // context.warning(`Unimplemented cue type: ${CueType[cue.type]}`)\n                        tv2_common_1.assertUnreachable(cue);\n                    }\n                    break;\n            }\n            if (shouldAdlib || cue.type === tv2_constants_1.CueType.AdLib || cue.type === tv2_constants_1.CueType.DVE) {\n                adLibRank++;\n            }\n        }\n    }\n    ;\n    [...pieces, ...adLibPieces].forEach(piece => {\n        if (piece.content && piece.content.timelineObjects) {\n            piece.content.timelineObjects.forEach((obj) => {\n                if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.VIZMSE) {\n                    if (!piece.expectedPlayoutItems) {\n                        piece.expectedPlayoutItems = [];\n                    }\n                    if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL) {\n                        const o = obj;\n                        const name = obj.content.templateName;\n                        if (name && name.length) {\n                            piece.expectedPlayoutItems.push({\n                                deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                content: {\n                                    templateName: obj.content.templateName,\n                                    templateData: obj.content.templateData,\n                                    channelName: o.content.channelName,\n                                    rundownId: ''\n                                }\n                            });\n                        }\n                    }\n                    else if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_PILOT) {\n                        const name = obj.content.templateVcpId;\n                        if (name !== undefined && name.toString().length) {\n                            piece.expectedPlayoutItems.push({\n                                deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                content: {\n                                    templateName: obj.content.templateVcpId,\n                                    channelName: obj.content.channelName,\n                                    rundownId: ''\n                                }\n                            });\n                        }\n                    }\n                    else if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.CLEAR_ALL_ELEMENTS) {\n                        piece.expectedPlayoutItems.push({\n                            deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                            content: {\n                                templateName: 'altud',\n                                channelName: 'OVL1',\n                                templateData: [],\n                                rundownId: ''\n                            }\n                        });\n                    }\n                }\n            });\n        }\n    });\n}\nexports.EvaluateCuesBase = EvaluateCuesBase;\nfunction SkipCue(cue, selectedCueTypes, excludeAdlibs, adlibsOnly) {\n    if (excludeAdlibs === true && cue.adlib) {\n        return true;\n    }\n    if (adlibsOnly === true && !cue.adlib) {\n        return true;\n    }\n    if (selectedCueTypes && !selectedCueTypes.includes(cue.type)) {\n        return true;\n    }\n    return false;\n}\nexports.SkipCue = SkipCue;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nfunction TransitionFromString(str) {\n    if (str.match(/MIX/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.MIX;\n    }\n    else if (str.match(/DIP/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.DIP;\n    }\n    else if (str.match(/WIPE/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.WIPE;\n    }\n    else if (str.match(/STING/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.STING;\n    }\n    return timeline_state_resolver_types_1.AtemTransitionStyle.CUT;\n}\nexports.TransitionFromString = TransitionFromString;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TransitionSettings(part) {\n    if (part.transition && part.transition.duration) {\n        if (part.transition.style === 'WIPE') {\n            return {\n                wipe: {\n                    rate: part.transition.duration\n                }\n            };\n        }\n        return {\n            mix: {\n                rate: part.transition.duration\n            }\n        };\n    }\n    return {};\n}\nexports.TransitionSettings = TransitionSettings;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(59), exports);\ntslib_1.__exportStar(__webpack_require__(60), exports);\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nfunction EvaluateVIZBase(context, config, pieces, adlibPieces, partId, parsedCue, useVizEngine, sourceLayers, adlib, rank) {\n    if (parsedCue.design.match(/^dve-triopage$/i)) {\n        const fileName = parsedCue.content.TRIOPAGE ? parsedCue.content.TRIOPAGE : parsedCue.content.GRAFIK;\n        const path = `dve/${fileName}`;\n        if (adlib) {\n            adlibPieces.push(tv2_common_1.literal({\n                _rank: rank || 0,\n                externalId: partId,\n                name: fileName,\n                outputLayerId: 'sec',\n                sourceLayerId: sourceLayers.SourceLayerDVEBackground,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                content: tv2_common_1.literal({\n                    fileName,\n                    path,\n                    timelineObjects: _.compact([\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: { start: 0 },\n                            priority: 100,\n                            layer: sourceLayers.CasparLLayerDVELoop,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: path,\n                                loop: true\n                            }\n                        })\n                    ])\n                })\n            }));\n        }\n        else {\n            pieces.push(tv2_common_1.literal({\n                _id: '',\n                externalId: partId,\n                name: fileName,\n                enable: {\n                    start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                },\n                outputLayerId: 'sec',\n                sourceLayerId: sourceLayers.SourceLayerDVEBackground,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                content: tv2_common_1.literal({\n                    fileName,\n                    path,\n                    timelineObjects: _.compact([\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: { start: 0 },\n                            priority: 100,\n                            layer: sourceLayers.CasparLLayerDVELoop,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: path,\n                                loop: true\n                            }\n                        })\n                    ])\n                })\n            }));\n        }\n    }\n    else if (parsedCue.rawType.match(/^VIZ=grafik-design$/i)) {\n        context.warning('VIZ=grafik-design is not supported for this showstyle');\n    }\n    else if (parsedCue.rawType.match(/^VIZ=full$/i)) {\n        if (useVizEngine) {\n            if (sourceLayers.SourceLayerVizFullIn1 && sourceLayers.AtemLLayerAtemAuxVizOvlIn1) {\n                if (!parsedCue.content.INP1) {\n                    context.warning(`No input provided by ${parsedCue.rawType}`);\n                    return;\n                }\n                let sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, parsedCue.content.INP1);\n                if (!sourceInfo) {\n                    sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, parsedCue.content.INP1);\n                    if (!sourceInfo) {\n                        context.warning(`Could not find source ${parsedCue.content.INP1}`);\n                        return;\n                    }\n                }\n                pieces.push(tv2_common_1.literal({\n                    _id: '',\n                    externalId: partId,\n                    enable: {\n                        start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                    },\n                    name: parsedCue.content.INP1 || '',\n                    outputLayerId: 'aux',\n                    sourceLayerId: sourceLayers.SourceLayerVizFullIn1,\n                    infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                    content: tv2_common_1.literal({\n                        studioLabel: '',\n                        switcherInput: sourceInfo.port,\n                        timelineObjects: _.compact([\n                            tv2_common_1.literal({\n                                id: '',\n                                enable: { start: 0 },\n                                priority: 100,\n                                layer: sourceLayers.AtemLLayerAtemAuxVizOvlIn1,\n                                content: {\n                                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                                    aux: {\n                                        input: sourceInfo.port\n                                    }\n                                }\n                            })\n                        ])\n                    })\n                }));\n            }\n            else {\n                context.warning(`Could not route source to Viz engine, this studio is not configured correctly.`);\n            }\n        }\n    }\n    else {\n        if (useVizEngine) {\n            if (sourceLayers.SourceLayerDesign && sourceLayers.GraphicLLayerGraphicLLayerDesign) {\n                const path = parsedCue.content.triopage ? parsedCue.content.triopage : parsedCue.content.GRAFIK;\n                if (!path || !path.length) {\n                    context.warning(`No valid template found for ${parsedCue.design}`);\n                    return;\n                }\n                if (adlib) {\n                    adlibPieces.push(tv2_common_1.literal({\n                        _rank: rank || 0,\n                        externalId: partId,\n                        name: path,\n                        outputLayerId: 'sec',\n                        sourceLayerId: sourceLayers.SourceLayerDesign,\n                        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                        content: tv2_common_1.literal({\n                            fileName: path,\n                            path,\n                            timelineObjects: _.compact([\n                                tv2_common_1.literal({\n                                    id: '',\n                                    enable: { start: 0 },\n                                    priority: 100,\n                                    layer: sourceLayers.GraphicLLayerGraphicLLayerDesign,\n                                    content: {\n                                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                                        templateName: path,\n                                        templateData: []\n                                    }\n                                })\n                            ])\n                        })\n                    }));\n                }\n                else {\n                    pieces.push(tv2_common_1.literal({\n                        _id: '',\n                        externalId: partId,\n                        name: path,\n                        enable: {\n                            start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                        },\n                        outputLayerId: 'sec',\n                        sourceLayerId: sourceLayers.SourceLayerDesign,\n                        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                        content: tv2_common_1.literal({\n                            fileName: path,\n                            path,\n                            timelineObjects: _.compact([\n                                tv2_common_1.literal({\n                                    id: '',\n                                    enable: { start: 0 },\n                                    priority: 100,\n                                    layer: sourceLayers.GraphicLLayerGraphicLLayerDesign,\n                                    content: {\n                                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                                        templateName: path,\n                                        templateData: []\n                                    }\n                                })\n                            ])\n                        })\n                    }));\n                }\n            }\n            else {\n                context.warning(`Could not create VIZ design, this studio is not configured correctly.`);\n            }\n        }\n    }\n}\nexports.EvaluateVIZBase = EvaluateVIZBase;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\n/**\n * Check that a template string is valid.\n * @param template User-provided template.\n */\nfunction TemplateIsValid(template) {\n    let boxesValid = false;\n    let indexValid = false;\n    let propertiesValid = false;\n    let borderValid = false;\n    if (Object.keys(template).indexOf('boxes') !== -1) {\n        if (_.isEqual(Object.keys(template.boxes), ['0', '1', '2', '3'])) {\n            boxesValid = true;\n        }\n    }\n    if (Object.keys(template).indexOf('index') !== -1) {\n        indexValid = true;\n    }\n    if (Object.keys(template).indexOf('properties') !== -1) {\n        if (_.isEqual(Object.keys(template.properties), [\n            'artFillSource',\n            'artCutSource',\n            'artOption',\n            'artPreMultiplied',\n            'artClip',\n            'artGain',\n            'artInvertKey'\n        ])) {\n            propertiesValid = true;\n        }\n    }\n    if (Object.keys(template).indexOf('border') !== -1) {\n        if (_.isEqual(Object.keys(template.border), [\n            'borderEnabled',\n            'borderBevel',\n            'borderOuterWidth',\n            'borderInnerWidth',\n            'borderOuterSoftness',\n            'borderInnerSoftness',\n            'borderBevelSoftness',\n            'borderBevelPosition',\n            'borderHue',\n            'borderSaturation',\n            'borderLuma',\n            'borderLightSourceDirection',\n            'borderLightSourceAltitude'\n        ])) {\n            borderValid = true;\n        }\n    }\n    if (boxesValid && indexValid && propertiesValid && borderValid) {\n        return true;\n    }\n    return false;\n}\nexports.TemplateIsValid = TemplateIsValid;\nfunction GetDVETemplate(config, templateName) {\n    return config ? config.find(c => c.DVEName.toString().toUpperCase() === templateName.toUpperCase()) : undefined;\n}\nexports.GetDVETemplate = GetDVETemplate;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(62), exports);\ntslib_1.__exportStar(__webpack_require__(14), exports);\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = __webpack_require__(8);\nconst invalid_1 = __webpack_require__(14);\nfunction CreatePartServerBase(context, config, partDefinition) {\n    if (partDefinition.fields === undefined) {\n        context.warning('Video ID not set!');\n        return { part: invalid_1.CreatePartInvalid(partDefinition), file: '', duration: 0, invalid: true };\n    }\n    if (!partDefinition.fields.videoId) {\n        context.warning('Video ID not set!');\n        return { part: invalid_1.CreatePartInvalid(partDefinition), file: '', duration: 0, invalid: true };\n    }\n    const file = partDefinition.fields.videoId;\n    const duration = Number(partDefinition.fields.tapeTime) * 1000 || 0;\n    const basePart = util_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.rawType,\n        metaData: {},\n        typeVariant: '',\n        expectedDuration: duration || 1000,\n        prerollDuration: config.studio.CasparPrerollDuration\n    });\n    return {\n        part: {\n            part: basePart,\n            adLibPieces: [],\n            pieces: []\n        },\n        file,\n        duration\n    };\n}\nexports.CreatePartServerBase = CreatePartServerBase;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(64), exports);\ntslib_1.__exportStar(__webpack_require__(65), exports);\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst server_1 = __webpack_require__(15);\nfunction CreateAdlibServer(config, rank, externalId, mediaPlayerSession, partDefinition, file, vo, sourceLayers, offtubeOptions) {\n    return tv2_common_1.literal(Object.assign(Object.assign({ _rank: rank, externalId }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? { tags: offtubeOptions.tagAsAdlib ? [tv2_constants_1.AdlibTags.OFFTUBE_ADLIB_SERVER] : [] } : {})), { name: `${partDefinition.storyName} Server: ${file}`, sourceLayerId: vo ? sourceLayers.PgmVoiceOver : sourceLayers.PgmServer, outputLayerId: 'pgm', infiniteMode: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment : tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart, toBeQueued: !(offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube), metaData: tv2_common_1.literal({\n            mediaPlayerSessions: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? [tv2_constants_1.MEDIA_PLAYER_AUTO] : [mediaPlayerSession]\n        }), content: server_1.MakeContentServer(file, (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? tv2_constants_1.MEDIA_PLAYER_AUTO : mediaPlayerSession, partDefinition, config, sourceLayers, true, offtubeOptions), adlibPreroll: config.studio.CasparPrerollDuration }));\n}\nexports.CreateAdlibServer = CreateAdlibServer;\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst PREVIEW_CHARACTERS = 30;\n// export function AddScript(part: PartDefinition, pieces: IBlueprintPiece[], duration: number, slutord: boolean) {\nfunction AddScript(part, pieces, duration, sourceLayerId) {\n    if (!pieces.length) {\n        return;\n    }\n    let script = part.script.replace(/^\\**/i, '').trim();\n    if (part.endWords) {\n        script = script.length ? `${script} SLUTORD: ${part.endWords}` : part.endWords;\n    }\n    if (script.length) {\n        const stripLength = Math.min(PREVIEW_CHARACTERS, script.length);\n        pieces.push(tv2_common_1.literal({\n            _id: '',\n            externalId: part.externalId,\n            name: script.slice(0, stripLength),\n            enable: {\n                start: 0,\n                duration\n            },\n            outputLayerId: 'manus',\n            sourceLayerId,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            content: tv2_common_1.literal({\n                firstWords: script.slice(0, stripLength),\n                lastWords: script\n                    .replace(/\\n/gi, ' ')\n                    .trim()\n                    .slice(script.length - stripLength)\n                    .trim(),\n                fullScript: script,\n                sourceDuration: duration,\n                lastModified: part.modified * 1000\n            })\n        }));\n    }\n}\nexports.AddScript = AddScript;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(15), exports);\ntslib_1.__exportStar(__webpack_require__(67), exports);\ntslib_1.__exportStar(__webpack_require__(68), exports);\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst _ = __webpack_require__(3);\nconst atem_1 = __webpack_require__(11);\nfunction MakeContentDVEBase(context, config, partDefinition, parsedCue, dveConfig, dveGeneratorOptions, addClass, adlib) {\n    if (!dveConfig) {\n        context.warning(`DVE ${parsedCue.template} is not configured`);\n        return {\n            valid: false,\n            content: {\n                boxSourceConfiguration: [],\n                timelineObjects: [],\n                dveConfiguration: []\n            },\n            stickyLayers: []\n        };\n    }\n    // console.log('boxmap1', boxMap)\n    // boxMap = boxMap.filter(map => map !== '')\n    // console.log('boxmap2', boxMap)\n    const graphicsTemplateContent = {};\n    parsedCue.labels.forEach((label, i) => {\n        graphicsTemplateContent[`locator${i + 1}`] = label;\n    });\n    return MakeContentDVE2(context, config, dveConfig, graphicsTemplateContent, parsedCue.sources, dveGeneratorOptions, addClass ? tv2_common_1.DVEParentClass('studio0', dveConfig.DVEName) : undefined, adlib, partDefinition);\n}\nexports.MakeContentDVEBase = MakeContentDVEBase;\nfunction MakeContentDVE2(context, config, dveConfig, graphicsTemplateContent, sources, dveGeneratorOptions, className, adlib, partDefinition, offtube) {\n    var _a;\n    const template = JSON.parse(dveConfig.DVEJSON);\n    const inputs = dveConfig.DVEInputs\n        ? dveConfig.DVEInputs.toString().split(';')\n        : '1:INP1;2:INP2;3:INP3;4:INP4'.split(';');\n    const boxMap = [];\n    const classes = [];\n    inputs.forEach(source => {\n        const sourceProps = source.split(':');\n        const fromCue = sourceProps[1];\n        const targetBox = Number(sourceProps[0]);\n        if (!fromCue || !targetBox || isNaN(targetBox)) {\n            context.warning(`Invalid DVE mapping: ${sourceProps}`);\n            return;\n        }\n        const sourceLayer = dveGeneratorOptions.boxLayers[fromCue];\n        classes.push(`${sourceLayer}_${dveGeneratorOptions.boxMappings[targetBox - 1]}`);\n        let usedServer = false;\n        if (sources) {\n            const prop = sources[fromCue];\n            if (prop === null || prop === void 0 ? void 0 : prop.match(/[K|C]AM(?:era)? ?.*/i)) {\n                const match = prop.match(/[K|C]AM(?:era)? ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `KAM ${match[1]}`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/LIVE ?.*/i)) {\n                const match = prop.match(/LIVE ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `LIVE ${match[1]}`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/full/i)) {\n                boxMap[targetBox - 1] = { source: `ENGINE FULL`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/EVS ?.*/i)) {\n                const match = prop.match(/EVS ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `EVS ${match[1]}`, sourceLayer };\n            }\n            else if (prop) {\n                if (partDefinition && partDefinition.fields.videoId && !usedServer) {\n                    boxMap[targetBox - 1] = { source: `SERVER ${partDefinition.fields.videoId}`, sourceLayer };\n                    usedServer = true;\n                }\n                else {\n                    boxMap[targetBox - 1] = { source: prop, sourceLayer };\n                }\n            }\n            else {\n                if (partDefinition && partDefinition.fields.videoId && !usedServer) {\n                    boxMap[targetBox - 1] = { source: `SERVER ${partDefinition.fields.videoId}`, sourceLayer };\n                    usedServer = true;\n                }\n                else {\n                    context.warning(`Missing mapping for ${targetBox}`);\n                    boxMap[targetBox - 1] = { source: '', sourceLayer };\n                }\n            }\n        }\n        else {\n            // Need something to keep the layout etc\n            boxMap[targetBox - 1] = { source: '', sourceLayer };\n        }\n    });\n    const boxes = _.map(template.boxes, box => (Object.assign(Object.assign({}, box), { source: config.studio.AtemSource.Default })));\n    const dveTimeline = [];\n    const boxSources = [];\n    const setBoxSource = (num, sourceInfo, mappingFrom) => {\n        if (boxes[num]) {\n            boxes[num].source = Number(sourceInfo.port);\n            boxSources.push(Object.assign(Object.assign({}, boxSource(sourceInfo, mappingFrom)), tv2_common_1.literal({\n                studioLabel: '',\n                switcherInput: Number(sourceInfo.port),\n                timelineObjects: []\n            })));\n        }\n    };\n    let valid = true;\n    let server = false;\n    const timelineStartObjId = `ssrc-${(_a = partDefinition === null || partDefinition === void 0 ? void 0 : partDefinition.externalId) !== null && _a !== void 0 ? _a : ''}-${template}`;\n    boxMap.forEach((mappingFrom, num) => {\n        if (mappingFrom === undefined || mappingFrom.source === '') {\n            if (sources) {\n                // If it is intentional there are no sources, then ignore\n                // TODO - should this warn?\n                context.warning(`Missing source type for DVE box: ${num + 1}`);\n                valid = false;\n            }\n        }\n        else {\n            const props = mappingFrom.source.split(' ');\n            const sourceType = props[0];\n            const sourceInput = props[1];\n            if (!sourceType || !sourceInput) {\n                context.warning(`Invalid DVE source: ${mappingFrom.source}`);\n                return;\n            }\n            const audioEnable = {\n                while: `!\\$${mappingFrom.sourceLayer}`\n                // while: `!.${ControlClasses.DVEBoxOverridePrefix + boxMappings[num]}`\n            }; // TODO - test\n            if (sourceType.match(/KAM/i)) {\n                const sourceInfoCam = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, mappingFrom.source);\n                if (sourceInfoCam === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoCam, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, mappingFrom.source, audioEnable));\n            }\n            else if (sourceType.match(/LIVE/i) || sourceType.match(/SKYPE/i)) {\n                const sourceInfoLive = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, mappingFrom.source);\n                if (sourceInfoLive === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoLive, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForEkstern(context, config.sources, mappingFrom.source, dveGeneratorOptions.dveTimelineGenerators.GetLayersForEkstern, audioEnable));\n            }\n            else if (sourceType.match(/EVS/i)) {\n                const sourceInfoDelayedPlayback = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, mappingFrom.source);\n                if (sourceInfoDelayedPlayback === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoDelayedPlayback, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, 'evs'));\n            }\n            else if (sourceType.match(/ENGINE/i)) {\n                if (sourceInput.match(/full/i)) {\n                    const sourceInfoFull = {\n                        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n                        id: 'full',\n                        port: config.studio.AtemSource.DSK1F\n                    };\n                    setBoxSource(num, sourceInfoFull, mappingFrom.source);\n                    dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, 'full'));\n                }\n                else {\n                    context.warning(`Unsupported engine for DVE: ${sourceInput}`);\n                }\n            }\n            else if (sourceType.match(/SERVER/i)) {\n                const file = partDefinition ? partDefinition.fields.videoId : undefined;\n                server = true;\n                setBoxSource(num, {\n                    type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.VT,\n                    id: 'SERVER',\n                    port: -1\n                }, mappingFrom.source);\n                dveTimeline.push(tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, undefined, undefined, true),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.CasparLLayer.ClipPending,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                        file: adlib ? 'continue' : file ? file : 'continue',\n                        loop: true\n                    },\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    },\n                    classes: [`dve_placeholder`]\n                }), tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, undefined, undefined, true),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.SisyfosLLayer.ClipPending,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                        isPgm: 1\n                    },\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    },\n                    classes: []\n                }));\n                return;\n            }\n            else {\n                context.warning(`Unknown source type for DVE: ${mappingFrom.source}`);\n                valid = false;\n            }\n        }\n    });\n    const graphicsTemplateName = dveConfig.DVEGraphicsTemplate ? dveConfig.DVEGraphicsTemplate.toString() : '';\n    const graphicsTemplateStyle = dveConfig.DVEGraphicsTemplateJSON\n        ? JSON.parse(dveConfig.DVEGraphicsTemplateJSON.toString())\n        : '';\n    const keyFile = dveConfig.DVEGraphicsKey ? dveConfig.DVEGraphicsKey.toString() : '';\n    const frameFile = dveConfig.DVEGraphicsFrame ? dveConfig.DVEGraphicsFrame.toString() : '';\n    if (adlib) {\n        dveTimeline.push(...config.stickyLayers\n            .filter(layer => dveTimeline.map(obj => obj.layer).indexOf(layer) === -1)\n            .filter(layer => config.liveAudio.indexOf(layer) === -1)\n            .map(layer => {\n            return tv2_common_1.literal({\n                id: '',\n                enable: getDVEEnable(!!offtube),\n                priority: 1,\n                layer,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 0\n                },\n                metaData: {\n                    sisyfosPersistLevel: true\n                }\n            });\n        }));\n    }\n    return {\n        valid,\n        content: tv2_common_1.literal({\n            boxSourceConfiguration: boxSources,\n            dveConfiguration: {},\n            timelineObjects: _.compact([\n                // Setup classes for adlibs to be able to override boxes\n                tv2_common_1.createEmptyObject({\n                    enable: getDVEEnable(!!offtube),\n                    layer: 'dve_lookahead_control',\n                    classes: [tv2_constants_1.ControlClasses.DVEOnAir]\n                }),\n                // setup ssrc\n                tv2_common_1.literal({\n                    id: offtube ? timelineStartObjId : '',\n                    enable: getDVEEnable(!!offtube),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.ATEM.SSrcDefault,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC,\n                        ssrc: { boxes }\n                    },\n                    classes: className ? [...classes, className] : classes,\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    }\n                }),\n                tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, Number(config.studio.CasparPrerollDuration) - 10, timelineStartObjId),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.ATEM.SSrcArt,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRCPROPS,\n                        ssrcProps: {\n                            artFillSource: config.studio.AtemSource.SplitArtF,\n                            artCutSource: config.studio.AtemSource.SplitArtK,\n                            artOption: 1,\n                            artPreMultiplied: true\n                        }\n                    }\n                }),\n                tv2_common_1.literal(Object.assign({ id: '', enable: getDVEEnable(!!offtube, Number(config.studio.CasparPrerollDuration), timelineStartObjId), priority: 1, layer: dveGeneratorOptions.dveLayers.ATEM.MEProgram, content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                        me: {\n                            input: atem_1.AtemSourceIndex.SSrc,\n                            transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                        }\n                    } }, (adlib ? { classes: ['adlib_deparent'] } : {}))),\n                ...(graphicsTemplateName\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVETemplate,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.TEMPLATE,\n                                templateType: 'html',\n                                name: graphicsTemplateName,\n                                data: {\n                                    display: {\n                                        isPreview: false,\n                                        displayState: 'locators'\n                                    },\n                                    locators: {\n                                        style: graphicsTemplateStyle ? graphicsTemplateStyle : {},\n                                        content: graphicsTemplateContent\n                                    }\n                                },\n                                useStopCommand: false\n                            }\n                        })\n                    ]\n                    : []),\n                ...(keyFile\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVEKey,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: keyFile,\n                                mixer: {\n                                    keyer: true\n                                },\n                                loop: true\n                            }\n                        })\n                    ]\n                    : []),\n                ...(frameFile\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVEFrame,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: frameFile,\n                                loop: true\n                            }\n                        })\n                    ]\n                    : []),\n                ...dveTimeline\n            ])\n        }),\n        stickyLayers: [\n            ...dveTimeline\n                .filter(obj => obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS)\n                .filter(obj => dveGeneratorOptions.AUDIO_LAYERS.includes(obj.layer.toString()))\n                .filter(obj => !dveGeneratorOptions.EXCLUDED_LAYERS.includes(obj.layer.toString()))\n                .map(obj => obj.layer.toString())\n        ]\n    };\n}\nexports.MakeContentDVE2 = MakeContentDVE2;\nfunction boxSource(info, label) {\n    return {\n        studioLabel: label,\n        switcherInput: info.port,\n        type: info.type\n    };\n}\nfunction getDVEEnable(offtube, offsetFromStart, startId, media) {\n    if (offsetFromStart) {\n        return offtube\n            ? { start: startId ? `#${startId}.start + ${offsetFromStart}` : offsetFromStart }\n            : { start: offsetFromStart !== null && offsetFromStart !== void 0 ? offsetFromStart : 0 };\n    }\n    return offtube\n        ? { while: `.${[tv2_constants_1.Enablers.OFFTUBE_ENABLE_DVE]}` }\n        : media\n            ? { while: '1' }\n            : { start: offsetFromStart !== null && offsetFromStart !== void 0 ? offsetFromStart : 0 };\n}\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst util_1 = __webpack_require__(8);\nfunction CreateJingleContentBase(config, file, layers, preMultiplied) {\n    return util_1.literal({\n        studioLabel: '',\n        fileName: file,\n        path: file,\n        firstWords: '',\n        lastWords: '',\n        timelineObjects: util_1.literal([\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: 0\n                },\n                priority: 1,\n                layer: layers.Caspar.PlayerJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                    file\n                }\n            }),\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: Number(config.studio.CasparPrerollDuration)\n                },\n                priority: 1,\n                layer: layers.ATEM.DSKJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK,\n                    dsk: {\n                        onAir: true,\n                        sources: {\n                            fillSource: config.studio.AtemSource.JingleFill,\n                            cutSource: config.studio.AtemSource.JingleKey\n                        },\n                        properties: {\n                            tie: false,\n                            preMultiply: preMultiplied,\n                            clip: config.studio.AtemSettings.CCGClip * 10,\n                            gain: config.studio.AtemSettings.CCGGain * 10,\n                            mask: {\n                                enabled: false\n                            }\n                        }\n                    }\n                },\n                classes: ['MIX_MINUS_OVERRIDE_DSK']\n            }),\n            ...(layers.ATEM.USKCleanEffekt\n                ? [\n                    util_1.literal({\n                        id: '',\n                        enable: {\n                            start: Number(config.studio.CasparPrerollDuration)\n                        },\n                        priority: 1,\n                        layer: layers.ATEM.USKCleanEffekt,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                upstreamKeyers: [\n                                    {\n                                        upstreamKeyerId: 0,\n                                        onAir: true,\n                                        mixEffectKeyType: 0,\n                                        flyEnabled: false,\n                                        fillSource: config.studio.AtemSource.JingleFill,\n                                        cutSource: config.studio.AtemSource.JingleKey,\n                                        maskEnabled: false,\n                                        lumaSettings: {\n                                            preMultiplied,\n                                            clip: config.studio.AtemSettings.CCGClip * 10,\n                                            gain: config.studio.AtemSettings.CCGGain * 10 // input is percents (0-100), atem uses 1-000\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    })\n                ]\n                : []),\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: 0\n                },\n                priority: 1,\n                layer: layers.Sisyfos.PlayerJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 1\n                }\n            })\n        ])\n    });\n}\nexports.CreateJingleContentBase = CreateJingleContentBase;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst _ = __webpack_require__(3);\nconst helpers_1 = __webpack_require__(16);\nfunction onTimelineGenerate(context, timeline, previousPersistentState, previousPartEndState, resolvedPieces, parseConfig, sourceLayers, casparLayerClipPending) {\n    const previousPartEndState2 = previousPartEndState;\n    const replacedSessions = {}; // TODO: Replace with map\n    const config = parseConfig(context);\n    // Find server in pgm\n    const activeServerObj = timeline.find(o => o.layer.toString() === casparLayerClipPending && !o.isLookahead);\n    // Find any placeholders to replace\n    const objsToReplace = timeline.filter(o => { var _a; return ((_a = o.classes) === null || _a === void 0 ? void 0 : _a.includes(`dve_placeholder`)) && !o.id.match(/^previous/i); });\n    // Replace contents of placeholder objects\n    // TOD: Replace this with an adlib action\n    objsToReplace.forEach(objToReplace => {\n        const index = timeline.indexOf(objToReplace);\n        if (objToReplace && activeServerObj) {\n            objToReplace.content = activeServerObj.content;\n            let replaceMeta = objToReplace.metaData;\n            const activeMeta = activeServerObj.metaData;\n            if (activeMeta && activeMeta.mediaPlayerSession && replaceMeta && replaceMeta.mediaPlayerSession) {\n                replacedSessions[replaceMeta.mediaPlayerSession] = activeMeta.mediaPlayerSession;\n                replaceMeta = Object.assign(Object.assign({}, replaceMeta), { mediaPlayerSession: activeMeta.mediaPlayerSession });\n            }\n            objToReplace.metaData = replaceMeta;\n        }\n        timeline[index] = objToReplace;\n    });\n    // Replace all sessions that have been overwritten\n    _.each(timeline, o => {\n        const meta = o.metaData;\n        if (meta && meta.mediaPlayerSession) {\n            if (Object.keys(replacedSessions).includes(meta.mediaPlayerSession)) {\n                meta.mediaPlayerSession = replacedSessions[meta.mediaPlayerSession];\n                o.metaData = meta;\n            }\n        }\n    });\n    // Do the same for pieces\n    _.each(resolvedPieces, piece => {\n        if (piece.metaData) {\n            const meta = piece.metaData;\n            if (meta.mediaPlayerSessions) {\n                piece.metaData.mediaPlayerSessions = meta.mediaPlayerSessions.map(session => {\n                    if (Object.keys(replacedSessions).includes(session)) {\n                        return replacedSessions[session];\n                    }\n                    return session;\n                });\n            }\n        }\n    });\n    copyPreviousSisyfosLevels(context, timeline, previousPartEndState2 ? previousPartEndState2.stickySisyfosLevels : {}, resolvedPieces);\n    const persistentState = {\n        activeMediaPlayers: {},\n        segmentSession: context.part.segmentId\n    };\n    const previousPersistentState2 = previousPersistentState;\n    persistentState.activeMediaPlayers = helpers_1.assignMediaPlayers(context, config, timeline, previousPersistentState2 ? previousPersistentState2.activeMediaPlayers : {}, resolvedPieces, sourceLayers);\n    dveBoxLookaheadUseOriginalEnable(timeline);\n    return Promise.resolve({\n        timeline,\n        persistentState\n    });\n}\nexports.onTimelineGenerate = onTimelineGenerate;\nfunction getEndStateForPart(_context, _previousPersistentState, previousPartEndState, resolvedPieces, time) {\n    const endState = {\n        stickySisyfosLevels: {},\n        mediaPlayerSessions: {}\n    };\n    const previousPartEndState2 = previousPartEndState;\n    const activePieces = _.filter(resolvedPieces, p => p.enable && p.enable.start <= time && (!p.enable.end || p.enable.end >= time));\n    _.each(activePieces, piece => {\n        preservePieceSisfosLevel(endState, previousPartEndState2, piece);\n    });\n    _.each(activePieces, piece => {\n        if (piece.metaData) {\n            const meta = piece.metaData.mediaPlayerSessions;\n            if (meta && meta.length) {\n                endState.mediaPlayerSessions[piece.sourceLayerId] = meta;\n            }\n        }\n    });\n    return endState;\n}\nexports.getEndStateForPart = getEndStateForPart;\n/**\n * DVE box lookahead uses classes to select the correct object.\n * Lookahead is replacing this selector rule with a '1' which causes every box to show the same.\n * This simply restores the original enable, which gets put into metaData for this purpose.\n */\nfunction dveBoxLookaheadUseOriginalEnable(timeline) {\n    // DVE_box lookahead class\n    _.each(timeline, obj => {\n        const obj2 = obj;\n        if (obj2.isLookahead &&\n            obj2.content.deviceType === timeline_state_resolver_types_1.DeviceType.ATEM &&\n            obj2.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC\n        // obj2.enable &&\n        // (obj2.enable.while === '1' || obj2.enable.while === 1)\n        ) {\n            const origClass = obj2.metaData ? obj2.metaData.dveAdlibEnabler : undefined;\n            if (origClass) {\n                // Restore the original enable rule\n                obj2.enable = { while: origClass };\n            }\n        }\n    });\n}\nfunction preservePieceSisfosLevel(endState, previousPartEndState, piece) {\n    const metaData = piece.metaData;\n    if (metaData) {\n        // Loop through rm level persistance\n        if (metaData.stickySisyfosLevels) {\n            for (const key of Object.keys(metaData.stickySisyfosLevels)) {\n                const values = metaData.stickySisyfosLevels[key];\n                // Follow the previous state, if specified, or start with this exposed value\n                endState.stickySisyfosLevels[key] =\n                    values.followsPrevious &&\n                        previousPartEndState &&\n                        previousPartEndState.stickySisyfosLevels &&\n                        previousPartEndState.stickySisyfosLevels[key]\n                        ? previousPartEndState.stickySisfosLevels[key]\n                        : values.value;\n            }\n        }\n    }\n}\nexports.preservePieceSisfosLevel = preservePieceSisfosLevel;\nfunction isSisyfosSource(obj) {\n    return (obj.content &&\n        obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS &&\n        obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS);\n}\nfunction copyPreviousSisyfosLevels(context, timelineObjs, previousLevels, resolvedPieces) {\n    // This needs to look at previous pieces within the part, to make it work for adlibs\n    const sisyfosObjs = timelineObjs.filter(isSisyfosSource);\n    // Pieces should be ordered, we shall assume that\n    const groupedPieces = _.groupBy(resolvedPieces, p => p.enable.start);\n    _.each(groupedPieces, pieces => {\n        const pieceIds = _.pluck(pieces, '_id'); // getPieceGroupId(p._id))\n        // Find all the objs that start here\n        const objs = sisyfosObjs.filter(o => {\n            const groupId = o.pieceId;\n            return groupId && pieceIds.indexOf(groupId) !== -1;\n        });\n        // Stop if no objects\n        if (objs.length === 0 || !pieces[0].enable) {\n            return;\n        }\n        // Find the active pieces before this time\n        const time = pieces[0].enable.start;\n        // Start of part\n        if (time !== 0) {\n            // Calculate the previous 'state'\n            const activePieces = _.filter(resolvedPieces, p => {\n                if (!p.enable) {\n                    return false;\n                }\n                const start = p.enable.start; // Core should be always setting this to a number\n                const duration = p.playoutDuration;\n                // Piece must start before target, and end at or after target starts\n                return start < time && (duration === undefined || start + duration >= time);\n            });\n            const newPreviousLevels = {};\n            _.each(activePieces, piece => {\n                const metadata = piece.metaData;\n                if (metadata && metadata.stickySisyfosLevels) {\n                    _.each(metadata.stickySisyfosLevels, (val, id) => {\n                        // context.warning(\n                        // \t`New level from ${piece._id} for ${id} of ${JSON.stringify(val)} (last was ${previousLevels[id]})`\n                        // )\n                        if (newPreviousLevels[id]) {\n                            context.warning('duplicate level, going with the first!');\n                        }\n                        else {\n                            if (val.followsPrevious && previousLevels[id] !== undefined) {\n                                newPreviousLevels[id] = previousLevels[id];\n                            }\n                            else {\n                                newPreviousLevels[id] = val.value;\n                            }\n                        }\n                    });\n                }\n            });\n            // Apply newly calculated levels\n            previousLevels = newPreviousLevels;\n        }\n        // Apply newly calculated levels\n        _.each(objs, sisyfosObj => {\n            const contentObj = sisyfosObj.content;\n            const previousVal = previousLevels[sisyfosObj.layer + ''];\n            if (contentObj && previousVal !== undefined && sisyfosObj.metaData && sisyfosObj.metaData.sisyfosPersistLevel) {\n                contentObj.isPgm = previousVal;\n            }\n        });\n    });\n}\nexports.copyPreviousSisyfosLevels = copyPreviousSisyfosLevels;\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_constants_1 = __webpack_require__(4);\nconst _ = __webpack_require__(3);\nfunction reversePreviousAssignment(previousAssignment) {\n    const previousAssignmentRev = {};\n    for (const key of _.keys(previousAssignment)) {\n        _.each(previousAssignment[key] || [], v2 => {\n            previousAssignmentRev[v2.sessionId] = v2;\n        });\n    }\n    return previousAssignmentRev;\n}\nfunction maxUndefined(a, b) {\n    if (a === undefined) {\n        return b;\n    }\n    if (b === undefined) {\n        return a;\n    }\n    return Math.max(a, b);\n}\nfunction calculateSessionTimeRanges(resolvedPieces) {\n    const piecesWantingMediaPlayers = _.filter(resolvedPieces, p => {\n        if (!p.metaData) {\n            return false;\n        }\n        const metadata = p.metaData;\n        return (metadata.mediaPlayerSessions || []).length > 0;\n    });\n    const sessionRequests = {};\n    _.each(piecesWantingMediaPlayers, p => {\n        const metadata = p.metaData;\n        const start = p.enable.start;\n        const duration = p.playoutDuration;\n        const end = duration !== undefined ? start + duration : undefined;\n        // Track the range of each session\n        _.each(metadata.mediaPlayerSessions || [], sessionId => {\n            // TODO - will fixed ids ever be wanted? Is it reasonable to want to have the same session across multiple pieces?\n            // Infinites are the exception here, but anything else?\n            // Perhaps the id given should be prefixed with the piece(instance) id? And sharing sessions can be figured out when it becomes needed\n            if (sessionId === '' || sessionId === tv2_constants_1.MEDIA_PLAYER_AUTO) {\n                sessionId = `${p.infiniteId || p._id}`;\n            }\n            // Note: multiple generated sessionIds for a single piece will not work as there will not be enough info to assign objects to different players\n            const val = sessionRequests[sessionId] || undefined;\n            if (val) {\n                sessionRequests[sessionId] = {\n                    start: Math.min(val.start, start),\n                    end: maxUndefined(val.end, end),\n                    optional: val.optional && (metadata.mediaPlayerOptional || false)\n                };\n            }\n            else {\n                sessionRequests[sessionId] = {\n                    start,\n                    end,\n                    optional: metadata.mediaPlayerOptional || false\n                };\n            }\n        });\n    });\n    return sessionRequests;\n}\nfunction findNextAvailablePlayer(config, inUse, req) {\n    const pickFirstNotInUse = (inUseRequests) => {\n        const inUseIds = _.compact(_.map(inUseRequests, r => r.player));\n        for (const mp of config.mediaPlayers) {\n            if (inUseIds.indexOf(mp.id) === -1) {\n                return mp.id;\n            }\n        }\n        return undefined;\n    };\n    const tryForInUse = (filteredInUse) => {\n        // Try finding something which is free\n        let mpId = pickFirstNotInUse(inUse);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // Try reclaiming any lookahead\n        const allActiveUses = _.filter(filteredInUse, r => r.type !== tv2_constants_1.MediaPlayerClaimType.Preloaded);\n        mpId = pickFirstNotInUse(allActiveUses);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // Is there something ending at the same time this starts?\n        const activeUsesNotEndingNow = _.filter(filteredInUse, r => r.end === undefined || r.end > req.start);\n        mpId = pickFirstNotInUse(activeUsesNotEndingNow);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // TODO - more strategies?\n        return undefined;\n    };\n    // Try with all players in use\n    let res = tryForInUse(inUse);\n    if (res !== undefined) {\n        return res;\n    }\n    // Try again with optional ones ignored\n    res = tryForInUse(_.filter(inUse, r => !r.optional));\n    if (res !== undefined) {\n        return res;\n    }\n    // TODO - more strategies?\n    // Nothing was free\n    return undefined;\n}\nfunction doesRequestOverlap(thisReq, other) {\n    if (thisReq.id === other.id) {\n        return false;\n    }\n    if (other.player === undefined) {\n        return false;\n    }\n    if (thisReq.start >= other.start && thisReq.start < (other.end || Infinity)) {\n        return true;\n    }\n    if (other.start >= thisReq.start && other.start < (thisReq.end || Infinity)) {\n        return true;\n    }\n    return false;\n}\nexports.doesRequestOverlap = doesRequestOverlap;\nfunction resolveMediaPlayerAssignments(context, config, previousAssignmentRev, resolvedPieces) {\n    const debugLog = config.studio.ABPlaybackDebugLogging;\n    const sessionRequests = calculateSessionTimeRanges(resolvedPieces);\n    // In future this may want a better fit algorithm than this. This only applies if being done for multiple clips playing simultaneously, and more players\n    // Convert requests into a sorted array\n    const activeRequests = [];\n    _.each(sessionRequests, (r, sessionId) => {\n        if (r) {\n            const prev = previousAssignmentRev[sessionId];\n            activeRequests.push({\n                id: sessionId,\n                start: r.start,\n                end: r.end,\n                player: prev ? prev.playerId.toString() : undefined,\n                type: prev && prev.lookahead ? tv2_constants_1.MediaPlayerClaimType.Preloaded : tv2_constants_1.MediaPlayerClaimType.Active,\n                optional: r.optional\n            });\n        }\n    });\n    _.sortBy(activeRequests, r => r.start);\n    // Go through and assign players\n    if (debugLog) {\n        context.warning('all reqs' + JSON.stringify(activeRequests, undefined, 4));\n    }\n    _.each(activeRequests, req => {\n        if (req.player !== undefined) {\n            // Keep existing assignment\n            if (debugLog) {\n                context.warning('Retained mp' + req.player + ' for ' + req.id);\n            }\n            return;\n        }\n        const otherActive = _.filter(activeRequests, r => doesRequestOverlap(req, r));\n        if (debugLog) {\n            context.warning(`for ${JSON.stringify(req)} there is: ${JSON.stringify(otherActive, undefined, 4)}`);\n        }\n        // TODO - what about playing the same piece back-to-back?\n        const nextPlayerId = findNextAvailablePlayer(config, otherActive, req);\n        if (nextPlayerId === undefined) {\n            context.warning('All the mediaplayers are in use (' + req.id + ')!');\n        }\n        else {\n            _.each(otherActive, o => {\n                if (o.player === nextPlayerId) {\n                    if (debugLog) {\n                        context.warning('Stole mp from ' + o.id);\n                    }\n                    o.player = undefined;\n                }\n            });\n            req.player = nextPlayerId;\n            if (debugLog) {\n                context.warning('Assigned mp' + req.player + ' to ' + req.id + '_' + JSON.stringify(req));\n            }\n        }\n    });\n    if (debugLog) {\n        context.warning('result' + JSON.stringify(activeRequests));\n    }\n    return activeRequests;\n}\nexports.resolveMediaPlayerAssignments = resolveMediaPlayerAssignments;\nfunction updateObjectsToMediaPlayer(context, config, playerId, objs, sourceLayers) {\n    _.each(objs, obj => {\n        // Mutate each object to the correct player\n        if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.CASPARCG) {\n            if (obj.layer === sourceLayers.Caspar.ClipPending) {\n                obj.layer = sourceLayers.Caspar.PlayerClip(playerId);\n            }\n            else if (obj.lookaheadForLayer === sourceLayers.Caspar.ClipPending) {\n                // This works on the assumption that layer will contain lookaheadForLayer, but not the exact syntax.\n                // Hopefully this will be durable to any potential future core changes\n                obj.layer = (obj.layer + '').replace(obj.lookaheadForLayer.toString(), sourceLayers.Caspar.PlayerClip(playerId));\n                obj.lookaheadForLayer = sourceLayers.Caspar.PlayerClip(playerId);\n            }\n            else {\n                context.warning(`Moving object to mediaPlayer that probably shouldnt be? (from layer: ${obj.layer})`);\n                // context.warning(obj)\n            }\n        }\n        else if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.ATEM) {\n            let atemInput = _.find(config.mediaPlayers, mp => mp.id === playerId.toString());\n            if (!atemInput) {\n                context.warning(`Trying to find atem input for unknown mediaPlayer: #${playerId}`);\n                atemInput = { id: playerId.toString(), val: config.studio.AtemSource.Default.toString() };\n            }\n            const atemObj = obj;\n            if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.ME) {\n                const atemObj2 = atemObj;\n                atemObj2.content.me.input = Number(atemInput.val) || 0;\n            }\n            else if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX) {\n                const atemObj2 = atemObj;\n                atemObj2.content.aux.input = Number(atemInput.val) || 0;\n            }\n            else if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC) {\n                const atemObj2 = atemObj;\n                // Find box with no source\n                const input = Number(atemInput.val) || 0;\n                atemObj2.content.ssrc.boxes.forEach((box, i) => {\n                    if (box.source === -1) {\n                        atemObj2.content.ssrc.boxes[i].source = input; // Pgm box\n                    }\n                });\n            }\n            else {\n                context.warning(`Trying to move ATEM object of unknown type (${atemObj.content.type}) for media player assignment`);\n            }\n        }\n        else if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS) {\n            if (obj.layer === sourceLayers.Sisyfos.ClipPending) {\n                // TODO: Change when adding more servers\n                obj.layer = playerId === 1 ? sourceLayers.Sisyfos.PlayerA : sourceLayers.Sisyfos.PlayerB;\n            }\n            else if (obj.lookaheadForLayer === sourceLayers.Sisyfos.ClipPending) {\n                // This works on the assumption that layer will contain lookaheadForLayer, but not the exact syntax.\n                // Hopefully this will be durable to any potential future core changes\n                const targetPlayer = playerId === 1 ? sourceLayers.Sisyfos.PlayerA : sourceLayers.Sisyfos.PlayerB;\n                // TODO: Change when adding more servers\n                obj.layer = (obj.layer + '').replace(obj.lookaheadForLayer.toString(), targetPlayer);\n                obj.lookaheadForLayer = targetPlayer;\n            }\n            else {\n                context.warning(`Moving object to mediaPlayer that probably shouldnt be? (from layer: ${obj.layer})`);\n                // context.warning(obj)\n            }\n        }\n        else {\n            context.warning(`Trying to move object of unknown type (${obj.content.deviceType}) for media player assignment`);\n        }\n    });\n}\nfunction assignMediaPlayers(context, config, timelineObjs, previousAssignment, resolvedPieces, sourceLayers) {\n    const previousAssignmentRev = reversePreviousAssignment(previousAssignment);\n    const activeRequests = resolveMediaPlayerAssignments(context, config, previousAssignmentRev, resolvedPieces);\n    return applyMediaPlayersAssignments(context, config, timelineObjs, previousAssignmentRev, activeRequests, sourceLayers);\n}\nexports.assignMediaPlayers = assignMediaPlayers;\nfunction applyMediaPlayersAssignments(context, config, timelineObjs, previousAssignmentRev, activeRequests, sourceLayers) {\n    const debugLog = config.studio.ABPlaybackDebugLogging;\n    const newAssignments = {};\n    const persistAssignment = (sessionId, playerId, lookahead) => {\n        let ls = newAssignments[playerId];\n        if (!ls) {\n            newAssignments[playerId] = ls = [];\n        }\n        ls.push({ sessionId, playerId, lookahead });\n    };\n    // collect objects by their sessionId\n    const labelledObjs = timelineObjs.filter(o => o.metaData && o.metaData.mediaPlayerSession);\n    const groupedObjs = _.groupBy(labelledObjs, o => {\n        const sessionId = (o.metaData || {}).mediaPlayerSession;\n        if (sessionId === '' || sessionId === tv2_constants_1.MEDIA_PLAYER_AUTO) {\n            return o.infinitePieceId || o.pieceId || tv2_constants_1.MEDIA_PLAYER_AUTO;\n        }\n        else {\n            return sessionId;\n        }\n    });\n    // Apply the known assignments\n    const remainingGroups = [];\n    _.each(groupedObjs, (group, groupId) => {\n        const request = _.find(activeRequests, req => req.id === groupId);\n        if (request) {\n            if (request.player) {\n                // TODO - what if player is undefined?\n                updateObjectsToMediaPlayer(context, config, Number(request.player) || 0, group, sourceLayers);\n                persistAssignment(groupId, Number(request.player) || 0, false);\n            }\n        }\n        else {\n            remainingGroups.push({ id: groupId, objs: group });\n        }\n    });\n    // Find the groups needing more work\n    // Not matching a request means this is either a rogue object in a mislabeled piece, or lookahead for a future part.\n    const unknownGroups = [];\n    const lookaheadGroups = [];\n    _.each(remainingGroups, grp => {\n        // If this is lookahead for a future part (no end set on the object)\n        const isFuturePartLookahead = _.all(grp.objs, o => !!o.isLookahead /*|| (o as any).wasLookahead*/ && o.enable.duration === undefined && o.enable.end === undefined);\n        if (isFuturePartLookahead) {\n            lookaheadGroups.push(grp);\n        }\n        else {\n            unknownGroups.push(grp);\n        }\n    });\n    // These are the groups that shouldn't exist, so are likely a bug. There isnt a lot we can do beyond warn about the potential bug\n    _.each(unknownGroups, grp => {\n        const objIds = _.map(grp.objs, o => o.id);\n        const prev = previousAssignmentRev[grp.id];\n        if (prev) {\n            updateObjectsToMediaPlayer(context, config, prev.playerId, grp.objs, sourceLayers);\n            persistAssignment(grp.id, prev.playerId, false);\n            context.warning(`Found unexpected session remaining on the timeline: \"${grp.id}\" belonging to ${objIds}. This may cause playback glitches`);\n        }\n        else {\n            context.warning(`Found unexpected unknown session on the timeline: \"${grp.id}\" belonging to ${objIds}. This could result in black playback`);\n        }\n    });\n    let mediaPlayerUsageEnd = [];\n    for (const mp of config.mediaPlayers) {\n        // Block players with an 'infinite' clip from being used for lookahead\n        const endTimes = _.map(_.filter(activeRequests, s => s.player === mp.id), s => s.end);\n        const realEndTimes = _.filter(endTimes, e => e !== undefined);\n        if (endTimes.length === realEndTimes.length) {\n            // No infinite(undefined) ones, so find the highest end\n            mediaPlayerUsageEnd.push({\n                playerId: Number(mp.id) || 0,\n                end: realEndTimes.length === 0 ? 0 : _.max(realEndTimes)\n            });\n        }\n    }\n    // Sort by the end time\n    mediaPlayerUsageEnd = _.sortBy(mediaPlayerUsageEnd, u => u.end).reverse();\n    // Finish up with allocating lookahead based on what is left. If there is no space left that is not a problem until playback is closer\n    _.each(lookaheadGroups, grp => {\n        if (debugLog) {\n            context.warning(`Attempting assignment for future lookahead ${grp.id}`);\n        }\n        const prev = previousAssignmentRev[grp.id];\n        let nextPlayer;\n        if (debugLog) {\n            context.warning('Players are available at:' + JSON.stringify(mediaPlayerUsageEnd));\n        }\n        const prevAssignment = prev ? _.find(mediaPlayerUsageEnd, mp => mp.playerId === prev.playerId) : undefined;\n        if (prevAssignment && (prevAssignment.end === 0 || false)) {\n            // TODO - decide if the previous assignment is still suitable\n            if (debugLog) {\n                context.warning('lookahead can retain existing player');\n            }\n            nextPlayer = prevAssignment;\n            mediaPlayerUsageEnd = _.without(mediaPlayerUsageEnd, prevAssignment);\n        }\n        else {\n            // Take the next from the queue, as it is the next freed\n            nextPlayer = mediaPlayerUsageEnd.pop();\n        }\n        if (nextPlayer === undefined) {\n            if (debugLog) {\n                context.warning('no player available for lookahead. This likely means one is in use by a playing clip');\n            }\n        }\n        else {\n            if (debugLog) {\n                context.warning(`lookahead chose: ${nextPlayer.playerId} (Free after: ${nextPlayer.end})`);\n            }\n            // Record the assignment, so that the next update can try and reuse it\n            persistAssignment(grp.id, nextPlayer.playerId, true);\n            updateObjectsToMediaPlayer(context, config, nextPlayer.playerId, grp.objs, sourceLayers);\n        }\n    });\n    if (debugLog) {\n        context.warning('new assignments:' + JSON.stringify(newAssignments));\n    }\n    return newAssignments;\n}\nexports.applyMediaPlayersAssignments = applyMediaPlayersAssignments;\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst util_1 = __webpack_require__(8);\nfunction GetStickyForPiece(layers, STICKY_LAYERS) {\n    return util_1.literal({\n        stickySisyfosLevels: _.object(layers\n            .filter(layer => STICKY_LAYERS.indexOf(layer.layer) !== -1)\n            .map(layer => {\n            return [\n                layer.layer,\n                {\n                    value: layer.isPgm,\n                    followsPrevious: false\n                }\n            ];\n        }))\n    });\n}\nexports.GetStickyForPiece = GetStickyForPiece;\nfunction GetEksternMetaData(STICKY_LAYERS, studioMics, layers) {\n    return layers && layers.length\n        ? GetStickyForPiece([\n            ...layers.map(layer => {\n                return { layer, isPgm: 1 };\n            }),\n            ...studioMics.map(l => {\n                return { layer: l, isPgm: 1 };\n            })\n        ], STICKY_LAYERS)\n        : undefined;\n}\nexports.GetEksternMetaData = GetEksternMetaData;\nfunction GetCameraMetaData(config, layers) {\n    return GetStickyForPiece([...(layers || []), ...config.studio.StudioMics].map(l => {\n        return { layer: l, isPgm: 1 };\n    }), config.stickyLayers);\n}\nexports.GetCameraMetaData = GetCameraMetaData;\nfunction GetSisyfosTimelineObjForEkstern(context, sources, sourceType, getLayersForEkstern, enable) {\n    if (!enable) {\n        enable = { start: 0 };\n    }\n    const audioTimeline = [];\n    const layers = getLayersForEkstern(context, sources, sourceType);\n    if (!layers || !layers.length) {\n        context.warning(`Could not set audio levels for ${sourceType}`);\n        return audioTimeline;\n    }\n    layers.forEach(layer => {\n        audioTimeline.push(util_1.literal({\n            id: '',\n            enable: enable,\n            priority: 1,\n            layer,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                isPgm: 1\n            }\n        }));\n    });\n    return audioTimeline;\n}\nexports.GetSisyfosTimelineObjForEkstern = GetSisyfosTimelineObjForEkstern;\nfunction GetLayersForEkstern(context, sources, sourceType) {\n    const eksternProps = sourceType.match(/^(?:LIVE|SKYPE) ([^\\s]+)(?: (.+))?$/i);\n    const eksternLayers = [];\n    if (eksternProps) {\n        const sourceInfo = tv2_common_1.FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, sourceType);\n        if (sourceInfo && sourceInfo.sisyfosLayers) {\n            eksternLayers.push(...sourceInfo.sisyfosLayers);\n        }\n    }\n    return eksternLayers;\n}\nexports.GetLayersForEkstern = GetLayersForEkstern;\nfunction GetSisyfosTimelineObjForCamera(context, config, sourceType, enable) {\n    if (!enable) {\n        enable = { start: 0 };\n    }\n    const audioTimeline = [];\n    const useMic = !sourceType.match(/^(?:KAM|CAM)(?:ERA)? (.+) minus mic(.*)$/i);\n    const camName = sourceType.match(/^(?:KAM|CAM)(?:ERA)? (.+)$/i);\n    const nonCam = !!sourceType.match(/server|telefon|full|evs/i);\n    if ((useMic && camName) || nonCam) {\n        const camLayers = [];\n        if (useMic && camName) {\n            const sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, sourceType);\n            if (sourceInfo) {\n                if (sourceInfo.sisyfosLayers) {\n                    camLayers.push(...sourceInfo.sisyfosLayers);\n                }\n                if (sourceInfo.useStudioMics) {\n                    camLayers.push(...config.studio.StudioMics);\n                }\n            }\n        }\n        else if (nonCam) {\n            camLayers.push(...config.studio.StudioMics);\n        }\n        audioTimeline.push(...camLayers.map(layer => {\n            return util_1.literal({\n                id: '',\n                enable: enable ? enable : { start: 0 },\n                priority: 1,\n                layer,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 1\n                }\n            });\n        }));\n    }\n    return audioTimeline;\n}\nexports.GetSisyfosTimelineObjForCamera = GetSisyfosTimelineObjForCamera;\nfunction GetLayersForCamera(config, sourceInfo) {\n    const cameraLayers = [];\n    if (sourceInfo.sisyfosLayers) {\n        cameraLayers.push(...sourceInfo.sisyfosLayers);\n    }\n    if (sourceInfo.useStudioMics) {\n        cameraLayers.push(...config.studio.StudioMics);\n    }\n    return cameraLayers;\n}\nexports.GetLayersForCamera = GetLayersForCamera;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TranslateEngine(eng) {\n    return !!eng.match(/WALL/i) ? 'WALL' : !!eng.match(/FULL/i) ? 'FULL' : 'OVL';\n}\nexports.TranslateEngine = TranslateEngine;\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(74), exports);\ntslib_1.__exportStar(__webpack_require__(75), exports);\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Layers shared across showstyles, to maintain compatibility with config tables.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GraphicLLayer;\n(function (GraphicLLayer) {\n    GraphicLLayer[\"GraphicLLayerOverlay\"] = \"graphic_overlay\";\n    GraphicLLayer[\"GraphicLLayerOverlayIdent\"] = \"graphic_overlay_ident\";\n    GraphicLLayer[\"GraphicLLayerOverlayTopt\"] = \"graphic_overlay_topt\";\n    GraphicLLayer[\"GraphicLLayerOverlayLower\"] = \"graphic_overlay_lower\";\n    GraphicLLayer[\"GraphicLLayerOverlayHeadline\"] = \"graphic_overlay_headline\";\n    GraphicLLayer[\"GraphicLLayerOverlayTema\"] = \"graphic_overlay_tema\";\n    GraphicLLayer[\"GraphicLLayerPilot\"] = \"graphic_pilot\";\n    GraphicLLayer[\"GraphicLLayerPilotOverlay\"] = \"graphic_pilot_overlay\";\n    GraphicLLayer[\"GraphicLLayerDesign\"] = \"graphic_design\";\n    GraphicLLayer[\"GraphicLLayerAdLibs\"] = \"graphic_adlibs\";\n    GraphicLLayer[\"GraphicLLayerWall\"] = \"graphic_wall\"; // <= viz_layer_wall\n})(GraphicLLayer = exports.GraphicLLayer || (exports.GraphicLLayer = {}));\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SharedSourceLayers;\n(function (SharedSourceLayers) {\n    SharedSourceLayers[\"PgmCam\"] = \"studio0_camera\";\n    SharedSourceLayers[\"PgmLive\"] = \"studio0_live\";\n    SharedSourceLayers[\"PgmDVE\"] = \"studio0_dve\";\n    // PgmDVEAdlib = 'studio0_dve_adlib', // TODO: Future: Adlib functions?\n    SharedSourceLayers[\"PgmServer\"] = \"studio0_clip\";\n    SharedSourceLayers[\"PgmVoiceOver\"] = \"studio0_voiceover\";\n    // Graphics\n    SharedSourceLayers[\"PgmGraphicsIdent\"] = \"studio0_graphicsIdent\";\n    SharedSourceLayers[\"PgmGraphicsIdentPersistent\"] = \"studio0_graphicsIdent_persistent\";\n    SharedSourceLayers[\"PgmGraphicsTop\"] = \"studio0_graphicsTop\";\n    SharedSourceLayers[\"PgmGraphicsLower\"] = \"studio0_graphicsLower\";\n    SharedSourceLayers[\"PgmGraphicsHeadline\"] = \"studio0_graphicsHeadline\";\n    SharedSourceLayers[\"PgmGraphicsTema\"] = \"studio0_graphicsTema\";\n    SharedSourceLayers[\"PgmGraphicsTLF\"] = \"studio0_graphicsTelefon\";\n    /** General, 'fallback', overlay layer */\n    SharedSourceLayers[\"PgmGraphicsOverlay\"] = \"studio0_overlay\";\n    SharedSourceLayers[\"WallGraphics\"] = \"studio0_wall_graphics\";\n    // Note: there is a regex in core to ignore some DVE layers. That will need updating if adding more\n    SharedSourceLayers[\"PgmDVEBox1\"] = \"studio0_dve_box1\";\n    SharedSourceLayers[\"PgmDVEBox2\"] = \"studio0_dve_box2\";\n    SharedSourceLayers[\"PgmDVEBox3\"] = \"studio0_dve_box3\";\n    SharedSourceLayers[\"PgmDVEBox4\"] = \"studio0_dve_box4\";\n    // Other / sec / manus\n    SharedSourceLayers[\"PgmScript\"] = \"studio0_script\";\n})(SharedSourceLayers = exports.SharedSourceLayers || (exports.SharedSourceLayers = {}));\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(77), exports);\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst util_1 = __webpack_require__(8);\nfunction MoveSourcesToTable(versionStr, configName, withSisyfos, getSisyfosLayersForMigration, studioMics) {\n    const res = util_1.literal({\n        id: `studioConfig.moveToTable.${configName}`,\n        version: versionStr,\n        canBeRunAutomatically: true,\n        validate: (context) => {\n            const configVal = context.getConfig(configName);\n            if (configVal === undefined || typeof configVal === 'string') {\n                return `${configName} has old format or doesn't exist`;\n            }\n            return false;\n        },\n        migrate: (context) => {\n            const configVal = context.getConfig(configName);\n            const table = [];\n            if (configVal === undefined) {\n                context.setConfig(configName, table);\n            }\n            else if (typeof configVal === 'string') {\n                const oldConfig = tv2_common_1.parseMapStr(undefined, configVal, true);\n                _.each(oldConfig, (source, i) => {\n                    if (withSisyfos) {\n                        table.push(util_1.literal({\n                            _id: i.toString(),\n                            SourceName: source.id,\n                            AtemSource: source.val,\n                            SisyfosLayers: getSisyfosLayersForMigration(configName, source.id.toString().toUpperCase()),\n                            StudioMics: !!studioMics\n                        }));\n                    }\n                    else {\n                        table.push(util_1.literal({\n                            _id: i.toString(),\n                            SourceName: source.id,\n                            AtemSource: source.val\n                        }));\n                    }\n                });\n                context.setConfig(configName, table);\n            }\n        }\n    });\n    return res;\n}\nexports.MoveSourcesToTable = MoveSourcesToTable;\n\n\n/***/ }),\n/* 78 */,\n/* 79 */,\n/* 80 */,\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst atem_1 = __webpack_require__(11);\nconst layers_1 = __webpack_require__(7);\nexports.CORE_INJECTED_KEYS = ['SofieHostURL'];\nconst DEFAULT_STUDIO_MICS_LAYERS = [\n    layers_1.SisyfosLLAyer.SisyfosSourceHost_1_ST_A,\n    layers_1.SisyfosLLAyer.SisyfosSourceHost_2_ST_A,\n    layers_1.SisyfosLLAyer.SisyfosSourceGuest_1_ST_A,\n    layers_1.SisyfosLLAyer.SisyfosSourceGuest_2_ST_A,\n    layers_1.SisyfosLLAyer.SisyfosSourceGuest_3_ST_A,\n    layers_1.SisyfosLLAyer.SisyfosSourceGuest_4_ST_A\n];\nexports.manifestAFVDSourcesCam = {\n    id: 'SourcesCam',\n    name: 'Camera Mapping',\n    description: 'Camera number to ATEM input and Sisyfos layer',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: true,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 11,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 12,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '3',\n            AtemSource: 13,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '4',\n            AtemSource: 14,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '5',\n            AtemSource: 15,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '1S',\n            AtemSource: 16,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '2S',\n            AtemSource: 17,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '3S',\n            AtemSource: 18,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '4S',\n            AtemSource: 19,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '5S',\n            AtemSource: 20,\n            SisyfosLayers: [],\n            StudioMics: true\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'Camera name',\n            description: 'Camera name as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for Camera',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for Camera',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: true,\n            rank: 3\n        }\n    ]\n};\nexports.manifestAFVDSourcesRM = {\n    id: 'SourcesRM',\n    name: 'RM Mapping',\n    description: 'RM number to ATEM input',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 1,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_1],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 2,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_2],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '3',\n            AtemSource: 3,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_3],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '4',\n            AtemSource: 4,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_4],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '5',\n            AtemSource: 5,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_5],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '6',\n            AtemSource: 6,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_6],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '7',\n            AtemSource: 7,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_7],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '8',\n            AtemSource: 8,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_8],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '9',\n            AtemSource: 9,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_9],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '10',\n            AtemSource: 10,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_10],\n            StudioMics: false\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'RM number',\n            description: 'RM number as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for RM input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for RM input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: false,\n            rank: 3\n        }\n    ]\n};\nexports.manifestAFVDSourcesDelayedPlayback = {\n    id: 'SourcesDelayedPlayback',\n    name: 'EVS Mapping',\n    description: 'EVS number to ATEM input',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 22,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceEVS_1],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 23,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceEVS_2],\n            StudioMics: true\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'EVS number',\n            description: 'EVS number as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for RM input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for EVS input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: true,\n            rank: 3\n        }\n    ]\n};\nexports.manifestAFVDSourcesSkype = {\n    /*\n\n    */\n    id: 'SourcesSkype',\n    name: 'Skype Mapping',\n    description: 'Skype number to ATEM input',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 1,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_1],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 2,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_2],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '3',\n            AtemSource: 3,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_3],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '4',\n            AtemSource: 4,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_4],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '5',\n            AtemSource: 5,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_5],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '6',\n            AtemSource: 6,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_6],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '7',\n            AtemSource: 7,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_7],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '8',\n            AtemSource: 8,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_8],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '9',\n            AtemSource: 9,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_9],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '10',\n            AtemSource: 10,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_10],\n            StudioMics: false\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'Skype number',\n            description: 'Skype number as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for Skype input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for Skype input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: false,\n            rank: 3\n        }\n    ]\n};\nexports.manifestAFVDSourcesABMediaPlayers = {\n    id: 'ABMediaPlayers',\n    name: 'Media Players inputs',\n    description: 'ATEM inputs for A/B media players',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 26\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 27\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'Media player',\n            description: 'Media player name as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for Media player',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        }\n    ]\n};\nexports.manifestAFVDStudioMics = {\n    id: 'StudioMics',\n    name: 'Studio Mics',\n    description: 'Sisyfos layers for Studio Mics',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n    filters: {\n        deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n    },\n    required: true,\n    multiple: true,\n    defaultVal: DEFAULT_STUDIO_MICS_LAYERS\n};\nexports.studioConfigManifest = [\n    {\n        id: 'MediaFlowId',\n        name: 'Media Flow Id',\n        description: '',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: false,\n        defaultVal: 'flow0'\n    },\n    {\n        id: 'ClipFileExtension',\n        name: 'Clip files extension',\n        description: 'Default file extension to clips to fetch from Omneon and play at CasparCG',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: true,\n        defaultVal: '.mxf'\n    },\n    {\n        id: 'ClipSourcePath',\n        name: 'Network base path',\n        description: 'The base path for the Omneon network share. Needs to match the base path of the source in Media manager',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: true,\n        defaultVal: ''\n    },\n    exports.manifestAFVDSourcesCam,\n    exports.manifestAFVDSourcesRM,\n    exports.manifestAFVDSourcesDelayedPlayback,\n    exports.manifestAFVDSourcesSkype,\n    exports.manifestAFVDSourcesABMediaPlayers,\n    exports.manifestAFVDStudioMics,\n    {\n        id: 'ABPlaybackDebugLogging',\n        name: 'Media players selection debug logging',\n        description: 'Enable debug logging for A/B media player selection',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n        required: false,\n        defaultVal: false\n    },\n    {\n        id: 'AtemSource.DSK1F',\n        name: 'ATEM DSK1 Fill',\n        description: 'ATEM vision mixer input for DSK1 Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 21\n    },\n    {\n        id: 'AtemSource.DSK1K',\n        name: 'ATEM DSK1 Key',\n        description: 'ATEM vision mixer input for DSK1 Key',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 34\n    },\n    {\n        id: 'AtemSource.ServerC',\n        name: 'CasparCG Server C',\n        description: 'ATEM vision mixer input for ServerC',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 28\n    },\n    {\n        id: 'AtemSource.JingleFill',\n        name: 'Jingle Fill Source',\n        description: 'ATEM vision mixer input for Jingle Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 29\n    },\n    {\n        id: 'AtemSource.JingleKey',\n        name: 'Jingle Key Source',\n        description: 'ATEM vision mixer input for Jingle Source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 31\n    },\n    {\n        id: 'AtemSettings.VizClip',\n        name: 'Viz keyer clip',\n        description: 'Viz keyer clip',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 50.0\n    },\n    {\n        id: 'AtemSettings.VizGain',\n        name: 'Viz keyer gain',\n        description: 'Viz keyer gain',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 12.5\n    },\n    {\n        id: 'AtemSettings.CCGClip',\n        name: 'CasparCG keyer clip',\n        description: 'CasparCG keyer clip',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 50.0\n    },\n    {\n        id: 'AtemSettings.CCGGain',\n        name: 'CasparCG keyer gain',\n        description: 'CasparCG keyer gain',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 12.5\n    },\n    {\n        id: 'AtemSource.SplitArtF',\n        name: 'ATEM Split Screen Art Fill',\n        description: 'ATEM vision mixer input for Split Screen Art Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 30\n    },\n    {\n        id: 'AtemSource.SplitArtK',\n        name: 'ATEM Split Screen Art Key',\n        description: 'ATEM vision mixer input for Split Screen Art Key',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 32\n    },\n    {\n        id: 'AtemSource.FullFrameGrafikBackground',\n        name: 'Full frame grafik background source',\n        description: 'ATEM source for mos full-frame grafik background source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 36\n    },\n    {\n        id: 'AtemSource.Default',\n        name: 'ATEM Default source',\n        description: 'ATEM vision mixer default source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: atem_1.AtemSourceIndex.Col1\n    },\n    {\n        id: 'AtemSource.MixMinusDefault',\n        name: 'ATEM Mix-minus default source',\n        description: 'ATEM vision mixer default source for mix-minus',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: true,\n        defaultVal: atem_1.AtemSourceIndex.Col1\n    },\n    {\n        id: 'AtemSource.Continuity',\n        name: 'ATEM continuity source',\n        description: 'ATEM input for continuity',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: atem_1.AtemSourceIndex.Col2\n    },\n    {\n        id: 'AudioBedSettings.fadeIn',\n        name: 'Bed Fade In',\n        description: 'Default fade in duration for audio beds',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 25\n    },\n    {\n        id: 'AudioBedSettings.volume',\n        name: 'Bed Volume',\n        description: 'Volume (0 - 100)',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 80\n    },\n    {\n        id: 'AudioBedSettings.fadeOut',\n        name: 'Bed Fade Out',\n        description: 'Default fade out duration for audio beds',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 25\n    },\n    {\n        id: 'CasparPrerollDuration',\n        name: 'Caspar preroll duration',\n        description: 'ms of preroll before switching to caspar',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 200 // 5 frames\n    },\n    {\n        id: 'PilotPrerollDuration',\n        name: 'Pilot Preroll Duration',\n        description: 'ms of preroll before switching to Pilot elements',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 2000\n    },\n    {\n        id: 'PilotKeepaliveDuration',\n        name: 'Pilot Keepalive Duration',\n        description: 'ms to keep old part alive before switching to Pilot elements',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 2000\n    },\n    {\n        id: 'PilotOutTransitionDuration',\n        name: 'Pilot Out Transition Duration',\n        description: 'ms to keep pilot elements alive before transition to next part',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 1000\n    },\n    {\n        id: 'PilotCutToMediaPlayer',\n        name: 'Pilot media Player Cut Point',\n        description: 'ms from start of grafik before switching to background source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 500\n    },\n    {\n        id: 'ATEMDelay',\n        name: 'ATEM Delay',\n        description: 'Frames of latency in ATEM',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 1\n    },\n    {\n        id: 'MaximumPartDuration',\n        name: 'Maximum Part Duration',\n        description: 'Maximum duration (ms) to give parts in UI',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 10000\n    },\n    {\n        id: 'DefaultPartDuration',\n        name: 'Default Part Duration',\n        description: 'Duration to give parts by default',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 4000\n    }\n];\n\n\n/***/ }),\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst layers_1 = __webpack_require__(7);\nexports.sisyfosChannels = {\n    [layers_1.SisyfosLLAyer.SisyfosSourceHost_1_ST_A]: {\n        isPgm: 0,\n        label: 'VRT 1'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceHost_2_ST_A]: {\n        isPgm: 0,\n        label: 'VRT 2'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_1_ST_A]: {\n        isPgm: 0,\n        label: 'GST 1'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_2_ST_A]: {\n        isPgm: 0,\n        label: 'GST 2'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_3_ST_A]: {\n        isPgm: 0,\n        label: 'GST 3'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_4_ST_A]: {\n        isPgm: 0,\n        label: 'GST 4'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceHost_1_ST_B]: {\n        isPgm: 0,\n        label: 'B-VRT 1',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceHost_2_ST_B]: {\n        isPgm: 0,\n        label: 'B-VRT 2',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_1_ST_B]: {\n        isPgm: 0,\n        label: 'B-GST 1',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_2_ST_B]: {\n        isPgm: 0,\n        label: 'B-GST 2',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_3_ST_B]: {\n        isPgm: 0,\n        label: 'B-GST 3',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_4_ST_B]: {\n        isPgm: 0,\n        label: 'B-GST 4',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_1]: {\n        isPgm: 0,\n        label: 'LIVE 1'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_2]: {\n        isPgm: 0,\n        label: 'LIVE 2'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_3]: {\n        isPgm: 0,\n        label: 'LIVE 3'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_4]: {\n        isPgm: 0,\n        label: 'LIVE 4'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_5]: {\n        isPgm: 0,\n        label: 'LIVE 5'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_6]: {\n        isPgm: 0,\n        label: 'LIVE 6'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_7]: {\n        isPgm: 0,\n        label: 'LIVE 7'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_8]: {\n        isPgm: 0,\n        label: 'LIVE 8'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_9]: {\n        isPgm: 0,\n        label: 'LIVE 9'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_10]: {\n        isPgm: 0,\n        label: 'LIVE 10'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceServerA]: {\n        isPgm: 0,\n        label: 'Server A'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceServerB]: {\n        isPgm: 0,\n        label: 'Server B'\n    },\n    // [SisyfosLLAyer.SisyfosSourceServerC]: {\n    // \tisPgm: 0,\n    // \tlabel: 'Server C',\n    // \thideInStudioA: false // for future applications\n    // },\n    [layers_1.SisyfosEVSSource('1')]: {\n        isPgm: 0,\n        label: 'EVS 1'\n    },\n    [layers_1.SisyfosEVSSource('2')]: {\n        isPgm: 0,\n        label: 'EVS 2'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceJingle]: {\n        isPgm: 0,\n        label: 'JINGLE'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceAudiobed]: {\n        isPgm: 0,\n        label: 'BED'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceTLF]: {\n        isPgm: 0,\n        label: 'TLF'\n    }\n};\n\n\n/***/ }),\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst config_manifests_1 = __webpack_require__(81);\nconst getBaseline_1 = __webpack_require__(136);\nconst getShowStyleId_1 = __webpack_require__(137);\nconst migrations_1 = __webpack_require__(138);\nconst manifest = {\n    blueprintType: tv_automation_sofie_blueprints_integration_1.BlueprintManifestType.STUDIO,\n    blueprintVersion: \"0.1.0+v1.1.9\",\n    integrationVersion: \"0.0.0\",\n    TSRVersion: \"0.0.0\",\n    minimumCoreVersion: '1.2.0',\n    studioConfigManifest: config_manifests_1.studioConfigManifest,\n    studioMigrations: migrations_1.studioMigrations,\n    getBaseline: getBaseline_1.getBaseline,\n    getShowStyleId: getShowStyleId_1.getShowStyleId\n};\nexports.default = manifest;\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst atem_1 = __webpack_require__(11);\nconst layers_1 = __webpack_require__(7);\nconst sisyfosChannels_1 = __webpack_require__(91);\nfunction filterMappings(input, filter) {\n    const result = {};\n    _.each(_.keys(input), k => {\n        const v = input[k];\n        if (filter(k, v)) {\n            result[k] = v;\n        }\n    });\n    return result;\n}\nfunction convertMappings(input, func) {\n    return _.map(_.keys(input), k => func(k, input[k]));\n}\nfunction getBaseline(context) {\n    const mappings = context.getStudioMappings();\n    const atemMeMappings = filterMappings(mappings, (_id, v) => v.device === timeline_state_resolver_types_1.DeviceType.ATEM && v.mappingType === timeline_state_resolver_types_1.MappingAtemType.MixEffect);\n    const sisyfosMappings = filterMappings(mappings, (_id, v) => v.device === timeline_state_resolver_types_1.DeviceType.SISYFOS);\n    return [\n        ...convertMappings(atemMeMappings, id => tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: id,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                me: {\n                    input: atem_1.AtemSourceIndex.Bars,\n                    transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                }\n            }\n        })),\n        ...convertMappings(sisyfosMappings, id => {\n            const sisyfosChannel = sisyfosChannels_1.sisyfosChannels[id];\n            if (sisyfosChannel) {\n                return tv2_common_1.literal({\n                    id: '',\n                    enable: { while: '1' },\n                    priority: 0,\n                    layer: id,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                        isPgm: sisyfosChannel.isPgm,\n                        label: sisyfosChannel.label,\n                        visible: !sisyfosChannel.hideInStudioA\n                    }\n                });\n            }\n            else {\n                return tv2_common_1.literal({\n                    id: '',\n                    enable: { while: '1' },\n                    priority: 0,\n                    layer: id,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                        isPgm: 0,\n                        label: ''\n                    }\n                });\n            }\n        }),\n        // have ATEM output default still image\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemAuxPGM,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                aux: {\n                    input: atem_1.AtemSourceIndex.Prg1\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemAuxLookahead,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                aux: {\n                    input: atem_1.AtemSourceIndex.Prg1\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemMEProgram,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                me: {\n                    input: atem_1.AtemSourceIndex.MP1,\n                    transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                }\n            }\n        })\n    ];\n}\nexports.getBaseline = getBaseline;\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nfunction getShowStyleId(_context, showStyles, _ingestRundown) {\n    const showStyle = _.first(showStyles);\n    if (showStyle) {\n        return showStyle._id;\n    }\n    return null;\n}\nexports.getShowStyleId = getShowStyleId;\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst config_manifests_1 = __webpack_require__(81);\nconst devices_1 = __webpack_require__(139);\nconst util_1 = __webpack_require__(140);\n/**\n * Versions:\n * 0.1.0: Core 0.24.0\n */\nexports.studioMigrations = tv2_common_1.literal([\n    util_1.ensureStudioConfig('0.1.0', 'SourcesCam', config_manifests_1.manifestAFVDSourcesCam.defaultVal, 'text', 'Studio config: Camera mappings', 'Enter the camera input mapping', config_manifests_1.manifestAFVDSourcesCam.defaultVal),\n    util_1.ensureStudioConfig('0.1.0', 'SourcesRM', config_manifests_1.manifestAFVDSourcesRM.defaultVal, 'text', 'Studio config: Remote mappings', 'Enter the remote input mapping', config_manifests_1.manifestAFVDSourcesRM.defaultVal),\n    util_1.ensureStudioConfig('0.1.0', 'SourcesDelayedPlayback', config_manifests_1.manifestAFVDSourcesDelayedPlayback.defaultVal, 'text', 'Studio config: Delayed Playback mappings', 'Enter the delayed playback input mapping', config_manifests_1.manifestAFVDSourcesDelayedPlayback.defaultVal),\n    util_1.ensureStudioConfig('0.1.0', 'SourcesSkype', config_manifests_1.manifestAFVDSourcesSkype.defaultVal, 'text', 'Studio config: Skype mappings', 'Enter the Skype input mapping', config_manifests_1.manifestAFVDSourcesSkype.defaultVal),\n    util_1.ensureStudioConfig('0.1.0', 'ABMediaPlayers', config_manifests_1.manifestAFVDSourcesABMediaPlayers.defaultVal, 'text', 'Studio config: AB Media Players mappings', 'Enter the AB Media Players input mapping', config_manifests_1.manifestAFVDSourcesABMediaPlayers.defaultVal),\n    util_1.ensureStudioConfig('0.1.0', 'StudioMics', config_manifests_1.manifestAFVDStudioMics.defaultVal, 'text', 'Studio config: Studio Mics', 'Select the Sisyfos layers for Studio Mics', config_manifests_1.manifestAFVDStudioMics.defaultVal),\n    ...devices_1.deviceMigrations,\n    // Fill in any mappings that did not exist before\n    // Note: These should only be run as the very final step of all migrations. otherwise they will add items too early, and confuse old migrations\n    ...util_1.getMappingsDefaultsMigrationSteps(\"0.1.0+v1.1.9\"),\n    tv2_common_1.MoveSourcesToTable('0.1.0', 'SourcesCam', true, util_1.GetSisyfosLayersForTableMigrationAFVD, true),\n    tv2_common_1.MoveSourcesToTable('0.1.0', 'SourcesRM', true, util_1.GetSisyfosLayersForTableMigrationAFVD, false),\n    tv2_common_1.MoveSourcesToTable('0.1.0', 'SourcesDelayedPlayback', true, util_1.GetSisyfosLayersForTableMigrationAFVD, true),\n    tv2_common_1.MoveSourcesToTable('0.1.0', 'SourcesSkype', true, util_1.GetSisyfosLayersForTableMigrationAFVD, false),\n    tv2_common_1.MoveSourcesToTable('0.1.0', 'ABMediaPlayers', true, util_1.GetSisyfosLayersForTableMigrationAFVD),\n    ...[\n        'viz_layer_adlibs',\n        'viz_layer_design',\n        'viz_layer_overlay',\n        'viz_layer_overlay_headline',\n        'viz_layer_overlay_ident',\n        'viz_layer_overlay_lower',\n        'viz_layer_overlay_tema',\n        'viz_layer_overlay_topt',\n        'viz_layer_pilot',\n        'viz_layer_pilot_overlay',\n        'viz_layer_wall'\n    ].map(layer => util_1.renameMapping('2.0.0', layer, layer.replace(/^viz_layer_/, 'graphic_')))\n]);\n\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nfunction validateDevice(spec) {\n    return {\n        id: `Playout-gateway.${spec.id}.validate`,\n        version: \"0.1.0+v1.1.9\",\n        canBeRunAutomatically: false,\n        validate: (context) => {\n            const dev = context.getDevice(spec.id);\n            if (!dev) {\n                return false;\n            }\n            if (dev.type !== spec.type) {\n                return `Type is not \"${timeline_state_resolver_types_1.DeviceType[spec.type]}\"`;\n            }\n            if (spec.validate) {\n                return spec.validate(dev);\n            }\n            return false;\n        },\n        input: [\n            {\n                label: `Playout-gateway: device \"${spec.id}\" misconfigured`,\n                description: `Go into the settings of the Playout-gateway and setup the device \"${spec.id}\". ($validation)`,\n                inputType: null,\n                attribute: null\n            }\n        ]\n    };\n}\nfunction createDevice(spec) {\n    return {\n        id: `Playout-gateway.${spec.id}.create`,\n        version: spec.firstVersion,\n        canBeRunAutomatically: spec.input === undefined,\n        validate: (context) => {\n            if (spec.createCondition && !spec.createCondition(context)) {\n                return false;\n            }\n            const dev = context.getDevice(spec.id);\n            if (!dev) {\n                return `\"${spec.id}\" missing`;\n            }\n            return false;\n        },\n        migrate: (context, input) => {\n            if (spec.createCondition && !spec.createCondition(context)) {\n                return;\n            }\n            const dev = context.getDevice(spec.id);\n            if (!dev) {\n                const options = spec.defaultValue(input, context);\n                if (options) {\n                    context.insertDevice(spec.id, options);\n                }\n            }\n        },\n        input: spec.input,\n        dependOnResultFrom: spec.createDependsOn\n    };\n}\nconst devices = [\n    {\n        id: 'abstract0',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n        defaultValue: () => ({\n            type: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n            options: {}\n        })\n    },\n    {\n        id: 'caspar01',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        defaultValue: input => ({\n            type: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n            options: {\n                host: input.host,\n                port: 5250,\n                launcherHost: input.host,\n                launcherPort: 8005\n            }\n        }),\n        input: [\n            {\n                label: 'Device config caspar01: Host',\n                description: 'Enter the Host paramter, example: \"127.0.0.1\"',\n                inputType: 'text',\n                attribute: 'host',\n                defaultValue: undefined\n            }\n        ],\n        validate: device => {\n            if (!device.options) {\n                return 'Missing options';\n            }\n            const opts = device.options;\n            if (!opts.host) {\n                return 'Host is not set';\n            }\n            if (!opts.launcherHost) {\n                return 'Launcher host is not set';\n            }\n            return false;\n        },\n        createDependsOn: 'studioConfig.DevicePrefix'\n    },\n    {\n        id: 'caspar01-launcher',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.HTTPWATCHER,\n        defaultValue: (_input, context) => {\n            const mainDev = context.getDevice('caspar01');\n            if (mainDev && mainDev.options) {\n                const mainOpts = mainDev.options;\n                if (mainOpts.launcherHost) {\n                    return {\n                        type: timeline_state_resolver_types_1.DeviceType.HTTPWATCHER,\n                        options: {\n                            uri: `http://${mainOpts.launcherHost}:${mainOpts.launcherPort || 8005}/processes`,\n                            httpMethod: 'GET',\n                            expectedHttpResponse: 200,\n                            interval: 30000\n                        }\n                    };\n                }\n            }\n            return undefined;\n        },\n        validate: device => {\n            if (!device.options) {\n                return 'Missing options';\n            }\n            const opts = device.options;\n            if (!opts.uri) {\n                return 'URI is not set';\n            }\n            if (!opts.httpMethod) {\n                return 'HTTP Method is not set';\n            }\n            if (!opts.expectedHttpResponse) {\n                return 'Expected response is not set';\n            }\n            if (!opts.interval) {\n                return 'Inteval is not set';\n            }\n            return false;\n        },\n        createDependsOn: 'Playout-gateway.caspar01.create'\n    },\n    {\n        id: 'caspar01-scanner',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.HTTPWATCHER,\n        defaultValue: (_input, context) => {\n            const mainDev = context.getDevice('caspar01');\n            if (mainDev && mainDev.options) {\n                const mainOpts = mainDev.options;\n                if (mainOpts.launcherHost) {\n                    return {\n                        type: timeline_state_resolver_types_1.DeviceType.HTTPWATCHER,\n                        options: {\n                            uri: `http://${mainOpts.host}:8000/stat/seq`,\n                            httpMethod: 'GET',\n                            expectedHttpResponse: 200,\n                            interval: 30000\n                        }\n                    };\n                }\n            }\n            return undefined;\n        },\n        validate: device => {\n            if (!device.options) {\n                return 'Missing options';\n            }\n            const opts = device.options;\n            if (!opts.uri) {\n                return 'URI is not set';\n            }\n            if (!opts.httpMethod) {\n                return 'HTTP Method is not set';\n            }\n            if (!opts.expectedHttpResponse) {\n                return 'Expected response is not set';\n            }\n            if (!opts.interval) {\n                return 'Inteval is not set';\n            }\n            return false;\n        },\n        createDependsOn: 'Playout-gateway.caspar01.create'\n    },\n    {\n        id: 'atem0',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.ATEM,\n        defaultValue: input => ({\n            type: timeline_state_resolver_types_1.DeviceType.ATEM,\n            options: {\n                host: input.host,\n                port: 9910\n            }\n        }),\n        input: [\n            {\n                label: 'Device config atem0: Host',\n                description: 'Enter the Host paramter, example: \"127.0.0.1\"',\n                inputType: 'text',\n                attribute: 'host',\n                defaultValue: undefined\n            }\n        ],\n        validate: device => {\n            if (!device.options) {\n                return 'Missing options';\n            }\n            const opts = device.options;\n            if (!opts.host) {\n                return 'Host is not set';\n            }\n            return false;\n        }\n    },\n    {\n        id: 'http0',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.HTTPSEND,\n        defaultValue: () => ({\n            type: timeline_state_resolver_types_1.DeviceType.HTTPSEND,\n            options: {\n                makeReadyCommands: []\n            }\n        })\n    }\n];\nexports.deviceMigrations = tv2_common_1.literal([\n    // create all devices\n    ..._.map(devices, createDevice),\n    // ensure all devices still look valid\n    ..._.map(devices, validateDevice)\n]);\n\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst layers_1 = __webpack_require__(7);\nconst mappings_defaults_1 = __webpack_require__(141);\nfunction ensureStudioConfig(version, configName, value, // null if manual\ninputType, // EditAttribute types\nlabel, description, defaultValue, oldConfigName, dropdownOptions) {\n    return {\n        id: `studioConfig.${configName}`,\n        version,\n        canBeRunAutomatically: _.isNull(value) ? false : true,\n        validate: (context) => {\n            const configVal = context.getConfig(configName);\n            const oldConfigVal = oldConfigName && context.getConfig(oldConfigName);\n            if (configVal === undefined && oldConfigVal === undefined) {\n                return `${configName} is missing`;\n            }\n            return false;\n        },\n        input: (context) => {\n            const inputs = [];\n            const configVal = context.getConfig(configName);\n            if (inputType && configVal === undefined) {\n                inputs.push({\n                    label,\n                    description,\n                    inputType,\n                    attribute: 'value',\n                    defaultValue,\n                    dropdownOptions\n                });\n            }\n            return inputs;\n        },\n        migrate: (context, input) => {\n            context.setConfig(configName, _.isNull(value) ? input.value : value);\n        }\n    };\n}\nexports.ensureStudioConfig = ensureStudioConfig;\nfunction renameStudioConfig(version, oldConfigName, newConfigName, updateValue) {\n    return {\n        id: `studioConfig.${oldConfigName}`,\n        version,\n        canBeRunAutomatically: true,\n        validate: (context) => {\n            const configVal = context.getConfig(oldConfigName);\n            if (configVal !== undefined) {\n                return `${oldConfigName} is defined`;\n            }\n            return false;\n        },\n        migrate: (context) => {\n            const configVal = context.getConfig(oldConfigName);\n            if (configVal !== undefined) {\n                context.setConfig(newConfigName, updateValue ? updateValue(configVal) : configVal);\n                context.removeConfig(oldConfigName);\n            }\n        }\n    };\n}\nexports.renameStudioConfig = renameStudioConfig;\nfunction renameMapping(version, oldMappingName, newMappingName) {\n    return {\n        id: `studioMapping.${oldMappingName}`,\n        version,\n        canBeRunAutomatically: true,\n        validate: (context) => {\n            const mapping = context.getMapping(oldMappingName);\n            if (mapping !== undefined) {\n                return `${oldMappingName} is defined`;\n            }\n            return false;\n        },\n        migrate: (context) => {\n            const mapping = context.getMapping(oldMappingName);\n            if (mapping) {\n                context.insertMapping(newMappingName, mapping);\n                context.removeMapping(oldMappingName);\n            }\n        }\n    };\n}\nexports.renameMapping = renameMapping;\nfunction removeMapping(version, oldMappingName) {\n    return {\n        id: `studioMapping.${oldMappingName}`,\n        version,\n        canBeRunAutomatically: true,\n        validate: (context) => {\n            const mapping = context.getMapping(oldMappingName);\n            if (mapping) {\n                return `${oldMappingName} is defined`;\n            }\n            return false;\n        },\n        migrate: (context) => {\n            const mapping = context.getMapping(oldMappingName);\n            if (mapping) {\n                context.removeMapping(oldMappingName);\n            }\n        }\n    };\n}\nexports.removeMapping = removeMapping;\nfunction getMappingsDefaultsMigrationSteps(versionStr) {\n    const res = _.compact(_.map(mappings_defaults_1.default, (defaultVal, id) => {\n        return tv2_common_1.literal({\n            id: `mappings.defaults.${id}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                // Optional mappings based on studio settings can be dropped here\n                if (!context.getMapping(id)) {\n                    return `Mapping \"${id}\" doesn't exist on ShowBaseStyle`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                if (!context.getMapping(id)) {\n                    context.insertMapping(id, defaultVal);\n                }\n            }\n        });\n    }));\n    return res;\n}\nexports.getMappingsDefaultsMigrationSteps = getMappingsDefaultsMigrationSteps;\nfunction GetSisyfosLayersForTableMigrationAFVD(configName, val) {\n    switch (configName) {\n        case 'SourcesCam':\n            return [];\n        case 'SourcesRM':\n        case 'SourcesSkype':\n            switch (val) {\n                case '1':\n                    return [layers_1.SisyfosLLAyer.SisyfosSourceLive_1];\n                case '2':\n                    return [layers_1.SisyfosLLAyer.SisyfosSourceLive_2];\n                case '3':\n                    return [layers_1.SisyfosLLAyer.SisyfosSourceLive_3];\n                case '4':\n                    return [layers_1.SisyfosLLAyer.SisyfosSourceLive_4];\n                case '5':\n                    return [layers_1.SisyfosLLAyer.SisyfosSourceLive_5];\n                case '6':\n                    return [layers_1.SisyfosLLAyer.SisyfosSourceLive_6];\n                case '7':\n                    return [layers_1.SisyfosLLAyer.SisyfosSourceLive_7];\n                case '8':\n                    return [layers_1.SisyfosLLAyer.SisyfosSourceLive_8];\n                case '9':\n                    return [layers_1.SisyfosLLAyer.SisyfosSourceLive_9];\n                case '10':\n                    return [layers_1.SisyfosLLAyer.SisyfosSourceLive_10];\n            }\n            break;\n        case 'SourcesDelayedPlayback':\n        case '1':\n            return [layers_1.SisyfosLLAyer.SisyfosSourceEVS_1];\n        case '2':\n            return [layers_1.SisyfosLLAyer.SisyfosSourceEVS_2];\n    }\n    return [];\n}\nexports.GetSisyfosLayersForTableMigrationAFVD = GetSisyfosLayersForTableMigrationAFVD;\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nexports.default = tv2_common_1.literal({\n    core_abstract: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n        deviceId: 'abstract0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    casparcg_dve_loop: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar02',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.RETAIN,\n        previewWhenNotOnAir: true,\n        channel: 2,\n        layer: 110\n    }),\n    casparcg_full_bg: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar02',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        channel: 4,\n        layer: 110\n    }),\n    casparcg_cg_dve_template: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar02',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.RETAIN,\n        channel: 2,\n        layer: 120\n    }),\n    casparcg_dve_key: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar02',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.RETAIN,\n        previewWhenNotOnAir: true,\n        channel: 2,\n        layer: 109\n    }),\n    casparcg_dve_frame: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar02',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.RETAIN,\n        previewWhenNotOnAir: true,\n        channel: 2,\n        layer: 111\n    }),\n    casparcg_player_jingle: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar02',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.PRELOAD,\n        channel: 1,\n        layer: 120,\n        previewWhenNotOnAir: true\n    }),\n    casparcg_countdown: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar02',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: true,\n        channel: 3,\n        layer: 120\n    }),\n    casparcg_audio_lyd: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar02',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.PRELOAD,\n        channel: 1,\n        layer: 101\n    }),\n    atem_me_program: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.MixEffect,\n        index: 0 // 0 = ME1\n    }),\n    atem_me_clean: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.MixEffect,\n        index: 3 // 3 = ME4\n    }),\n    atem_clean_usk_effect: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.MixEffect,\n        index: 3 // 3 = ME4\n    }),\n    atem_aux_pgm: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.Auxilliary,\n        index: 0 // 0 = out 1\n    }),\n    atem_aux_clean: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.Auxilliary,\n        index: 1 // 1 = out 2\n    }),\n    atem_aux_wall: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.Auxilliary,\n        index: 2 // 2 = out 3\n    }),\n    atem_aux_ar: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.Auxilliary,\n        index: 3 // 3 = out 4\n    }),\n    atem_aux_viz_ovl_in_1: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.Auxilliary,\n        index: 4 // 4 = out 5\n    }),\n    // atem_aux_viz_full_in_1: literal<MappingAtem & BlueprintMapping>({\n    // \tdevice: DeviceType.ATEM,\n    // \tdeviceId: 'atem0',\n    // \tlookahead: LookaheadMode.WHEN_CLEAR,\n    // \tmappingType: MappingAtemType.Auxilliary,\n    // \tindex: 5 // 5 = out 6\n    // }),\n    atem_aux_video_mix_minus: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.Auxilliary,\n        index: 6 // 6 = out 7\n    }),\n    atem_aux_venue: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.Auxilliary,\n        index: 7 // 7 = out 8\n    }),\n    atem_aux_lookahead: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.Auxilliary,\n        index: 10 // 10 = out 11\n    }),\n    atem_aux_ssrc: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.Auxilliary,\n        index: 11 // 11 = out 12\n    }),\n    atem_dsk_graphics: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.DownStreamKeyer,\n        index: 0 // 0 = DSK1\n    }),\n    atem_dsk_effect: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.DownStreamKeyer,\n        index: 1 // 1 = DSK2\n    }),\n    atem_supersource_art: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceProperties,\n        index: 0 // 0 = SS\n    }),\n    atem_supersource_default: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.RETAIN,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceBox,\n        index: 0 // 0 = SS\n    }),\n    atem_supersource_z_box1: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        lookaheadMaxSearchDistance: 1,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceBox,\n        index: 0 // 0 = SS\n    }),\n    atem_supersource_z_box2: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        lookaheadMaxSearchDistance: 1,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceBox,\n        index: 0 // 0 = SS\n    }),\n    atem_supersource_z_box3: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        lookaheadMaxSearchDistance: 1,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceBox,\n        index: 0 // 0 = SS\n    }),\n    atem_supersource_z_box4: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        lookaheadMaxSearchDistance: 1,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceBox,\n        index: 0 // 0 = SS\n    }),\n    casparcg_player_clip_pending: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n        deviceId: 'abstract0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.PRELOAD,\n        lookaheadDepth: 2\n    }),\n    casparcg_player_clip_1: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        channel: 1,\n        layer: 110,\n        previewWhenNotOnAir: true\n    }),\n    casparcg_player_clip_2: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        channel: 2,\n        layer: 110,\n        previewWhenNotOnAir: true\n    }),\n    casparcg_player_clip_1_loading_loop: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        channel: 1,\n        layer: 109\n    }),\n    casparcg_player_clip_2_loading_loop: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        channel: 2,\n        layer: 109\n    }),\n    sisyfos_source_clip_pending: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n        deviceId: 'abstract0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Host_1_st_a: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 0,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Host_2_st_a: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 1,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Guest_1_st_a: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 2,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Guest_2_st_a: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 3,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Guest_3_st_a: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 4,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Guest_4_st_a: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 5,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Host_1_st_b: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 6,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Host_2_st_b: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 7,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Guest_1_st_b: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 8,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Guest_2_st_b: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 9,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Guest_3_st_b: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 10,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Guest_4_st_b: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 11,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_1: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 12,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_2: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 13,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_3: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 14,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_4: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 15,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_5: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 16,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_6: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 17,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_7: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 18,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_8: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 19,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_9: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 20,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_10: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 21,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_server_a: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 22,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_server_b: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 23,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    // sisyfos_source_server_c: literal<MappingSisyfos & BlueprintMapping>({\n    // \tdevice: DeviceType.SISYFOS,\n    // \tdeviceId: 'sisyfos0',\n    // \tchannel: 24,\n    // \tlookahead: LookaheadMode.NONE\n    // }),\n    sisyfos_source_evs_1: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 24,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_evs_2: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 25,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_jingle: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 26,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_audiobed: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 27,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_tlf_hybrid: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 28,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_resync: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: -1,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    graphic_overlay: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n        deviceId: 'viz0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    graphic_overlay_ident: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n        deviceId: 'viz0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    graphic_overlay_topt: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n        deviceId: 'viz0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    graphic_overlay_lower: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n        deviceId: 'viz0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    graphic_overlay_headline: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n        deviceId: 'viz0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    graphic_overlay_tema: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n        deviceId: 'viz0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    graphic_pilot: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n        deviceId: 'viz0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    graphic_pilot_overlay: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n        deviceId: 'viz0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    graphic_design: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n        deviceId: 'viz0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    graphic_adlibs: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n        deviceId: 'viz0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    graphic_wall: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n        deviceId: 'viz0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    })\n});\nfunction getCameraSisyfosMappings(cameras) {\n    const res = {};\n    cameras.forEach(cam => {\n        if (cam.SourceName !== undefined && cam.AtemSource !== undefined) {\n            res[`sisyfos_camera_active_${cam.SourceName}`] = tv2_common_1.literal({\n                device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                deviceId: 'sisyfos0',\n                lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n                channel: cam.AtemSource || 0\n            });\n        }\n    });\n    return res;\n}\nexports.getCameraSisyfosMappings = getCameraSisyfosMappings;\nfunction getRemoteSisyfosMappings(remotes) {\n    const res = {};\n    remotes.forEach(rmt => {\n        if (rmt.SourceName !== undefined && rmt.AtemSource !== undefined) {\n            res[`sisyfos_remote_source_${rmt.SourceName}`] = tv2_common_1.literal({\n                device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                deviceId: 'sisyfos0',\n                lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n                channel: rmt.AtemSource || 0\n            });\n            res[`sisyfos_remote_source_${rmt.SourceName}_spor_2`] = tv2_common_1.literal({\n                device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                deviceId: 'sisyfos0',\n                lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n                channel: rmt.AtemSource || 0\n            });\n            res[`sisyfos_remote_source_${rmt.SourceName}_stereo`] = tv2_common_1.literal({\n                device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                deviceId: 'sisyfos0',\n                lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n                channel: rmt.AtemSource || 0\n            });\n        }\n    });\n    return res;\n}\nexports.getRemoteSisyfosMappings = getRemoteSisyfosMappings;\nfunction getSkypeSisyfosMappings(remotes) {\n    const res = {};\n    remotes.forEach(rmt => {\n        if (rmt.SourceName !== undefined && rmt.AtemSource !== undefined) {\n            res[`sisyfos_remote_source_skype_${rmt.SourceName}`] = tv2_common_1.literal({\n                device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                deviceId: 'sisyfos0',\n                lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n                channel: rmt.AtemSource || 0\n            });\n            res[`sisyfos_remote_source_skype_${rmt.SourceName}_spor_2`] = tv2_common_1.literal({\n                device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                deviceId: 'sisyfos0',\n                lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n                channel: rmt.AtemSource || 0\n            });\n            res[`sisyfos_remote_source_skype_${rmt.SourceName}_stereo`] = tv2_common_1.literal({\n                device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                deviceId: 'sisyfos0',\n                lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n                channel: rmt.AtemSource || 0\n            });\n        }\n    });\n    return res;\n}\nexports.getSkypeSisyfosMappings = getSkypeSisyfosMappings;\nfunction getTelefonSisyfosMappings(mappings) {\n    const res = {};\n    const telefons = mappings.split(',');\n    telefons.forEach(tlf => {\n        const props = tlf.split(':');\n        if (props[0] && props[1]) {\n            res[`sisyfos_telefon_source_${props[0].replace(' ', '_').trim()}`] = tv2_common_1.literal({\n                device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                deviceId: 'sisyfos0',\n                lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n                channel: Number(props[1]) || 0\n            });\n        }\n    });\n    return res;\n}\nexports.getTelefonSisyfosMappings = getTelefonSisyfosMappings;\nfunction getMediaPlayerMappings(mediaPlayers) {\n    const res = {\n        casparcg_player_clip_pending: tv2_common_1.literal({\n            device: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n            deviceId: 'abstract0',\n            lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.PRELOAD,\n            lookaheadDepth: mediaPlayers.length // Number of players\n        }),\n        sisyfos_source_clip_pending: tv2_common_1.literal({\n            device: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n            deviceId: 'abstract0',\n            lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n        })\n    };\n    for (const mp of mediaPlayers) {\n        res[`casparcg_player_clip_${mp.id}`] = tv2_common_1.literal({\n            device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n            deviceId: 'caspar01',\n            lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n            channel: 0,\n            layer: 110\n        });\n        res[`sisyfos_player_clip_${mp.id}`] = tv2_common_1.literal({\n            device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n            deviceId: 'sisyfos0',\n            lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n            channel: Number(mp.id) || 0\n        });\n    }\n    return res;\n}\nexports.getMediaPlayerMappings = getMediaPlayerMappings;\n\n\n/***/ })\n/******/ ]);",
            "modified": 1590581732231,
            "studioConfigManifest": [
                {
                    "id": "MediaFlowId",
                    "name": "Media Flow Id",
                    "description": "",
                    "type": "string",
                    "required": false,
                    "defaultVal": "flow0"
                },
                {
                    "id": "ClipFileExtension",
                    "name": "Clip files extension",
                    "description": "Default file extension to clips to fetch from Omneon and play at CasparCG",
                    "type": "string",
                    "required": true,
                    "defaultVal": ".mxf"
                },
                {
                    "id": "ClipSourcePath",
                    "name": "Network base path",
                    "description": "The base path for the Omneon network share. Needs to match the base path of the source in Media manager",
                    "type": "string",
                    "required": true,
                    "defaultVal": ""
                },
                {
                    "id": "SourcesCam",
                    "name": "Camera Mapping",
                    "description": "Camera number to ATEM input and Sisyfos layer",
                    "type": "table",
                    "required": true,
                    "defaultVal": [
                        {
                            "_id": "",
                            "SourceName": "1",
                            "AtemSource": 11,
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "",
                            "SourceName": "2",
                            "AtemSource": 12,
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "",
                            "SourceName": "3",
                            "AtemSource": 13,
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "",
                            "SourceName": "4",
                            "AtemSource": 14,
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "",
                            "SourceName": "5",
                            "AtemSource": 15,
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "",
                            "SourceName": "1S",
                            "AtemSource": 16,
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "",
                            "SourceName": "2S",
                            "AtemSource": 17,
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "",
                            "SourceName": "3S",
                            "AtemSource": 18,
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "",
                            "SourceName": "4S",
                            "AtemSource": 19,
                            "SisyfosLayers": [],
                            "StudioMics": true
                        },
                        {
                            "_id": "",
                            "SourceName": "5S",
                            "AtemSource": 20,
                            "SisyfosLayers": [],
                            "StudioMics": true
                        }
                    ],
                    "columns": [
                        {
                            "id": "SourceName",
                            "name": "Camera name",
                            "description": "Camera name as typed in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "AtemSource",
                            "name": "ATEM input",
                            "description": "ATEM vision mixer input for Camera",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 1
                        },
                        {
                            "id": "SisyfosLayers",
                            "name": "Sisyfos layers",
                            "description": "Sisyfos layers for Camera",
                            "type": "layer_mappings",
                            "filters": {
                                "deviceTypes": [
                                    11
                                ]
                            },
                            "required": true,
                            "multiple": true,
                            "defaultVal": [],
                            "rank": 2
                        },
                        {
                            "id": "StudioMics",
                            "name": "Use Studio Mics",
                            "description": "Add Sisyfos layers for Studio Mics",
                            "type": "boolean",
                            "required": true,
                            "defaultVal": true,
                            "rank": 3
                        }
                    ]
                },
                {
                    "id": "SourcesRM",
                    "name": "RM Mapping",
                    "description": "RM number to ATEM input",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "SourceName": "1",
                            "AtemSource": 1,
                            "SisyfosLayers": [
                                "sisyfos_source_live_1"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "2",
                            "AtemSource": 2,
                            "SisyfosLayers": [
                                "sisyfos_source_live_2"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "3",
                            "AtemSource": 3,
                            "SisyfosLayers": [
                                "sisyfos_source_live_3"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "4",
                            "AtemSource": 4,
                            "SisyfosLayers": [
                                "sisyfos_source_live_4"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "5",
                            "AtemSource": 5,
                            "SisyfosLayers": [
                                "sisyfos_source_live_5"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "6",
                            "AtemSource": 6,
                            "SisyfosLayers": [
                                "sisyfos_source_live_6"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "7",
                            "AtemSource": 7,
                            "SisyfosLayers": [
                                "sisyfos_source_live_7"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "8",
                            "AtemSource": 8,
                            "SisyfosLayers": [
                                "sisyfos_source_live_8"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "9",
                            "AtemSource": 9,
                            "SisyfosLayers": [
                                "sisyfos_source_live_9"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "10",
                            "AtemSource": 10,
                            "SisyfosLayers": [
                                "sisyfos_source_live_10"
                            ],
                            "StudioMics": false
                        }
                    ],
                    "columns": [
                        {
                            "id": "SourceName",
                            "name": "RM number",
                            "description": "RM number as typed in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "AtemSource",
                            "name": "ATEM input",
                            "description": "ATEM vision mixer input for RM input",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 1
                        },
                        {
                            "id": "SisyfosLayers",
                            "name": "Sisyfos layers",
                            "description": "Sisyfos layers for RM input",
                            "type": "layer_mappings",
                            "filters": {
                                "deviceTypes": [
                                    11
                                ]
                            },
                            "required": true,
                            "multiple": true,
                            "defaultVal": [],
                            "rank": 2
                        },
                        {
                            "id": "StudioMics",
                            "name": "Use Studio Mics",
                            "description": "Add Sisyfos layers for Studio Mics",
                            "type": "boolean",
                            "required": true,
                            "defaultVal": false,
                            "rank": 3
                        }
                    ]
                },
                {
                    "id": "SourcesDelayedPlayback",
                    "name": "EVS Mapping",
                    "description": "EVS number to ATEM input",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "SourceName": "1",
                            "AtemSource": 22,
                            "SisyfosLayers": [
                                "sisyfos_source_evs_1"
                            ],
                            "StudioMics": true
                        },
                        {
                            "_id": "",
                            "SourceName": "2",
                            "AtemSource": 23,
                            "SisyfosLayers": [
                                "sisyfos_source_evs_2"
                            ],
                            "StudioMics": true
                        }
                    ],
                    "columns": [
                        {
                            "id": "SourceName",
                            "name": "EVS number",
                            "description": "EVS number as typed in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "AtemSource",
                            "name": "ATEM input",
                            "description": "ATEM vision mixer input for RM input",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 1
                        },
                        {
                            "id": "SisyfosLayers",
                            "name": "Sisyfos layers",
                            "description": "Sisyfos layers for EVS input",
                            "type": "layer_mappings",
                            "filters": {
                                "deviceTypes": [
                                    11
                                ]
                            },
                            "required": true,
                            "multiple": true,
                            "defaultVal": [],
                            "rank": 2
                        },
                        {
                            "id": "StudioMics",
                            "name": "Use Studio Mics",
                            "description": "Add Sisyfos layers for Studio Mics",
                            "type": "boolean",
                            "required": true,
                            "defaultVal": true,
                            "rank": 3
                        }
                    ]
                },
                {
                    "id": "SourcesSkype",
                    "name": "Skype Mapping",
                    "description": "Skype number to ATEM input",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "SourceName": "1",
                            "AtemSource": 1,
                            "SisyfosLayers": [
                                "sisyfos_source_live_1"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "2",
                            "AtemSource": 2,
                            "SisyfosLayers": [
                                "sisyfos_source_live_2"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "3",
                            "AtemSource": 3,
                            "SisyfosLayers": [
                                "sisyfos_source_live_3"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "4",
                            "AtemSource": 4,
                            "SisyfosLayers": [
                                "sisyfos_source_live_4"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "5",
                            "AtemSource": 5,
                            "SisyfosLayers": [
                                "sisyfos_source_live_5"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "6",
                            "AtemSource": 6,
                            "SisyfosLayers": [
                                "sisyfos_source_live_6"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "7",
                            "AtemSource": 7,
                            "SisyfosLayers": [
                                "sisyfos_source_live_7"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "8",
                            "AtemSource": 8,
                            "SisyfosLayers": [
                                "sisyfos_source_live_8"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "9",
                            "AtemSource": 9,
                            "SisyfosLayers": [
                                "sisyfos_source_live_9"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "10",
                            "AtemSource": 10,
                            "SisyfosLayers": [
                                "sisyfos_source_live_10"
                            ],
                            "StudioMics": false
                        }
                    ],
                    "columns": [
                        {
                            "id": "SourceName",
                            "name": "Skype number",
                            "description": "Skype number as typed in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "AtemSource",
                            "name": "ATEM input",
                            "description": "ATEM vision mixer input for Skype input",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 1
                        },
                        {
                            "id": "SisyfosLayers",
                            "name": "Sisyfos layers",
                            "description": "Sisyfos layers for Skype input",
                            "type": "layer_mappings",
                            "filters": {
                                "deviceTypes": [
                                    11
                                ]
                            },
                            "required": true,
                            "multiple": true,
                            "defaultVal": [],
                            "rank": 2
                        },
                        {
                            "id": "StudioMics",
                            "name": "Use Studio Mics",
                            "description": "Add Sisyfos layers for Studio Mics",
                            "type": "boolean",
                            "required": true,
                            "defaultVal": false,
                            "rank": 3
                        }
                    ]
                },
                {
                    "id": "ABMediaPlayers",
                    "name": "Media Players inputs",
                    "description": "ATEM inputs for A/B media players",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "SourceName": "1",
                            "AtemSource": 26
                        },
                        {
                            "_id": "",
                            "SourceName": "2",
                            "AtemSource": 27
                        }
                    ],
                    "columns": [
                        {
                            "id": "SourceName",
                            "name": "Media player",
                            "description": "Media player name as typed in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "AtemSource",
                            "name": "ATEM input",
                            "description": "ATEM vision mixer input for Media player",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 1
                        }
                    ]
                },
                {
                    "id": "StudioMics",
                    "name": "Studio Mics",
                    "description": "Sisyfos layers for Studio Mics",
                    "type": "layer_mappings",
                    "filters": {
                        "deviceTypes": [
                            11
                        ]
                    },
                    "required": true,
                    "multiple": true,
                    "defaultVal": [
                        "sisyfos_source_Host_1_st_a",
                        "sisyfos_source_Host_2_st_a",
                        "sisyfos_source_Guest_1_st_a",
                        "sisyfos_source_Guest_2_st_a",
                        "sisyfos_source_Guest_3_st_a",
                        "sisyfos_source_Guest_4_st_a"
                    ]
                },
                {
                    "id": "ABPlaybackDebugLogging",
                    "name": "Media players selection debug logging",
                    "description": "Enable debug logging for A/B media player selection",
                    "type": "boolean",
                    "required": false,
                    "defaultVal": false
                },
                {
                    "id": "AtemSource.DSK1F",
                    "name": "ATEM DSK1 Fill",
                    "description": "ATEM vision mixer input for DSK1 Fill",
                    "type": "number",
                    "required": false,
                    "defaultVal": 21
                },
                {
                    "id": "AtemSource.DSK1K",
                    "name": "ATEM DSK1 Key",
                    "description": "ATEM vision mixer input for DSK1 Key",
                    "type": "number",
                    "required": false,
                    "defaultVal": 34
                },
                {
                    "id": "AtemSource.ServerC",
                    "name": "CasparCG Server C",
                    "description": "ATEM vision mixer input for ServerC",
                    "type": "number",
                    "required": false,
                    "defaultVal": 28
                },
                {
                    "id": "AtemSource.JingleFill",
                    "name": "Jingle Fill Source",
                    "description": "ATEM vision mixer input for Jingle Fill",
                    "type": "number",
                    "required": false,
                    "defaultVal": 29
                },
                {
                    "id": "AtemSource.JingleKey",
                    "name": "Jingle Key Source",
                    "description": "ATEM vision mixer input for Jingle Source",
                    "type": "number",
                    "required": false,
                    "defaultVal": 31
                },
                {
                    "id": "AtemSettings.VizClip",
                    "name": "Viz keyer clip",
                    "description": "Viz keyer clip",
                    "type": "number",
                    "required": false,
                    "defaultVal": 50
                },
                {
                    "id": "AtemSettings.VizGain",
                    "name": "Viz keyer gain",
                    "description": "Viz keyer gain",
                    "type": "number",
                    "required": false,
                    "defaultVal": 12.5
                },
                {
                    "id": "AtemSettings.CCGClip",
                    "name": "CasparCG keyer clip",
                    "description": "CasparCG keyer clip",
                    "type": "number",
                    "required": false,
                    "defaultVal": 50
                },
                {
                    "id": "AtemSettings.CCGGain",
                    "name": "CasparCG keyer gain",
                    "description": "CasparCG keyer gain",
                    "type": "number",
                    "required": false,
                    "defaultVal": 12.5
                },
                {
                    "id": "AtemSource.SplitArtF",
                    "name": "ATEM Split Screen Art Fill",
                    "description": "ATEM vision mixer input for Split Screen Art Fill",
                    "type": "number",
                    "required": false,
                    "defaultVal": 30
                },
                {
                    "id": "AtemSource.SplitArtK",
                    "name": "ATEM Split Screen Art Key",
                    "description": "ATEM vision mixer input for Split Screen Art Key",
                    "type": "number",
                    "required": false,
                    "defaultVal": 32
                },
                {
                    "id": "AtemSource.FullFrameGrafikBackground",
                    "name": "Full frame grafik background source",
                    "description": "ATEM source for mos full-frame grafik background source",
                    "type": "number",
                    "required": false,
                    "defaultVal": 36
                },
                {
                    "id": "AtemSource.Default",
                    "name": "ATEM Default source",
                    "description": "ATEM vision mixer default source",
                    "type": "number",
                    "required": false,
                    "defaultVal": 2001
                },
                {
                    "id": "AtemSource.MixMinusDefault",
                    "name": "ATEM Mix-minus default source",
                    "description": "ATEM vision mixer default source for mix-minus",
                    "type": "number",
                    "required": true,
                    "defaultVal": 2001
                },
                {
                    "id": "AtemSource.Continuity",
                    "name": "ATEM continuity source",
                    "description": "ATEM input for continuity",
                    "type": "number",
                    "required": false,
                    "defaultVal": 2002
                },
                {
                    "id": "AudioBedSettings.fadeIn",
                    "name": "Bed Fade In",
                    "description": "Default fade in duration for audio beds",
                    "type": "number",
                    "required": false,
                    "defaultVal": 25
                },
                {
                    "id": "AudioBedSettings.volume",
                    "name": "Bed Volume",
                    "description": "Volume (0 - 100)",
                    "type": "number",
                    "required": false,
                    "defaultVal": 80
                },
                {
                    "id": "AudioBedSettings.fadeOut",
                    "name": "Bed Fade Out",
                    "description": "Default fade out duration for audio beds",
                    "type": "number",
                    "required": false,
                    "defaultVal": 25
                },
                {
                    "id": "CasparPrerollDuration",
                    "name": "Caspar preroll duration",
                    "description": "ms of preroll before switching to caspar",
                    "type": "number",
                    "required": false,
                    "defaultVal": 200
                },
                {
                    "id": "PilotPrerollDuration",
                    "name": "Pilot Preroll Duration",
                    "description": "ms of preroll before switching to Pilot elements",
                    "type": "number",
                    "required": false,
                    "defaultVal": 2000
                },
                {
                    "id": "PilotKeepaliveDuration",
                    "name": "Pilot Keepalive Duration",
                    "description": "ms to keep old part alive before switching to Pilot elements",
                    "type": "number",
                    "required": false,
                    "defaultVal": 2000
                },
                {
                    "id": "PilotOutTransitionDuration",
                    "name": "Pilot Out Transition Duration",
                    "description": "ms to keep pilot elements alive before transition to next part",
                    "type": "number",
                    "required": false,
                    "defaultVal": 1000
                },
                {
                    "id": "PilotCutToMediaPlayer",
                    "name": "Pilot media Player Cut Point",
                    "description": "ms from start of grafik before switching to background source",
                    "type": "number",
                    "required": false,
                    "defaultVal": 500
                },
                {
                    "id": "ATEMDelay",
                    "name": "ATEM Delay",
                    "description": "Frames of latency in ATEM",
                    "type": "number",
                    "required": false,
                    "defaultVal": 1
                },
                {
                    "id": "MaximumPartDuration",
                    "name": "Maximum Part Duration",
                    "description": "Maximum duration (ms) to give parts in UI",
                    "type": "number",
                    "required": false,
                    "defaultVal": 10000
                },
                {
                    "id": "DefaultPartDuration",
                    "name": "Default Part Duration",
                    "description": "Duration to give parts by default",
                    "type": "number",
                    "required": false,
                    "defaultVal": 4000
                }
            ],
            "showStyleConfigManifest": [],
            "databaseVersion": {
                "studio": {
                    "studio0": "0.1.0"
                },
                "showStyle": {}
            },
            "blueprintVersion": "0.1.0+v1.1.9",
            "integrationVersion": "0.0.0",
            "TSRVersion": "0.0.0",
            "minimumCoreVersion": "1.2.0",
            "blueprintType": "studio"
        },
        {
            "_id": "tv2_afvd_showstyle",
            "name": "tv2_afvd_showstyle",
            "created": 1574442209197,
            "code": "/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 104);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(41), exports);\ntslib_1.__exportStar(__webpack_require__(12), exports);\ntslib_1.__exportStar(__webpack_require__(42), exports);\ntslib_1.__exportStar(__webpack_require__(8), exports);\ntslib_1.__exportStar(__webpack_require__(49), exports);\ntslib_1.__exportStar(__webpack_require__(50), exports);\ntslib_1.__exportStar(__webpack_require__(51), exports);\ntslib_1.__exportStar(__webpack_require__(52), exports);\ntslib_1.__exportStar(__webpack_require__(53), exports);\ntslib_1.__exportStar(__webpack_require__(54), exports);\ntslib_1.__exportStar(__webpack_require__(55), exports);\ntslib_1.__exportStar(__webpack_require__(56), exports);\ntslib_1.__exportStar(__webpack_require__(57), exports);\ntslib_1.__exportStar(__webpack_require__(58), exports);\ntslib_1.__exportStar(__webpack_require__(61), exports);\ntslib_1.__exportStar(__webpack_require__(63), exports);\ntslib_1.__exportStar(__webpack_require__(66), exports);\ntslib_1.__exportStar(__webpack_require__(69), exports);\ntslib_1.__exportStar(__webpack_require__(16), exports);\ntslib_1.__exportStar(__webpack_require__(72), exports);\ntslib_1.__exportStar(__webpack_require__(73), exports);\ntslib_1.__exportStar(__webpack_require__(76), exports);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(25), exports);\ntslib_1.__exportStar(__webpack_require__(26), exports);\ntslib_1.__exportStar(__webpack_require__(27), exports);\ntslib_1.__exportStar(__webpack_require__(28), exports);\ntslib_1.__exportStar(__webpack_require__(29), exports);\ntslib_1.__exportStar(__webpack_require__(30), exports);\ntslib_1.__exportStar(__webpack_require__(31), exports);\ntslib_1.__exportStar(__webpack_require__(32), exports);\ntslib_1.__exportStar(__webpack_require__(33), exports);\ntslib_1.__exportStar(__webpack_require__(34), exports);\ntslib_1.__exportStar(__webpack_require__(35), exports);\ntslib_1.__exportStar(__webpack_require__(36), exports);\ntslib_1.__exportStar(__webpack_require__(37), exports);\nconst Timeline = __webpack_require__(38);\nexports.Timeline = Timeline;\nvar DeviceType;\n(function (DeviceType) {\n    DeviceType[DeviceType[\"ABSTRACT\"] = 0] = \"ABSTRACT\";\n    DeviceType[DeviceType[\"CASPARCG\"] = 1] = \"CASPARCG\";\n    DeviceType[DeviceType[\"ATEM\"] = 2] = \"ATEM\";\n    DeviceType[DeviceType[\"LAWO\"] = 3] = \"LAWO\";\n    DeviceType[DeviceType[\"HTTPSEND\"] = 4] = \"HTTPSEND\";\n    DeviceType[DeviceType[\"PANASONIC_PTZ\"] = 5] = \"PANASONIC_PTZ\";\n    DeviceType[DeviceType[\"TCPSEND\"] = 6] = \"TCPSEND\";\n    DeviceType[DeviceType[\"HYPERDECK\"] = 7] = \"HYPERDECK\";\n    DeviceType[DeviceType[\"PHAROS\"] = 8] = \"PHAROS\";\n    DeviceType[DeviceType[\"OSC\"] = 9] = \"OSC\";\n    DeviceType[DeviceType[\"HTTPWATCHER\"] = 10] = \"HTTPWATCHER\";\n    DeviceType[DeviceType[\"SISYFOS\"] = 11] = \"SISYFOS\";\n    DeviceType[DeviceType[\"QUANTEL\"] = 12] = \"QUANTEL\";\n    DeviceType[DeviceType[\"VIZMSE\"] = 13] = \"VIZMSE\";\n    DeviceType[DeviceType[\"SINGULAR_LIVE\"] = 14] = \"SINGULAR_LIVE\";\n})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(17), exports);\ntslib_1.__exportStar(__webpack_require__(18), exports);\ntslib_1.__exportStar(__webpack_require__(19), exports);\ntslib_1.__exportStar(__webpack_require__(20), exports);\ntslib_1.__exportStar(__webpack_require__(21), exports);\ntslib_1.__exportStar(__webpack_require__(22), exports);\ntslib_1.__exportStar(__webpack_require__(23), exports);\ntslib_1.__exportStar(__webpack_require__(24), exports);\ntslib_1.__exportStar(__webpack_require__(39), exports);\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = _;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(44), exports);\ntslib_1.__exportStar(__webpack_require__(45), exports);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nvar AFVDSourceLayer;\n(function (AFVDSourceLayer) {\n    // Pgm\n    AFVDSourceLayer[\"PgmCam\"] = \"studio0_camera\";\n    AFVDSourceLayer[\"PgmLive\"] = \"studio0_live\";\n    AFVDSourceLayer[\"PgmDVE\"] = \"studio0_dve\";\n    AFVDSourceLayer[\"PgmDVEAdlib\"] = \"studio0_dve_adlib\";\n    AFVDSourceLayer[\"PgmServer\"] = \"studio0_clip\";\n    AFVDSourceLayer[\"PgmVoiceOver\"] = \"studio0_voiceover\";\n    /** \"Full\" */\n    AFVDSourceLayer[\"PgmPilot\"] = \"studio0_pilot\";\n    /** Viz-specific */\n    AFVDSourceLayer[\"PgmPilotOverlay\"] = \"studio0_pilotOverlay\";\n    AFVDSourceLayer[\"PgmDelayed\"] = \"studio0_delayed\";\n    AFVDSourceLayer[\"PgmContinuity\"] = \"studio0_continuity\";\n    AFVDSourceLayer[\"VizFullIn1\"] = \"studio0_aux_viz_full1\";\n    AFVDSourceLayer[\"AuxStudioScreen\"] = \"studio0_aux_studio_screen\";\n    AFVDSourceLayer[\"PgmDVEBackground\"] = \"studio0_dve_back\";\n    AFVDSourceLayer[\"PgmDesign\"] = \"studio0_design\";\n    AFVDSourceLayer[\"PgmAdlibVizCmd\"] = \"studio0_adlib_viz_cmd\";\n    AFVDSourceLayer[\"PgmDSK\"] = \"studio0_dsk_cmd\";\n    AFVDSourceLayer[\"PgmSisyfosAdlibs\"] = \"studio0_sisyfos_adlibs\";\n    AFVDSourceLayer[\"PgmJingle\"] = \"studio0_jingle\";\n    AFVDSourceLayer[\"PgmScript\"] = \"studio0_script\";\n    // PgmSlutord = 'studio0_slutord',\n    AFVDSourceLayer[\"PgmAudioBed\"] = \"studio0_audio_bed\";\n    // Wall\n    AFVDSourceLayer[\"WallGraphics\"] = \"studio0_wall_graphics\";\n})(AFVDSourceLayer = exports.AFVDSourceLayer || (exports.AFVDSourceLayer = {}));\n// tslint:disable-next-line: variable-name\nexports.SourceLayer = Object.assign(Object.assign({}, AFVDSourceLayer), tv2_common_1.SharedSourceLayers);\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\n/** Get all the Real LLayers (map to devices). Note: Does not include some which are dynamically generated */\nfunction RealLLayers() {\n    return (_.values(AtemLLayer)\n        // @ts-ignore\n        .concat(_.values(CasparLLayer))\n        .concat(_.values(SisyfosLLAyer))\n        .concat(_.values(tv2_common_1.GraphicLLayer))\n        .concat(_.values(VirtualAbstractLLayer)));\n}\nexports.RealLLayers = RealLLayers;\nfunction VirtualLLayers() {\n    return _.values(VirtualAbstractLLayer);\n}\nexports.VirtualLLayers = VirtualLLayers;\nvar VirtualAbstractLLayer;\n(function (VirtualAbstractLLayer) {\n})(VirtualAbstractLLayer = exports.VirtualAbstractLLayer || (exports.VirtualAbstractLLayer = {}));\nvar AtemLLayer;\n(function (AtemLLayer) {\n    AtemLLayer[\"AtemMEProgram\"] = \"atem_me_program\";\n    AtemLLayer[\"AtemMEClean\"] = \"atem_me_clean\";\n    AtemLLayer[\"AtemDSKGraphics\"] = \"atem_dsk_graphics\";\n    AtemLLayer[\"AtemDSKEffect\"] = \"atem_dsk_effect\";\n    AtemLLayer[\"AtemCleanUSKEffect\"] = \"atem_clean_usk_effect\";\n    AtemLLayer[\"AtemSSrcArt\"] = \"atem_supersource_art\";\n    AtemLLayer[\"AtemSSrcDefault\"] = \"atem_supersource_default\";\n    AtemLLayer[\"AtemSSrcBox1\"] = \"atem_supersource_z_box1\";\n    AtemLLayer[\"AtemSSrcBox2\"] = \"atem_supersource_z_box2\";\n    AtemLLayer[\"AtemSSrcBox3\"] = \"atem_supersource_z_box3\";\n    AtemLLayer[\"AtemSSrcBox4\"] = \"atem_supersource_z_box4\";\n    AtemLLayer[\"AtemAuxPGM\"] = \"atem_aux_pgm\";\n    AtemLLayer[\"AtemAuxClean\"] = \"atem_aux_clean\";\n    AtemLLayer[\"AtemAuxWall\"] = \"atem_aux_wall\";\n    AtemLLayer[\"AtemAuxAR\"] = \"atem_aux_ar\";\n    AtemLLayer[\"AtemAuxVizOvlIn1\"] = \"atem_aux_viz_ovl_in_1\";\n    // AtemAuxVizFullIn1 = 'atem_aux_viz_full_in_1',\n    AtemLLayer[\"AtemAuxVideoMixMinus\"] = \"atem_aux_video_mix_minus\";\n    AtemLLayer[\"AtemAuxVenue\"] = \"atem_aux_venue\";\n    AtemLLayer[\"AtemAuxLookahead\"] = \"atem_aux_lookahead\";\n    AtemLLayer[\"AtemAuxSSrc\"] = \"atem_aux_ssrc\";\n})(AtemLLayer = exports.AtemLLayer || (exports.AtemLLayer = {}));\nvar CasparLLayer;\n(function (CasparLLayer) {\n    CasparLLayer[\"CasparPlayerClipPending\"] = \"casparcg_player_clip_pending\";\n    CasparLLayer[\"CasparPlayerJingle\"] = \"casparcg_player_jingle\";\n    CasparLLayer[\"CasparCGDVELoop\"] = \"casparcg_dve_loop\";\n    CasparLLayer[\"CasparCGFullBg\"] = \"casparcg_full_bg\";\n    CasparLLayer[\"CasparCGLYD\"] = \"casparcg_audio_lyd\";\n    CasparLLayer[\"CasparCGDVETemplate\"] = \"casparcg_cg_dve_template\";\n    CasparLLayer[\"CasparCGDVEKey\"] = \"casparcg_dve_key\";\n    CasparLLayer[\"CasparCGDVEFrame\"] = \"casparcg_dve_frame\";\n    CasparLLayer[\"CasparCountdown\"] = \"casparcg_countdown\";\n})(CasparLLayer = exports.CasparLLayer || (exports.CasparLLayer = {}));\nvar SisyfosLLAyer;\n(function (SisyfosLLAyer) {\n    SisyfosLLAyer[\"SisyfosSourceClipPending\"] = \"sisyfos_source_clip_pending\";\n    SisyfosLLAyer[\"SisyfosSourceJingle\"] = \"sisyfos_source_jingle\";\n    SisyfosLLAyer[\"SisyfosSourceAudiobed\"] = \"sisyfos_source_audiobed\";\n    SisyfosLLAyer[\"SisyfosSourceTLF\"] = \"sisyfos_source_tlf_hybrid\";\n    SisyfosLLAyer[\"SisyfosSourceHost_1_ST_A\"] = \"sisyfos_source_Host_1_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceHost_2_ST_A\"] = \"sisyfos_source_Host_2_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_1_ST_A\"] = \"sisyfos_source_Guest_1_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_2_ST_A\"] = \"sisyfos_source_Guest_2_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_3_ST_A\"] = \"sisyfos_source_Guest_3_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_4_ST_A\"] = \"sisyfos_source_Guest_4_st_a\";\n    SisyfosLLAyer[\"SisyfosSourceHost_1_ST_B\"] = \"sisyfos_source_Host_1_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceHost_2_ST_B\"] = \"sisyfos_source_Host_2_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_1_ST_B\"] = \"sisyfos_source_Guest_1_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_2_ST_B\"] = \"sisyfos_source_Guest_2_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_3_ST_B\"] = \"sisyfos_source_Guest_3_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceGuest_4_ST_B\"] = \"sisyfos_source_Guest_4_st_b\";\n    SisyfosLLAyer[\"SisyfosSourceLive_1\"] = \"sisyfos_source_live_1\";\n    SisyfosLLAyer[\"SisyfosSourceLive_2\"] = \"sisyfos_source_live_2\";\n    SisyfosLLAyer[\"SisyfosSourceLive_3\"] = \"sisyfos_source_live_3\";\n    SisyfosLLAyer[\"SisyfosSourceLive_4\"] = \"sisyfos_source_live_4\";\n    SisyfosLLAyer[\"SisyfosSourceLive_5\"] = \"sisyfos_source_live_5\";\n    SisyfosLLAyer[\"SisyfosSourceLive_6\"] = \"sisyfos_source_live_6\";\n    SisyfosLLAyer[\"SisyfosSourceLive_7\"] = \"sisyfos_source_live_7\";\n    SisyfosLLAyer[\"SisyfosSourceLive_8\"] = \"sisyfos_source_live_8\";\n    SisyfosLLAyer[\"SisyfosSourceLive_9\"] = \"sisyfos_source_live_9\";\n    SisyfosLLAyer[\"SisyfosSourceLive_10\"] = \"sisyfos_source_live_10\";\n    SisyfosLLAyer[\"SisyfosSourceServerA\"] = \"sisyfos_source_server_a\";\n    SisyfosLLAyer[\"SisyfosSourceServerB\"] = \"sisyfos_source_server_b\";\n    // SisyfosSourceServerC = 'sisyfos_source_server_c',\n    SisyfosLLAyer[\"SisyfosSourceEVS_1\"] = \"sisyfos_source_evs_1\";\n    SisyfosLLAyer[\"SisyfosSourceEVS_2\"] = \"sisyfos_source_evs_2\";\n    SisyfosLLAyer[\"SisyfosResync\"] = \"sisyfos_resync\";\n})(SisyfosLLAyer = exports.SisyfosLLAyer || (exports.SisyfosLLAyer = {}));\nfunction CasparPlayerClip(i) {\n    return `casparcg_player_clip_${i}`;\n}\nexports.CasparPlayerClip = CasparPlayerClip;\nfunction CasparPlayerClipLoadingLoop(i) {\n    return `casparcg_player_clip_${i}_loading_loop`;\n}\nexports.CasparPlayerClipLoadingLoop = CasparPlayerClipLoadingLoop;\nfunction SisyfosEVSSource(i) {\n    return `sisyfos_source_evs_${i}`;\n}\nexports.SisyfosEVSSource = SisyfosEVSSource;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nfunction literal(o) {\n    return o;\n}\nexports.literal = literal;\nfunction assertUnreachable(_never) {\n    throw new Error('Switch validation failed, look for assertUnreachable(...)');\n}\nexports.assertUnreachable = assertUnreachable;\nfunction createVirtualPiece(layer, enable, mainPiece) {\n    return {\n        _id: '',\n        name: '',\n        externalId: mainPiece ? mainPiece.externalId : '-',\n        enable: typeof enable === 'number'\n            ? {\n                start: enable,\n                duration: 0\n            }\n            : enable,\n        sourceLayerId: layer,\n        outputLayerId: 'pgm',\n        virtual: true,\n        content: {\n            timelineObjects: []\n        }\n    };\n}\nexports.createVirtualPiece = createVirtualPiece;\nfunction createEmptyObject(obj) {\n    return literal(Object.assign(Object.assign({ id: '', priority: 0 }, obj), { content: {\n            deviceType: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n            type: 'empty'\n        } }));\n}\nexports.createEmptyObject = createEmptyObject;\n/**\n * Returs true if the piece is interface IBlueprintAdLibPiece\n * @param {IBlueprintPiece | IBlueprintAdLibPiece} piece Piece to check\n */\nfunction isAdLibPiece(piece) {\n    return '_rank' in piece;\n}\nexports.isAdLibPiece = isAdLibPiece;\n\n\n/***/ }),\n/* 9 */,\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nvar SourceLayer;\n(function (SourceLayer) {\n    // Pgm\n    SourceLayer[\"PgmSourceSelect\"] = \"studio0_offtube_pgm_source_select\";\n    SourceLayer[\"PgmDVEBackground\"] = \"studio0_offtube_dve_back\";\n    SourceLayer[\"PgmJingle\"] = \"studio0_offtube_jingle\";\n    // TODO: This should be a shared sourcelayer, needs migration for pilot graphics.\n    SourceLayer[\"PgmFull\"] = \"studio0_full\";\n    // TODO: These will be removed by adlib actions\n    // Adlib selection\n    SourceLayer[\"SelectedAdLibDVE\"] = \"studio0_offtube_dve\";\n    SourceLayer[\"SelectedAdLibServer\"] = \"studio0_offtube_clip\";\n    SourceLayer[\"SelectedAdLibVoiceOver\"] = \"studio0_offtube_voiceover\";\n    SourceLayer[\"SelectedAdlibGraphicsFull\"] = \"studio0_offtube_graphicsFull\";\n    SourceLayer[\"PgmContinuity\"] = \"studio0_offtube_continuity\";\n    // Aux\n    SourceLayer[\"AuxStudioScreen\"] = \"studio0_offtube_aux_studio_screen\";\n})(SourceLayer = exports.SourceLayer || (exports.SourceLayer = {}));\n// tslint:disable-next-line: variable-name\nexports.OffTubeSourceLayer = Object.assign(Object.assign({}, SourceLayer), tv2_common_1.SharedSourceLayers);\nvar OfftubeOutputLayers;\n(function (OfftubeOutputLayers) {\n    OfftubeOutputLayers[\"SEC\"] = \"sec\";\n    OfftubeOutputLayers[\"OVERLAY\"] = \"overlay\";\n    OfftubeOutputLayers[\"JINGLE\"] = \"jingle\";\n    OfftubeOutputLayers[\"SELECTED_ADLIB\"] = \"selectedAdlib\";\n    OfftubeOutputLayers[\"AUX\"] = \"aux\";\n    OfftubeOutputLayers[\"PGM\"] = \"pgm\";\n})(OfftubeOutputLayers = exports.OfftubeOutputLayers || (exports.OfftubeOutputLayers = {}));\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AtemSourceIndex;\n(function (AtemSourceIndex) {\n    AtemSourceIndex[AtemSourceIndex[\"Blk\"] = 0] = \"Blk\";\n    AtemSourceIndex[AtemSourceIndex[\"Bars\"] = 1000] = \"Bars\";\n    AtemSourceIndex[AtemSourceIndex[\"Col1\"] = 2001] = \"Col1\";\n    AtemSourceIndex[AtemSourceIndex[\"Col2\"] = 2002] = \"Col2\";\n    AtemSourceIndex[AtemSourceIndex[\"MP1\"] = 3010] = \"MP1\";\n    AtemSourceIndex[AtemSourceIndex[\"MP1K\"] = 3011] = \"MP1K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP2\"] = 3020] = \"MP2\";\n    AtemSourceIndex[AtemSourceIndex[\"MP2K\"] = 3021] = \"MP2K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP3\"] = 3030] = \"MP3\";\n    AtemSourceIndex[AtemSourceIndex[\"MP3K\"] = 3031] = \"MP3K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP4\"] = 3040] = \"MP4\";\n    AtemSourceIndex[AtemSourceIndex[\"MP4K\"] = 3041] = \"MP4K\";\n    AtemSourceIndex[AtemSourceIndex[\"SSrc\"] = 6000] = \"SSrc\";\n    AtemSourceIndex[AtemSourceIndex[\"SSrc2\"] = 6001] = \"SSrc2\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd1\"] = 7001] = \"Cfd1\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd2\"] = 7002] = \"Cfd2\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd3\"] = 7003] = \"Cfd3\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd4\"] = 7004] = \"Cfd4\";\n    AtemSourceIndex[AtemSourceIndex[\"Output1\"] = 8001] = \"Output1\";\n    AtemSourceIndex[AtemSourceIndex[\"Output2\"] = 8002] = \"Output2\";\n    AtemSourceIndex[AtemSourceIndex[\"Output3\"] = 8003] = \"Output3\";\n    AtemSourceIndex[AtemSourceIndex[\"Output4\"] = 8004] = \"Output4\";\n    AtemSourceIndex[AtemSourceIndex[\"Output5\"] = 8005] = \"Output5\";\n    AtemSourceIndex[AtemSourceIndex[\"Output6\"] = 8006] = \"Output6\";\n    AtemSourceIndex[AtemSourceIndex[\"Output7\"] = 8007] = \"Output7\";\n    AtemSourceIndex[AtemSourceIndex[\"Output8\"] = 8008] = \"Output8\";\n    AtemSourceIndex[AtemSourceIndex[\"Output9\"] = 8009] = \"Output9\";\n    AtemSourceIndex[AtemSourceIndex[\"Output10\"] = 80010] = \"Output10\";\n    AtemSourceIndex[AtemSourceIndex[\"Output11\"] = 80011] = \"Output11\";\n    AtemSourceIndex[AtemSourceIndex[\"Output12\"] = 80012] = \"Output12\";\n    AtemSourceIndex[AtemSourceIndex[\"Output13\"] = 80013] = \"Output13\";\n    AtemSourceIndex[AtemSourceIndex[\"Output14\"] = 80014] = \"Output14\";\n    AtemSourceIndex[AtemSourceIndex[\"Output15\"] = 80015] = \"Output15\";\n    AtemSourceIndex[AtemSourceIndex[\"Output16\"] = 80016] = \"Output16\";\n    AtemSourceIndex[AtemSourceIndex[\"Output17\"] = 80017] = \"Output17\";\n    AtemSourceIndex[AtemSourceIndex[\"Output18\"] = 80018] = \"Output18\";\n    AtemSourceIndex[AtemSourceIndex[\"Output19\"] = 80019] = \"Output19\";\n    AtemSourceIndex[AtemSourceIndex[\"Output20\"] = 80020] = \"Output20\";\n    AtemSourceIndex[AtemSourceIndex[\"Output21\"] = 80021] = \"Output21\";\n    AtemSourceIndex[AtemSourceIndex[\"Output22\"] = 80022] = \"Output22\";\n    AtemSourceIndex[AtemSourceIndex[\"Output23\"] = 80023] = \"Output23\";\n    AtemSourceIndex[AtemSourceIndex[\"Output24\"] = 80024] = \"Output24\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg1\"] = 10010] = \"Prg1\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv1\"] = 10011] = \"Prv1\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg2\"] = 10020] = \"Prg2\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv2\"] = 10021] = \"Prv2\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg3\"] = 10030] = \"Prg3\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv3\"] = 10031] = \"Prv3\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg4\"] = 10040] = \"Prg4\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv4\"] = 10041] = \"Prv4\";\n})(AtemSourceIndex = exports.AtemSourceIndex || (exports.AtemSourceIndex = {}));\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TimeFromFrames(frames) {\n    return (1000 / 25) * frames;\n}\nexports.TimeFromFrames = TimeFromFrames;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nfunction ParseCue(cue) {\n    if (!cue) {\n        return {\n            type: tv2_constants_1.CueType.Unknown,\n            iNewsCommand: ''\n        };\n    }\n    cue = cue.filter(c => c !== '');\n    // Replace multiple spaces / tabs with a single space\n    cue = cue.map(c => c.trim().replace(/\\s+/g, ' '));\n    if (cue.length === 0) {\n        return {\n            type: tv2_constants_1.CueType.Unknown,\n            iNewsCommand: ''\n        };\n    }\n    if (cue[0].match(/^[#* ]?kg[= ]ovl-all-out$/i) || cue[0].match(/^[#* ]?kg[= ]altud$/i)) {\n        // All out\n        return parseAllOut(cue);\n    }\n    else if (cue[0].match(/(?:^[*|#]?kg[ |=])|(?:^digi)/i)) {\n        // kg (Grafik)\n        return parsekg(cue);\n    }\n    else if (cue[0].match(/^]] [a-z]\\d\\.\\d [a-z] \\d \\[\\[$/i)) {\n        // MOS\n        return parseMOS(cue);\n    }\n    else if (cue[0].match(/[#|*]?cg\\d+[ -]pilotdata/i)) {\n        return parseMOS(cue);\n    }\n    else if (cue[0].match(/^EKSTERN=/i)) {\n        // EKSTERN\n        const eksternSource = cue[0].match(/^EKSTERN=(.+)$/i);\n        if (eksternSource) {\n            return {\n                type: tv2_constants_1.CueType.Ekstern,\n                source: eksternSource[1],\n                iNewsCommand: 'EKSTERN'\n            };\n        }\n    }\n    else if (cue[0].match(/^DVE=/i)) {\n        // DVE\n        return parseDVE(cue);\n    }\n    else if (cue[0].match(/^TELEFON=/i)) {\n        // Telefon\n        return parseTelefon(cue);\n    }\n    else if (cue[0].match(/^SS|(?:GRAFIK)=(?:.*)(?:$| )/i)) {\n        // Target engine\n        return parseTargetEngine(cue);\n    }\n    else if (cue[0].match(/^SS|(?:GRAFIK|VIZ)=(?:full|ovl|wall)(?:$| )/i)) {\n        return parseTargetEngine(cue);\n    }\n    else if (cue[0].match(/^VIZ=/i)) {\n        return parseVIZCues(cue);\n    }\n    else if (cue[0].match(/^STUDIE=MIC ON OFF$/i)) {\n        return parseMic(cue);\n    }\n    else if (cue[0].match(/^ADLIBPI?X=/i)) {\n        return parseAdLib(cue);\n    }\n    else if (cue[0].match(/^KOMMANDO=/i)) {\n        return parseKommando(cue);\n    }\n    else if (cue[0].match(/^LYD=/i)) {\n        return parseLYD(cue);\n    }\n    else if (cue[0].match(/^JINGLE\\d+=/i)) {\n        return parseJingle(cue);\n    }\n    return {\n        type: tv2_constants_1.CueType.Unknown,\n        iNewsCommand: ''\n    };\n}\nexports.ParseCue = ParseCue;\nfunction parsekg(cue) {\n    let kgCue = {\n        type: tv2_constants_1.CueType.Grafik,\n        template: '',\n        cue: '',\n        textFields: [],\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^([*|#]?kg|digi)/i);\n    kgCue.iNewsCommand = command ? command[1] : 'kg';\n    const firstLineValues = cue[0].match(/^[*|#]?kg[ |=]([\\w|\\d]+)( (.+))*$/i);\n    if (firstLineValues) {\n        kgCue.cue = cue[0].match(/kg/) ? 'kg' : 'KG'; // THIS ONE SHOULD NOT BE INSENSITIVE\n        kgCue.template = firstLineValues[1];\n        if (firstLineValues[3]) {\n            kgCue.textFields.push(firstLineValues[3]);\n        }\n    }\n    else if (cue[0].match(/^DIGI=/i)) {\n        kgCue.cue = 'DIGI';\n        const templateType = cue[0].match(/^DIGI=(.+)$/i);\n        if (templateType) {\n            kgCue.template = templateType[1];\n        }\n    }\n    let textFields = cue.length - 1;\n    if (isTime(cue[cue.length - 1])) {\n        kgCue = Object.assign(Object.assign({}, kgCue), parseTime(cue[cue.length - 1]));\n    }\n    else if (!cue[cue.length - 1].match(/;x.xx/i)) {\n        textFields += 1;\n    }\n    else {\n        kgCue.adlib = true;\n        const end = parseTime(cue[cue.length - 1]).end;\n        if (end) {\n            kgCue = Object.assign(Object.assign({}, kgCue), { end });\n        }\n    }\n    for (let i = 1; i < textFields; i++) {\n        kgCue.textFields.push(cue[i]);\n    }\n    if (!kgCue.start) {\n        kgCue.adlib = true;\n    }\n    return kgCue;\n}\nfunction parseMOS(cue) {\n    const mosCue = {\n        type: tv2_constants_1.CueType.MOS,\n        name: '',\n        vcpid: -1,\n        continueCount: -1,\n        iNewsCommand: 'VCP'\n    };\n    const realCue = [];\n    cue.forEach(line => {\n        if (!line.match(/[#|*]?cg\\d+[ -]pilotdata/i) &&\n            !line.match(/^]] [a-z]\\d\\.\\d [a-z] \\d \\[\\[$/i) &&\n            !line.match(/cg\\d+ \\]\\] .+? \\[\\[ pilotdata/i)) {\n            realCue.push(line);\n        }\n        else if (!!line.match(/[#|*]?cg\\d+[ -]pilotdata/i)) {\n            const engine = line.match(/[#|*]?cg(\\d+)[ -]pilotdata/i);\n            if (engine && engine[1]) {\n                mosCue.engine = engine[1];\n            }\n        }\n    });\n    if (realCue.length === 4) {\n        const vcpid = realCue[1].match(/^VCPID=(\\d+)$/i);\n        const continueCount = realCue[2].match(/^ContinueCount=(-?\\d+)$/i);\n        const timing = realCue[0].match(/L\\|(M|\\d{1,2}(?:\\:\\d{1,2}){0,2})\\|([SBO]|\\d{1,2}(?:\\:\\d{1,2}){0,2})$/i);\n        if (vcpid && continueCount) {\n            mosCue.name = realCue[0];\n            mosCue.vcpid = Number(vcpid[1]);\n            mosCue.continueCount = Number(continueCount[1]);\n            if (!!mosCue.name.match(/^ST4_WALL/i)) {\n                mosCue.isActuallyWall = true;\n            }\n            if (timing) {\n                if (timing[1] === 'M') {\n                    mosCue.adlib = true;\n                }\n                else if (isMosTime(timing[1])) {\n                    mosCue.start = parseTime(timing[1]).start;\n                }\n                if (timing[2].match(/[SBO]/i)) {\n                    mosCue.end = {\n                        infiniteMode: timing[2]\n                    };\n                }\n                else if (isMosTime(timing[2])) {\n                    mosCue.end = parseTime(timing[2]).start;\n                }\n            }\n            else {\n                mosCue.start = { seconds: 0 };\n            }\n        }\n    }\n    return mosCue;\n}\nfunction parseDVE(cue) {\n    let dvecue = {\n        type: tv2_constants_1.CueType.DVE,\n        template: '',\n        sources: {},\n        labels: [],\n        iNewsCommand: 'DVE'\n    };\n    cue.forEach(c => {\n        if (c.match(/^DVE=/i)) {\n            const template = c.match(/^DVE=(.+)$/i);\n            if (template) {\n                dvecue.template = template[1];\n            }\n        }\n        else if (c.match(/^INP\\d+=/i)) {\n            const input = c.match(/^(INP\\d)+=(.+)$/i);\n            if (input && input[1] && input[2]) {\n                dvecue.sources[input[1].toUpperCase()] = input[2];\n            }\n        }\n        else if (c.match(/^BYNAVN=/i)) {\n            const labels = c.match(/^BYNAVN=(.+)$/i);\n            if (labels) {\n                dvecue.labels = labels[1].split(/\\/|\\\\/i);\n            }\n        }\n        else if (isTime(c)) {\n            dvecue = Object.assign(Object.assign({}, dvecue), parseTime(c));\n        }\n    });\n    return dvecue;\n}\nfunction parseTelefon(cue) {\n    const telefonCue = {\n        type: tv2_constants_1.CueType.Telefon,\n        source: '',\n        iNewsCommand: 'TELEFON'\n    };\n    const source = cue[0].match(/^TELEFON=(.+)$/i);\n    if (source) {\n        telefonCue.source = source[1];\n    }\n    if (cue.length > 1) {\n        // tslint:disable-next-line:prefer-conditional-expression\n        if (cue[1].match(/(?:^[*|#]?kg[ |=])|(?:^digi)/i)) {\n            telefonCue.vizObj = parsekg(cue.slice(1, cue.length));\n        }\n        else {\n            telefonCue.vizObj = parseMOS(cue.slice(1, cue.length));\n        }\n    }\n    return telefonCue;\n}\nfunction parseVIZCues(cue) {\n    let vizCues = {\n        type: tv2_constants_1.CueType.VIZ,\n        rawType: cue[0],\n        content: {},\n        design: '',\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^(VIZ|GRAFIK)/i);\n    vizCues.iNewsCommand = command ? command[1] : 'VIZ';\n    const design = cue[0].match(/^(?:VIZ|GRAFIK)=(.*)$/i);\n    if (design) {\n        vizCues.design = design[1];\n    }\n    for (let i = 1; i < cue.length; i++) {\n        if (isTime(cue[i])) {\n            vizCues = Object.assign(Object.assign({}, vizCues), parseTime(cue[i]));\n        }\n        else {\n            const c = cue[i].split('=');\n            vizCues.content[c[0].toString().toUpperCase()] = c[1];\n        }\n    }\n    return vizCues;\n}\nfunction parseMic(cue) {\n    let micCue = {\n        type: tv2_constants_1.CueType.Mic,\n        mics: {},\n        iNewsCommand: 'STUDIE'\n    };\n    cue.forEach(c => {\n        if (!c.match(/^STUDIE=MIC ON OFF$/i)) {\n            if (isTime(c)) {\n                micCue = Object.assign(Object.assign({}, micCue), parseTime(c));\n            }\n            else {\n                const micState = c.match(/^(.+)=((?:ON)|(?:OFF))?$/i);\n                if (micState) {\n                    micCue.mics[micState[1].toString()] = micState[2] ? micState[2] === 'ON' : false;\n                }\n            }\n        }\n    });\n    return micCue;\n}\nfunction parseAdLib(cue) {\n    const adlib = {\n        type: tv2_constants_1.CueType.AdLib,\n        variant: '',\n        inputs: {},\n        iNewsCommand: 'ADLIBPIX'\n    };\n    const variant = cue[0].match(/^ADLIBPI?X=(.+)$/i);\n    if (variant) {\n        adlib.variant = variant[1];\n    }\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < cue.length; i++) {\n        const input = cue[i].match(/^(INP\\d)+=(.+)$/i);\n        if (input && input[1] && input[2] && adlib.inputs !== undefined) {\n            adlib.inputs[input[1].toString().toUpperCase()] = input[2];\n        }\n        const bynavn = cue[i].match(/^BYNAVN=(.)$/i);\n        if (bynavn) {\n            adlib.bynavn = bynavn[1];\n        }\n    }\n    return adlib;\n}\nfunction parseKommando(cue) {\n    let kommandoCue = {\n        type: tv2_constants_1.CueType.Profile,\n        profile: '',\n        iNewsCommand: 'KOMMANDO'\n    };\n    if (cue[1]) {\n        kommandoCue.profile = cue[1];\n    }\n    if (cue[2] && isTime(cue[2])) {\n        kommandoCue = Object.assign(Object.assign({}, kommandoCue), parseTime(cue[2]));\n    }\n    return kommandoCue;\n}\nfunction parseLYD(cue) {\n    let lydCue = {\n        type: tv2_constants_1.CueType.LYD,\n        variant: '',\n        iNewsCommand: 'LYD'\n    };\n    const command = cue[0].match(/^LYD=(.*)$/i);\n    if (command) {\n        lydCue.variant = command[1];\n    }\n    if (cue[1]) {\n        if (isTime(cue[1])) {\n            lydCue = Object.assign(Object.assign({}, lydCue), parseTime(cue[1]));\n        }\n        else if (cue[1].match(/;x.xx/i)) {\n            lydCue.adlib = true;\n        }\n    }\n    return lydCue;\n}\nfunction parseJingle(cue) {\n    const jingleCue = {\n        type: tv2_constants_1.CueType.Jingle,\n        clip: '',\n        iNewsCommand: 'JINGLE'\n    };\n    const clip = cue[0].match(/^JINGLE\\d+=(.*)$/i);\n    if (clip && clip[1]) {\n        jingleCue.clip = clip[1];\n    }\n    return jingleCue;\n}\nfunction parseTargetEngine(cue) {\n    let engineCue = {\n        type: tv2_constants_1.CueType.TargetEngine,\n        rawType: cue[0],\n        content: {},\n        data: {\n            engine: ''\n        },\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^(VIZ|GRAFIK|SS)/i);\n    engineCue.iNewsCommand = command ? command[1] : 'SS';\n    const engine = cue[0].match(/^(?:VIZ|GRAFIK|SS)=(.*)$/i);\n    if (engine) {\n        engineCue.data.engine = engine[1];\n    }\n    for (let i = 1; i < cue.length; i++) {\n        if (isTime(cue[i])) {\n            engineCue = Object.assign(Object.assign({}, engineCue), parseTime(cue[i]));\n        }\n        else {\n            const c = cue[i].split('=');\n            engineCue.content[c[0].toString().toUpperCase()] = c[1];\n        }\n    }\n    return engineCue;\n}\nfunction parseAllOut(cue) {\n    let clearCue = {\n        type: tv2_constants_1.CueType.ClearGrafiks,\n        iNewsCommand: ''\n    };\n    let time = false;\n    cue.forEach(c => {\n        const command = c.match(/^([#* ]?kg)/i);\n        if (command) {\n            clearCue.iNewsCommand = command[1];\n        }\n        if (isTime(c)) {\n            time = true;\n            clearCue = Object.assign(Object.assign({}, clearCue), parseTime(c));\n        }\n    });\n    if (!time) {\n        clearCue.adlib = true;\n    }\n    return clearCue;\n}\nfunction isTime(line) {\n    return (line &&\n        !!line\n            .replace(/\\s+/gi, '')\n            .match(/^;\\d{1,2}(?:(?:\\.\\d{1,2}){0,1}){0,2}(?:(?:-\\d{1,2}(?:(?:\\.\\d{1,2}){0,1}){0,2}){0,1}|(?:-[BSO]))$/i));\n}\nexports.isTime = isTime;\nfunction isMosTime(line) {\n    return !!line.replace(/\\s+/gi, '').match(/\\d{1,2}(?:\\:\\d{1,2}){1,2}/i);\n}\nexports.isMosTime = isMosTime;\nfunction parseTime(line) {\n    const retTime = {\n        start: {},\n        end: {}\n    };\n    const startAndEnd = line.split('-');\n    startAndEnd[0] = startAndEnd[0].replace(';', '');\n    startAndEnd.forEach((time, i) => {\n        time = time.replace(/\\s+/gi, '');\n        const field = i === 0 ? 'start' : 'end';\n        if (time.match(/^[BSO]$/i) && i !== 0) {\n            retTime[field].infiniteMode = time;\n        }\n        else {\n            if (!!time.match(/\\./i)) {\n                const timeSegments = time.split('.');\n                if (timeSegments[0]) {\n                    retTime[field].seconds = (Number(timeSegments[0]) || 0) * 60;\n                }\n                if (timeSegments[1]) {\n                    if (retTime[field].seconds) {\n                        retTime[field].seconds += Number(timeSegments[1].replace('.', '')) || 0;\n                    }\n                    else {\n                        retTime[field].seconds = Number(timeSegments[1].replace('.', '')) || 0;\n                    }\n                }\n                if (timeSegments[2]) {\n                    retTime[field].frames = Number(timeSegments[2].replace('.', '')) || 0;\n                }\n            }\n            else {\n                const timeSegments = time.split(':');\n                if (timeSegments[0]) {\n                    retTime[field].seconds = (Number(timeSegments[0]) || 0) * 60;\n                }\n                if (timeSegments[1]) {\n                    if (retTime[field].seconds) {\n                        retTime[field].seconds += Number(timeSegments[1]) || 0;\n                    }\n                    else {\n                        retTime[field].seconds = Number(timeSegments[1]) || 0;\n                    }\n                }\n            }\n        }\n    });\n    if (!Object.keys(retTime.start).length) {\n        retTime.start = undefined;\n    }\n    if (!Object.keys(retTime.end).length) {\n        retTime.end = undefined;\n    }\n    return retTime;\n}\nexports.parseTime = parseTime;\n/**\n * Creates a parent class for a part, for keeping children of the parent alive when the parent is alive.\n * @param studio Studio name that the part belongs to.\n * @param partDefinition Part to create parent string for.\n */\nfunction PartToParentClass(studio, partDefinition) {\n    switch (partDefinition.type) {\n        case \"Kam\" /* Kam */:\n            return CameraParentClass(studio, partDefinition.variant.name);\n        case \"Server\" /* Server */:\n            const clip = partDefinition.fields.videoId;\n            if (clip) {\n                return ServerParentClass(studio, clip);\n            }\n            else {\n                return;\n            }\n        case \"EVS\" /* EVS */:\n            return EVSParentClass(studio, partDefinition.variant.evs);\n        case \"Unknown\" /* Unknown */:\n            return UnknownPartParentClass(studio, partDefinition);\n        default:\n            return;\n    }\n}\nexports.PartToParentClass = PartToParentClass;\nfunction CameraParentClass(studio, cameraName) {\n    return `${studio.toLowerCase()}_parent_camera_${cameraName.toLowerCase()}`;\n}\nexports.CameraParentClass = CameraParentClass;\nfunction EksternParentClass(studio, source) {\n    return `${studio.toLowerCase()}_parent_ekstern_${source.toLowerCase()}`;\n}\nexports.EksternParentClass = EksternParentClass;\nfunction ServerParentClass(studio, clip) {\n    return `${studio.toLowerCase()}_parent_server_${clip.toLowerCase()}`;\n}\nexports.ServerParentClass = ServerParentClass;\nfunction EVSParentClass(studio, evs) {\n    return `${studio.toLowerCase()}_parent_evs_${evs.toLowerCase()}`;\n}\nexports.EVSParentClass = EVSParentClass;\nfunction DVEParentClass(studio, dve) {\n    return `${studio.toLowerCase()}_parent_dve_${dve.toLowerCase()}`;\n}\nexports.DVEParentClass = DVEParentClass;\nfunction TLFParentClass(studio, source) {\n    return `${studio.toLowerCase()}_parent_tlf_${source.toLowerCase()}`;\n}\nexports.TLFParentClass = TLFParentClass;\nfunction UnknownPartParentClass(studio, partDefinition) {\n    const firstCue = partDefinition.cues[0];\n    if (!firstCue) {\n        return;\n    }\n    switch (firstCue.type) {\n        case tv2_constants_1.CueType.DVE:\n            return DVEParentClass(studio, firstCue.template);\n        case tv2_constants_1.CueType.Ekstern:\n            return EksternParentClass(studio, firstCue.source);\n        case tv2_constants_1.CueType.Telefon:\n            return TLFParentClass(studio, firstCue.source);\n        default:\n            return;\n    }\n}\nexports.UnknownPartParentClass = UnknownPartParentClass;\nfunction AddParentClass(partDefinition) {\n    return !!partDefinition.cues.filter(cue => (cue.type === tv2_constants_1.CueType.Grafik || cue.type === tv2_constants_1.CueType.MOS) &&\n        cue.end &&\n        cue.end.infiniteMode &&\n        cue.end.infiniteMode === 'B').length;\n}\nexports.AddParentClass = AddParentClass;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nfunction CreatePartInvalid(ingestPart, externalIdSuffix) {\n    const part = tv2_common_1.literal({\n        externalId: ingestPart.externalId + (externalIdSuffix ? `_${externalIdSuffix}` : ''),\n        title: ingestPart.rawType || 'Unknown',\n        metaData: {},\n        typeVariant: '',\n        invalid: true,\n        autoNext: true\n    });\n    return {\n        part,\n        adLibPieces: [],\n        pieces: []\n    };\n}\nexports.CreatePartInvalid = CreatePartInvalid;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nfunction MakeContentServer(file, mediaPlayerSessionId, partDefinition, config, sourceLayers, adLib, offtubeOptions) {\n    return tv2_common_1.literal({\n        studioLabel: '',\n        fileName: file,\n        path: `${config.studio.ClipSourcePath}\\\\${file}${config.studio.ClipFileExtension}`,\n        mediaFlowIds: [config.studio.MediaFlowId],\n        firstWords: '',\n        lastWords: '',\n        timelineObjects: tv2_common_1.literal([\n            tv2_common_1.literal(Object.assign(Object.assign({ id: '', enable: {\n                    while: '1'\n                }, priority: 1, layer: sourceLayers.Caspar.ClipPending, content: Object.assign({ deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG, type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA, file, loop: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? false : adLib, noStarttime: true }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? { playing: false } : {})) }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? {\n                keyframes: [\n                    {\n                        id: '',\n                        enable: {\n                            while: `.${offtubeOptions.enabler}`\n                        },\n                        content: {\n                            inPoint: 0,\n                            playing: true\n                        }\n                    }\n                ]\n            }\n                : {})), { metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                }, classes: [...(tv2_common_1.AddParentClass(partDefinition) && !adLib ? [tv2_common_1.ServerParentClass('studio0', file)] : [])] })),\n            tv2_common_1.literal({\n                id: '',\n                enable: getServerAdlibEnable(!!adLib, config.studio.CasparPrerollDuration, offtubeOptions),\n                priority: 1,\n                layer: sourceLayers.ATEM.MEPGM,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                    me: {\n                        input: undefined,\n                        transition: partDefinition.transition\n                            ? tv2_common_1.TransitionFromString(partDefinition.transition.style)\n                            : timeline_state_resolver_types_1.AtemTransitionStyle.CUT,\n                        transitionSettings: tv2_common_1.TransitionSettings(partDefinition)\n                    }\n                },\n                metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                },\n                classes: [...(adLib ? ['adlib_deparent'] : [])]\n            }),\n            tv2_common_1.literal({\n                id: '',\n                enable: getServerAdlibEnable(!!adLib, 0, offtubeOptions),\n                priority: 1,\n                layer: sourceLayers.Sisyfos.ClipPending,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    // isPgm: voiceOver ? 2 : 1\n                    isPgm: 1\n                },\n                metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                },\n                classes: []\n            }),\n            ...(sourceLayers.STICKY_LAYERS\n                ? sourceLayers.STICKY_LAYERS.map(layer => {\n                    return tv2_common_1.literal({\n                        id: '',\n                        enable: getServerAdlibEnable(!!adLib, 0, offtubeOptions),\n                        priority: 1,\n                        layer,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                            isPgm: 0\n                        },\n                        metaData: {\n                            sisyfosPersistLevel: true\n                        }\n                    });\n                })\n                : [])\n        ])\n    });\n}\nexports.MakeContentServer = MakeContentServer;\nfunction getServerAdlibEnable(adlib, startTime, offtubeOptions) {\n    if (adlib && (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube)) {\n        return {\n            while: `.${offtubeOptions.enabler}`\n        };\n    }\n    return {\n        start: startTime\n    };\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(70), exports);\ntslib_1.__exportStar(__webpack_require__(71), exports);\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BlueprintManifestType;\n(function (BlueprintManifestType) {\n    BlueprintManifestType[\"SYSTEM\"] = \"system\";\n    BlueprintManifestType[\"STUDIO\"] = \"studio\";\n    BlueprintManifestType[\"SHOWSTYLE\"] = \"showstyle\";\n})(BlueprintManifestType = exports.BlueprintManifestType || (exports.BlueprintManifestType = {}));\n//# sourceMappingURL=api.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IBlueprintAsRunLogEventContent;\n(function (IBlueprintAsRunLogEventContent) {\n    IBlueprintAsRunLogEventContent[\"STARTEDPLAYBACK\"] = \"startedPlayback\";\n    IBlueprintAsRunLogEventContent[\"STOPPEDPLAYBACK\"] = \"stoppedPlayback\";\n})(IBlueprintAsRunLogEventContent = exports.IBlueprintAsRunLogEventContent || (exports.IBlueprintAsRunLogEventContent = {}));\n//# sourceMappingURL=asRunLog.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConfigManifestEntryType;\n(function (ConfigManifestEntryType) {\n    ConfigManifestEntryType[\"STRING\"] = \"string\";\n    ConfigManifestEntryType[\"NUMBER\"] = \"number\";\n    ConfigManifestEntryType[\"BOOLEAN\"] = \"boolean\";\n    ConfigManifestEntryType[\"ENUM\"] = \"enum\";\n    ConfigManifestEntryType[\"TABLE\"] = \"table\";\n    ConfigManifestEntryType[\"SELECT\"] = \"select\";\n    ConfigManifestEntryType[\"SOURCE_LAYERS\"] = \"source_layers\";\n    ConfigManifestEntryType[\"LAYER_MAPPINGS\"] = \"layer_mappings\";\n})(ConfigManifestEntryType = exports.ConfigManifestEntryType || (exports.ConfigManifestEntryType = {}));\n//# sourceMappingURL=config.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** The type of the source layer, used to enable specific functions for special-type layers */\nvar SourceLayerType;\n(function (SourceLayerType) {\n    SourceLayerType[SourceLayerType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    SourceLayerType[SourceLayerType[\"CAMERA\"] = 1] = \"CAMERA\";\n    SourceLayerType[SourceLayerType[\"VT\"] = 2] = \"VT\";\n    SourceLayerType[SourceLayerType[\"REMOTE\"] = 3] = \"REMOTE\";\n    SourceLayerType[SourceLayerType[\"SCRIPT\"] = 4] = \"SCRIPT\";\n    SourceLayerType[SourceLayerType[\"GRAPHICS\"] = 5] = \"GRAPHICS\";\n    SourceLayerType[SourceLayerType[\"SPLITS\"] = 6] = \"SPLITS\";\n    SourceLayerType[SourceLayerType[\"AUDIO\"] = 7] = \"AUDIO\";\n    SourceLayerType[SourceLayerType[\"CAMERA_MOVEMENT\"] = 8] = \"CAMERA_MOVEMENT\";\n    SourceLayerType[SourceLayerType[\"METADATA\"] = 9] = \"METADATA\";\n    SourceLayerType[SourceLayerType[\"LOWER_THIRD\"] = 10] = \"LOWER_THIRD\";\n    SourceLayerType[SourceLayerType[\"LIVE_SPEAK\"] = 11] = \"LIVE_SPEAK\";\n    SourceLayerType[SourceLayerType[\"MIC\"] = 12] = \"MIC\";\n    SourceLayerType[SourceLayerType[\"TRANSITION\"] = 13] = \"TRANSITION\";\n    SourceLayerType[SourceLayerType[\"LIGHTS\"] = 14] = \"LIGHTS\";\n})(SourceLayerType = exports.SourceLayerType || (exports.SourceLayerType = {}));\n//# sourceMappingURL=content.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IBlueprintExternalMessageQueueType;\n(function (IBlueprintExternalMessageQueueType) {\n    IBlueprintExternalMessageQueueType[\"SOAP\"] = \"soap\";\n    IBlueprintExternalMessageQueueType[\"SLACK\"] = \"slack\";\n    IBlueprintExternalMessageQueueType[\"RABBIT_MQ\"] = \"rabbitmq\";\n})(IBlueprintExternalMessageQueueType = exports.IBlueprintExternalMessageQueueType || (exports.IBlueprintExternalMessageQueueType = {}));\n//# sourceMappingURL=message.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PartHoldMode;\n(function (PartHoldMode) {\n    PartHoldMode[PartHoldMode[\"NONE\"] = 0] = \"NONE\";\n    PartHoldMode[PartHoldMode[\"FROM\"] = 1] = \"FROM\";\n    PartHoldMode[PartHoldMode[\"TO\"] = 2] = \"TO\";\n})(PartHoldMode = exports.PartHoldMode || (exports.PartHoldMode = {}));\nvar PieceLifespan;\n(function (PieceLifespan) {\n    PieceLifespan[PieceLifespan[\"Normal\"] = 0] = \"Normal\";\n    PieceLifespan[PieceLifespan[\"OutOnNextPart\"] = 1] = \"OutOnNextPart\";\n    PieceLifespan[PieceLifespan[\"OutOnNextSegment\"] = 2] = \"OutOnNextSegment\";\n    PieceLifespan[PieceLifespan[\"Infinite\"] = 3] = \"Infinite\";\n})(PieceLifespan = exports.PieceLifespan || (exports.PieceLifespan = {}));\n//# sourceMappingURL=rundown.js.map\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LookaheadMode;\n(function (LookaheadMode) {\n    LookaheadMode[LookaheadMode[\"NONE\"] = 0] = \"NONE\";\n    LookaheadMode[LookaheadMode[\"PRELOAD\"] = 1] = \"PRELOAD\";\n    LookaheadMode[LookaheadMode[\"RETAIN\"] = 2] = \"RETAIN\";\n    LookaheadMode[LookaheadMode[\"WHEN_CLEAR\"] = 3] = \"WHEN_CLEAR\";\n})(LookaheadMode = exports.LookaheadMode || (exports.LookaheadMode = {}));\n//# sourceMappingURL=studio.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nexports.Timeline = timeline_state_resolver_types_1.Timeline;\nvar PlayoutTimelinePrefixes;\n(function (PlayoutTimelinePrefixes) {\n    PlayoutTimelinePrefixes[\"PART_GROUP_PREFIX\"] = \"part_group_\";\n    PlayoutTimelinePrefixes[\"PART_GROUP_FIRST_ITEM_PREFIX\"] = \"part_group_firstobject_\";\n    PlayoutTimelinePrefixes[\"PIECE_GROUP_PREFIX\"] = \"piece_group_\";\n    PlayoutTimelinePrefixes[\"PIECE_GROUP_FIRST_ITEM_PREFIX\"] = \"piece_group_firstobject_\";\n})(PlayoutTimelinePrefixes = exports.PlayoutTimelinePrefixes || (exports.PlayoutTimelinePrefixes = {}));\nfunction getPartGroupId(part) {\n    if (typeof part === 'string') {\n        return PlayoutTimelinePrefixes.PART_GROUP_PREFIX + part;\n    }\n    return PlayoutTimelinePrefixes.PART_GROUP_PREFIX + part._id;\n}\nexports.getPartGroupId = getPartGroupId;\nfunction getPieceGroupId(piece) {\n    if (typeof piece === 'string') {\n        return PlayoutTimelinePrefixes.PIECE_GROUP_PREFIX + piece;\n    }\n    return PlayoutTimelinePrefixes.PIECE_GROUP_PREFIX + piece._id;\n}\nexports.getPieceGroupId = getPieceGroupId;\nfunction getPartFirstObjectId(part) {\n    if (typeof part === 'string') {\n        return PlayoutTimelinePrefixes.PART_GROUP_FIRST_ITEM_PREFIX + part;\n    }\n    return PlayoutTimelinePrefixes.PART_GROUP_FIRST_ITEM_PREFIX + part._id;\n}\nexports.getPartFirstObjectId = getPartFirstObjectId;\nfunction getPieceFirstObjectId(piece) {\n    if (typeof piece === 'string') {\n        return PlayoutTimelinePrefixes.PIECE_GROUP_FIRST_ITEM_PREFIX + piece;\n    }\n    return PlayoutTimelinePrefixes.PIECE_GROUP_FIRST_ITEM_PREFIX + piece._id;\n}\nexports.getPieceFirstObjectId = getPieceFirstObjectId;\nvar TimelineObjHoldMode;\n(function (TimelineObjHoldMode) {\n    TimelineObjHoldMode[TimelineObjHoldMode[\"NORMAL\"] = 0] = \"NORMAL\";\n    TimelineObjHoldMode[TimelineObjHoldMode[\"ONLY\"] = 1] = \"ONLY\";\n    TimelineObjHoldMode[TimelineObjHoldMode[\"EXCEPT\"] = 2] = \"EXCEPT\"; // Only use when not in HOLD\n})(TimelineObjHoldMode = exports.TimelineObjHoldMode || (exports.TimelineObjHoldMode = {}));\n//# sourceMappingURL=timeline.js.map\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingAtemType;\n(function (MappingAtemType) {\n    MappingAtemType[MappingAtemType[\"MixEffect\"] = 0] = \"MixEffect\";\n    MappingAtemType[MappingAtemType[\"DownStreamKeyer\"] = 1] = \"DownStreamKeyer\";\n    MappingAtemType[MappingAtemType[\"SuperSourceBox\"] = 2] = \"SuperSourceBox\";\n    MappingAtemType[MappingAtemType[\"Auxilliary\"] = 3] = \"Auxilliary\";\n    MappingAtemType[MappingAtemType[\"MediaPlayer\"] = 4] = \"MediaPlayer\";\n    MappingAtemType[MappingAtemType[\"SuperSourceProperties\"] = 5] = \"SuperSourceProperties\";\n    MappingAtemType[MappingAtemType[\"AudioChannel\"] = 6] = \"AudioChannel\";\n    MappingAtemType[MappingAtemType[\"MacroPlayer\"] = 7] = \"MacroPlayer\";\n})(MappingAtemType = exports.MappingAtemType || (exports.MappingAtemType = {}));\nvar TimelineContentTypeAtem;\n(function (TimelineContentTypeAtem) {\n    TimelineContentTypeAtem[\"ME\"] = \"me\";\n    TimelineContentTypeAtem[\"DSK\"] = \"dsk\";\n    TimelineContentTypeAtem[\"AUX\"] = \"aux\";\n    TimelineContentTypeAtem[\"SSRC\"] = \"ssrc\";\n    TimelineContentTypeAtem[\"SSRCPROPS\"] = \"ssrcProps\";\n    TimelineContentTypeAtem[\"MEDIAPLAYER\"] = \"mp\";\n    TimelineContentTypeAtem[\"AUDIOCHANNEL\"] = \"audioChan\";\n    TimelineContentTypeAtem[\"MACROPLAYER\"] = \"macroPlayer\";\n})(TimelineContentTypeAtem = exports.TimelineContentTypeAtem || (exports.TimelineContentTypeAtem = {}));\nvar AtemTransitionStyle;\n(function (AtemTransitionStyle) {\n    AtemTransitionStyle[AtemTransitionStyle[\"MIX\"] = 0] = \"MIX\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DIP\"] = 1] = \"DIP\";\n    AtemTransitionStyle[AtemTransitionStyle[\"WIPE\"] = 2] = \"WIPE\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DVE\"] = 3] = \"DVE\";\n    AtemTransitionStyle[AtemTransitionStyle[\"STING\"] = 4] = \"STING\";\n    AtemTransitionStyle[AtemTransitionStyle[\"CUT\"] = 5] = \"CUT\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DUMMY\"] = 6] = \"DUMMY\";\n})(AtemTransitionStyle = exports.AtemTransitionStyle || (exports.AtemTransitionStyle = {}));\n//# sourceMappingURL=atem.js.map\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeCasparCg;\n(function (TimelineContentTypeCasparCg) {\n    TimelineContentTypeCasparCg[\"MEDIA\"] = \"media\";\n    TimelineContentTypeCasparCg[\"IP\"] = \"ip\";\n    TimelineContentTypeCasparCg[\"INPUT\"] = \"input\";\n    TimelineContentTypeCasparCg[\"TEMPLATE\"] = \"template\";\n    TimelineContentTypeCasparCg[\"HTMLPAGE\"] = \"htmlpage\";\n    TimelineContentTypeCasparCg[\"ROUTE\"] = \"route\";\n    TimelineContentTypeCasparCg[\"RECORD\"] = \"record\";\n})(TimelineContentTypeCasparCg = exports.TimelineContentTypeCasparCg || (exports.TimelineContentTypeCasparCg = {}));\n// Note: enums copied from casparcg-connection\nvar Transition;\n(function (Transition) {\n    Transition[\"MIX\"] = \"MIX\";\n    Transition[\"CUT\"] = \"CUT\";\n    Transition[\"PUSH\"] = \"PUSH\";\n    Transition[\"WIPE\"] = \"WIPE\";\n    Transition[\"SLIDE\"] = \"SLIDE\";\n    Transition[\"STING\"] = \"STING\";\n})(Transition = exports.Transition || (exports.Transition = {}));\nvar Ease;\n(function (Ease) {\n    Ease[\"LINEAR\"] = \"LINEAR\";\n    Ease[\"NONE\"] = \"NONE\";\n    Ease[\"EASEINBACK\"] = \"EASEINBACK\";\n    Ease[\"EASEINBOUNCE\"] = \"EASEINBOUNCE\";\n    Ease[\"EASEINCIRC\"] = \"EASEINCIRC\";\n    Ease[\"EASEINCUBIC\"] = \"EASEINCUBIC\";\n    Ease[\"EASEINELASTIC\"] = \"EASEINELASTIC\";\n    Ease[\"EASEINEXPO\"] = \"EASEINEXPO\";\n    Ease[\"EASEINOUTBACK\"] = \"EASEINOUTBACK\";\n    Ease[\"EASEINOUTBOUNCE\"] = \"EASEINOUTBOUNCE\";\n    Ease[\"EASEINOUTCIRC\"] = \"EASEINOUTCIRC\";\n    Ease[\"EASEINOUTCUBIC\"] = \"EASEINOUTCUBIC\";\n    Ease[\"EASEINOUTELASTIC\"] = \"EASEINOUTELASTIC\";\n    Ease[\"EASEINOUTEXPO\"] = \"EASEINOUTEXPO\";\n    Ease[\"EASEINOUTQUAD\"] = \"EASEINOUTQUAD\";\n    Ease[\"EASEINOUTQUART\"] = \"EASEINOUTQUART\";\n    Ease[\"EASEINOUTQUINT\"] = \"EASEINOUTQUINT\";\n    Ease[\"EASEINOUTSINE\"] = \"EASEINOUTSINE\";\n    Ease[\"EASEINQUAD\"] = \"EASEINQUAD\";\n    Ease[\"EASEINQUART\"] = \"EASEINQUART\";\n    Ease[\"EASEINQUINT\"] = \"EASEINQUINT\";\n    Ease[\"EASEINSINE\"] = \"EASEINSINE\";\n    Ease[\"EASELINEAR\"] = \"EASELINEAR\";\n    Ease[\"EASENONE\"] = \"EASENONE\";\n    Ease[\"EASEOUTBACK\"] = \"EASEOUTBACK\";\n    Ease[\"EASEOUTBOUNCE\"] = \"EASEOUTBOUNCE\";\n    Ease[\"EASEOUTCIRC\"] = \"EASEOUTCIRC\";\n    Ease[\"EASEOUTCUBIC\"] = \"EASEOUTCUBIC\";\n    Ease[\"EASEOUTELASTIC\"] = \"EASEOUTELASTIC\";\n    Ease[\"EASEOUTEXPO\"] = \"EASEOUTEXPO\";\n    Ease[\"EASEOUTINBACK\"] = \"EASEOUTINBACK\";\n    Ease[\"EASEOUTINBOUNCE\"] = \"EASEOUTINBOUNCE\";\n    Ease[\"EASEOUTINCIRC\"] = \"EASEOUTINCIRC\";\n    Ease[\"EASEOUTINCUBIC\"] = \"EASEOUTINCUBIC\";\n    Ease[\"EASEOUTINELASTIC\"] = \"EASEOUTINELASTIC\";\n    Ease[\"EASEOUTINEXPO\"] = \"EASEOUTINEXPO\";\n    Ease[\"EASEOUTINQUAD\"] = \"EASEOUTINQUAD\";\n    Ease[\"EASEOUTINQUART\"] = \"EASEOUTINQUART\";\n    Ease[\"EASEOUTINQUINT\"] = \"EASEOUTINQUINT\";\n    Ease[\"EASEOUTINSINE\"] = \"EASEOUTINSINE\";\n    Ease[\"EASEOUTQUAD\"] = \"EASEOUTQUAD\";\n    Ease[\"EASEOUTQUART\"] = \"EASEOUTQUART\";\n    Ease[\"EASEOUTQUINT\"] = \"EASEOUTQUINT\";\n    Ease[\"EASEOUTSINE\"] = \"EASEOUTSINE\";\n    Ease[\"IN_BACK\"] = \"IN_BACK\";\n    Ease[\"IN_BOUNCE\"] = \"IN_BOUNCE\";\n    Ease[\"IN_CIRC\"] = \"IN_CIRC\";\n    Ease[\"IN_CUBIC\"] = \"IN_CUBIC\";\n    Ease[\"IN_ELASTIC\"] = \"IN_ELASTIC\";\n    Ease[\"IN_EXPO\"] = \"IN_EXPO\";\n    Ease[\"IN_OUT_BACK\"] = \"IN_OUT_BACK\";\n    Ease[\"IN_OUT_BOUNCE\"] = \"IN_OUT_BOUNCE\";\n    Ease[\"IN_OUT_CIRC\"] = \"IN_OUT_CIRC\";\n    Ease[\"IN_OUT_CUBIC\"] = \"IN_OUT_CUBIC\";\n    Ease[\"IN_OUT_ELASTIC\"] = \"IN_OUT_ELASTIC\";\n    Ease[\"IN_OUT_EXPO\"] = \"IN_OUT_EXPO\";\n    Ease[\"IN_OUT_QUAD\"] = \"IN_OUT_QUAD\";\n    Ease[\"IN_OUT_QUART\"] = \"IN_OUT_QUART\";\n    Ease[\"IN_OUT_QUINT\"] = \"IN_OUT_QUINT\";\n    Ease[\"IN_OUT_SINE\"] = \"IN_OUT_SINE\";\n    Ease[\"IN_QUAD\"] = \"IN_QUAD\";\n    Ease[\"IN_QUART\"] = \"IN_QUART\";\n    Ease[\"IN_QUINT\"] = \"IN_QUINT\";\n    Ease[\"IN_SINE\"] = \"IN_SINE\";\n    Ease[\"OUT_BACK\"] = \"OUT_BACK\";\n    Ease[\"OUT_BOUNCE\"] = \"OUT_BOUNCE\";\n    Ease[\"OUT_CIRC\"] = \"OUT_CIRC\";\n    Ease[\"OUT_CUBIC\"] = \"OUT_CUBIC\";\n    Ease[\"OUT_ELASTIC\"] = \"OUT_ELASTIC\";\n    Ease[\"OUT_EXPO\"] = \"OUT_EXPO\";\n    Ease[\"OUT_IN_BACK\"] = \"OUT_IN_BACK\";\n    Ease[\"OUT_IN_BOUNCE\"] = \"OUT_IN_BOUNCE\";\n    Ease[\"OUT_IN_CIRC\"] = \"OUT_IN_CIRC\";\n    Ease[\"OUT_IN_CUBIC\"] = \"OUT_IN_CUBIC\";\n    Ease[\"OUT_IN_ELASTIC\"] = \"OUT_IN_ELASTIC\";\n    Ease[\"OUT_IN_EXPO\"] = \"OUT_IN_EXPO\";\n    Ease[\"OUT_IN_QUAD\"] = \"OUT_IN_QUAD\";\n    Ease[\"OUT_IN_QUART\"] = \"OUT_IN_QUART\";\n    Ease[\"OUT_IN_QUINT\"] = \"OUT_IN_QUINT\";\n    Ease[\"OUT_IN_SINE\"] = \"OUT_IN_SINE\";\n    Ease[\"OUT_QUAD\"] = \"OUT_QUAD\";\n    Ease[\"OUT_QUART\"] = \"OUT_QUART\";\n    Ease[\"OUT_QUINT\"] = \"OUT_QUINT\";\n})(Ease = exports.Ease || (exports.Ease = {}));\nvar Direction;\n(function (Direction) {\n    Direction[\"LEFT\"] = \"LEFT\";\n    Direction[\"RIGHT\"] = \"RIGHT\";\n})(Direction = exports.Direction || (exports.Direction = {}));\nvar BlendMode;\n(function (BlendMode) {\n    BlendMode[\"ADD\"] = \"ADD\";\n    BlendMode[\"AVERAGE\"] = \"AVERAGE\";\n    BlendMode[\"COLOR\"] = \"COLOR\";\n    BlendMode[\"COLOR_BURN\"] = \"COLOR_BURN\";\n    BlendMode[\"COLOR_DODGE\"] = \"COLOR_DODGE\";\n    BlendMode[\"CONTRAST\"] = \"CONTRAST\";\n    BlendMode[\"DARKEN\"] = \"DARKEN\";\n    BlendMode[\"DIFFERENCE\"] = \"DIFFERENCE\";\n    BlendMode[\"EXCLUSION\"] = \"EXCLUSION\";\n    BlendMode[\"GLOW\"] = \"GLOW\";\n    BlendMode[\"HARD_LIGHT\"] = \"HARD_LIGHT\";\n    BlendMode[\"HARD_MIX\"] = \"HARD_MIX\";\n    BlendMode[\"LIGHTEN\"] = \"LIGHTEN\";\n    BlendMode[\"LINEAR_BURN\"] = \"LINEAR_BURN\";\n    BlendMode[\"LINEAR_DODGE\"] = \"LINEAR_DODGE\";\n    BlendMode[\"LINEAR_LIGHT\"] = \"LINEAR_LIGHT\";\n    BlendMode[\"LUMINOSITY\"] = \"LUMINOSITY\";\n    BlendMode[\"MULTIPLY\"] = \"MULTIPLY\";\n    BlendMode[\"NEGATION\"] = \"NEGATION\";\n    BlendMode[\"NORMAL\"] = \"NORMAL\";\n    BlendMode[\"OVERLAY\"] = \"OVERLAY\";\n    BlendMode[\"PHOENIX\"] = \"PHOENIX\";\n    BlendMode[\"PIN_LIGHT\"] = \"PIN_LIGHT\";\n    BlendMode[\"REFLECT\"] = \"REFLECT\";\n    BlendMode[\"SATURATION\"] = \"SATURATION\";\n    BlendMode[\"SCREEN\"] = \"SCREEN\";\n    BlendMode[\"SOFT_LIGHT\"] = \"SOFT_LIGHT\";\n    BlendMode[\"SUBTRACT\"] = \"SUBTRACT\";\n    BlendMode[\"VIVID_LIGHT\"] = \"VIVID_LIGHT\";\n})(BlendMode = exports.BlendMode || (exports.BlendMode = {}));\nvar ChannelFormat;\n(function (ChannelFormat) {\n    ChannelFormat[\"PAL\"] = \"PAL\";\n    ChannelFormat[\"NTSC\"] = \"NTSC\";\n    ChannelFormat[\"SD_576P2500\"] = \"SD_576P2500\";\n    ChannelFormat[\"HD_720P2398\"] = \"HD_720P2398\";\n    ChannelFormat[\"HD_720P2400\"] = \"HD_720P2400\";\n    ChannelFormat[\"HD_720P2500\"] = \"HD_720P2500\";\n    ChannelFormat[\"HD_720P2997\"] = \"HD_720P2997\";\n    ChannelFormat[\"HD_720P3000\"] = \"HD_720P3000\";\n    ChannelFormat[\"HD_720P5000\"] = \"HD_720P5000\";\n    ChannelFormat[\"HD_720P5994\"] = \"HD_720P5994\";\n    ChannelFormat[\"HD_720P6000\"] = \"HD_720P6000\";\n    ChannelFormat[\"HD_1080I5000\"] = \"HD_1080I5000\";\n    ChannelFormat[\"HD_1080I5994\"] = \"HD_1080I5994\";\n    ChannelFormat[\"HD_1080I6000\"] = \"HD_1080I6000\";\n    ChannelFormat[\"HD_1080P2398\"] = \"HD_1080P2398\";\n    ChannelFormat[\"HD_1080P2400\"] = \"HD_1080P2400\";\n    ChannelFormat[\"HD_1080P2500\"] = \"HD_1080P2500\";\n    ChannelFormat[\"HD_1080P2997\"] = \"HD_1080P2997\";\n    ChannelFormat[\"HD_1080P3000\"] = \"HD_1080P3000\";\n    ChannelFormat[\"HD_1080P5000\"] = \"HD_1080P5000\";\n    ChannelFormat[\"HD_1080P5994\"] = \"HD_1080P5994\";\n    ChannelFormat[\"HD_1080P6000\"] = \"HD_1080P6000\";\n    ChannelFormat[\"DCI_1080P2398\"] = \"DCI_1080P2398\";\n    ChannelFormat[\"DCI_1080P2400\"] = \"DCI_1080P2400\";\n    ChannelFormat[\"DCI_1080P2500\"] = \"DCI_1080P2500\";\n    ChannelFormat[\"DCI_2160P2398\"] = \"DCI_2160P2398\";\n    ChannelFormat[\"DCI_2160P2400\"] = \"DCI_2160P2400\";\n    ChannelFormat[\"DCI_2160P2500\"] = \"DCI_2160P2500\";\n    ChannelFormat[\"UCH_2160P2400\"] = \"UCH_2160P2400\";\n    ChannelFormat[\"UHD_1556P2398\"] = \"UHD_1556P2398\";\n    ChannelFormat[\"UHD_1556P2400\"] = \"UHD_1556P2400\";\n    ChannelFormat[\"UHD_1556P2500\"] = \"UHD_1556P2500\";\n    ChannelFormat[\"UHD_2160P2398\"] = \"UHD_2160P2398\";\n    ChannelFormat[\"UHD_2160P2500\"] = \"UHD_2160P2500\";\n    ChannelFormat[\"UHD_2160P2997\"] = \"UHD_2160P2997\";\n    ChannelFormat[\"UHD_2160P3000\"] = \"UHD_2160P3000\";\n    ChannelFormat[\"UHD_2160P5000\"] = \"UHD_2160P5000\";\n    ChannelFormat[\"UHD_2160P5994\"] = \"UHD_2160P5994\";\n    ChannelFormat[\"INVALID\"] = \"INVALID\";\n})(ChannelFormat = exports.ChannelFormat || (exports.ChannelFormat = {}));\nvar Chroma;\n(function (Chroma) {\n    Chroma[\"BLUE\"] = \"BLUE\";\n    Chroma[\"GREEN\"] = \"GREEN\";\n    Chroma[\"NONE\"] = \"NONE\";\n})(Chroma = exports.Chroma || (exports.Chroma = {}));\n//# sourceMappingURL=casparcg.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeHTTP;\n(function (TimelineContentTypeHTTP) {\n    TimelineContentTypeHTTP[\"GET\"] = \"get\";\n    TimelineContentTypeHTTP[\"POST\"] = \"post\";\n    TimelineContentTypeHTTP[\"PUT\"] = \"put\";\n    TimelineContentTypeHTTP[\"DELETE\"] = \"delete\";\n})(TimelineContentTypeHTTP = exports.TimelineContentTypeHTTP || (exports.TimelineContentTypeHTTP = {}));\n//# sourceMappingURL=httpSend.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingHyperdeckType;\n(function (MappingHyperdeckType) {\n    MappingHyperdeckType[\"TRANSPORT\"] = \"transport\";\n})(MappingHyperdeckType = exports.MappingHyperdeckType || (exports.MappingHyperdeckType = {}));\nvar TimelineContentTypeHyperdeck;\n(function (TimelineContentTypeHyperdeck) {\n    TimelineContentTypeHyperdeck[\"TRANSPORT\"] = \"transport\";\n})(TimelineContentTypeHyperdeck = exports.TimelineContentTypeHyperdeck || (exports.TimelineContentTypeHyperdeck = {}));\n// Note: These are copied from hyperdeck-connection -----------\nvar TransportStatus;\n(function (TransportStatus) {\n    TransportStatus[\"PREVIEW\"] = \"preview\";\n    TransportStatus[\"STOPPED\"] = \"stopped\";\n    TransportStatus[\"PLAY\"] = \"play\";\n    TransportStatus[\"FORWARD\"] = \"forward\";\n    TransportStatus[\"REWIND\"] = \"rewind\";\n    TransportStatus[\"JOG\"] = \"jog\";\n    TransportStatus[\"SHUTTLE\"] = \"shuttle\";\n    TransportStatus[\"RECORD\"] = \"record\";\n})(TransportStatus = exports.TransportStatus || (exports.TransportStatus = {}));\nvar SlotId;\n(function (SlotId) {\n    SlotId[SlotId[\"ONE\"] = 1] = \"ONE\";\n    SlotId[SlotId[\"TWO\"] = 2] = \"TWO\";\n})(SlotId = exports.SlotId || (exports.SlotId = {}));\nvar SlotStatus;\n(function (SlotStatus) {\n    SlotStatus[\"EMPTY\"] = \"empty\";\n    SlotStatus[\"MOUNTING\"] = \"mounting\";\n    SlotStatus[\"ERROR\"] = \"error\";\n    SlotStatus[\"MOUNTED\"] = \"mounted\";\n})(SlotStatus = exports.SlotStatus || (exports.SlotStatus = {}));\nvar VideoFormat;\n(function (VideoFormat) {\n    VideoFormat[\"NTSC\"] = \"NTSC\";\n    VideoFormat[\"PAL\"] = \"PAL\";\n    VideoFormat[\"NTSCp\"] = \"NTSCp\";\n    VideoFormat[\"PALp\"] = \"PALp\";\n    VideoFormat[\"_720p50\"] = \"720p50\";\n    VideoFormat[\"_720p5994\"] = \"720p5994\";\n    VideoFormat[\"_720p60\"] = \"720p60\";\n    VideoFormat[\"_1080p23976\"] = \"1080p23976\";\n    VideoFormat[\"_1080p24\"] = \"1080p24\";\n    VideoFormat[\"_1080p25\"] = \"1080p25\";\n    VideoFormat[\"_1080p2997\"] = \"1080p2997\";\n    VideoFormat[\"_1080p30\"] = \"1080p30\";\n    VideoFormat[\"_1080i50\"] = \"1080i50\";\n    VideoFormat[\"_1080i5994\"] = \"1080i5994\";\n    VideoFormat[\"_1080i60\"] = \"1080i60\";\n    VideoFormat[\"_4Kp23976\"] = \"4Kp23976\";\n    VideoFormat[\"_4Kp24\"] = \"4Kp24\";\n    VideoFormat[\"_4Kp25\"] = \"4Kp25\";\n    VideoFormat[\"_4Kp2997\"] = \"4Kp2997\";\n    VideoFormat[\"_4Kp30\"] = \"4Kp30\";\n    VideoFormat[\"_4Kp50\"] = \"4Kp50\";\n    VideoFormat[\"_4Kp5994\"] = \"4Kp5994\";\n    VideoFormat[\"_4Kp60\"] = \"4Kp60\";\n})(VideoFormat = exports.VideoFormat || (exports.VideoFormat = {}));\n//# sourceMappingURL=hyperdeck.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingLawoType;\n(function (MappingLawoType) {\n    MappingLawoType[\"SOURCE\"] = \"source\";\n    MappingLawoType[\"FULL_PATH\"] = \"fullpath\";\n    MappingLawoType[\"TRIGGER_VALUE\"] = \"triggerValue\";\n})(MappingLawoType = exports.MappingLawoType || (exports.MappingLawoType = {}));\nvar TimelineContentTypeLawo;\n(function (TimelineContentTypeLawo) {\n    TimelineContentTypeLawo[\"SOURCE\"] = \"lawosource\";\n    TimelineContentTypeLawo[\"EMBER_PROPERTY\"] = \"lawofullpathemberproperty\";\n    TimelineContentTypeLawo[\"TRIGGER_VALUE\"] = \"triggervalue\";\n})(TimelineContentTypeLawo = exports.TimelineContentTypeLawo || (exports.TimelineContentTypeLawo = {}));\nvar EmberTypes;\n(function (EmberTypes) {\n    EmberTypes[\"STRING\"] = \"string\";\n    EmberTypes[\"INTEGER\"] = \"integer\";\n    EmberTypes[\"REAL\"] = \"real\";\n    EmberTypes[\"BOOLEAN\"] = \"bool\";\n})(EmberTypes = exports.EmberTypes || (exports.EmberTypes = {}));\n//# sourceMappingURL=lawo.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeOSC;\n(function (TimelineContentTypeOSC) {\n    TimelineContentTypeOSC[\"OSC\"] = \"osc\";\n})(TimelineContentTypeOSC = exports.TimelineContentTypeOSC || (exports.TimelineContentTypeOSC = {}));\nvar OSCValueType;\n(function (OSCValueType) {\n    OSCValueType[\"INT\"] = \"i\";\n    OSCValueType[\"FLOAT\"] = \"f\";\n    OSCValueType[\"STRING\"] = \"s\";\n    OSCValueType[\"BLOB\"] = \"b\";\n})(OSCValueType = exports.OSCValueType || (exports.OSCValueType = {}));\n//# sourceMappingURL=osc.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypePharos;\n(function (TimelineContentTypePharos) {\n    TimelineContentTypePharos[\"SCENE\"] = \"scene\";\n    TimelineContentTypePharos[\"TIMELINE\"] = \"timeline\";\n})(TimelineContentTypePharos = exports.TimelineContentTypePharos || (exports.TimelineContentTypePharos = {}));\n//# sourceMappingURL=pharos.js.map\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingPanasonicPtzType;\n(function (MappingPanasonicPtzType) {\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"PRESET_SPEED\"] = 0] = \"PRESET_SPEED\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"PRESET\"] = 1] = \"PRESET\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"ZOOM\"] = 2] = \"ZOOM\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"ZOOM_SPEED\"] = 3] = \"ZOOM_SPEED\";\n})(MappingPanasonicPtzType = exports.MappingPanasonicPtzType || (exports.MappingPanasonicPtzType = {}));\nvar TimelineContentTypePanasonicPtz;\n(function (TimelineContentTypePanasonicPtz) {\n    TimelineContentTypePanasonicPtz[\"PRESET\"] = \"presetMem\";\n    TimelineContentTypePanasonicPtz[\"SPEED\"] = \"presetSpeed\";\n    TimelineContentTypePanasonicPtz[\"ZOOM_SPEED\"] = \"zoomSpeed\";\n    TimelineContentTypePanasonicPtz[\"ZOOM\"] = \"zoom\";\n})(TimelineContentTypePanasonicPtz = exports.TimelineContentTypePanasonicPtz || (exports.TimelineContentTypePanasonicPtz = {}));\n//# sourceMappingURL=panasonicPTZ.js.map\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeSisyfos;\n(function (TimelineContentTypeSisyfos) {\n    TimelineContentTypeSisyfos[\"SISYFOS\"] = \"sisyfos\";\n})(TimelineContentTypeSisyfos = exports.TimelineContentTypeSisyfos || (exports.TimelineContentTypeSisyfos = {}));\nvar Commands;\n(function (Commands) {\n    Commands[\"TOGGLE_PGM\"] = \"togglePgm\";\n    Commands[\"TOGGLE_PST\"] = \"togglePst\";\n    Commands[\"SET_FADER\"] = \"setFader\";\n    Commands[\"CLEAR_PST_ROW\"] = \"clearPstRow\";\n    Commands[\"LABEL\"] = \"label\";\n    Commands[\"TAKE\"] = \"take\";\n    Commands[\"VISIBLE\"] = \"visible\";\n    Commands[\"RESYNC\"] = \"resync\";\n})(Commands = exports.Commands || (exports.Commands = {}));\n// ------------------------------------------------------\n//# sourceMappingURL=sisyfos.js.map\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QuantelControlMode;\n(function (QuantelControlMode) {\n    /** Try to avoid freeze-frames when playing */\n    QuantelControlMode[\"QUALITY\"] = \"quality\";\n    /** Try to play as fast as possible */\n    QuantelControlMode[\"SPEED\"] = \"speed\";\n})(QuantelControlMode = exports.QuantelControlMode || (exports.QuantelControlMode = {}));\nvar QuantelTransitionType;\n(function (QuantelTransitionType) {\n    QuantelTransitionType[QuantelTransitionType[\"DELAY\"] = 0] = \"DELAY\";\n})(QuantelTransitionType = exports.QuantelTransitionType || (exports.QuantelTransitionType = {}));\n//# sourceMappingURL=quantel.js.map\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeTcp;\n(function (TimelineContentTypeTcp) {\n    TimelineContentTypeTcp[\"GET\"] = \"get\";\n    TimelineContentTypeTcp[\"POST\"] = \"post\";\n    TimelineContentTypeTcp[\"PUT\"] = \"put\";\n    TimelineContentTypeTcp[\"DELETE\"] = \"delete\";\n})(TimelineContentTypeTcp = exports.TimelineContentTypeTcp || (exports.TimelineContentTypeTcp = {}));\n//# sourceMappingURL=tcpSend.js.map\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeVizMSE;\n(function (TimelineContentTypeVizMSE) {\n    TimelineContentTypeVizMSE[\"ELEMENT_INTERNAL\"] = \"element_internal\";\n    TimelineContentTypeVizMSE[\"ELEMENT_PILOT\"] = \"element_pilot\";\n    TimelineContentTypeVizMSE[\"CONTINUE\"] = \"continue\";\n    TimelineContentTypeVizMSE[\"LOAD_ALL_ELEMENTS\"] = \"load_all_elements\";\n    TimelineContentTypeVizMSE[\"CLEAR_ALL_ELEMENTS\"] = \"clear_all_elements\";\n})(TimelineContentTypeVizMSE = exports.TimelineContentTypeVizMSE || (exports.TimelineContentTypeVizMSE = {}));\nvar VIZMSETransitionType;\n(function (VIZMSETransitionType) {\n    VIZMSETransitionType[VIZMSETransitionType[\"DELAY\"] = 0] = \"DELAY\";\n})(VIZMSETransitionType = exports.VIZMSETransitionType || (exports.VIZMSETransitionType = {}));\n//# sourceMappingURL=vizMSE.js.map\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeSingularLive;\n(function (TimelineContentTypeSingularLive) {\n    TimelineContentTypeSingularLive[\"COMPOSITION\"] = \"composition\";\n})(TimelineContentTypeSingularLive = exports.TimelineContentTypeSingularLive || (exports.TimelineContentTypeSingularLive = {}));\n//# sourceMappingURL=singularLive.js.map\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Note: These types are copies from superfly-timeline\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Enums ------------------------------------------------------------\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"START\"] = 0] = \"START\";\n    EventType[EventType[\"END\"] = 1] = \"END\";\n    EventType[EventType[\"KEYFRAME\"] = 2] = \"KEYFRAME\";\n})(EventType = exports.EventType || (exports.EventType = {}));\n//# sourceMappingURL=superfly-timeline.js.map\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\nconst _ = __webpack_require__(3);\nvar iterateDeeplyEnum;\n(function (iterateDeeplyEnum) {\n    iterateDeeplyEnum[\"CONTINUE\"] = \"$continue\";\n})(iterateDeeplyEnum = exports.iterateDeeplyEnum || (exports.iterateDeeplyEnum = {}));\n/**\n * Iterates deeply through object or array\n * @param obj the object or array to iterate through\n * @param iteratee function to apply on every attribute\n */\nfunction iterateDeeply(obj, iteratee, key) {\n    const newValue = iteratee(obj, key);\n    if (newValue === iterateDeeplyEnum.CONTINUE) {\n        // Continue iterate deeper if possible\n        if (_.isObject(obj)) {\n            // object or array\n            _.each(obj, (v, k) => {\n                obj[k] = iterateDeeply(v, iteratee, k);\n            });\n        }\n        else {\n            // don't change anything\n        }\n        return obj;\n    }\n    else {\n        return newValue;\n    }\n}\nexports.iterateDeeply = iterateDeeply;\n/**\n * Iterates deeply through object or array, using an asynchronous iteratee\n * @param obj the object or array to iterate through\n * @param iteratee function to apply on every attribute\n */\nfunction iterateDeeplyAsync(obj, iteratee, key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const newValue = yield iteratee(obj, key);\n        if (newValue === iterateDeeplyEnum.CONTINUE) {\n            // Continue iterate deeper if possible\n            if (_.isObject(obj)) {\n                // object or array\n                yield Promise.all(_.map(obj, (v, k) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                    obj[k] = yield iterateDeeplyAsync(v, iteratee, k);\n                })));\n            }\n            else {\n                // don't change anything\n            }\n            return obj;\n        }\n        else {\n            return newValue;\n        }\n    });\n}\nexports.iterateDeeplyAsync = iterateDeeplyAsync;\n//# sourceMappingURL=util.js.map\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst adlib_1 = __webpack_require__(118);\nconst clearGrafiks_1 = __webpack_require__(119);\n// import { EvaluateClearGrafiks } from './clearGrafiks'\nconst design_1 = __webpack_require__(99);\nconst dve_1 = __webpack_require__(120);\nconst ekstern_1 = __webpack_require__(121);\nconst grafikViz_1 = __webpack_require__(82);\nconst jingle_1 = __webpack_require__(122);\nconst lyd_1 = __webpack_require__(123);\nconst mos_1 = __webpack_require__(93);\nconst targetEngine_1 = __webpack_require__(124);\nconst telefon_1 = __webpack_require__(125);\nconst viz_1 = __webpack_require__(126);\nfunction EvaluateCues(context, config, pieces, adLibPieces, cues, partDefinition, options) {\n    tv2_common_1.EvaluateCuesBase({\n        EvaluateCueAdLib: adlib_1.EvaluateAdLib,\n        EvaluateCueClearGrafiks: clearGrafiks_1.EvaluateClearGrafiks,\n        EvaluateCueDVE: dve_1.EvaluateDVE,\n        EvaluateCueDesign: design_1.EvaluateDesign,\n        EvaluateCueEkstern: ekstern_1.EvaluateEkstern,\n        EvaluateCueGrafik: grafikViz_1.EvaluateGrafikViz,\n        EvaluateCueJingle: jingle_1.EvaluateJingle,\n        EvaluateCueLYD: lyd_1.EvaluateLYD,\n        EvaluateCueMOS: mos_1.EvaluateMOSViz,\n        EvaluateCueTargetEngine: targetEngine_1.EvaluateTargetEngine,\n        EvaluateCueTelefon: telefon_1.EvaluateTelefon,\n        EvaluateCueVIZ: viz_1.EvaluateVIZ\n    }, context, config, pieces, adLibPieces, cues, partDefinition, options);\n}\nexports.EvaluateCues = EvaluateCues;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst FRAME_TIME = 1000 / 25; // TODO: This should be pulled from config.\nfunction CreateTiming(cue) {\n    if (cue.adlib) {\n        return CreateTimingAdLib(cue);\n    }\n    else {\n        return CreateTimingEnable(cue);\n    }\n}\nexports.CreateTiming = CreateTiming;\nfunction CreateTimingEnable(cue) {\n    const result = {\n        enable: {},\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal\n    };\n    if (cue.start) {\n        ;\n        result.enable.start = CalculateTime(cue.start);\n    }\n    else {\n        ;\n        result.enable.start = 0;\n    }\n    if (cue.end) {\n        if (cue.end.infiniteMode) {\n            result.infiniteMode = InfiniteMode(cue.end.infiniteMode, tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal);\n        }\n        else {\n            const end = CalculateTime(cue.end);\n            result.enable.duration = end\n                ? result.enable.start\n                    ? end - Number(result.enable.start)\n                    : end\n                : undefined;\n        }\n    }\n    else {\n        result.infiniteMode = tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart;\n    }\n    return result;\n}\nexports.CreateTimingEnable = CreateTimingEnable;\nfunction CreateTimingAdLib(cue) {\n    const result = {\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        expectedDuration: 0\n    };\n    if (cue.end) {\n        if (cue.end.infiniteMode) {\n            result.infiniteMode = InfiniteMode(cue.end.infiniteMode, tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart);\n        }\n        else {\n            result.expectedDuration = CalculateTime(cue.end);\n        }\n    }\n    return result;\n}\nexports.CreateTimingAdLib = CreateTimingAdLib;\nfunction InfiniteMode(mode, defaultLifespan) {\n    switch (mode) {\n        case 'B':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart;\n        case 'S':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment;\n        case 'O':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite;\n    }\n    return defaultLifespan;\n}\nexports.InfiniteMode = InfiniteMode;\nfunction CalculateTime(time) {\n    if (time.infiniteMode) {\n        return;\n    }\n    let result = 0;\n    if (time.seconds) {\n        result += time.seconds * 1000;\n    }\n    if (time.frames) {\n        result += time.frames * FRAME_TIME;\n    }\n    return result;\n}\nexports.CalculateTime = CalculateTime;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(43), exports);\ntslib_1.__exportStar(__webpack_require__(46), exports);\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nfunction TransformCuesIntoShowstyle(config, partDefinition) {\n    let i = -1;\n    while (i + 1 < partDefinition.cues.length) {\n        i++;\n        const cue = partDefinition.cues[i];\n        if (cue.type === tv2_constants_1.CueType.TargetEngine && cue.data.engine && cue.data.engine.toUpperCase() !== 'OVL1') {\n            const conf = config.GFXTemplates.find(gfx => gfx.INewsName.toUpperCase() === cue.data.engine.toUpperCase() &&\n                gfx.INewsCode.toUpperCase() === cue.iNewsCommand.toUpperCase());\n            if (!conf) {\n                continue;\n            }\n            if (conf.VizTemplate.toUpperCase() === 'VCP') {\n                const nextCue = partDefinition.cues[i + 1];\n                if (!nextCue) {\n                    if (!cue.grafik) {\n                        continue;\n                    }\n                    cue.data.grafik = cue.grafik;\n                    delete cue.grafik;\n                    cue.data.engine = conf.VizDestination.trim();\n                    partDefinition.cues[i] = cue;\n                }\n                else {\n                    if (nextCue.type !== tv2_constants_1.CueType.MOS) {\n                        continue;\n                    }\n                    cue.data.grafik = nextCue;\n                    cue.data.engine = conf.VizDestination.trim();\n                    partDefinition.cues[i] = cue;\n                    i++;\n                    partDefinition.cues.splice(i, 1);\n                }\n            }\n            else {\n                const gfxGue = {\n                    type: tv2_constants_1.CueType.Grafik,\n                    template: conf.VizTemplate.toUpperCase(),\n                    cue: `${cue.iNewsCommand}=${cue.data.engine}`,\n                    textFields: [],\n                    iNewsCommand: cue.iNewsCommand\n                };\n                cue.data.engine = conf.VizDestination.trim();\n                cue.data.grafik = gfxGue;\n                partDefinition.cues[i] = cue;\n            }\n        }\n    }\n    return partDefinition;\n}\nexports.TransformCuesIntoShowstyle = TransformCuesIntoShowstyle;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NoteType;\n(function (NoteType) {\n    NoteType[NoteType[\"WARNING\"] = 1] = \"WARNING\";\n    NoteType[NoteType[\"ERROR\"] = 2] = \"ERROR\";\n})(NoteType = exports.NoteType || (exports.NoteType = {}));\nvar MediaPlayerClaimType;\n(function (MediaPlayerClaimType) {\n    MediaPlayerClaimType[MediaPlayerClaimType[\"Preloaded\"] = 0] = \"Preloaded\";\n    MediaPlayerClaimType[MediaPlayerClaimType[\"Active\"] = 1] = \"Active\";\n})(MediaPlayerClaimType = exports.MediaPlayerClaimType || (exports.MediaPlayerClaimType = {}));\nvar CueType;\n(function (CueType) {\n    CueType[CueType[\"Unknown\"] = 0] = \"Unknown\";\n    CueType[CueType[\"Grafik\"] = 1] = \"Grafik\";\n    CueType[CueType[\"MOS\"] = 2] = \"MOS\";\n    CueType[CueType[\"Ekstern\"] = 3] = \"Ekstern\";\n    CueType[CueType[\"DVE\"] = 4] = \"DVE\";\n    CueType[CueType[\"Telefon\"] = 5] = \"Telefon\";\n    CueType[CueType[\"VIZ\"] = 6] = \"VIZ\";\n    CueType[CueType[\"Mic\"] = 7] = \"Mic\";\n    CueType[CueType[\"AdLib\"] = 8] = \"AdLib\";\n    CueType[CueType[\"LYD\"] = 9] = \"LYD\";\n    CueType[CueType[\"Jingle\"] = 10] = \"Jingle\";\n    CueType[CueType[\"Design\"] = 11] = \"Design\";\n    CueType[CueType[\"Profile\"] = 12] = \"Profile\";\n    CueType[CueType[\"TargetEngine\"] = 13] = \"TargetEngine\";\n    CueType[CueType[\"ClearGrafiks\"] = 14] = \"ClearGrafiks\";\n})(CueType = exports.CueType || (exports.CueType = {}));\nvar Enablers;\n(function (Enablers) {\n    Enablers[\"OFFTUBE_ENABLE_SERVER\"] = \"offtube_enable_server\";\n    Enablers[\"OFFTUBE_ENABLE_FULL\"] = \"offtube_enable_full\";\n    Enablers[\"OFFTUBE_ENABLE_DVE\"] = \"offtube_enable_dve\";\n})(Enablers = exports.Enablers || (exports.Enablers = {}));\nvar AdlibTags;\n(function (AdlibTags) {\n    AdlibTags[\"OFFTUBE_ADLIB_SERVER\"] = \"offtube_adlib_server\";\n    AdlibTags[\"OFFTUBE_100pc_SERVER\"] = \"offtube_adlib_100pc_server\";\n    AdlibTags[\"OFFTUBE_SET_CAM_NEXT\"] = \"offtube_set_cam_next\";\n    AdlibTags[\"OFFTUBE_SET_REMOTE_NEXT\"] = \"offtube_set_remote_next\";\n    AdlibTags[\"OFFTUBE_SET_FULL_NEXT\"] = \"offtube_set_full_next\";\n    AdlibTags[\"OFFTUBE_SET_JINGLE_NEXT\"] = \"offtube_set_jingle_next\";\n    AdlibTags[\"OFFTUBE_SET_SERVER_NEXT\"] = \"offtube_set_server_next\";\n    AdlibTags[\"OFFTUBE_SET_DVE_NEXT\"] = \"offtube_set_dve_next\";\n    AdlibTags[\"ADLIB_FLOW_PRODUCER\"] = \"flow_producer\";\n})(AdlibTags = exports.AdlibTags || (exports.AdlibTags = {}));\nvar ControlClasses;\n(function (ControlClasses) {\n    ControlClasses[\"ShowIdentGraphic\"] = \"show_ident_graphic\";\n    ControlClasses[\"DVEOnAir\"] = \"dve_on_air\"; // DVE Part is on air\n})(ControlClasses = exports.ControlClasses || (exports.ControlClasses = {}));\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONSTANTS = {\n    DefaultClipFadeOut: 35 * 40 // 35 frames\n};\n// Note: This doesnt play nice with transitions, so if they are required, then auto cannot be used\nexports.MEDIA_PLAYER_AUTO = 'auto';\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(47), exports);\ntslib_1.__exportStar(__webpack_require__(13), exports);\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nconst postProcessDefinitions_1 = __webpack_require__(48);\nconst ParseCue_1 = __webpack_require__(13);\nconst ACCEPTED_RED_TEXT = /\\b(KAM(?:\\d+)?|CAM(?:\\d+)?|KAMERA(?:\\d+)?|CAMERA(?:\\d+)?|SERVER|ATTACK|TEKNIK|GRAFIK|EVS ?\\d+(?:VOV?)?|VOV?|VOSB)+\\b/gi;\nfunction ParseBody(segmentId, segmentName, body, cues, fields, modified) {\n    const definitions = [];\n    let definition = initDefinition(fields, modified, segmentName);\n    // Handle intro segments, they have special behaviour.\n    if (segmentName === 'INTRO') {\n        ;\n        definition.type = \"INTRO\" /* INTRO */;\n        cues.forEach(cue => {\n            if (cue !== null) {\n                definition.cues.push(ParseCue_1.ParseCue(cue));\n            }\n        });\n        definition.rawType = 'INTRO';\n        definition.externalId = `${segmentId}-${definitions.length}`;\n        definition.segmentExternalId = segmentId;\n        definitions.push(definition);\n        definition = initDefinition(fields, modified, segmentName);\n        return definitions;\n    }\n    let lines = body.split('\\r\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = lines[i].replace(/<cc>(.*?)<\\/cc>/gi, '');\n    }\n    lines = lines.filter(line => line !== '<p></p>' && line !== '<p><pi></pi></p>');\n    lines.forEach(line => {\n        const type = line.match(/<pi>(.*?)<\\/pi>/i);\n        if (type) {\n            const typeStr = type[1]\n                .replace(/<[a-z]+>/gi, '')\n                .replace(/<\\/[a-z]+>/gi, '')\n                .replace(/[^\\w\\s]*\\B[^\\w\\s]/gi, '')\n                .replace(/[\\s]+/i, ' ')\n                .replace(/<tab>/i, '')\n                .replace(/<\\/tab>/i, '')\n                .trim();\n            if (typeStr && !!typeStr.match(ACCEPTED_RED_TEXT)) {\n                const inlineCues = line\n                    .replace(/<\\/?p>/g, '')\n                    .split(/<pi>(.*?)<\\/pi>/i)\n                    .filter(cue => cue !== '' && !cue.match(/<\\/a>/));\n                /** Hold any secondary cues in the form: `[] KAM 1` */\n                const secondaryInlineCues = [];\n                // Find all inline primaries appearing before the red text\n                let pos = 0;\n                let redTextFound = false;\n                while (pos < inlineCues.length && !redTextFound) {\n                    if (inlineCues[pos].match(ACCEPTED_RED_TEXT)) {\n                        redTextFound = true;\n                    }\n                    else {\n                        const parsedCues = getCuesInLine(inlineCues[pos], cues);\n                        parsedCues.forEach(cue => {\n                            // Create standalone parts for primary cues.\n                            if (isPrimaryCue(cue)) {\n                                if (shouldPushDefinition(definition)) {\n                                    definitions.push(definition);\n                                    definition = initDefinition(fields, modified, segmentName);\n                                }\n                                definition = makeDefinitionPrimaryCue(segmentId, definitions.length, '', fields, modified, segmentName, definition.type, cue);\n                                definition.cues.push(cue);\n                            }\n                            else {\n                                secondaryInlineCues.push(cue);\n                            }\n                            line = line.replace(inlineCues[pos], '');\n                        });\n                    }\n                    pos++;\n                }\n                line = line.replace(/<\\/a>/g, '');\n                if (shouldPushDefinition(definition)) {\n                    definitions.push(definition);\n                    definition = initDefinition(fields, modified, segmentName);\n                }\n                definition = makeDefinition(segmentId, definitions.length, typeStr, fields, modified, segmentName);\n                definition.cues.push(...secondaryInlineCues);\n            }\n            if (typeStr && typeStr.match(/SLUTORD/i)) {\n                if (definition.endWords) {\n                    definition.endWords += ` ${typeStr.replace(/^SLUTORD:? ?/i, '')}`;\n                }\n                else {\n                    definition.endWords = typeStr.replace(/^SLUTORD:? ?/i, '');\n                }\n            }\n        }\n        addScript(line, definition);\n        // Add any remaining cues in the line.\n        if (cueInLine(line)) {\n            const parsedCues = getCuesInLine(line, cues);\n            parsedCues.forEach(cue => {\n                if (isPrimaryCue(cue)) {\n                    let storedScript = '';\n                    if (shouldPushDefinition(definition)) {\n                        definitions.push(definition);\n                        definition = initDefinition(fields, modified, segmentName);\n                    }\n                    else if (definition.script.length) {\n                        storedScript = definition.script;\n                    }\n                    definition = makeDefinitionPrimaryCue(segmentId, definitions.length, definition.rawType, fields, modified, segmentName, definition.type, cue);\n                    definition.script = storedScript;\n                }\n                definition.cues.push(cue);\n            });\n        }\n    });\n    if (shouldPushDefinition(definition)) {\n        definitions.push(definition);\n        definition = initDefinition(fields, modified, segmentName);\n    }\n    // Flatten cues such as targetEngine.\n    definitions.forEach(partDefinition => {\n        if (partDefinition.cues.length) {\n            while (FindTargetPair(partDefinition)) {\n                // NO-OP\n            }\n        }\n    });\n    return postProcessDefinitions_1.PostProcessDefinitions(definitions, segmentId);\n}\nexports.ParseBody = ParseBody;\nfunction FindTargetPair(partDefinition) {\n    const index = partDefinition.cues.findIndex(cue => (cue.type === tv2_constants_1.CueType.TargetEngine && !cue.grafik && !!cue.data.engine.match(/FULL|WALL|OVL/i)) ||\n        (cue.type === tv2_constants_1.CueType.Telefon && !cue.vizObj));\n    if (index === -1) {\n        // No more targets\n        return false;\n    }\n    if (index + 1 < partDefinition.cues.length) {\n        if (partDefinition.cues[index + 1].type === tv2_constants_1.CueType.MOS) {\n            const mosCue = partDefinition.cues[index + 1];\n            if (partDefinition.cues[index].type === tv2_constants_1.CueType.TargetEngine) {\n                const targetCue = partDefinition.cues[index];\n                targetCue.grafik = mosCue;\n                partDefinition.cues[index] = targetCue;\n            }\n            else {\n                const targetCue = partDefinition.cues[index];\n                targetCue.vizObj = mosCue;\n                partDefinition.cues[index] = targetCue;\n            }\n            partDefinition.cues.splice(index + 1, 1);\n            return true;\n        }\n        else {\n            // Target with no grafik\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexports.FindTargetPair = FindTargetPair;\n/** Creates an initial part definition. */\nfunction initDefinition(fields, modified, segmentName) {\n    return {\n        externalId: '',\n        type: \"Unknown\" /* Unknown */,\n        rawType: '',\n        variant: {},\n        cues: [],\n        script: '',\n        fields,\n        modified,\n        storyName: segmentName,\n        segmentExternalId: ''\n    };\n}\n/** Returns true if there is a cue in the given line. */\nfunction cueInLine(line) {\n    return !!line.match(/<a idref=[\"|'](\\d+)[\"|']>/gi);\n}\n/** Returns all the cues in a given line as parsed cues. */\nfunction getCuesInLine(line, cues) {\n    if (!cueInLine(line)) {\n        return [];\n    }\n    const definitions = [];\n    const cue = line.match(/<a idref=[\"|'](\\d+)[\"|']>/gi);\n    cue === null || cue === void 0 ? void 0 : cue.forEach(c => {\n        const value = c.match(/<a idref=[\"|'](\\d+)[\"|']>/i);\n        if (value) {\n            const realCue = cues[Number(value[1])];\n            if (realCue) {\n                definitions.push(ParseCue_1.ParseCue(realCue));\n            }\n        }\n    });\n    return definitions;\n}\nfunction addScript(line, definition) {\n    const script = line.match(/<p>(.*)?<\\/p>/i);\n    if (script && script[1] && !script[1].match(/<pi>(.*?)<\\/pi>/i)) {\n        const trimscript = script[1]\n            .replace(/<.*?>/gi, '')\n            .replace('\\n\\r', '')\n            .trim();\n        if (trimscript) {\n            definition.script += `${trimscript}\\n`;\n        }\n    }\n}\nfunction isPrimaryCue(cue) {\n    return (cue.type === tv2_constants_1.CueType.Telefon ||\n        cue.type === tv2_constants_1.CueType.Ekstern ||\n        cue.type === tv2_constants_1.CueType.DVE ||\n        (cue.type === tv2_constants_1.CueType.TargetEngine && cue.data.engine.toUpperCase() === 'FULL'));\n}\nfunction shouldPushDefinition(definition) {\n    return ((definition.cues.length ||\n        (definition.script.length && definition.cues.length) ||\n        definition.type !== \"Unknown\" /* Unknown */) &&\n        !(definition.type === \"Grafik\" /* Grafik */ && definition.cues.length === 0));\n}\nfunction makeDefinitionPrimaryCue(segmentId, i, typeStr, fields, modified, storyName, partType, cue) {\n    const definition = makeDefinition(segmentId, i, typeStr, fields, modified, storyName);\n    switch (cue.type) {\n        case tv2_constants_1.CueType.Ekstern:\n            definition.type = \"Ekstern\" /* Ekstern */;\n            break;\n        case tv2_constants_1.CueType.DVE:\n            definition.type = \"DVE\" /* DVE */;\n            break;\n        case tv2_constants_1.CueType.Telefon:\n            definition.type = \"Telefon\" /* Telefon */;\n            break;\n        case tv2_constants_1.CueType.TargetEngine:\n            definition.type = partType;\n            break;\n        default:\n            // For log purposes + to catch future issues.\n            console.log(`Blueprint recieved non-primary cue when creating primary cue part. Likely a new primary cue type has been added recently.`);\n            break;\n    }\n    return definition;\n}\nfunction makeDefinition(segmentId, i, typeStr, fields, modified, storyName) {\n    const part = Object.assign(Object.assign({ externalId: `${segmentId}-${i}` }, extractTypeProperties(typeStr)), { rawType: typeStr\n            .replace(/effekt \\d+/gi, '')\n            .replace(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/gi, '')\n            .replace(/\\s+/gi, ' ')\n            .trim(), cues: [], script: '', fields,\n        modified,\n        storyName, segmentExternalId: '' });\n    return part;\n}\nfunction extractTypeProperties(typeStr) {\n    const effektMatch = typeStr.match(/effekt (\\d+)/i);\n    const transitionMatch = typeStr.match(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/i);\n    const definition = {};\n    if (effektMatch) {\n        definition.effekt = Number(effektMatch[1]);\n    }\n    if (transitionMatch) {\n        definition.transition = {\n            style: transitionMatch[1].toUpperCase(),\n            duration: transitionMatch[2] ? Number(transitionMatch[2]) : undefined\n        };\n    }\n    const tokens = typeStr\n        .replace(/effekt (\\d+)/gi, '')\n        .replace(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/gi, '')\n        .replace(/100%/g, '')\n        .replace(/\\s+/gi, ' ')\n        .trim()\n        .split(' ');\n    const firstToken = tokens[0];\n    if (firstToken.match(/KAM|CAM/i)) {\n        const adjacentKamNumber = tokens[0].match(/KAM(\\d+)/i);\n        return Object.assign({ type: \"Kam\" /* Kam */, variant: {\n                name: adjacentKamNumber ? adjacentKamNumber[1] : tokens[1]\n            } }, definition);\n    }\n    else if (firstToken.match(/SERVER/i) || firstToken.match(/ATTACK/i)) {\n        return Object.assign({ type: \"Server\" /* Server */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/TEKNIK/i)) {\n        return Object.assign({ type: \"Teknik\" /* Teknik */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/GRAFIK/i)) {\n        return Object.assign({ type: \"Grafik\" /* Grafik */, variant: {} }, definition);\n    }\n    else if (typeStr.match(/EVS ?\\d+(?:VOV?)?/i)) {\n        const strippedToken = typeStr.match(/EVS ?(\\d+)(VOV?)?/i);\n        return {\n            type: \"EVS\" /* EVS */,\n            variant: {\n                evs: strippedToken && strippedToken[1] ? strippedToken[1] : '1',\n                isVO: !!strippedToken && !!strippedToken[2]\n            }\n        };\n    }\n    else if (firstToken.match(/VOV?/i)) {\n        return Object.assign({ type: \"VO\" /* VO */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/VOSB/i)) {\n        return Object.assign({ type: \"VO\" /* VO */, variant: {} }, definition);\n    }\n    else {\n        return Object.assign({ type: \"Unknown\" /* Unknown */, variant: {} }, definition);\n    }\n}\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction PostProcessDefinitions(partDefinitions, segmentExternalId) {\n    const foundMap = {};\n    partDefinitions.forEach((part, i) => {\n        partDefinitions[i] = Object.assign(Object.assign({}, part), { externalId: getExternalId(segmentExternalId, part, foundMap), segmentExternalId });\n    });\n    return partDefinitions;\n}\nexports.PostProcessDefinitions = PostProcessDefinitions;\nfunction getExternalId(segmentId, partDefinition, foundMap) {\n    var _a, _b;\n    let id = `${segmentId}-${partDefinition.type.toString()}`;\n    switch (partDefinition.type) {\n        case \"EVS\" /* EVS */:\n            // Common pattern to see EV1 and EVS1VO in the same story. Changing from EVS1 to EVS1VO would mean a new part\n            id += `-${partDefinition.variant.evs}-${partDefinition.variant.isVO}`;\n            break;\n        case \"INTRO\" /* INTRO */:\n            // Intro must have a jingle cue, if it doesn't then padId will handle\n            const jingle = partDefinition.cues.find(cue => cue.type === tv2_constants_1.CueType.Jingle);\n            if (jingle) {\n                id += `-${jingle.clip}`;\n            }\n            break;\n        case \"Kam\" /* Kam */:\n            // No way of uniquely identifying, add some entropy from cues\n            id += `-${partDefinition.rawType}-${partDefinition.variant.name}-${partDefinition.cues.length}`;\n            break;\n        case \"Server\" /* Server */:\n            // Only one video Id per story. Changing the video Id will result in a new part\n            id += `-${partDefinition.fields.videoId ? partDefinition.fields.videoId : 'noId'}`;\n            break;\n        case \"Teknik\" /* Teknik */:\n            // Possibly an unused part type, not seen in production - only one example found in original test data\n            id += `-TEKNIK`;\n            break;\n        case \"VO\" /* VO */:\n            // Only one video Id per story. Changing the video Id will result in a new part\n            id += `-${partDefinition.fields.videoId}`;\n            break;\n        case \"Grafik\" /* Grafik */:\n        case \"DVE\" /* DVE */:\n        case \"Ekstern\" /* Ekstern */:\n        case \"Telefon\" /* Telefon */:\n        case \"Unknown\" /* Unknown */:\n            // Special cases based on cues\n            const firstCue = partDefinition.cues[0];\n            if (firstCue) {\n                switch (firstCue.type) {\n                    case tv2_constants_1.CueType.AdLib:\n                        id += `-${firstCue.variant}`;\n                        break;\n                    case tv2_constants_1.CueType.DVE:\n                        function countSources(sources) {\n                            let count = 0;\n                            for (const [key, value] of Object.entries(sources)) {\n                                if (key !== undefined && value !== undefined) {\n                                    count += 1;\n                                }\n                            }\n                            return count;\n                        }\n                        id += `-${firstCue.template}-${countSources(firstCue.sources)}`;\n                        break;\n                    case tv2_constants_1.CueType.Ekstern:\n                        // Identify based on live source. Changing live source will result in a new part\n                        id += `-${firstCue.source}`;\n                        break;\n                    case tv2_constants_1.CueType.Jingle:\n                        // Changing the jingle clip will result in a new part\n                        id += `-${firstCue.clip}`;\n                        break;\n                    case tv2_constants_1.CueType.TargetEngine:\n                        // Pair the engine will the graphic, common to see 'FULL' targeted multiple times in one story\n                        const end = ((_a = firstCue.grafik) === null || _a === void 0 ? void 0 : _a.type) === tv2_constants_1.CueType.Grafik\n                            ? firstCue.grafik.template\n                            : ((_b = firstCue.grafik) === null || _b === void 0 ? void 0 : _b.type) === tv2_constants_1.CueType.MOS\n                                ? firstCue.grafik.vcpid\n                                : '';\n                        id += `-${firstCue.data.engine}-${end}`;\n                        break;\n                    case tv2_constants_1.CueType.Telefon:\n                        id += `-${firstCue.source}`;\n                        break;\n                    case tv2_constants_1.CueType.MOS:\n                        id += `-${firstCue.vcpid}`;\n                        break;\n                }\n            }\n            else {\n                // This should never happen. Log it in case it ever occurs.\n                console.log(`Adding part with potentially bad Id: ${JSON.stringify(partDefinition)}`);\n                id += `UNKNOWN`;\n            }\n            break;\n        default:\n            tv2_common_1.assertUnreachable(partDefinition);\n    }\n    id = padId(id.trim().replace(/ /g, '-'), foundMap);\n    return id;\n    // return md5(`${id}`)\n}\nfunction padId(id, foundMap) {\n    if (Object.keys(foundMap).includes(id)) {\n        foundMap[id] += 1;\n        id = `${id}-${foundMap[id]}`;\n    }\n    else {\n        foundMap[id] = 1;\n    }\n    foundMap = foundMap;\n    return id;\n}\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nfunction parseMapStr(context, str, canBeStrings) {\n    str = str.trim();\n    const res = [];\n    const inputs = str.split(',');\n    inputs.forEach(i => {\n        if (i === '') {\n            return;\n        }\n        try {\n            const p = i.split(':');\n            if (p.length === 2) {\n                const ind = p[0];\n                const val = parseInt(p[1], 10);\n                if (!canBeStrings && !isNaN(val)) {\n                    res.push({ id: ind, val: parseInt(p[1], 10) });\n                    return;\n                }\n                else if (canBeStrings && p[1] !== undefined) {\n                    res.push({ id: ind, val: p[1] });\n                    return;\n                }\n            }\n        }\n        catch (e) {\n            // Ignore?\n        }\n        if (context) {\n            context.warning('Invalid input map chunk: ' + i);\n        }\n    });\n    return res;\n}\nexports.parseMapStr = parseMapStr;\nfunction ParseMappingTable(studioConfig, type) {\n    return studioConfig.map(conf => ({\n        type,\n        id: conf.SourceName,\n        port: conf.AtemSource,\n        sisyfosLayers: conf.SisyfosLayers\n    }));\n}\nexports.ParseMappingTable = ParseMappingTable;\nfunction FindSourceInfo(sources, type, id) {\n    id = id.replace(/\\s+/i, ' ').trim();\n    switch (type) {\n        case tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA:\n            const cameraName = id.match(/^(?:KAM|CAM)(?:ERA)? ?(.+)$/i);\n            if (cameraName === undefined || cameraName === null) {\n                return undefined;\n            }\n            return _.find(sources, s => s.type === type && s.id === cameraName[1].replace(/minus mic/i, '').trim());\n        case tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE:\n            const remoteName = id.match(/^(?:LIVE|SKYPE|EVS) ?(.+).*$/i);\n            if (!remoteName) {\n                return undefined;\n            }\n            if (id.match(/^LIVE/i)) {\n                return _.find(sources, s => s.type === type && s.id === remoteName[1]);\n            }\n            else if (id.match(/^EVS/i)) {\n                return _.find(sources, s => s.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE && s.id === `DP${remoteName[1]}`);\n            }\n            else {\n                // Skype\n                return _.find(sources, s => s.type === type && s.id === `S${remoteName[1]}`);\n            }\n        default:\n            return undefined;\n    }\n}\nexports.FindSourceInfo = FindSourceInfo;\nfunction FindSourceInfoStrict(context, sources, type, id) {\n    const source = FindSourceInfo(sources, type, id);\n    if (!source) {\n        context.warning(`Invalid source \"${id}\" of type \"${type}\"`);\n    }\n    return source;\n}\nexports.FindSourceInfoStrict = FindSourceInfoStrict;\nfunction FindSourceByName(context, sources, name) {\n    name = (name + '').toLowerCase();\n    if (name.indexOf('k') === 0 || name.indexOf('c') === 0) {\n        return FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, name);\n    }\n    // TODO: This will be different for TV 2\n    if (name.indexOf('r') === 0) {\n        return FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, name);\n    }\n    context.warning(`Invalid source name \"${name}\"`);\n    return undefined;\n}\nexports.FindSourceByName = FindSourceByName;\nfunction GetInputValue(context, sources, name) {\n    let input = 1000;\n    const source = FindSourceByName(context, sources, name);\n    if (source !== undefined) {\n        input = tv2_common_1.literal(source).port;\n    }\n    return input;\n}\nexports.GetInputValue = GetInputValue;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction PartTime(config, partDefinition, totalWords, defaultTime = true) {\n    const storyDuration = Number(partDefinition.fields.audioTime) * 1000 || 0;\n    const partTime = (partDefinition.script.replace(/[\\r\\n]/g, '').length / totalWords) * storyDuration;\n    return Math.min(partTime > 0 ? partTime : defaultTime ? config.studio.DefaultPartDuration : 0, config.studio.MaximumPartDuration || 10000);\n}\nexports.PartTime = PartTime;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PartContext2 {\n    constructor(baseContext, externalId) {\n        this.baseContext = baseContext;\n        this.externalId = externalId;\n        this.rundownId = baseContext.rundownId;\n        this.rundown = baseContext.rundown;\n    }\n    /** PartContext */\n    getRuntimeArguments() {\n        return this.baseContext.getRuntimeArguments(this.externalId) || {};\n    }\n    /** IShowStyleConfigContext */\n    getShowStyleConfig() {\n        return this.baseContext.getShowStyleConfig();\n    }\n    getShowStyleConfigRef(configKey) {\n        return this.baseContext.getShowStyleConfigRef(configKey);\n    }\n    /** IStudioContext */\n    getStudioMappings() {\n        return this.baseContext.getStudioMappings();\n    }\n    /** IStudioConfigContext */\n    getStudioConfig() {\n        return this.baseContext.getStudioConfig();\n    }\n    getStudioConfigRef(configKey) {\n        return this.baseContext.getStudioConfigRef(configKey);\n    }\n    /** NotesContext */\n    error(message) {\n        return this.baseContext.error(message);\n    }\n    warning(message) {\n        return this.baseContext.warning(message);\n    }\n    getNotes() {\n        return this.baseContext.getNotes();\n    }\n    /** ICommonContext */\n    getHashId(originString, originIsNotUnique) {\n        return this.baseContext.getHashId(`${this.externalId}_${originString}`, originIsNotUnique);\n    }\n    unhashId(hash) {\n        return this.baseContext.unhashId(hash);\n    }\n}\nexports.PartContext2 = PartContext2;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction getSegmentBase(context, ingestSegment, showStyleOptions) {\n    const segment = tv2_common_1.literal({\n        name: ingestSegment.name,\n        metaData: {},\n        identifier: ingestSegment.payload.iNewsStory.fields.pageNumber && ingestSegment.payload.iNewsStory.fields.pageNumber.trim()\n            ? ingestSegment.payload.iNewsStory.fields.pageNumber.trim()\n            : undefined\n    });\n    const config = showStyleOptions.parseConfig(context);\n    if (ingestSegment.payload.iNewsStory.meta.float === 'float') {\n        segment.isHidden = true;\n        return {\n            segment,\n            parts: []\n        };\n    }\n    else {\n        segment.isHidden = false;\n    }\n    let blueprintParts = [];\n    const parsedParts = tv2_common_1.ParseBody(ingestSegment.externalId, ingestSegment.name, ingestSegment.payload.iNewsStory.body, ingestSegment.payload.iNewsStory.cues, ingestSegment.payload.iNewsStory.fields, ingestSegment.payload.iNewsStory.fields.modifyDate);\n    const totalWords = parsedParts.reduce((prev, cur) => {\n        if (cur.type === \"Server\" /* Server */) {\n            return prev;\n        }\n        return prev + cur.script.replace(/\\n/g, '').replace(/\\r/g, '').length;\n    }, 0);\n    if (segment.name.trim().match(/^CONTINUITY$/i)) {\n        blueprintParts.push(showStyleOptions.CreatePartContinuity(config, ingestSegment));\n        return {\n            segment,\n            parts: blueprintParts\n        };\n    }\n    let serverParts = 0;\n    let jingleTime = 0;\n    let serverTime = 0;\n    for (const par of parsedParts) {\n        // Apply showstyle-specific transformations of cues.\n        const part = showStyleOptions.TransformCuesIntoShowstyle(config.showStyle, par);\n        const partContext = new tv2_common_1.PartContext2(context, part.externalId);\n        // Make orphaned secondary cues into adlibs\n        if (tv2_common_1.GetNextPartCue(part, -1) === -1 &&\n            part.type === \"Unknown\" /* Unknown */ &&\n            part.cues.filter(cue => cue.type === tv2_constants_1.CueType.Jingle || cue.type === tv2_constants_1.CueType.AdLib).length === 0) {\n            blueprintParts.push(showStyleOptions.CreatePartUnknown(partContext, config, part, totalWords, true));\n            continue;\n        }\n        switch (part.type) {\n            case \"INTRO\" /* INTRO */:\n                if (showStyleOptions.CreatePartIntro) {\n                    blueprintParts.push(showStyleOptions.CreatePartIntro(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Kam\" /* Kam */:\n                if (showStyleOptions.CreatePartKam) {\n                    blueprintParts.push(showStyleOptions.CreatePartKam(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Server\" /* Server */:\n                if (showStyleOptions.CreatePartServer) {\n                    blueprintParts.push(showStyleOptions.CreatePartServer(partContext, config, part, ingestSegment.externalId));\n                }\n                break;\n            case \"Teknik\" /* Teknik */:\n                if (showStyleOptions.CreatePartTeknik) {\n                    blueprintParts.push(showStyleOptions.CreatePartTeknik(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Grafik\" /* Grafik */:\n                if (showStyleOptions.CreatePartGrafik) {\n                    blueprintParts.push(showStyleOptions.CreatePartGrafik(partContext, config, part, totalWords));\n                }\n                break;\n            case \"VO\" /* VO */:\n                if (showStyleOptions.CreatePartVO) {\n                    blueprintParts.push(showStyleOptions.CreatePartVO(partContext, config, part, ingestSegment.externalId, totalWords, Number(ingestSegment.payload.iNewsStory.fields.totalTime)));\n                }\n                break;\n            case \"DVE\" /* DVE */:\n                if (showStyleOptions.CreatePartDVE) {\n                    blueprintParts.push(showStyleOptions.CreatePartDVE(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Ekstern\" /* Ekstern */:\n                if (showStyleOptions.CreatePartEkstern) {\n                    blueprintParts.push(showStyleOptions.CreatePartEkstern(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Telefon\" /* Telefon */:\n                if (showStyleOptions.CreatePartTelefon) {\n                    blueprintParts.push(showStyleOptions.CreatePartTelefon(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Unknown\" /* Unknown */:\n                if (part.cues.length) {\n                    blueprintParts.push(showStyleOptions.CreatePartUnknown(partContext, config, part, totalWords));\n                }\n                break;\n            case \"EVS\" /* EVS */:\n                if (showStyleOptions.CreatePartEVS) {\n                    blueprintParts.push(showStyleOptions.CreatePartEVS(partContext, config, part, totalWords));\n                }\n                break;\n            default:\n                tv2_common_1.assertUnreachable(part);\n                break;\n        }\n        if (part.type === \"Server\" /* Server */ ||\n            (part.type === \"VO\" /* VO */ && (Number(part.fields.tapeTime) > 0 || part.script.length))) {\n            if (blueprintParts[blueprintParts.length - 1]) {\n                serverTime += Number(blueprintParts[blueprintParts.length - 1].part.expectedDuration);\n                serverParts++;\n            }\n        }\n        if (part.cues.filter(cue => cue.type === tv2_constants_1.CueType.Jingle).length) {\n            if (blueprintParts[blueprintParts.length - 1]) {\n                const t = blueprintParts[blueprintParts.length - 1].part.expectedDuration;\n                if (t) {\n                    jingleTime += t;\n                }\n            }\n        }\n    }\n    let allocatedTime = blueprintParts.reduce((prev, cur) => {\n        return prev + (cur.part.expectedDuration ? cur.part.expectedDuration : 0);\n    }, 0) - jingleTime;\n    if (allocatedTime < 0) {\n        allocatedTime = 0;\n    }\n    blueprintParts.forEach(part => {\n        part.part.displayDurationGroup = ingestSegment.externalId;\n        if (!part.part.expectedDuration && Number(ingestSegment.payload.iNewsStory.fields.totalTime) > 0) {\n            part.part.expectedDuration =\n                (Number(ingestSegment.payload.iNewsStory.fields.totalTime) * 1000 - allocatedTime - serverTime || 0) /\n                    (blueprintParts.length - serverParts);\n            if (part.part.expectedDuration < 0) {\n                part.part.expectedDuration = 0;\n            }\n            if (part.part.expectedDuration > config.studio.MaximumPartDuration) {\n                part.part.expectedDuration = config.studio.MaximumPartDuration;\n            }\n        }\n    });\n    let extraTime = Number(ingestSegment.payload.iNewsStory.fields.totalTime) * 1000;\n    blueprintParts.forEach(part => {\n        if (part.part.expectedDuration === undefined || part.part.expectedDuration < 0) {\n            part.part.expectedDuration =\n                extraTime > config.studio.DefaultPartDuration\n                    ? extraTime > config.studio.MaximumPartDuration\n                        ? config.studio.MaximumPartDuration\n                        : extraTime\n                    : config.studio.DefaultPartDuration;\n        }\n        extraTime -= part.part.expectedDuration;\n        if (part.part.displayDuration && (part.part.displayDuration < 0 || isNaN(part.part.displayDuration))) {\n            part.part.displayDuration = 0;\n        }\n    });\n    if (blueprintParts.filter(part => part.pieces.length === 0 && part.adLibPieces.length).length === blueprintParts.length) {\n        segment.isHidden = true;\n    }\n    if (extraTime > 0 &&\n        // Filter out Jingle-only parts\n        (blueprintParts.length !== 1 ||\n            (blueprintParts[blueprintParts.length - 1] &&\n                !blueprintParts[blueprintParts.length - 1].pieces.some(piece => piece.sourceLayerId === 'studio0_jingle')))) {\n        const gapPart = tv2_common_1.literal({\n            part: tv2_common_1.literal({\n                externalId: `${ingestSegment.externalId}-GAP`,\n                title: `Adlib Gap`,\n                metaData: {},\n                typeVariant: '',\n                gap: true,\n                invalid: true,\n                expectedDuration: extraTime,\n                displayDurationGroup: ingestSegment.externalId\n            }),\n            pieces: [],\n            adLibPieces: []\n        });\n        blueprintParts.push(gapPart);\n    }\n    if (blueprintParts.filter(part => part.part.invalid === true).length === blueprintParts.length &&\n        ingestSegment.payload.iNewsStory.cues.length === 0) {\n        segment.isHidden = true;\n    }\n    blueprintParts = blueprintParts.map(part => {\n        const actualPart = part.part;\n        actualPart.metaData = tv2_common_1.literal(Object.assign(Object.assign({}, actualPart.metaData), { segmentExternalId: ingestSegment.externalId }));\n        if (actualPart.autoNext === undefined) {\n            actualPart.autoNext = false;\n        }\n        if (actualPart.invalid === undefined) {\n            actualPart.invalid = false;\n        }\n        return Object.assign(Object.assign({}, part), { part: actualPart });\n    });\n    return {\n        segment,\n        parts: blueprintParts\n    };\n}\nexports.getSegmentBase = getSegmentBase;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\n/**\n * Finds the index of the next primary cue.\n * @param partdefinition Part.\n * @param currentCue Index of current cue.\n */\nfunction GetNextPartCue(partdefinition, currentCue) {\n    const index = partdefinition.cues\n        .slice(currentCue + 1)\n        .findIndex(cue => cue.type === tv2_constants_1.CueType.DVE ||\n        cue.type === tv2_constants_1.CueType.Ekstern ||\n        (cue.type === tv2_constants_1.CueType.TargetEngine &&\n            cue.data.engine.match(/full/i) &&\n            partdefinition.type !== \"Grafik\" /* Grafik */) ||\n        cue.type === tv2_constants_1.CueType.Telefon);\n    if (index === -1) {\n        return -1;\n    }\n    return index + currentCue + 1;\n}\nexports.GetNextPartCue = GetNextPartCue;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nconst frameTime_1 = __webpack_require__(12);\n// TODO: OFFTUBE: find a way to do this for adlibs\nfunction GetJinglePartProperties(_context, config, part) {\n    if (part.cues) {\n        const cue = part.cues.find(c => c.type === tv2_constants_1.CueType.Jingle);\n        if (cue) {\n            const realBreaker = config.showStyle.BreakerConfig.find(conf => {\n                return conf.BreakerName && typeof conf.BreakerName === 'string'\n                    ? conf.BreakerName.toString()\n                        .trim()\n                        .toUpperCase() === cue.clip.toUpperCase()\n                    : false;\n            });\n            if (realBreaker) {\n                return {\n                    expectedDuration: frameTime_1.TimeFromFrames(Number(realBreaker.Duration)) -\n                        frameTime_1.TimeFromFrames(Number(realBreaker.EndAlpha)) -\n                        frameTime_1.TimeFromFrames(Number(realBreaker.StartAlpha)),\n                    prerollDuration: config.studio.CasparPrerollDuration + frameTime_1.TimeFromFrames(Number(realBreaker.StartAlpha)),\n                    autoNextOverlap: frameTime_1.TimeFromFrames(Number(realBreaker.EndAlpha)),\n                    disableOutTransition: false,\n                    autoNext: realBreaker.Autonext === true\n                };\n            }\n        }\n    }\n    return {};\n}\nexports.GetJinglePartProperties = GetJinglePartProperties;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction EvaluateCuesBase(showStyleOptions, context, config, pieces, adLibPieces, cues, partDefinition, options) {\n    var _a;\n    let adLibRank = 0;\n    for (const cue of cues) {\n        if (cue && !SkipCue(cue, options.selectedCueTypes, options.excludeAdlibs, options.adlibsOnly)) {\n            const shouldAdlib = /* config.showStyle.IsOfftube || */ options.adlib ? true : cue.adlib ? true : false;\n            switch (cue.type) {\n                case tv2_constants_1.CueType.Grafik:\n                    if (showStyleOptions.EvaluateCueGrafik) {\n                        showStyleOptions.EvaluateCueGrafik(config, context, pieces, adLibPieces, partDefinition.externalId, cue, 'OVL', shouldAdlib, partDefinition, false, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.MOS:\n                    if (showStyleOptions.EvaluateCueMOS) {\n                        showStyleOptions.EvaluateCueMOS(config, context, pieces, adLibPieces, partDefinition.externalId, cue, cue.type === tv2_constants_1.CueType.MOS && ((_a = cue.engine) === null || _a === void 0 ? void 0 : _a.match(/FULL/i)) ? 'FULL' : 'OVL', shouldAdlib, false, adLibRank, options.isGrafikPart);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Ekstern:\n                    if (showStyleOptions.EvaluateCueEkstern) {\n                        showStyleOptions.EvaluateCueEkstern(context, config, pieces, adLibPieces, partDefinition.externalId, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.DVE:\n                    if (showStyleOptions.EvaluateCueDVE) {\n                        showStyleOptions.EvaluateCueDVE(context, config, pieces, adLibPieces, partDefinition, cue, shouldAdlib, adLibRank);\n                        // Always make an adlib for DVEs\n                        if (!shouldAdlib) {\n                            showStyleOptions.EvaluateCueDVE(context, config, pieces, adLibPieces, partDefinition, cue, true, adLibRank);\n                        }\n                    }\n                    break;\n                case tv2_constants_1.CueType.AdLib:\n                    if (showStyleOptions.EvaluateCueAdLib) {\n                        showStyleOptions.EvaluateCueAdLib(context, config, adLibPieces, partDefinition.externalId, cue, partDefinition, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Telefon:\n                    if (showStyleOptions.EvaluateCueTelefon) {\n                        showStyleOptions.EvaluateCueTelefon(config, context, pieces, adLibPieces, partDefinition.externalId, partDefinition, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.VIZ:\n                    if (showStyleOptions.EvaluateCueVIZ) {\n                        showStyleOptions.EvaluateCueVIZ(context, config, pieces, adLibPieces, partDefinition.externalId, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Jingle:\n                    if (showStyleOptions.EvaluateCueJingle) {\n                        showStyleOptions.EvaluateCueJingle(context, config, pieces, adLibPieces, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.LYD:\n                    if (showStyleOptions.EvaluateCueLYD) {\n                        showStyleOptions.EvaluateCueLYD(context, config, pieces, adLibPieces, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Design:\n                    if (showStyleOptions.EvaluateCueDesign) {\n                        showStyleOptions.EvaluateCueDesign(config, context, pieces, adLibPieces, partDefinition.externalId, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.TargetEngine:\n                    if (showStyleOptions.EvaluateCueTargetEngine) {\n                        showStyleOptions.EvaluateCueTargetEngine(context, config, pieces, adLibPieces, partDefinition.externalId, partDefinition, cue, shouldAdlib);\n                    }\n                    break;\n                case tv2_constants_1.CueType.ClearGrafiks:\n                    if (showStyleOptions.EvaluateCueClearGrafiks) {\n                        showStyleOptions.EvaluateCueClearGrafiks(pieces, partDefinition.externalId, cue, shouldAdlib);\n                    }\n                    break;\n                default:\n                    if (cue.type !== tv2_constants_1.CueType.Unknown && cue.type !== tv2_constants_1.CueType.Profile && cue.type !== tv2_constants_1.CueType.Mic) {\n                        // TODO: Profile -> Change the profile as defined in VIZ device settings\n                        // TODO: Mic -> For the future\n                        // context.warning(`Unimplemented cue type: ${CueType[cue.type]}`)\n                        tv2_common_1.assertUnreachable(cue);\n                    }\n                    break;\n            }\n            if (shouldAdlib || cue.type === tv2_constants_1.CueType.AdLib || cue.type === tv2_constants_1.CueType.DVE) {\n                adLibRank++;\n            }\n        }\n    }\n    ;\n    [...pieces, ...adLibPieces].forEach(piece => {\n        if (piece.content && piece.content.timelineObjects) {\n            piece.content.timelineObjects.forEach((obj) => {\n                if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.VIZMSE) {\n                    if (!piece.expectedPlayoutItems) {\n                        piece.expectedPlayoutItems = [];\n                    }\n                    if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL) {\n                        const o = obj;\n                        const name = obj.content.templateName;\n                        if (name && name.length) {\n                            piece.expectedPlayoutItems.push({\n                                deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                content: {\n                                    templateName: obj.content.templateName,\n                                    templateData: obj.content.templateData,\n                                    channelName: o.content.channelName,\n                                    rundownId: ''\n                                }\n                            });\n                        }\n                    }\n                    else if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_PILOT) {\n                        const name = obj.content.templateVcpId;\n                        if (name !== undefined && name.toString().length) {\n                            piece.expectedPlayoutItems.push({\n                                deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                content: {\n                                    templateName: obj.content.templateVcpId,\n                                    channelName: obj.content.channelName,\n                                    rundownId: ''\n                                }\n                            });\n                        }\n                    }\n                    else if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.CLEAR_ALL_ELEMENTS) {\n                        piece.expectedPlayoutItems.push({\n                            deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                            content: {\n                                templateName: 'altud',\n                                channelName: 'OVL1',\n                                templateData: [],\n                                rundownId: ''\n                            }\n                        });\n                    }\n                }\n            });\n        }\n    });\n}\nexports.EvaluateCuesBase = EvaluateCuesBase;\nfunction SkipCue(cue, selectedCueTypes, excludeAdlibs, adlibsOnly) {\n    if (excludeAdlibs === true && cue.adlib) {\n        return true;\n    }\n    if (adlibsOnly === true && !cue.adlib) {\n        return true;\n    }\n    if (selectedCueTypes && !selectedCueTypes.includes(cue.type)) {\n        return true;\n    }\n    return false;\n}\nexports.SkipCue = SkipCue;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nfunction TransitionFromString(str) {\n    if (str.match(/MIX/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.MIX;\n    }\n    else if (str.match(/DIP/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.DIP;\n    }\n    else if (str.match(/WIPE/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.WIPE;\n    }\n    else if (str.match(/STING/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.STING;\n    }\n    return timeline_state_resolver_types_1.AtemTransitionStyle.CUT;\n}\nexports.TransitionFromString = TransitionFromString;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TransitionSettings(part) {\n    if (part.transition && part.transition.duration) {\n        if (part.transition.style === 'WIPE') {\n            return {\n                wipe: {\n                    rate: part.transition.duration\n                }\n            };\n        }\n        return {\n            mix: {\n                rate: part.transition.duration\n            }\n        };\n    }\n    return {};\n}\nexports.TransitionSettings = TransitionSettings;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(59), exports);\ntslib_1.__exportStar(__webpack_require__(60), exports);\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nfunction EvaluateVIZBase(context, config, pieces, adlibPieces, partId, parsedCue, useVizEngine, sourceLayers, adlib, rank) {\n    if (parsedCue.design.match(/^dve-triopage$/i)) {\n        const fileName = parsedCue.content.TRIOPAGE ? parsedCue.content.TRIOPAGE : parsedCue.content.GRAFIK;\n        const path = `dve/${fileName}`;\n        if (adlib) {\n            adlibPieces.push(tv2_common_1.literal({\n                _rank: rank || 0,\n                externalId: partId,\n                name: fileName,\n                outputLayerId: 'sec',\n                sourceLayerId: sourceLayers.SourceLayerDVEBackground,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                content: tv2_common_1.literal({\n                    fileName,\n                    path,\n                    timelineObjects: _.compact([\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: { start: 0 },\n                            priority: 100,\n                            layer: sourceLayers.CasparLLayerDVELoop,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: path,\n                                loop: true\n                            }\n                        })\n                    ])\n                })\n            }));\n        }\n        else {\n            pieces.push(tv2_common_1.literal({\n                _id: '',\n                externalId: partId,\n                name: fileName,\n                enable: {\n                    start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                },\n                outputLayerId: 'sec',\n                sourceLayerId: sourceLayers.SourceLayerDVEBackground,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                content: tv2_common_1.literal({\n                    fileName,\n                    path,\n                    timelineObjects: _.compact([\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: { start: 0 },\n                            priority: 100,\n                            layer: sourceLayers.CasparLLayerDVELoop,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: path,\n                                loop: true\n                            }\n                        })\n                    ])\n                })\n            }));\n        }\n    }\n    else if (parsedCue.rawType.match(/^VIZ=grafik-design$/i)) {\n        context.warning('VIZ=grafik-design is not supported for this showstyle');\n    }\n    else if (parsedCue.rawType.match(/^VIZ=full$/i)) {\n        if (useVizEngine) {\n            if (sourceLayers.SourceLayerVizFullIn1 && sourceLayers.AtemLLayerAtemAuxVizOvlIn1) {\n                if (!parsedCue.content.INP1) {\n                    context.warning(`No input provided by ${parsedCue.rawType}`);\n                    return;\n                }\n                let sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, parsedCue.content.INP1);\n                if (!sourceInfo) {\n                    sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, parsedCue.content.INP1);\n                    if (!sourceInfo) {\n                        context.warning(`Could not find source ${parsedCue.content.INP1}`);\n                        return;\n                    }\n                }\n                pieces.push(tv2_common_1.literal({\n                    _id: '',\n                    externalId: partId,\n                    enable: {\n                        start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                    },\n                    name: parsedCue.content.INP1 || '',\n                    outputLayerId: 'aux',\n                    sourceLayerId: sourceLayers.SourceLayerVizFullIn1,\n                    infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                    content: tv2_common_1.literal({\n                        studioLabel: '',\n                        switcherInput: sourceInfo.port,\n                        timelineObjects: _.compact([\n                            tv2_common_1.literal({\n                                id: '',\n                                enable: { start: 0 },\n                                priority: 100,\n                                layer: sourceLayers.AtemLLayerAtemAuxVizOvlIn1,\n                                content: {\n                                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                                    aux: {\n                                        input: sourceInfo.port\n                                    }\n                                }\n                            })\n                        ])\n                    })\n                }));\n            }\n            else {\n                context.warning(`Could not route source to Viz engine, this studio is not configured correctly.`);\n            }\n        }\n    }\n    else {\n        if (useVizEngine) {\n            if (sourceLayers.SourceLayerDesign && sourceLayers.GraphicLLayerGraphicLLayerDesign) {\n                const path = parsedCue.content.triopage ? parsedCue.content.triopage : parsedCue.content.GRAFIK;\n                if (!path || !path.length) {\n                    context.warning(`No valid template found for ${parsedCue.design}`);\n                    return;\n                }\n                if (adlib) {\n                    adlibPieces.push(tv2_common_1.literal({\n                        _rank: rank || 0,\n                        externalId: partId,\n                        name: path,\n                        outputLayerId: 'sec',\n                        sourceLayerId: sourceLayers.SourceLayerDesign,\n                        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                        content: tv2_common_1.literal({\n                            fileName: path,\n                            path,\n                            timelineObjects: _.compact([\n                                tv2_common_1.literal({\n                                    id: '',\n                                    enable: { start: 0 },\n                                    priority: 100,\n                                    layer: sourceLayers.GraphicLLayerGraphicLLayerDesign,\n                                    content: {\n                                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                                        templateName: path,\n                                        templateData: []\n                                    }\n                                })\n                            ])\n                        })\n                    }));\n                }\n                else {\n                    pieces.push(tv2_common_1.literal({\n                        _id: '',\n                        externalId: partId,\n                        name: path,\n                        enable: {\n                            start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                        },\n                        outputLayerId: 'sec',\n                        sourceLayerId: sourceLayers.SourceLayerDesign,\n                        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                        content: tv2_common_1.literal({\n                            fileName: path,\n                            path,\n                            timelineObjects: _.compact([\n                                tv2_common_1.literal({\n                                    id: '',\n                                    enable: { start: 0 },\n                                    priority: 100,\n                                    layer: sourceLayers.GraphicLLayerGraphicLLayerDesign,\n                                    content: {\n                                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                                        templateName: path,\n                                        templateData: []\n                                    }\n                                })\n                            ])\n                        })\n                    }));\n                }\n            }\n            else {\n                context.warning(`Could not create VIZ design, this studio is not configured correctly.`);\n            }\n        }\n    }\n}\nexports.EvaluateVIZBase = EvaluateVIZBase;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\n/**\n * Check that a template string is valid.\n * @param template User-provided template.\n */\nfunction TemplateIsValid(template) {\n    let boxesValid = false;\n    let indexValid = false;\n    let propertiesValid = false;\n    let borderValid = false;\n    if (Object.keys(template).indexOf('boxes') !== -1) {\n        if (_.isEqual(Object.keys(template.boxes), ['0', '1', '2', '3'])) {\n            boxesValid = true;\n        }\n    }\n    if (Object.keys(template).indexOf('index') !== -1) {\n        indexValid = true;\n    }\n    if (Object.keys(template).indexOf('properties') !== -1) {\n        if (_.isEqual(Object.keys(template.properties), [\n            'artFillSource',\n            'artCutSource',\n            'artOption',\n            'artPreMultiplied',\n            'artClip',\n            'artGain',\n            'artInvertKey'\n        ])) {\n            propertiesValid = true;\n        }\n    }\n    if (Object.keys(template).indexOf('border') !== -1) {\n        if (_.isEqual(Object.keys(template.border), [\n            'borderEnabled',\n            'borderBevel',\n            'borderOuterWidth',\n            'borderInnerWidth',\n            'borderOuterSoftness',\n            'borderInnerSoftness',\n            'borderBevelSoftness',\n            'borderBevelPosition',\n            'borderHue',\n            'borderSaturation',\n            'borderLuma',\n            'borderLightSourceDirection',\n            'borderLightSourceAltitude'\n        ])) {\n            borderValid = true;\n        }\n    }\n    if (boxesValid && indexValid && propertiesValid && borderValid) {\n        return true;\n    }\n    return false;\n}\nexports.TemplateIsValid = TemplateIsValid;\nfunction GetDVETemplate(config, templateName) {\n    return config ? config.find(c => c.DVEName.toString().toUpperCase() === templateName.toUpperCase()) : undefined;\n}\nexports.GetDVETemplate = GetDVETemplate;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(62), exports);\ntslib_1.__exportStar(__webpack_require__(14), exports);\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = __webpack_require__(8);\nconst invalid_1 = __webpack_require__(14);\nfunction CreatePartServerBase(context, config, partDefinition) {\n    if (partDefinition.fields === undefined) {\n        context.warning('Video ID not set!');\n        return { part: invalid_1.CreatePartInvalid(partDefinition), file: '', duration: 0, invalid: true };\n    }\n    if (!partDefinition.fields.videoId) {\n        context.warning('Video ID not set!');\n        return { part: invalid_1.CreatePartInvalid(partDefinition), file: '', duration: 0, invalid: true };\n    }\n    const file = partDefinition.fields.videoId;\n    const duration = Number(partDefinition.fields.tapeTime) * 1000 || 0;\n    const basePart = util_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.rawType,\n        metaData: {},\n        typeVariant: '',\n        expectedDuration: duration || 1000,\n        prerollDuration: config.studio.CasparPrerollDuration\n    });\n    return {\n        part: {\n            part: basePart,\n            adLibPieces: [],\n            pieces: []\n        },\n        file,\n        duration\n    };\n}\nexports.CreatePartServerBase = CreatePartServerBase;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(64), exports);\ntslib_1.__exportStar(__webpack_require__(65), exports);\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst server_1 = __webpack_require__(15);\nfunction CreateAdlibServer(config, rank, externalId, mediaPlayerSession, partDefinition, file, vo, sourceLayers, offtubeOptions) {\n    return tv2_common_1.literal(Object.assign(Object.assign({ _rank: rank, externalId }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? { tags: offtubeOptions.tagAsAdlib ? [tv2_constants_1.AdlibTags.OFFTUBE_ADLIB_SERVER] : [] } : {})), { name: `${partDefinition.storyName} Server: ${file}`, sourceLayerId: vo ? sourceLayers.PgmVoiceOver : sourceLayers.PgmServer, outputLayerId: 'pgm', infiniteMode: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment : tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart, toBeQueued: !(offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube), metaData: tv2_common_1.literal({\n            mediaPlayerSessions: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? [tv2_constants_1.MEDIA_PLAYER_AUTO] : [mediaPlayerSession]\n        }), content: server_1.MakeContentServer(file, (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? tv2_constants_1.MEDIA_PLAYER_AUTO : mediaPlayerSession, partDefinition, config, sourceLayers, true, offtubeOptions), adlibPreroll: config.studio.CasparPrerollDuration }));\n}\nexports.CreateAdlibServer = CreateAdlibServer;\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst PREVIEW_CHARACTERS = 30;\n// export function AddScript(part: PartDefinition, pieces: IBlueprintPiece[], duration: number, slutord: boolean) {\nfunction AddScript(part, pieces, duration, sourceLayerId) {\n    if (!pieces.length) {\n        return;\n    }\n    let script = part.script.replace(/^\\**/i, '').trim();\n    if (part.endWords) {\n        script = script.length ? `${script} SLUTORD: ${part.endWords}` : part.endWords;\n    }\n    if (script.length) {\n        const stripLength = Math.min(PREVIEW_CHARACTERS, script.length);\n        pieces.push(tv2_common_1.literal({\n            _id: '',\n            externalId: part.externalId,\n            name: script.slice(0, stripLength),\n            enable: {\n                start: 0,\n                duration\n            },\n            outputLayerId: 'manus',\n            sourceLayerId,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            content: tv2_common_1.literal({\n                firstWords: script.slice(0, stripLength),\n                lastWords: script\n                    .replace(/\\n/gi, ' ')\n                    .trim()\n                    .slice(script.length - stripLength)\n                    .trim(),\n                fullScript: script,\n                sourceDuration: duration,\n                lastModified: part.modified * 1000\n            })\n        }));\n    }\n}\nexports.AddScript = AddScript;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(15), exports);\ntslib_1.__exportStar(__webpack_require__(67), exports);\ntslib_1.__exportStar(__webpack_require__(68), exports);\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst _ = __webpack_require__(3);\nconst atem_1 = __webpack_require__(11);\nfunction MakeContentDVEBase(context, config, partDefinition, parsedCue, dveConfig, dveGeneratorOptions, addClass, adlib) {\n    if (!dveConfig) {\n        context.warning(`DVE ${parsedCue.template} is not configured`);\n        return {\n            valid: false,\n            content: {\n                boxSourceConfiguration: [],\n                timelineObjects: [],\n                dveConfiguration: []\n            },\n            stickyLayers: []\n        };\n    }\n    // console.log('boxmap1', boxMap)\n    // boxMap = boxMap.filter(map => map !== '')\n    // console.log('boxmap2', boxMap)\n    const graphicsTemplateContent = {};\n    parsedCue.labels.forEach((label, i) => {\n        graphicsTemplateContent[`locator${i + 1}`] = label;\n    });\n    return MakeContentDVE2(context, config, dveConfig, graphicsTemplateContent, parsedCue.sources, dveGeneratorOptions, addClass ? tv2_common_1.DVEParentClass('studio0', dveConfig.DVEName) : undefined, adlib, partDefinition);\n}\nexports.MakeContentDVEBase = MakeContentDVEBase;\nfunction MakeContentDVE2(context, config, dveConfig, graphicsTemplateContent, sources, dveGeneratorOptions, className, adlib, partDefinition, offtube) {\n    var _a;\n    const template = JSON.parse(dveConfig.DVEJSON);\n    const inputs = dveConfig.DVEInputs\n        ? dveConfig.DVEInputs.toString().split(';')\n        : '1:INP1;2:INP2;3:INP3;4:INP4'.split(';');\n    const boxMap = [];\n    const classes = [];\n    inputs.forEach(source => {\n        const sourceProps = source.split(':');\n        const fromCue = sourceProps[1];\n        const targetBox = Number(sourceProps[0]);\n        if (!fromCue || !targetBox || isNaN(targetBox)) {\n            context.warning(`Invalid DVE mapping: ${sourceProps}`);\n            return;\n        }\n        const sourceLayer = dveGeneratorOptions.boxLayers[fromCue];\n        classes.push(`${sourceLayer}_${dveGeneratorOptions.boxMappings[targetBox - 1]}`);\n        let usedServer = false;\n        if (sources) {\n            const prop = sources[fromCue];\n            if (prop === null || prop === void 0 ? void 0 : prop.match(/[K|C]AM(?:era)? ?.*/i)) {\n                const match = prop.match(/[K|C]AM(?:era)? ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `KAM ${match[1]}`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/LIVE ?.*/i)) {\n                const match = prop.match(/LIVE ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `LIVE ${match[1]}`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/full/i)) {\n                boxMap[targetBox - 1] = { source: `ENGINE FULL`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/EVS ?.*/i)) {\n                const match = prop.match(/EVS ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `EVS ${match[1]}`, sourceLayer };\n            }\n            else if (prop) {\n                if (partDefinition && partDefinition.fields.videoId && !usedServer) {\n                    boxMap[targetBox - 1] = { source: `SERVER ${partDefinition.fields.videoId}`, sourceLayer };\n                    usedServer = true;\n                }\n                else {\n                    boxMap[targetBox - 1] = { source: prop, sourceLayer };\n                }\n            }\n            else {\n                if (partDefinition && partDefinition.fields.videoId && !usedServer) {\n                    boxMap[targetBox - 1] = { source: `SERVER ${partDefinition.fields.videoId}`, sourceLayer };\n                    usedServer = true;\n                }\n                else {\n                    context.warning(`Missing mapping for ${targetBox}`);\n                    boxMap[targetBox - 1] = { source: '', sourceLayer };\n                }\n            }\n        }\n        else {\n            // Need something to keep the layout etc\n            boxMap[targetBox - 1] = { source: '', sourceLayer };\n        }\n    });\n    const boxes = _.map(template.boxes, box => (Object.assign(Object.assign({}, box), { source: config.studio.AtemSource.Default })));\n    const dveTimeline = [];\n    const boxSources = [];\n    const setBoxSource = (num, sourceInfo, mappingFrom) => {\n        if (boxes[num]) {\n            boxes[num].source = Number(sourceInfo.port);\n            boxSources.push(Object.assign(Object.assign({}, boxSource(sourceInfo, mappingFrom)), tv2_common_1.literal({\n                studioLabel: '',\n                switcherInput: Number(sourceInfo.port),\n                timelineObjects: []\n            })));\n        }\n    };\n    let valid = true;\n    let server = false;\n    const timelineStartObjId = `ssrc-${(_a = partDefinition === null || partDefinition === void 0 ? void 0 : partDefinition.externalId) !== null && _a !== void 0 ? _a : ''}-${template}`;\n    boxMap.forEach((mappingFrom, num) => {\n        if (mappingFrom === undefined || mappingFrom.source === '') {\n            if (sources) {\n                // If it is intentional there are no sources, then ignore\n                // TODO - should this warn?\n                context.warning(`Missing source type for DVE box: ${num + 1}`);\n                valid = false;\n            }\n        }\n        else {\n            const props = mappingFrom.source.split(' ');\n            const sourceType = props[0];\n            const sourceInput = props[1];\n            if (!sourceType || !sourceInput) {\n                context.warning(`Invalid DVE source: ${mappingFrom.source}`);\n                return;\n            }\n            const audioEnable = {\n                while: `!\\$${mappingFrom.sourceLayer}`\n                // while: `!.${ControlClasses.DVEBoxOverridePrefix + boxMappings[num]}`\n            }; // TODO - test\n            if (sourceType.match(/KAM/i)) {\n                const sourceInfoCam = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, mappingFrom.source);\n                if (sourceInfoCam === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoCam, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, mappingFrom.source, audioEnable));\n            }\n            else if (sourceType.match(/LIVE/i) || sourceType.match(/SKYPE/i)) {\n                const sourceInfoLive = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, mappingFrom.source);\n                if (sourceInfoLive === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoLive, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForEkstern(context, config.sources, mappingFrom.source, dveGeneratorOptions.dveTimelineGenerators.GetLayersForEkstern, audioEnable));\n            }\n            else if (sourceType.match(/EVS/i)) {\n                const sourceInfoDelayedPlayback = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, mappingFrom.source);\n                if (sourceInfoDelayedPlayback === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoDelayedPlayback, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, 'evs'));\n            }\n            else if (sourceType.match(/ENGINE/i)) {\n                if (sourceInput.match(/full/i)) {\n                    const sourceInfoFull = {\n                        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n                        id: 'full',\n                        port: config.studio.AtemSource.DSK1F\n                    };\n                    setBoxSource(num, sourceInfoFull, mappingFrom.source);\n                    dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, 'full'));\n                }\n                else {\n                    context.warning(`Unsupported engine for DVE: ${sourceInput}`);\n                }\n            }\n            else if (sourceType.match(/SERVER/i)) {\n                const file = partDefinition ? partDefinition.fields.videoId : undefined;\n                server = true;\n                setBoxSource(num, {\n                    type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.VT,\n                    id: 'SERVER',\n                    port: -1\n                }, mappingFrom.source);\n                dveTimeline.push(tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, undefined, undefined, true),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.CasparLLayer.ClipPending,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                        file: adlib ? 'continue' : file ? file : 'continue',\n                        loop: true\n                    },\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    },\n                    classes: [`dve_placeholder`]\n                }), tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, undefined, undefined, true),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.SisyfosLLayer.ClipPending,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                        isPgm: 1\n                    },\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    },\n                    classes: []\n                }));\n                return;\n            }\n            else {\n                context.warning(`Unknown source type for DVE: ${mappingFrom.source}`);\n                valid = false;\n            }\n        }\n    });\n    const graphicsTemplateName = dveConfig.DVEGraphicsTemplate ? dveConfig.DVEGraphicsTemplate.toString() : '';\n    const graphicsTemplateStyle = dveConfig.DVEGraphicsTemplateJSON\n        ? JSON.parse(dveConfig.DVEGraphicsTemplateJSON.toString())\n        : '';\n    const keyFile = dveConfig.DVEGraphicsKey ? dveConfig.DVEGraphicsKey.toString() : '';\n    const frameFile = dveConfig.DVEGraphicsFrame ? dveConfig.DVEGraphicsFrame.toString() : '';\n    if (adlib) {\n        dveTimeline.push(...config.stickyLayers\n            .filter(layer => dveTimeline.map(obj => obj.layer).indexOf(layer) === -1)\n            .filter(layer => config.liveAudio.indexOf(layer) === -1)\n            .map(layer => {\n            return tv2_common_1.literal({\n                id: '',\n                enable: getDVEEnable(!!offtube),\n                priority: 1,\n                layer,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 0\n                },\n                metaData: {\n                    sisyfosPersistLevel: true\n                }\n            });\n        }));\n    }\n    return {\n        valid,\n        content: tv2_common_1.literal({\n            boxSourceConfiguration: boxSources,\n            dveConfiguration: {},\n            timelineObjects: _.compact([\n                // Setup classes for adlibs to be able to override boxes\n                tv2_common_1.createEmptyObject({\n                    enable: getDVEEnable(!!offtube),\n                    layer: 'dve_lookahead_control',\n                    classes: [tv2_constants_1.ControlClasses.DVEOnAir]\n                }),\n                // setup ssrc\n                tv2_common_1.literal({\n                    id: offtube ? timelineStartObjId : '',\n                    enable: getDVEEnable(!!offtube),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.ATEM.SSrcDefault,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC,\n                        ssrc: { boxes }\n                    },\n                    classes: className ? [...classes, className] : classes,\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    }\n                }),\n                tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, Number(config.studio.CasparPrerollDuration) - 10, timelineStartObjId),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.ATEM.SSrcArt,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRCPROPS,\n                        ssrcProps: {\n                            artFillSource: config.studio.AtemSource.SplitArtF,\n                            artCutSource: config.studio.AtemSource.SplitArtK,\n                            artOption: 1,\n                            artPreMultiplied: true\n                        }\n                    }\n                }),\n                tv2_common_1.literal(Object.assign({ id: '', enable: getDVEEnable(!!offtube, Number(config.studio.CasparPrerollDuration), timelineStartObjId), priority: 1, layer: dveGeneratorOptions.dveLayers.ATEM.MEProgram, content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                        me: {\n                            input: atem_1.AtemSourceIndex.SSrc,\n                            transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                        }\n                    } }, (adlib ? { classes: ['adlib_deparent'] } : {}))),\n                ...(graphicsTemplateName\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVETemplate,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.TEMPLATE,\n                                templateType: 'html',\n                                name: graphicsTemplateName,\n                                data: {\n                                    display: {\n                                        isPreview: false,\n                                        displayState: 'locators'\n                                    },\n                                    locators: {\n                                        style: graphicsTemplateStyle ? graphicsTemplateStyle : {},\n                                        content: graphicsTemplateContent\n                                    }\n                                },\n                                useStopCommand: false\n                            }\n                        })\n                    ]\n                    : []),\n                ...(keyFile\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVEKey,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: keyFile,\n                                mixer: {\n                                    keyer: true\n                                },\n                                loop: true\n                            }\n                        })\n                    ]\n                    : []),\n                ...(frameFile\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVEFrame,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: frameFile,\n                                loop: true\n                            }\n                        })\n                    ]\n                    : []),\n                ...dveTimeline\n            ])\n        }),\n        stickyLayers: [\n            ...dveTimeline\n                .filter(obj => obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS)\n                .filter(obj => dveGeneratorOptions.AUDIO_LAYERS.includes(obj.layer.toString()))\n                .filter(obj => !dveGeneratorOptions.EXCLUDED_LAYERS.includes(obj.layer.toString()))\n                .map(obj => obj.layer.toString())\n        ]\n    };\n}\nexports.MakeContentDVE2 = MakeContentDVE2;\nfunction boxSource(info, label) {\n    return {\n        studioLabel: label,\n        switcherInput: info.port,\n        type: info.type\n    };\n}\nfunction getDVEEnable(offtube, offsetFromStart, startId, media) {\n    if (offsetFromStart) {\n        return offtube\n            ? { start: startId ? `#${startId}.start + ${offsetFromStart}` : offsetFromStart }\n            : { start: offsetFromStart !== null && offsetFromStart !== void 0 ? offsetFromStart : 0 };\n    }\n    return offtube\n        ? { while: `.${[tv2_constants_1.Enablers.OFFTUBE_ENABLE_DVE]}` }\n        : media\n            ? { while: '1' }\n            : { start: offsetFromStart !== null && offsetFromStart !== void 0 ? offsetFromStart : 0 };\n}\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst util_1 = __webpack_require__(8);\nfunction CreateJingleContentBase(config, file, layers, preMultiplied) {\n    return util_1.literal({\n        studioLabel: '',\n        fileName: file,\n        path: file,\n        firstWords: '',\n        lastWords: '',\n        timelineObjects: util_1.literal([\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: 0\n                },\n                priority: 1,\n                layer: layers.Caspar.PlayerJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                    file\n                }\n            }),\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: Number(config.studio.CasparPrerollDuration)\n                },\n                priority: 1,\n                layer: layers.ATEM.DSKJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK,\n                    dsk: {\n                        onAir: true,\n                        sources: {\n                            fillSource: config.studio.AtemSource.JingleFill,\n                            cutSource: config.studio.AtemSource.JingleKey\n                        },\n                        properties: {\n                            tie: false,\n                            preMultiply: preMultiplied,\n                            clip: config.studio.AtemSettings.CCGClip * 10,\n                            gain: config.studio.AtemSettings.CCGGain * 10,\n                            mask: {\n                                enabled: false\n                            }\n                        }\n                    }\n                },\n                classes: ['MIX_MINUS_OVERRIDE_DSK']\n            }),\n            ...(layers.ATEM.USKCleanEffekt\n                ? [\n                    util_1.literal({\n                        id: '',\n                        enable: {\n                            start: Number(config.studio.CasparPrerollDuration)\n                        },\n                        priority: 1,\n                        layer: layers.ATEM.USKCleanEffekt,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                upstreamKeyers: [\n                                    {\n                                        upstreamKeyerId: 0,\n                                        onAir: true,\n                                        mixEffectKeyType: 0,\n                                        flyEnabled: false,\n                                        fillSource: config.studio.AtemSource.JingleFill,\n                                        cutSource: config.studio.AtemSource.JingleKey,\n                                        maskEnabled: false,\n                                        lumaSettings: {\n                                            preMultiplied,\n                                            clip: config.studio.AtemSettings.CCGClip * 10,\n                                            gain: config.studio.AtemSettings.CCGGain * 10 // input is percents (0-100), atem uses 1-000\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    })\n                ]\n                : []),\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: 0\n                },\n                priority: 1,\n                layer: layers.Sisyfos.PlayerJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 1\n                }\n            })\n        ])\n    });\n}\nexports.CreateJingleContentBase = CreateJingleContentBase;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst _ = __webpack_require__(3);\nconst helpers_1 = __webpack_require__(16);\nfunction onTimelineGenerate(context, timeline, previousPersistentState, previousPartEndState, resolvedPieces, parseConfig, sourceLayers, casparLayerClipPending) {\n    const previousPartEndState2 = previousPartEndState;\n    const replacedSessions = {}; // TODO: Replace with map\n    const config = parseConfig(context);\n    // Find server in pgm\n    const activeServerObj = timeline.find(o => o.layer.toString() === casparLayerClipPending && !o.isLookahead);\n    // Find any placeholders to replace\n    const objsToReplace = timeline.filter(o => { var _a; return ((_a = o.classes) === null || _a === void 0 ? void 0 : _a.includes(`dve_placeholder`)) && !o.id.match(/^previous/i); });\n    // Replace contents of placeholder objects\n    // TOD: Replace this with an adlib action\n    objsToReplace.forEach(objToReplace => {\n        const index = timeline.indexOf(objToReplace);\n        if (objToReplace && activeServerObj) {\n            objToReplace.content = activeServerObj.content;\n            let replaceMeta = objToReplace.metaData;\n            const activeMeta = activeServerObj.metaData;\n            if (activeMeta && activeMeta.mediaPlayerSession && replaceMeta && replaceMeta.mediaPlayerSession) {\n                replacedSessions[replaceMeta.mediaPlayerSession] = activeMeta.mediaPlayerSession;\n                replaceMeta = Object.assign(Object.assign({}, replaceMeta), { mediaPlayerSession: activeMeta.mediaPlayerSession });\n            }\n            objToReplace.metaData = replaceMeta;\n        }\n        timeline[index] = objToReplace;\n    });\n    // Replace all sessions that have been overwritten\n    _.each(timeline, o => {\n        const meta = o.metaData;\n        if (meta && meta.mediaPlayerSession) {\n            if (Object.keys(replacedSessions).includes(meta.mediaPlayerSession)) {\n                meta.mediaPlayerSession = replacedSessions[meta.mediaPlayerSession];\n                o.metaData = meta;\n            }\n        }\n    });\n    // Do the same for pieces\n    _.each(resolvedPieces, piece => {\n        if (piece.metaData) {\n            const meta = piece.metaData;\n            if (meta.mediaPlayerSessions) {\n                piece.metaData.mediaPlayerSessions = meta.mediaPlayerSessions.map(session => {\n                    if (Object.keys(replacedSessions).includes(session)) {\n                        return replacedSessions[session];\n                    }\n                    return session;\n                });\n            }\n        }\n    });\n    copyPreviousSisyfosLevels(context, timeline, previousPartEndState2 ? previousPartEndState2.stickySisyfosLevels : {}, resolvedPieces);\n    const persistentState = {\n        activeMediaPlayers: {},\n        segmentSession: context.part.segmentId\n    };\n    const previousPersistentState2 = previousPersistentState;\n    persistentState.activeMediaPlayers = helpers_1.assignMediaPlayers(context, config, timeline, previousPersistentState2 ? previousPersistentState2.activeMediaPlayers : {}, resolvedPieces, sourceLayers);\n    dveBoxLookaheadUseOriginalEnable(timeline);\n    return Promise.resolve({\n        timeline,\n        persistentState\n    });\n}\nexports.onTimelineGenerate = onTimelineGenerate;\nfunction getEndStateForPart(_context, _previousPersistentState, previousPartEndState, resolvedPieces, time) {\n    const endState = {\n        stickySisyfosLevels: {},\n        mediaPlayerSessions: {}\n    };\n    const previousPartEndState2 = previousPartEndState;\n    const activePieces = _.filter(resolvedPieces, p => p.enable && p.enable.start <= time && (!p.enable.end || p.enable.end >= time));\n    _.each(activePieces, piece => {\n        preservePieceSisfosLevel(endState, previousPartEndState2, piece);\n    });\n    _.each(activePieces, piece => {\n        if (piece.metaData) {\n            const meta = piece.metaData.mediaPlayerSessions;\n            if (meta && meta.length) {\n                endState.mediaPlayerSessions[piece.sourceLayerId] = meta;\n            }\n        }\n    });\n    return endState;\n}\nexports.getEndStateForPart = getEndStateForPart;\n/**\n * DVE box lookahead uses classes to select the correct object.\n * Lookahead is replacing this selector rule with a '1' which causes every box to show the same.\n * This simply restores the original enable, which gets put into metaData for this purpose.\n */\nfunction dveBoxLookaheadUseOriginalEnable(timeline) {\n    // DVE_box lookahead class\n    _.each(timeline, obj => {\n        const obj2 = obj;\n        if (obj2.isLookahead &&\n            obj2.content.deviceType === timeline_state_resolver_types_1.DeviceType.ATEM &&\n            obj2.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC\n        // obj2.enable &&\n        // (obj2.enable.while === '1' || obj2.enable.while === 1)\n        ) {\n            const origClass = obj2.metaData ? obj2.metaData.dveAdlibEnabler : undefined;\n            if (origClass) {\n                // Restore the original enable rule\n                obj2.enable = { while: origClass };\n            }\n        }\n    });\n}\nfunction preservePieceSisfosLevel(endState, previousPartEndState, piece) {\n    const metaData = piece.metaData;\n    if (metaData) {\n        // Loop through rm level persistance\n        if (metaData.stickySisyfosLevels) {\n            for (const key of Object.keys(metaData.stickySisyfosLevels)) {\n                const values = metaData.stickySisyfosLevels[key];\n                // Follow the previous state, if specified, or start with this exposed value\n                endState.stickySisyfosLevels[key] =\n                    values.followsPrevious &&\n                        previousPartEndState &&\n                        previousPartEndState.stickySisyfosLevels &&\n                        previousPartEndState.stickySisyfosLevels[key]\n                        ? previousPartEndState.stickySisfosLevels[key]\n                        : values.value;\n            }\n        }\n    }\n}\nexports.preservePieceSisfosLevel = preservePieceSisfosLevel;\nfunction isSisyfosSource(obj) {\n    return (obj.content &&\n        obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS &&\n        obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS);\n}\nfunction copyPreviousSisyfosLevels(context, timelineObjs, previousLevels, resolvedPieces) {\n    // This needs to look at previous pieces within the part, to make it work for adlibs\n    const sisyfosObjs = timelineObjs.filter(isSisyfosSource);\n    // Pieces should be ordered, we shall assume that\n    const groupedPieces = _.groupBy(resolvedPieces, p => p.enable.start);\n    _.each(groupedPieces, pieces => {\n        const pieceIds = _.pluck(pieces, '_id'); // getPieceGroupId(p._id))\n        // Find all the objs that start here\n        const objs = sisyfosObjs.filter(o => {\n            const groupId = o.pieceId;\n            return groupId && pieceIds.indexOf(groupId) !== -1;\n        });\n        // Stop if no objects\n        if (objs.length === 0 || !pieces[0].enable) {\n            return;\n        }\n        // Find the active pieces before this time\n        const time = pieces[0].enable.start;\n        // Start of part\n        if (time !== 0) {\n            // Calculate the previous 'state'\n            const activePieces = _.filter(resolvedPieces, p => {\n                if (!p.enable) {\n                    return false;\n                }\n                const start = p.enable.start; // Core should be always setting this to a number\n                const duration = p.playoutDuration;\n                // Piece must start before target, and end at or after target starts\n                return start < time && (duration === undefined || start + duration >= time);\n            });\n            const newPreviousLevels = {};\n            _.each(activePieces, piece => {\n                const metadata = piece.metaData;\n                if (metadata && metadata.stickySisyfosLevels) {\n                    _.each(metadata.stickySisyfosLevels, (val, id) => {\n                        // context.warning(\n                        // \t`New level from ${piece._id} for ${id} of ${JSON.stringify(val)} (last was ${previousLevels[id]})`\n                        // )\n                        if (newPreviousLevels[id]) {\n                            context.warning('duplicate level, going with the first!');\n                        }\n                        else {\n                            if (val.followsPrevious && previousLevels[id] !== undefined) {\n                                newPreviousLevels[id] = previousLevels[id];\n                            }\n                            else {\n                                newPreviousLevels[id] = val.value;\n                            }\n                        }\n                    });\n                }\n            });\n            // Apply newly calculated levels\n            previousLevels = newPreviousLevels;\n        }\n        // Apply newly calculated levels\n        _.each(objs, sisyfosObj => {\n            const contentObj = sisyfosObj.content;\n            const previousVal = previousLevels[sisyfosObj.layer + ''];\n            if (contentObj && previousVal !== undefined && sisyfosObj.metaData && sisyfosObj.metaData.sisyfosPersistLevel) {\n                contentObj.isPgm = previousVal;\n            }\n        });\n    });\n}\nexports.copyPreviousSisyfosLevels = copyPreviousSisyfosLevels;\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_constants_1 = __webpack_require__(4);\nconst _ = __webpack_require__(3);\nfunction reversePreviousAssignment(previousAssignment) {\n    const previousAssignmentRev = {};\n    for (const key of _.keys(previousAssignment)) {\n        _.each(previousAssignment[key] || [], v2 => {\n            previousAssignmentRev[v2.sessionId] = v2;\n        });\n    }\n    return previousAssignmentRev;\n}\nfunction maxUndefined(a, b) {\n    if (a === undefined) {\n        return b;\n    }\n    if (b === undefined) {\n        return a;\n    }\n    return Math.max(a, b);\n}\nfunction calculateSessionTimeRanges(resolvedPieces) {\n    const piecesWantingMediaPlayers = _.filter(resolvedPieces, p => {\n        if (!p.metaData) {\n            return false;\n        }\n        const metadata = p.metaData;\n        return (metadata.mediaPlayerSessions || []).length > 0;\n    });\n    const sessionRequests = {};\n    _.each(piecesWantingMediaPlayers, p => {\n        const metadata = p.metaData;\n        const start = p.enable.start;\n        const duration = p.playoutDuration;\n        const end = duration !== undefined ? start + duration : undefined;\n        // Track the range of each session\n        _.each(metadata.mediaPlayerSessions || [], sessionId => {\n            // TODO - will fixed ids ever be wanted? Is it reasonable to want to have the same session across multiple pieces?\n            // Infinites are the exception here, but anything else?\n            // Perhaps the id given should be prefixed with the piece(instance) id? And sharing sessions can be figured out when it becomes needed\n            if (sessionId === '' || sessionId === tv2_constants_1.MEDIA_PLAYER_AUTO) {\n                sessionId = `${p.infiniteId || p._id}`;\n            }\n            // Note: multiple generated sessionIds for a single piece will not work as there will not be enough info to assign objects to different players\n            const val = sessionRequests[sessionId] || undefined;\n            if (val) {\n                sessionRequests[sessionId] = {\n                    start: Math.min(val.start, start),\n                    end: maxUndefined(val.end, end),\n                    optional: val.optional && (metadata.mediaPlayerOptional || false)\n                };\n            }\n            else {\n                sessionRequests[sessionId] = {\n                    start,\n                    end,\n                    optional: metadata.mediaPlayerOptional || false\n                };\n            }\n        });\n    });\n    return sessionRequests;\n}\nfunction findNextAvailablePlayer(config, inUse, req) {\n    const pickFirstNotInUse = (inUseRequests) => {\n        const inUseIds = _.compact(_.map(inUseRequests, r => r.player));\n        for (const mp of config.mediaPlayers) {\n            if (inUseIds.indexOf(mp.id) === -1) {\n                return mp.id;\n            }\n        }\n        return undefined;\n    };\n    const tryForInUse = (filteredInUse) => {\n        // Try finding something which is free\n        let mpId = pickFirstNotInUse(inUse);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // Try reclaiming any lookahead\n        const allActiveUses = _.filter(filteredInUse, r => r.type !== tv2_constants_1.MediaPlayerClaimType.Preloaded);\n        mpId = pickFirstNotInUse(allActiveUses);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // Is there something ending at the same time this starts?\n        const activeUsesNotEndingNow = _.filter(filteredInUse, r => r.end === undefined || r.end > req.start);\n        mpId = pickFirstNotInUse(activeUsesNotEndingNow);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // TODO - more strategies?\n        return undefined;\n    };\n    // Try with all players in use\n    let res = tryForInUse(inUse);\n    if (res !== undefined) {\n        return res;\n    }\n    // Try again with optional ones ignored\n    res = tryForInUse(_.filter(inUse, r => !r.optional));\n    if (res !== undefined) {\n        return res;\n    }\n    // TODO - more strategies?\n    // Nothing was free\n    return undefined;\n}\nfunction doesRequestOverlap(thisReq, other) {\n    if (thisReq.id === other.id) {\n        return false;\n    }\n    if (other.player === undefined) {\n        return false;\n    }\n    if (thisReq.start >= other.start && thisReq.start < (other.end || Infinity)) {\n        return true;\n    }\n    if (other.start >= thisReq.start && other.start < (thisReq.end || Infinity)) {\n        return true;\n    }\n    return false;\n}\nexports.doesRequestOverlap = doesRequestOverlap;\nfunction resolveMediaPlayerAssignments(context, config, previousAssignmentRev, resolvedPieces) {\n    const debugLog = config.studio.ABPlaybackDebugLogging;\n    const sessionRequests = calculateSessionTimeRanges(resolvedPieces);\n    // In future this may want a better fit algorithm than this. This only applies if being done for multiple clips playing simultaneously, and more players\n    // Convert requests into a sorted array\n    const activeRequests = [];\n    _.each(sessionRequests, (r, sessionId) => {\n        if (r) {\n            const prev = previousAssignmentRev[sessionId];\n            activeRequests.push({\n                id: sessionId,\n                start: r.start,\n                end: r.end,\n                player: prev ? prev.playerId.toString() : undefined,\n                type: prev && prev.lookahead ? tv2_constants_1.MediaPlayerClaimType.Preloaded : tv2_constants_1.MediaPlayerClaimType.Active,\n                optional: r.optional\n            });\n        }\n    });\n    _.sortBy(activeRequests, r => r.start);\n    // Go through and assign players\n    if (debugLog) {\n        context.warning('all reqs' + JSON.stringify(activeRequests, undefined, 4));\n    }\n    _.each(activeRequests, req => {\n        if (req.player !== undefined) {\n            // Keep existing assignment\n            if (debugLog) {\n                context.warning('Retained mp' + req.player + ' for ' + req.id);\n            }\n            return;\n        }\n        const otherActive = _.filter(activeRequests, r => doesRequestOverlap(req, r));\n        if (debugLog) {\n            context.warning(`for ${JSON.stringify(req)} there is: ${JSON.stringify(otherActive, undefined, 4)}`);\n        }\n        // TODO - what about playing the same piece back-to-back?\n        const nextPlayerId = findNextAvailablePlayer(config, otherActive, req);\n        if (nextPlayerId === undefined) {\n            context.warning('All the mediaplayers are in use (' + req.id + ')!');\n        }\n        else {\n            _.each(otherActive, o => {\n                if (o.player === nextPlayerId) {\n                    if (debugLog) {\n                        context.warning('Stole mp from ' + o.id);\n                    }\n                    o.player = undefined;\n                }\n            });\n            req.player = nextPlayerId;\n            if (debugLog) {\n                context.warning('Assigned mp' + req.player + ' to ' + req.id + '_' + JSON.stringify(req));\n            }\n        }\n    });\n    if (debugLog) {\n        context.warning('result' + JSON.stringify(activeRequests));\n    }\n    return activeRequests;\n}\nexports.resolveMediaPlayerAssignments = resolveMediaPlayerAssignments;\nfunction updateObjectsToMediaPlayer(context, config, playerId, objs, sourceLayers) {\n    _.each(objs, obj => {\n        // Mutate each object to the correct player\n        if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.CASPARCG) {\n            if (obj.layer === sourceLayers.Caspar.ClipPending) {\n                obj.layer = sourceLayers.Caspar.PlayerClip(playerId);\n            }\n            else if (obj.lookaheadForLayer === sourceLayers.Caspar.ClipPending) {\n                // This works on the assumption that layer will contain lookaheadForLayer, but not the exact syntax.\n                // Hopefully this will be durable to any potential future core changes\n                obj.layer = (obj.layer + '').replace(obj.lookaheadForLayer.toString(), sourceLayers.Caspar.PlayerClip(playerId));\n                obj.lookaheadForLayer = sourceLayers.Caspar.PlayerClip(playerId);\n            }\n            else {\n                context.warning(`Moving object to mediaPlayer that probably shouldnt be? (from layer: ${obj.layer})`);\n                // context.warning(obj)\n            }\n        }\n        else if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.ATEM) {\n            let atemInput = _.find(config.mediaPlayers, mp => mp.id === playerId.toString());\n            if (!atemInput) {\n                context.warning(`Trying to find atem input for unknown mediaPlayer: #${playerId}`);\n                atemInput = { id: playerId.toString(), val: config.studio.AtemSource.Default.toString() };\n            }\n            const atemObj = obj;\n            if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.ME) {\n                const atemObj2 = atemObj;\n                atemObj2.content.me.input = Number(atemInput.val) || 0;\n            }\n            else if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX) {\n                const atemObj2 = atemObj;\n                atemObj2.content.aux.input = Number(atemInput.val) || 0;\n            }\n            else if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC) {\n                const atemObj2 = atemObj;\n                // Find box with no source\n                const input = Number(atemInput.val) || 0;\n                atemObj2.content.ssrc.boxes.forEach((box, i) => {\n                    if (box.source === -1) {\n                        atemObj2.content.ssrc.boxes[i].source = input; // Pgm box\n                    }\n                });\n            }\n            else {\n                context.warning(`Trying to move ATEM object of unknown type (${atemObj.content.type}) for media player assignment`);\n            }\n        }\n        else if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS) {\n            if (obj.layer === sourceLayers.Sisyfos.ClipPending) {\n                // TODO: Change when adding more servers\n                obj.layer = playerId === 1 ? sourceLayers.Sisyfos.PlayerA : sourceLayers.Sisyfos.PlayerB;\n            }\n            else if (obj.lookaheadForLayer === sourceLayers.Sisyfos.ClipPending) {\n                // This works on the assumption that layer will contain lookaheadForLayer, but not the exact syntax.\n                // Hopefully this will be durable to any potential future core changes\n                const targetPlayer = playerId === 1 ? sourceLayers.Sisyfos.PlayerA : sourceLayers.Sisyfos.PlayerB;\n                // TODO: Change when adding more servers\n                obj.layer = (obj.layer + '').replace(obj.lookaheadForLayer.toString(), targetPlayer);\n                obj.lookaheadForLayer = targetPlayer;\n            }\n            else {\n                context.warning(`Moving object to mediaPlayer that probably shouldnt be? (from layer: ${obj.layer})`);\n                // context.warning(obj)\n            }\n        }\n        else {\n            context.warning(`Trying to move object of unknown type (${obj.content.deviceType}) for media player assignment`);\n        }\n    });\n}\nfunction assignMediaPlayers(context, config, timelineObjs, previousAssignment, resolvedPieces, sourceLayers) {\n    const previousAssignmentRev = reversePreviousAssignment(previousAssignment);\n    const activeRequests = resolveMediaPlayerAssignments(context, config, previousAssignmentRev, resolvedPieces);\n    return applyMediaPlayersAssignments(context, config, timelineObjs, previousAssignmentRev, activeRequests, sourceLayers);\n}\nexports.assignMediaPlayers = assignMediaPlayers;\nfunction applyMediaPlayersAssignments(context, config, timelineObjs, previousAssignmentRev, activeRequests, sourceLayers) {\n    const debugLog = config.studio.ABPlaybackDebugLogging;\n    const newAssignments = {};\n    const persistAssignment = (sessionId, playerId, lookahead) => {\n        let ls = newAssignments[playerId];\n        if (!ls) {\n            newAssignments[playerId] = ls = [];\n        }\n        ls.push({ sessionId, playerId, lookahead });\n    };\n    // collect objects by their sessionId\n    const labelledObjs = timelineObjs.filter(o => o.metaData && o.metaData.mediaPlayerSession);\n    const groupedObjs = _.groupBy(labelledObjs, o => {\n        const sessionId = (o.metaData || {}).mediaPlayerSession;\n        if (sessionId === '' || sessionId === tv2_constants_1.MEDIA_PLAYER_AUTO) {\n            return o.infinitePieceId || o.pieceId || tv2_constants_1.MEDIA_PLAYER_AUTO;\n        }\n        else {\n            return sessionId;\n        }\n    });\n    // Apply the known assignments\n    const remainingGroups = [];\n    _.each(groupedObjs, (group, groupId) => {\n        const request = _.find(activeRequests, req => req.id === groupId);\n        if (request) {\n            if (request.player) {\n                // TODO - what if player is undefined?\n                updateObjectsToMediaPlayer(context, config, Number(request.player) || 0, group, sourceLayers);\n                persistAssignment(groupId, Number(request.player) || 0, false);\n            }\n        }\n        else {\n            remainingGroups.push({ id: groupId, objs: group });\n        }\n    });\n    // Find the groups needing more work\n    // Not matching a request means this is either a rogue object in a mislabeled piece, or lookahead for a future part.\n    const unknownGroups = [];\n    const lookaheadGroups = [];\n    _.each(remainingGroups, grp => {\n        // If this is lookahead for a future part (no end set on the object)\n        const isFuturePartLookahead = _.all(grp.objs, o => !!o.isLookahead /*|| (o as any).wasLookahead*/ && o.enable.duration === undefined && o.enable.end === undefined);\n        if (isFuturePartLookahead) {\n            lookaheadGroups.push(grp);\n        }\n        else {\n            unknownGroups.push(grp);\n        }\n    });\n    // These are the groups that shouldn't exist, so are likely a bug. There isnt a lot we can do beyond warn about the potential bug\n    _.each(unknownGroups, grp => {\n        const objIds = _.map(grp.objs, o => o.id);\n        const prev = previousAssignmentRev[grp.id];\n        if (prev) {\n            updateObjectsToMediaPlayer(context, config, prev.playerId, grp.objs, sourceLayers);\n            persistAssignment(grp.id, prev.playerId, false);\n            context.warning(`Found unexpected session remaining on the timeline: \"${grp.id}\" belonging to ${objIds}. This may cause playback glitches`);\n        }\n        else {\n            context.warning(`Found unexpected unknown session on the timeline: \"${grp.id}\" belonging to ${objIds}. This could result in black playback`);\n        }\n    });\n    let mediaPlayerUsageEnd = [];\n    for (const mp of config.mediaPlayers) {\n        // Block players with an 'infinite' clip from being used for lookahead\n        const endTimes = _.map(_.filter(activeRequests, s => s.player === mp.id), s => s.end);\n        const realEndTimes = _.filter(endTimes, e => e !== undefined);\n        if (endTimes.length === realEndTimes.length) {\n            // No infinite(undefined) ones, so find the highest end\n            mediaPlayerUsageEnd.push({\n                playerId: Number(mp.id) || 0,\n                end: realEndTimes.length === 0 ? 0 : _.max(realEndTimes)\n            });\n        }\n    }\n    // Sort by the end time\n    mediaPlayerUsageEnd = _.sortBy(mediaPlayerUsageEnd, u => u.end).reverse();\n    // Finish up with allocating lookahead based on what is left. If there is no space left that is not a problem until playback is closer\n    _.each(lookaheadGroups, grp => {\n        if (debugLog) {\n            context.warning(`Attempting assignment for future lookahead ${grp.id}`);\n        }\n        const prev = previousAssignmentRev[grp.id];\n        let nextPlayer;\n        if (debugLog) {\n            context.warning('Players are available at:' + JSON.stringify(mediaPlayerUsageEnd));\n        }\n        const prevAssignment = prev ? _.find(mediaPlayerUsageEnd, mp => mp.playerId === prev.playerId) : undefined;\n        if (prevAssignment && (prevAssignment.end === 0 || false)) {\n            // TODO - decide if the previous assignment is still suitable\n            if (debugLog) {\n                context.warning('lookahead can retain existing player');\n            }\n            nextPlayer = prevAssignment;\n            mediaPlayerUsageEnd = _.without(mediaPlayerUsageEnd, prevAssignment);\n        }\n        else {\n            // Take the next from the queue, as it is the next freed\n            nextPlayer = mediaPlayerUsageEnd.pop();\n        }\n        if (nextPlayer === undefined) {\n            if (debugLog) {\n                context.warning('no player available for lookahead. This likely means one is in use by a playing clip');\n            }\n        }\n        else {\n            if (debugLog) {\n                context.warning(`lookahead chose: ${nextPlayer.playerId} (Free after: ${nextPlayer.end})`);\n            }\n            // Record the assignment, so that the next update can try and reuse it\n            persistAssignment(grp.id, nextPlayer.playerId, true);\n            updateObjectsToMediaPlayer(context, config, nextPlayer.playerId, grp.objs, sourceLayers);\n        }\n    });\n    if (debugLog) {\n        context.warning('new assignments:' + JSON.stringify(newAssignments));\n    }\n    return newAssignments;\n}\nexports.applyMediaPlayersAssignments = applyMediaPlayersAssignments;\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst util_1 = __webpack_require__(8);\nfunction GetStickyForPiece(layers, STICKY_LAYERS) {\n    return util_1.literal({\n        stickySisyfosLevels: _.object(layers\n            .filter(layer => STICKY_LAYERS.indexOf(layer.layer) !== -1)\n            .map(layer => {\n            return [\n                layer.layer,\n                {\n                    value: layer.isPgm,\n                    followsPrevious: false\n                }\n            ];\n        }))\n    });\n}\nexports.GetStickyForPiece = GetStickyForPiece;\nfunction GetEksternMetaData(STICKY_LAYERS, studioMics, layers) {\n    return layers && layers.length\n        ? GetStickyForPiece([\n            ...layers.map(layer => {\n                return { layer, isPgm: 1 };\n            }),\n            ...studioMics.map(l => {\n                return { layer: l, isPgm: 1 };\n            })\n        ], STICKY_LAYERS)\n        : undefined;\n}\nexports.GetEksternMetaData = GetEksternMetaData;\nfunction GetCameraMetaData(config, layers) {\n    return GetStickyForPiece([...(layers || []), ...config.studio.StudioMics].map(l => {\n        return { layer: l, isPgm: 1 };\n    }), config.stickyLayers);\n}\nexports.GetCameraMetaData = GetCameraMetaData;\nfunction GetSisyfosTimelineObjForEkstern(context, sources, sourceType, getLayersForEkstern, enable) {\n    if (!enable) {\n        enable = { start: 0 };\n    }\n    const audioTimeline = [];\n    const layers = getLayersForEkstern(context, sources, sourceType);\n    if (!layers || !layers.length) {\n        context.warning(`Could not set audio levels for ${sourceType}`);\n        return audioTimeline;\n    }\n    layers.forEach(layer => {\n        audioTimeline.push(util_1.literal({\n            id: '',\n            enable: enable,\n            priority: 1,\n            layer,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                isPgm: 1\n            }\n        }));\n    });\n    return audioTimeline;\n}\nexports.GetSisyfosTimelineObjForEkstern = GetSisyfosTimelineObjForEkstern;\nfunction GetLayersForEkstern(context, sources, sourceType) {\n    const eksternProps = sourceType.match(/^(?:LIVE|SKYPE) ([^\\s]+)(?: (.+))?$/i);\n    const eksternLayers = [];\n    if (eksternProps) {\n        const sourceInfo = tv2_common_1.FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, sourceType);\n        if (sourceInfo && sourceInfo.sisyfosLayers) {\n            eksternLayers.push(...sourceInfo.sisyfosLayers);\n        }\n    }\n    return eksternLayers;\n}\nexports.GetLayersForEkstern = GetLayersForEkstern;\nfunction GetSisyfosTimelineObjForCamera(context, config, sourceType, enable) {\n    if (!enable) {\n        enable = { start: 0 };\n    }\n    const audioTimeline = [];\n    const useMic = !sourceType.match(/^(?:KAM|CAM)(?:ERA)? (.+) minus mic(.*)$/i);\n    const camName = sourceType.match(/^(?:KAM|CAM)(?:ERA)? (.+)$/i);\n    const nonCam = !!sourceType.match(/server|telefon|full|evs/i);\n    if ((useMic && camName) || nonCam) {\n        const camLayers = [];\n        if (useMic && camName) {\n            const sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, sourceType);\n            if (sourceInfo) {\n                if (sourceInfo.sisyfosLayers) {\n                    camLayers.push(...sourceInfo.sisyfosLayers);\n                }\n                if (sourceInfo.useStudioMics) {\n                    camLayers.push(...config.studio.StudioMics);\n                }\n            }\n        }\n        else if (nonCam) {\n            camLayers.push(...config.studio.StudioMics);\n        }\n        audioTimeline.push(...camLayers.map(layer => {\n            return util_1.literal({\n                id: '',\n                enable: enable ? enable : { start: 0 },\n                priority: 1,\n                layer,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 1\n                }\n            });\n        }));\n    }\n    return audioTimeline;\n}\nexports.GetSisyfosTimelineObjForCamera = GetSisyfosTimelineObjForCamera;\nfunction GetLayersForCamera(config, sourceInfo) {\n    const cameraLayers = [];\n    if (sourceInfo.sisyfosLayers) {\n        cameraLayers.push(...sourceInfo.sisyfosLayers);\n    }\n    if (sourceInfo.useStudioMics) {\n        cameraLayers.push(...config.studio.StudioMics);\n    }\n    return cameraLayers;\n}\nexports.GetLayersForCamera = GetLayersForCamera;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TranslateEngine(eng) {\n    return !!eng.match(/WALL/i) ? 'WALL' : !!eng.match(/FULL/i) ? 'FULL' : 'OVL';\n}\nexports.TranslateEngine = TranslateEngine;\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(74), exports);\ntslib_1.__exportStar(__webpack_require__(75), exports);\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Layers shared across showstyles, to maintain compatibility with config tables.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GraphicLLayer;\n(function (GraphicLLayer) {\n    GraphicLLayer[\"GraphicLLayerOverlay\"] = \"graphic_overlay\";\n    GraphicLLayer[\"GraphicLLayerOverlayIdent\"] = \"graphic_overlay_ident\";\n    GraphicLLayer[\"GraphicLLayerOverlayTopt\"] = \"graphic_overlay_topt\";\n    GraphicLLayer[\"GraphicLLayerOverlayLower\"] = \"graphic_overlay_lower\";\n    GraphicLLayer[\"GraphicLLayerOverlayHeadline\"] = \"graphic_overlay_headline\";\n    GraphicLLayer[\"GraphicLLayerOverlayTema\"] = \"graphic_overlay_tema\";\n    GraphicLLayer[\"GraphicLLayerPilot\"] = \"graphic_pilot\";\n    GraphicLLayer[\"GraphicLLayerPilotOverlay\"] = \"graphic_pilot_overlay\";\n    GraphicLLayer[\"GraphicLLayerDesign\"] = \"graphic_design\";\n    GraphicLLayer[\"GraphicLLayerAdLibs\"] = \"graphic_adlibs\";\n    GraphicLLayer[\"GraphicLLayerWall\"] = \"graphic_wall\"; // <= viz_layer_wall\n})(GraphicLLayer = exports.GraphicLLayer || (exports.GraphicLLayer = {}));\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SharedSourceLayers;\n(function (SharedSourceLayers) {\n    SharedSourceLayers[\"PgmCam\"] = \"studio0_camera\";\n    SharedSourceLayers[\"PgmLive\"] = \"studio0_live\";\n    SharedSourceLayers[\"PgmDVE\"] = \"studio0_dve\";\n    // PgmDVEAdlib = 'studio0_dve_adlib', // TODO: Future: Adlib functions?\n    SharedSourceLayers[\"PgmServer\"] = \"studio0_clip\";\n    SharedSourceLayers[\"PgmVoiceOver\"] = \"studio0_voiceover\";\n    // Graphics\n    SharedSourceLayers[\"PgmGraphicsIdent\"] = \"studio0_graphicsIdent\";\n    SharedSourceLayers[\"PgmGraphicsIdentPersistent\"] = \"studio0_graphicsIdent_persistent\";\n    SharedSourceLayers[\"PgmGraphicsTop\"] = \"studio0_graphicsTop\";\n    SharedSourceLayers[\"PgmGraphicsLower\"] = \"studio0_graphicsLower\";\n    SharedSourceLayers[\"PgmGraphicsHeadline\"] = \"studio0_graphicsHeadline\";\n    SharedSourceLayers[\"PgmGraphicsTema\"] = \"studio0_graphicsTema\";\n    SharedSourceLayers[\"PgmGraphicsTLF\"] = \"studio0_graphicsTelefon\";\n    /** General, 'fallback', overlay layer */\n    SharedSourceLayers[\"PgmGraphicsOverlay\"] = \"studio0_overlay\";\n    SharedSourceLayers[\"WallGraphics\"] = \"studio0_wall_graphics\";\n    // Note: there is a regex in core to ignore some DVE layers. That will need updating if adding more\n    SharedSourceLayers[\"PgmDVEBox1\"] = \"studio0_dve_box1\";\n    SharedSourceLayers[\"PgmDVEBox2\"] = \"studio0_dve_box2\";\n    SharedSourceLayers[\"PgmDVEBox3\"] = \"studio0_dve_box3\";\n    SharedSourceLayers[\"PgmDVEBox4\"] = \"studio0_dve_box4\";\n    // Other / sec / manus\n    SharedSourceLayers[\"PgmScript\"] = \"studio0_script\";\n})(SharedSourceLayers = exports.SharedSourceLayers || (exports.SharedSourceLayers = {}));\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(77), exports);\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst util_1 = __webpack_require__(8);\nfunction MoveSourcesToTable(versionStr, configName, withSisyfos, getSisyfosLayersForMigration, studioMics) {\n    const res = util_1.literal({\n        id: `studioConfig.moveToTable.${configName}`,\n        version: versionStr,\n        canBeRunAutomatically: true,\n        validate: (context) => {\n            const configVal = context.getConfig(configName);\n            if (configVal === undefined || typeof configVal === 'string') {\n                return `${configName} has old format or doesn't exist`;\n            }\n            return false;\n        },\n        migrate: (context) => {\n            const configVal = context.getConfig(configName);\n            const table = [];\n            if (configVal === undefined) {\n                context.setConfig(configName, table);\n            }\n            else if (typeof configVal === 'string') {\n                const oldConfig = tv2_common_1.parseMapStr(undefined, configVal, true);\n                _.each(oldConfig, (source, i) => {\n                    if (withSisyfos) {\n                        table.push(util_1.literal({\n                            _id: i.toString(),\n                            SourceName: source.id,\n                            AtemSource: source.val,\n                            SisyfosLayers: getSisyfosLayersForMigration(configName, source.id.toString().toUpperCase()),\n                            StudioMics: !!studioMics\n                        }));\n                    }\n                    else {\n                        table.push(util_1.literal({\n                            _id: i.toString(),\n                            SourceName: source.id,\n                            AtemSource: source.val\n                        }));\n                    }\n                });\n                context.setConfig(configName, table);\n            }\n        }\n    });\n    return res;\n}\nexports.MoveSourcesToTable = MoveSourcesToTable;\n\n\n/***/ }),\n/* 78 */,\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(7);\nconst layers_2 = __webpack_require__(6);\nfunction CreateEffektForpart(context, config, partDefinition, pieces) {\n    const effekt = partDefinition.effekt;\n    if (effekt === undefined) {\n        return {};\n    }\n    if (!config.showStyle.BreakerConfig) {\n        context.warning(`Jingles have not been configured`);\n        return {};\n    }\n    const effektConfig = config.showStyle.BreakerConfig.find(conf => conf.BreakerName.toString()\n        .trim()\n        .toUpperCase() === effekt.toString().toUpperCase());\n    if (!effektConfig) {\n        context.warning(`Could not find effekt ${effekt}`);\n        return {};\n    }\n    const file = effektConfig.ClipName.toString();\n    if (!file) {\n        context.warning(`Could not find file for ${effekt}`);\n        return {};\n    }\n    pieces.push(tv2_common_1.literal({\n        _id: '',\n        externalId: `${partDefinition.externalId}-EFFEKT-${effekt}`,\n        name: `EFFEKT-${effekt}`,\n        enable: { start: 0, duration: tv2_common_1.TimeFromFrames(Number(effektConfig.Duration)) },\n        outputLayerId: 'jingle',\n        sourceLayerId: layers_2.SourceLayer.PgmJingle,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal,\n        isTransition: true,\n        content: tv2_common_1.literal({\n            studioLabel: '',\n            fileName: file,\n            path: file,\n            firstWords: '',\n            lastWords: '',\n            timelineObjects: tv2_common_1.literal([\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        start: 0\n                    },\n                    priority: 1,\n                    layer: layers_1.CasparLLayer.CasparPlayerJingle,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                        file\n                    }\n                }),\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        start: Number(config.studio.CasparPrerollDuration)\n                    },\n                    priority: 1,\n                    layer: layers_1.AtemLLayer.AtemDSKEffect,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK,\n                        dsk: {\n                            onAir: true,\n                            sources: {\n                                fillSource: config.studio.AtemSource.JingleFill,\n                                cutSource: config.studio.AtemSource.JingleKey\n                            },\n                            properties: {\n                                tie: false,\n                                preMultiply: false,\n                                clip: config.studio.AtemSettings.CCGClip * 10,\n                                gain: config.studio.AtemSettings.CCGGain * 10,\n                                mask: {\n                                    enabled: false\n                                }\n                            }\n                        }\n                    }\n                }),\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        start: 0\n                    },\n                    priority: 1,\n                    layer: layers_1.SisyfosLLAyer.SisyfosSourceJingle,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                        isPgm: 1\n                    }\n                })\n            ])\n        })\n    }));\n    return {\n        transitionDuration: tv2_common_1.TimeFromFrames(Number(effektConfig.Duration)) + config.studio.CasparPrerollDuration,\n        transitionKeepaliveDuration: tv2_common_1.TimeFromFrames(Number(effektConfig.StartAlpha)) + config.studio.CasparPrerollDuration,\n        transitionPrerollDuration: tv2_common_1.TimeFromFrames(Number(effektConfig.Duration)) -\n            tv2_common_1.TimeFromFrames(Number(effektConfig.EndAlpha)) +\n            config.studio.CasparPrerollDuration,\n        autoNext: false\n    };\n}\nexports.CreateEffektForpart = CreateEffektForpart;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst outputlayer_defaults_1 = __webpack_require__(85);\nconst runtime_arguments_defaults_1 = __webpack_require__(86);\nconst sourcelayer_defaults_1 = __webpack_require__(87);\nfunction getSourceLayerDefaultsMigrationSteps(versionStr) {\n    return _.compact(_.map(sourcelayer_defaults_1.default, (defaultVal) => {\n        return tv2_common_1.literal({\n            id: `sourcelayer.defaults.${defaultVal._id}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                if (!context.getSourceLayer(defaultVal._id)) {\n                    return `SourceLayer \"${defaultVal._id}\" doesn't exist on ShowBaseStyle`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                if (!context.getSourceLayer(defaultVal._id)) {\n                    context.insertSourceLayer(defaultVal._id, defaultVal);\n                }\n            }\n        });\n    }));\n}\nexports.getSourceLayerDefaultsMigrationSteps = getSourceLayerDefaultsMigrationSteps;\nfunction getOutputLayerDefaultsMigrationSteps(versionStr) {\n    return _.compact(_.map(outputlayer_defaults_1.default, (defaultVal) => {\n        return tv2_common_1.literal({\n            id: `outputlayer.defaults.${defaultVal._id}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                if (!context.getOutputLayer(defaultVal._id)) {\n                    return `OutputLayer \"${defaultVal._id}\" doesn't exist on ShowBaseStyle`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                if (!context.getOutputLayer(defaultVal._id)) {\n                    context.insertOutputLayer(defaultVal._id, defaultVal);\n                }\n            }\n        });\n    }));\n}\nexports.getOutputLayerDefaultsMigrationSteps = getOutputLayerDefaultsMigrationSteps;\nfunction getRuntimeArgumentsDefaultsMigrationSteps(versionStr) {\n    return _.compact(_.map(runtime_arguments_defaults_1.default, (defaultVal) => {\n        return tv2_common_1.literal({\n            id: `runtimeArguments.defaults.${defaultVal._id}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                if (!context.getRuntimeArgument(defaultVal._id)) {\n                    return `RuntimeArgument \"${defaultVal._id}\" doesn't exist on ShowBaseStyle`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                if (!context.getRuntimeArgument(defaultVal._id)) {\n                    context.insertRuntimeArgument(defaultVal._id, defaultVal);\n                }\n            }\n        });\n    }));\n}\nexports.getRuntimeArgumentsDefaultsMigrationSteps = getRuntimeArgumentsDefaultsMigrationSteps;\nfunction remapTableColumnValuesInner(table, columnId, \n/** Map values [from, to] */\nremapping) {\n    let changed = 0;\n    table.map(row => {\n        const val = row[columnId];\n        if (val) {\n            const remap = remapping.get(val.toString());\n            if (remap) {\n                row[columnId] = remap;\n                changed++;\n            }\n        }\n        return row;\n    });\n    return { changed, table };\n}\nfunction remapTableColumnValues(versionStr, tableId, columnId, \n/** Map values [from, to] */\nremapping) {\n    return [\n        tv2_common_1.literal({\n            id: `remapTableColumnValue.${tableId}.${columnId}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                const table = context.getBaseConfig(tableId);\n                if (!table) {\n                    return `Table \"${tableId}\" does not exist`;\n                }\n                if (!table.length) {\n                    // No values, nothing to remap\n                    return false;\n                }\n                const first = table[0];\n                if (!Object.keys(first).includes(columnId)) {\n                    return `Column \"${columnId}\" does not exist in table \"${tableId}\"`;\n                }\n                const ret = remapTableColumnValuesInner(table, columnId, remapping);\n                if (typeof ret === 'string' || typeof ret === 'boolean') {\n                    return ret;\n                }\n                return ret.changed !== 0;\n            },\n            migrate: (context) => {\n                const table = context.getBaseConfig(tableId);\n                const ret = remapTableColumnValuesInner(table, columnId, remapping);\n                context.setBaseConfig(tableId, ret.table);\n            }\n        })\n    ];\n}\nexports.remapTableColumnValues = remapTableColumnValues;\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst atem_1 = __webpack_require__(11);\nconst layers_1 = __webpack_require__(7);\nexports.CORE_INJECTED_KEYS = ['SofieHostURL'];\nconst DEFAULT_STUDIO_MICS_LAYERS = [\n    layers_1.SisyfosLLAyer.SisyfosSourceHost_1_ST_A,\n    layers_1.SisyfosLLAyer.SisyfosSourceHost_2_ST_A,\n    layers_1.SisyfosLLAyer.SisyfosSourceGuest_1_ST_A,\n    layers_1.SisyfosLLAyer.SisyfosSourceGuest_2_ST_A,\n    layers_1.SisyfosLLAyer.SisyfosSourceGuest_3_ST_A,\n    layers_1.SisyfosLLAyer.SisyfosSourceGuest_4_ST_A\n];\nexports.manifestAFVDSourcesCam = {\n    id: 'SourcesCam',\n    name: 'Camera Mapping',\n    description: 'Camera number to ATEM input and Sisyfos layer',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: true,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 11,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 12,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '3',\n            AtemSource: 13,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '4',\n            AtemSource: 14,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '5',\n            AtemSource: 15,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '1S',\n            AtemSource: 16,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '2S',\n            AtemSource: 17,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '3S',\n            AtemSource: 18,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '4S',\n            AtemSource: 19,\n            SisyfosLayers: [],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '5S',\n            AtemSource: 20,\n            SisyfosLayers: [],\n            StudioMics: true\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'Camera name',\n            description: 'Camera name as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for Camera',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for Camera',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: true,\n            rank: 3\n        }\n    ]\n};\nexports.manifestAFVDSourcesRM = {\n    id: 'SourcesRM',\n    name: 'RM Mapping',\n    description: 'RM number to ATEM input',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 1,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_1],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 2,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_2],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '3',\n            AtemSource: 3,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_3],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '4',\n            AtemSource: 4,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_4],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '5',\n            AtemSource: 5,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_5],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '6',\n            AtemSource: 6,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_6],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '7',\n            AtemSource: 7,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_7],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '8',\n            AtemSource: 8,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_8],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '9',\n            AtemSource: 9,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_9],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '10',\n            AtemSource: 10,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_10],\n            StudioMics: false\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'RM number',\n            description: 'RM number as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for RM input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for RM input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: false,\n            rank: 3\n        }\n    ]\n};\nexports.manifestAFVDSourcesDelayedPlayback = {\n    id: 'SourcesDelayedPlayback',\n    name: 'EVS Mapping',\n    description: 'EVS number to ATEM input',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 22,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceEVS_1],\n            StudioMics: true\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 23,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceEVS_2],\n            StudioMics: true\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'EVS number',\n            description: 'EVS number as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for RM input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for EVS input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: true,\n            rank: 3\n        }\n    ]\n};\nexports.manifestAFVDSourcesSkype = {\n    /*\n\n    */\n    id: 'SourcesSkype',\n    name: 'Skype Mapping',\n    description: 'Skype number to ATEM input',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 1,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_1],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 2,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_2],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '3',\n            AtemSource: 3,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_3],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '4',\n            AtemSource: 4,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_4],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '5',\n            AtemSource: 5,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_5],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '6',\n            AtemSource: 6,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_6],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '7',\n            AtemSource: 7,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_7],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '8',\n            AtemSource: 8,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_8],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '9',\n            AtemSource: 9,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_9],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '10',\n            AtemSource: 10,\n            SisyfosLayers: [layers_1.SisyfosLLAyer.SisyfosSourceLive_10],\n            StudioMics: false\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'Skype number',\n            description: 'Skype number as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for Skype input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for Skype input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: false,\n            rank: 3\n        }\n    ]\n};\nexports.manifestAFVDSourcesABMediaPlayers = {\n    id: 'ABMediaPlayers',\n    name: 'Media Players inputs',\n    description: 'ATEM inputs for A/B media players',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 26\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 27\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'Media player',\n            description: 'Media player name as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for Media player',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        }\n    ]\n};\nexports.manifestAFVDStudioMics = {\n    id: 'StudioMics',\n    name: 'Studio Mics',\n    description: 'Sisyfos layers for Studio Mics',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n    filters: {\n        deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n    },\n    required: true,\n    multiple: true,\n    defaultVal: DEFAULT_STUDIO_MICS_LAYERS\n};\nexports.studioConfigManifest = [\n    {\n        id: 'MediaFlowId',\n        name: 'Media Flow Id',\n        description: '',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: false,\n        defaultVal: 'flow0'\n    },\n    {\n        id: 'ClipFileExtension',\n        name: 'Clip files extension',\n        description: 'Default file extension to clips to fetch from Omneon and play at CasparCG',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: true,\n        defaultVal: '.mxf'\n    },\n    {\n        id: 'ClipSourcePath',\n        name: 'Network base path',\n        description: 'The base path for the Omneon network share. Needs to match the base path of the source in Media manager',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: true,\n        defaultVal: ''\n    },\n    exports.manifestAFVDSourcesCam,\n    exports.manifestAFVDSourcesRM,\n    exports.manifestAFVDSourcesDelayedPlayback,\n    exports.manifestAFVDSourcesSkype,\n    exports.manifestAFVDSourcesABMediaPlayers,\n    exports.manifestAFVDStudioMics,\n    {\n        id: 'ABPlaybackDebugLogging',\n        name: 'Media players selection debug logging',\n        description: 'Enable debug logging for A/B media player selection',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n        required: false,\n        defaultVal: false\n    },\n    {\n        id: 'AtemSource.DSK1F',\n        name: 'ATEM DSK1 Fill',\n        description: 'ATEM vision mixer input for DSK1 Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 21\n    },\n    {\n        id: 'AtemSource.DSK1K',\n        name: 'ATEM DSK1 Key',\n        description: 'ATEM vision mixer input for DSK1 Key',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 34\n    },\n    {\n        id: 'AtemSource.ServerC',\n        name: 'CasparCG Server C',\n        description: 'ATEM vision mixer input for ServerC',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 28\n    },\n    {\n        id: 'AtemSource.JingleFill',\n        name: 'Jingle Fill Source',\n        description: 'ATEM vision mixer input for Jingle Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 29\n    },\n    {\n        id: 'AtemSource.JingleKey',\n        name: 'Jingle Key Source',\n        description: 'ATEM vision mixer input for Jingle Source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 31\n    },\n    {\n        id: 'AtemSettings.VizClip',\n        name: 'Viz keyer clip',\n        description: 'Viz keyer clip',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 50.0\n    },\n    {\n        id: 'AtemSettings.VizGain',\n        name: 'Viz keyer gain',\n        description: 'Viz keyer gain',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 12.5\n    },\n    {\n        id: 'AtemSettings.CCGClip',\n        name: 'CasparCG keyer clip',\n        description: 'CasparCG keyer clip',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 50.0\n    },\n    {\n        id: 'AtemSettings.CCGGain',\n        name: 'CasparCG keyer gain',\n        description: 'CasparCG keyer gain',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 12.5\n    },\n    {\n        id: 'AtemSource.SplitArtF',\n        name: 'ATEM Split Screen Art Fill',\n        description: 'ATEM vision mixer input for Split Screen Art Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 30\n    },\n    {\n        id: 'AtemSource.SplitArtK',\n        name: 'ATEM Split Screen Art Key',\n        description: 'ATEM vision mixer input for Split Screen Art Key',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 32\n    },\n    {\n        id: 'AtemSource.FullFrameGrafikBackground',\n        name: 'Full frame grafik background source',\n        description: 'ATEM source for mos full-frame grafik background source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 36\n    },\n    {\n        id: 'AtemSource.Default',\n        name: 'ATEM Default source',\n        description: 'ATEM vision mixer default source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: atem_1.AtemSourceIndex.Col1\n    },\n    {\n        id: 'AtemSource.MixMinusDefault',\n        name: 'ATEM Mix-minus default source',\n        description: 'ATEM vision mixer default source for mix-minus',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: true,\n        defaultVal: atem_1.AtemSourceIndex.Col1\n    },\n    {\n        id: 'AtemSource.Continuity',\n        name: 'ATEM continuity source',\n        description: 'ATEM input for continuity',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: atem_1.AtemSourceIndex.Col2\n    },\n    {\n        id: 'AudioBedSettings.fadeIn',\n        name: 'Bed Fade In',\n        description: 'Default fade in duration for audio beds',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 25\n    },\n    {\n        id: 'AudioBedSettings.volume',\n        name: 'Bed Volume',\n        description: 'Volume (0 - 100)',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 80\n    },\n    {\n        id: 'AudioBedSettings.fadeOut',\n        name: 'Bed Fade Out',\n        description: 'Default fade out duration for audio beds',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 25\n    },\n    {\n        id: 'CasparPrerollDuration',\n        name: 'Caspar preroll duration',\n        description: 'ms of preroll before switching to caspar',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 200 // 5 frames\n    },\n    {\n        id: 'PilotPrerollDuration',\n        name: 'Pilot Preroll Duration',\n        description: 'ms of preroll before switching to Pilot elements',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 2000\n    },\n    {\n        id: 'PilotKeepaliveDuration',\n        name: 'Pilot Keepalive Duration',\n        description: 'ms to keep old part alive before switching to Pilot elements',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 2000\n    },\n    {\n        id: 'PilotOutTransitionDuration',\n        name: 'Pilot Out Transition Duration',\n        description: 'ms to keep pilot elements alive before transition to next part',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 1000\n    },\n    {\n        id: 'PilotCutToMediaPlayer',\n        name: 'Pilot media Player Cut Point',\n        description: 'ms from start of grafik before switching to background source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 500\n    },\n    {\n        id: 'ATEMDelay',\n        name: 'ATEM Delay',\n        description: 'Frames of latency in ATEM',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 1\n    },\n    {\n        id: 'MaximumPartDuration',\n        name: 'Maximum Part Duration',\n        description: 'Maximum duration (ms) to give parts in UI',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 10000\n    },\n    {\n        id: 'DefaultPartDuration',\n        name: 'Default Part Duration',\n        description: 'Duration to give parts by default',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 4000\n    }\n];\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst layers_1 = __webpack_require__(6);\nconst design_1 = __webpack_require__(99);\nfunction EvaluateGrafikViz(config, context, pieces, adlibPieces, partId, parsedCue, engine, adlib, partDefinition, isTlfPrimary, rank) {\n    if (config.showStyle.GFXTemplates) {\n        const template = config.showStyle.GFXTemplates.find(templ => templ.INewsName === parsedCue.template &&\n            templ.INewsCode.toString()\n                .replace(/=/gi, '')\n                .toUpperCase() === parsedCue.cue.toUpperCase());\n        if (template) {\n            if (template.IsDesign) {\n                const designCue = {\n                    type: tv2_constants_1.CueType.Design,\n                    design: parsedCue.template,\n                    start: Object.assign({}, parsedCue.start),\n                    end: Object.assign({}, parsedCue.end),\n                    iNewsCommand: '#KG'\n                };\n                design_1.EvaluateDesign(config, context, pieces, adlibPieces, partId, designCue);\n                return;\n            }\n        }\n    }\n    const isIdentGrafik = !!parsedCue.template.match(/direkte/i);\n    const mappedTemplate = GetTemplateName(config, parsedCue);\n    if (!mappedTemplate || !mappedTemplate.length) {\n        context.warning(`No valid template found for ${parsedCue.template}`);\n        return;\n    }\n    if (adlib) {\n        adlibPieces.push(tv2_common_1.literal(Object.assign(Object.assign({ _rank: rank || 0, externalId: partId, name: grafikName(config, parsedCue), sourceLayerId: isTlfPrimary\n                ? layers_1.SourceLayer.PgmGraphicsTLF\n                : GetSourceLayerForGrafik(config, GetTemplateName(config, parsedCue)), outputLayerId: engine === 'WALL' ? 'sec' : 'overlay' }, (isTlfPrimary || (parsedCue.end && parsedCue.end.infiniteMode)\n            ? {}\n            : { expectedDuration: CreateTimingGrafik(config, parsedCue).duration || GetDefaultOut(config) })), { infiniteMode: GetInfiniteModeForGrafik(engine, config, parsedCue, isTlfPrimary, isIdentGrafik), content: tv2_common_1.literal({\n                fileName: parsedCue.template,\n                path: parsedCue.template,\n                timelineObjects: tv2_common_1.literal([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: {\n                            start: 0\n                        },\n                        priority: 1,\n                        layer: GetTimelineLayerForGrafik(config, GetTemplateName(config, parsedCue)),\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                            templateName: mappedTemplate,\n                            templateData: parsedCue.textFields,\n                            channelName: engine.match(/WALL/i) ? 'WALL1' : 'OVL1'\n                        }\n                    })\n                ])\n            }) })));\n    }\n    else {\n        const sourceLayer = isTlfPrimary\n            ? layers_1.SourceLayer.PgmGraphicsTLF\n            : GetSourceLayerForGrafik(config, GetTemplateName(config, parsedCue));\n        const piece = tv2_common_1.literal(Object.assign(Object.assign({ _id: '', externalId: partId, name: grafikName(config, parsedCue) }, (isTlfPrimary || engine === 'WALL'\n            ? { enable: { start: 0 } }\n            : {\n                enable: Object.assign({}, CreateTimingGrafik(config, parsedCue))\n            })), { outputLayerId: engine === 'WALL' ? 'sec' : 'overlay', sourceLayerId: sourceLayer, infiniteMode: GetInfiniteModeForGrafik(engine, config, parsedCue, isTlfPrimary, isIdentGrafik), content: tv2_common_1.literal({\n                fileName: parsedCue.template,\n                path: parsedCue.template,\n                timelineObjects: tv2_common_1.literal([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: GetEnableForGrafik(engine, parsedCue, isIdentGrafik, partDefinition),\n                        priority: 1,\n                        layer: GetTimelineLayerForGrafik(config, GetTemplateName(config, parsedCue)),\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                            templateName: mappedTemplate,\n                            templateData: parsedCue.textFields,\n                            channelName: !!engine.match(/WALL/i) ? 'WALL1' : 'OVL1'\n                        }\n                    })\n                ])\n            }) }));\n        pieces.push(piece);\n        if (sourceLayer === layers_1.SourceLayer.PgmGraphicsIdentPersistent &&\n            (piece.infiniteMode === tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment || piece.infiniteMode === tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite)) {\n            // Special case for the ident. We want it to continue to exist in case the Live gets shown again, but we dont want the continuation showing in the ui.\n            // So we create the normal object on a hidden layer, and then clone it on another layer without content for the ui\n            pieces.push(tv2_common_1.literal(Object.assign(Object.assign({}, piece), { _id: '', sourceLayerId: layers_1.SourceLayer.PgmGraphicsIdent, infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart, content: undefined })));\n        }\n    }\n}\nexports.EvaluateGrafikViz = EvaluateGrafikViz;\nfunction GetEnableForGrafik(engine, cue, isIdentGrafik, partDefinition) {\n    if (engine === 'WALL') {\n        return {\n            while: '1'\n        };\n    }\n    if (isIdentGrafik) {\n        return {\n            while: `.${tv2_constants_1.ControlClasses.ShowIdentGraphic} & !.full`\n        };\n    }\n    if (cue.end && cue.end.infiniteMode && cue.end.infiniteMode === 'B' && partDefinition) {\n        return { while: `.${tv2_common_1.PartToParentClass('studio0', partDefinition)} & !.adlib_deparent & !.full` };\n    }\n    return {\n        while: '!.full'\n    };\n}\nfunction GetInfiniteModeForGrafik(engine, config, parsedCue, isTlf, isIdent) {\n    return engine === 'WALL'\n        ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite\n        : isTlf\n            ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart\n            : isIdent\n                ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment\n                : parsedCue.end && parsedCue.end.infiniteMode\n                    ? tv2_common_1.InfiniteMode(parsedCue.end.infiniteMode, tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal)\n                    : FindInfiniteModeFromConfig(config, parsedCue);\n}\nexports.GetInfiniteModeForGrafik = GetInfiniteModeForGrafik;\nfunction FindInfiniteModeFromConfig(config, parsedCue) {\n    if (config.showStyle.GFXTemplates) {\n        const template = GetTemplateName(config, parsedCue);\n        const conf = config.showStyle.GFXTemplates.find(cnf => cnf.VizTemplate ? cnf.VizTemplate.toString().toUpperCase() === template.toUpperCase() : false);\n        if (!conf) {\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal;\n        }\n        if (!conf.OutType || !conf.OutType.toString().length) {\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal;\n        }\n        const type = conf.OutType.toString().toUpperCase();\n        if (type !== 'B' && type !== 'S' && type !== 'O') {\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal;\n        }\n        return tv2_common_1.InfiniteMode(type, tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal);\n    }\n    return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal;\n}\nexports.FindInfiniteModeFromConfig = FindInfiniteModeFromConfig;\nfunction GetSourceLayerForGrafik(config, name) {\n    const conf = config.showStyle.GFXTemplates\n        ? config.showStyle.GFXTemplates.find(gfk => gfk.VizTemplate.toString() === name)\n        : undefined;\n    if (!conf) {\n        return layers_1.SourceLayer.PgmGraphicsOverlay;\n    }\n    switch (conf.SourceLayer) {\n        // TODO: When adding more sourcelayers\n        // This is here to guard against bad user input\n        case layers_1.SourceLayer.PgmGraphicsHeadline:\n            return layers_1.SourceLayer.PgmGraphicsHeadline;\n        case layers_1.SourceLayer.PgmGraphicsIdent:\n            return layers_1.SourceLayer.PgmGraphicsIdentPersistent;\n        case layers_1.SourceLayer.PgmGraphicsLower:\n            return layers_1.SourceLayer.PgmGraphicsLower;\n        case layers_1.SourceLayer.PgmGraphicsOverlay:\n            return layers_1.SourceLayer.PgmGraphicsOverlay;\n        case layers_1.SourceLayer.PgmGraphicsTLF:\n            return layers_1.SourceLayer.PgmGraphicsTLF;\n        case layers_1.SourceLayer.PgmGraphicsTema:\n            return layers_1.SourceLayer.PgmGraphicsTema;\n        case layers_1.SourceLayer.PgmGraphicsTop:\n            return layers_1.SourceLayer.PgmGraphicsTop;\n        case layers_1.SourceLayer.WallGraphics:\n            return layers_1.SourceLayer.WallGraphics;\n        default:\n            return layers_1.SourceLayer.PgmGraphicsOverlay;\n    }\n}\nexports.GetSourceLayerForGrafik = GetSourceLayerForGrafik;\nfunction GetTimelineLayerForGrafik(config, name) {\n    const conf = config.showStyle.GFXTemplates\n        ? config.showStyle.GFXTemplates.find(gfk => gfk.VizTemplate.toString() === name)\n        : undefined;\n    if (!conf) {\n        return tv2_common_1.GraphicLLayer.GraphicLLayerDesign;\n    }\n    switch (conf.LayerMapping) {\n        // TODO: When adding more output layers\n        case tv2_common_1.GraphicLLayer.GraphicLLayerOverlayIdent:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlayIdent;\n        case tv2_common_1.GraphicLLayer.GraphicLLayerOverlayTopt:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlayTopt;\n        case tv2_common_1.GraphicLLayer.GraphicLLayerOverlayLower:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlayLower;\n        case tv2_common_1.GraphicLLayer.GraphicLLayerOverlayHeadline:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlayHeadline;\n        case tv2_common_1.GraphicLLayer.GraphicLLayerOverlayTema:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlayTema;\n        case tv2_common_1.GraphicLLayer.GraphicLLayerWall:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerWall;\n        default:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlay;\n    }\n}\nexports.GetTimelineLayerForGrafik = GetTimelineLayerForGrafik;\nfunction grafikName(config, parsedCue) {\n    if (parsedCue.type === tv2_constants_1.CueType.Grafik) {\n        return `${parsedCue.template ? `${GetTemplateName(config, parsedCue)}` : ''}${parsedCue.textFields\n            .filter(txt => !txt.match(/^;.\\.../i))\n            .map(txt => ` - ${txt}`)}`.replace(/,/gi, '');\n    }\n    else {\n        return `${parsedCue.name ? parsedCue.name : ''}`;\n    }\n}\nexports.grafikName = grafikName;\nfunction CreateTimingGrafik(config, cue) {\n    const ret = { start: 0, duration: 0 };\n    const start = cue.start ? tv2_common_1.CalculateTime(cue.start) : 0;\n    start !== undefined ? (ret.start = start) : (ret.start = 0);\n    const duration = GetGrafikDuration(config, cue);\n    const end = cue.end\n        ? cue.end.infiniteMode\n            ? undefined\n            : tv2_common_1.CalculateTime(cue.end)\n        : duration\n            ? ret.start + duration\n            : undefined;\n    ret.duration = end ? end - ret.start : undefined;\n    return ret;\n}\nexports.CreateTimingGrafik = CreateTimingGrafik;\nfunction GetGrafikDuration(config, cue) {\n    if (config.showStyle.GFXTemplates) {\n        if (cue.type === tv2_constants_1.CueType.Grafik) {\n            const template = config.showStyle.GFXTemplates.find(templ => templ.INewsName ? templ.INewsName.toString().toUpperCase() === cue.template.toUpperCase() : false);\n            if (template) {\n                if (template.OutType && !template.OutType.toString().match(/default/i)) {\n                    return undefined;\n                }\n            }\n        }\n        else {\n            const template = config.showStyle.GFXTemplates.find(templ => templ.INewsName ? templ.INewsName.toString().toUpperCase() === cue.vcpid.toString().toUpperCase() : false);\n            if (template) {\n                if (template.OutType && !template.OutType.toString().match(/default/i)) {\n                    return undefined;\n                }\n            }\n        }\n    }\n    return GetDefaultOut(config);\n}\nexports.GetGrafikDuration = GetGrafikDuration;\nfunction GetTemplateName(config, cue) {\n    if (config.showStyle.GFXTemplates) {\n        const template = config.showStyle.GFXTemplates.find(templ => templ.INewsName ? templ.INewsName.toString().toUpperCase() === cue.template.toUpperCase() : false);\n        if (template && template.VizTemplate.toString().length) {\n            return template.VizTemplate.toString();\n        }\n    }\n    // This means unconfigured templates will still be supported, with default out.\n    return cue.template;\n}\nexports.GetTemplateName = GetTemplateName;\nfunction GetDefaultOut(config) {\n    if (config.showStyle.DefaultTemplateDuration !== undefined) {\n        return Number(config.showStyle.DefaultTemplateDuration) * 1000;\n    }\n    return 4 * 1000;\n}\nexports.GetDefaultOut = GetDefaultOut;\n\n\n/***/ }),\n/* 83 */,\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst util_1 = __webpack_require__(80);\nconst variants_defaults_1 = __webpack_require__(88);\n/**\n * Old layers, used here for reference. Should not be used anywhere else.\n */\nvar VizLLayer;\n(function (VizLLayer) {\n    VizLLayer[\"VizLLayerOverlay\"] = \"viz_layer_overlay\";\n    VizLLayer[\"VizLLayerOverlayIdent\"] = \"viz_layer_overlay_ident\";\n    VizLLayer[\"VizLLayerOverlayTopt\"] = \"viz_layer_overlay_topt\";\n    VizLLayer[\"VizLLayerOverlayLower\"] = \"viz_layer_overlay_lower\";\n    VizLLayer[\"VizLLayerOverlayHeadline\"] = \"viz_layer_overlay_headline\";\n    VizLLayer[\"VizLLayerOverlayTema\"] = \"viz_layer_overlay_tema\";\n    VizLLayer[\"VizLLayerPilot\"] = \"viz_layer_pilot\";\n    VizLLayer[\"VizLLayerPilotOverlay\"] = \"viz_layer_pilot_overlay\";\n    VizLLayer[\"VizLLayerDesign\"] = \"viz_layer_design\";\n    VizLLayer[\"VizLLayerAdLibs\"] = \"viz_layer_adlibs\";\n    VizLLayer[\"VizLLayerWall\"] = \"viz_layer_wall\";\n})(VizLLayer || (VizLLayer = {}));\nexports.remapVizLLayer = new Map([\n    [VizLLayer.VizLLayerOverlay, tv2_common_1.GraphicLLayer.GraphicLLayerOverlay],\n    [VizLLayer.VizLLayerOverlayIdent, tv2_common_1.GraphicLLayer.GraphicLLayerOverlayIdent],\n    [VizLLayer.VizLLayerOverlayTopt, tv2_common_1.GraphicLLayer.GraphicLLayerOverlayIdent],\n    [VizLLayer.VizLLayerOverlayLower, tv2_common_1.GraphicLLayer.GraphicLLayerOverlayLower],\n    [VizLLayer.VizLLayerOverlayHeadline, tv2_common_1.GraphicLLayer.GraphicLLayerOverlayHeadline],\n    [VizLLayer.VizLLayerOverlayTema, tv2_common_1.GraphicLLayer.GraphicLLayerOverlayTema],\n    [VizLLayer.VizLLayerPilot, tv2_common_1.GraphicLLayer.GraphicLLayerPilot],\n    [VizLLayer.VizLLayerPilotOverlay, tv2_common_1.GraphicLLayer.GraphicLLayerPilotOverlay],\n    [VizLLayer.VizLLayerDesign, tv2_common_1.GraphicLLayer.GraphicLLayerDesign],\n    [VizLLayer.VizLLayerAdLibs, tv2_common_1.GraphicLLayer.GraphicLLayerAdLibs],\n    [VizLLayer.VizLLayerWall, tv2_common_1.GraphicLLayer.GraphicLLayerWall]\n]);\nexports.remapVizDOvl = new Map([['viz-d-ovl', 'OVL1']]);\n/**\n * Versions:\n * 0.1.0: Core 0.24.0\n */\nexports.showStyleMigrations = tv2_common_1.literal([\n    // Fill in any layers that did not exist before\n    // Note: These should only be run as the very final step of all migrations. otherwise they will add items too early, and confuse old migrations\n    ...variants_defaults_1.getCreateVariantMigrationSteps(),\n    ...util_1.getSourceLayerDefaultsMigrationSteps(\"0.1.0+v1.1.9\"),\n    ...util_1.getOutputLayerDefaultsMigrationSteps(\"0.1.0+v1.1.9\"),\n    ...util_1.getRuntimeArgumentsDefaultsMigrationSteps(\"0.1.0+v1.1.9\"),\n    ...util_1.remapTableColumnValues(\"0.1.0+v1.1.9\", 'GFXTemplates', 'LayerMapping', exports.remapVizLLayer)\n]);\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nexports.default = tv2_common_1.literal([\n    {\n        _id: 'overlay',\n        name: 'OVERLAY',\n        isPGM: false,\n        _rank: 10,\n        isDefaultCollapsed: true\n    },\n    {\n        _id: 'jingle',\n        name: 'JINGLE',\n        isPGM: false,\n        _rank: 19\n    },\n    {\n        _id: 'pgm',\n        name: 'PGM',\n        isPGM: true,\n        _rank: 20,\n        isFlattened: true\n    },\n    {\n        _id: 'selectedAdlib',\n        name: 'ADLIB',\n        isPGM: false,\n        _rank: 30,\n        isDefaultCollapsed: true\n    },\n    {\n        _id: 'manus',\n        name: 'MANUS',\n        isPGM: false,\n        _rank: 23\n    },\n    {\n        _id: 'sec',\n        name: 'SEC',\n        isPGM: false,\n        _rank: 40,\n        isDefaultCollapsed: true\n    },\n    {\n        _id: 'aux',\n        name: 'AUX',\n        isPGM: false,\n        _rank: 50,\n        isDefaultCollapsed: true\n    }\n]);\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nexports.default = tv2_common_1.literal([\n    {\n        _id: 'x-mix-10',\n        label: 'Dissolve 10f',\n        hotkeys: 'x',\n        property: 'transition-mix',\n        value: '10'\n    }\n]);\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(10);\n// OVERLAY group\nconst OVERLAY = [\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsIdent,\n        _rank: 10,\n        name: 'Ident',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsIdentPersistent,\n        _rank: 10,\n        name: 'Ident Persistent',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsTop,\n        _rank: 20,\n        name: 'Top',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsLower,\n        _rank: 30,\n        name: 'Bund',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsHeadline,\n        _rank: 40,\n        name: 'Headline',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsOverlay,\n        _rank: 50,\n        name: 'Overlay',\n        abbreviation: 'O',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsTLF,\n        _rank: 60,\n        name: 'Telefon',\n        abbreviation: 'TLF',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsTema,\n        _rank: 70,\n        name: 'Tema',\n        abbreviation: 'T',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.WallGraphics,\n        _rank: 80,\n        name: 'Wall',\n        abbreviation: 'Wall',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// JINGLE group\nconst JINGLE = [\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmJingle,\n        _rank: 10,\n        name: 'Jingle',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.TRANSITION,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// PGM group\nconst PGM = [\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmSourceSelect,\n        _rank: 0,\n        name: 'Source Select',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.METADATA,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmCam,\n        _rank: 0,\n        name: 'Kam',\n        abbreviation: 'K',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'f1,shift+ctrl+f1',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmLive,\n        _rank: 0,\n        name: 'Live',\n        abbreviation: 'L',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE,\n        exclusiveGroup: 'me2',\n        isRemoteInput: true,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '1,2,3',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: true,\n        stickyOriginalOnly: true,\n        activateStickyKeyboardHotkey: 'ctrl+shift+alt+b',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVE,\n        _rank: 0,\n        name: 'DVE',\n        abbreviation: 'D',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.SPLITS,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: true,\n        stickyOriginalOnly: true,\n        activateStickyKeyboardHotkey: 'f10',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmServer,\n        _rank: 0,\n        name: 'Server',\n        abbreviation: 'S',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.VT,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmVoiceOver,\n        _rank: 0,\n        name: 'Voice Over',\n        abbreviation: 'VO',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.LIVE_SPEAK,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmFull,\n        _rank: 0,\n        name: 'Full',\n        abbreviation: 'Full',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVEBackground,\n        _rank: 50,\n        name: 'DVE Background',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.METADATA,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmContinuity,\n        _rank: 50,\n        name: 'CONTINUITY',\n        abbreviation: 'CONTINUITY',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.METADATA,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVEBox1,\n        _rank: 0,\n        name: 'DVE INP1',\n        abbreviation: 'DB1',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'shift+f1,shift+f2,shift+f3,shift+f4,shift+f5,shift+1,shift+2,shift+3,shift+4,shift+5,shift+6,shift+7,shift+8,shift+9,shift+0,shift+e,shift+d',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVEBox2,\n        _rank: 0,\n        name: 'DVE INP2',\n        abbreviation: 'DB2',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'ctrl+f1,ctrl+f2,ctrl+f3,ctrl+shift+alt+f4,ctrl+f5,ctrl+1,ctrl+2,ctrl+3,ctrl+4,ctrl+5,ctrl+6,ctrl+7,ctrl+8,ctrl+9,ctrl+0,ctrl+e,ctrl+d',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVEBox3,\n        _rank: 0,\n        name: 'DVE INP3',\n        abbreviation: 'DB3',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVEBox4,\n        _rank: 0,\n        name: 'DVE INP4',\n        abbreviation: 'DB4',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// MANUS group\nconst MANUS = [\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmScript,\n        _rank: 20,\n        name: 'Manus',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.SCRIPT,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// SEC group\nconst SEC = [];\n// SELECTED_ADLIB group\nconst SELECTED_ADLIB = [\n    {\n        _id: layers_1.OffTubeSourceLayer.SelectedAdLibDVE,\n        _rank: 0,\n        name: 'DVE',\n        abbreviation: 'D',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.SPLITS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'm,comma,.,n',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: true,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.SelectedAdLibServer,\n        _rank: 0,\n        name: 'Server',\n        abbreviation: 'S',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.VT,\n        exclusiveGroup: 'server',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: true,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.SelectedAdLibVoiceOver,\n        _rank: 0,\n        name: 'Voice Over',\n        abbreviation: 'VO',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.LIVE_SPEAK,\n        exclusiveGroup: 'server',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: true,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.SelectedAdlibGraphicsFull,\n        _rank: 0,\n        name: 'GFX Full',\n        abbreviation: 'GFX Full',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: true,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    }\n];\n// AUX group\nconst AUX = [\n    {\n        _id: layers_1.OffTubeSourceLayer.AuxStudioScreen,\n        _rank: 20,\n        name: 'Studio',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'shift+ctrl+1,shift+ctrl+2,shift+ctrl+3,shift+ctrl+4,shift+ctrl+5,shift+ctrl+6,shift+ctrl+7,shift+ctrl+8,shift+ctrl+9,shift+ctrl+0,shift+ctrl+e',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\nexports.default = tv2_common_1.literal([...OVERLAY, ...JINGLE, ...PGM, ...MANUS, ...SEC, ...SELECTED_ADLIB, ...AUX]);\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nexports.showVariants = tv2_common_1.literal({\n    oddasat: {\n        name: 'Main'\n    }\n});\nfunction getCreateVariantMigrationSteps() {\n    return _.keys(exports.showVariants).map(key => {\n        return tv2_common_1.literal({\n            id: `variant.${key}`,\n            version: \"0.1.0+v1.1.9\",\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                const variant = context.getVariant(key);\n                if (!variant) {\n                    return `Variant \"${key}\" doesn't exist`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                const variant = context.getVariant(key);\n                if (!variant) {\n                    const region = exports.showVariants[key];\n                    context.insertVariant(key, {\n                        name: region.name\n                    });\n                    // Set/update config fields here\n                    // context.setVariantConfig(key, 'RegionCode', region.regionCode)\n                }\n            }\n        });\n    });\n}\nexports.getCreateVariantMigrationSteps = getCreateVariantMigrationSteps;\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst config_1 = __webpack_require__(112);\nconst config_manifests_1 = __webpack_require__(97);\nfunction extendWithShowStyleConfig(context, baseConfig, values) {\n    const config = tv2_common_1.literal(Object.assign(Object.assign({}, baseConfig), { showStyle: {} }));\n    config_1.applyToConfig(context, config.showStyle, config_manifests_1.showStyleConfigManifest, 'ShowStyle', values);\n    return config;\n}\nfunction defaultConfig(context) {\n    return extendWithShowStyleConfig(context, config_1.defaultStudioConfig(context), {});\n}\nexports.defaultConfig = defaultConfig;\nfunction parseConfig(context) {\n    return extendWithShowStyleConfig(context, config_1.parseStudioConfig(context), context.getShowStyleConfig());\n}\nexports.parseConfig = parseConfig;\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory){\n  'use strict';\n\n  /*istanbul ignore next:cant test*/\n  if ( true && typeof module.exports === 'object') {\n    module.exports = factory();\n  } else if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this, function(){\n  'use strict';\n\n  var toStr = Object.prototype.toString;\n  function hasOwnProperty(obj, prop) {\n    if(obj == null) {\n      return false\n    }\n    //to handle objects with null prototypes (too edge case?)\n    return Object.prototype.hasOwnProperty.call(obj, prop)\n  }\n\n  function isEmpty(value){\n    if (!value) {\n      return true;\n    }\n    if (isArray(value) && value.length === 0) {\n        return true;\n    } else if (typeof value !== 'string') {\n        for (var i in value) {\n            if (hasOwnProperty(value, i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n  }\n\n  function toString(type){\n    return toStr.call(type);\n  }\n\n  function isObject(obj){\n    return typeof obj === 'object' && toString(obj) === \"[object Object]\";\n  }\n\n  var isArray = Array.isArray || function(obj){\n    /*istanbul ignore next:cant test*/\n    return toStr.call(obj) === '[object Array]';\n  }\n\n  function isBoolean(obj){\n    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\n  }\n\n  function getKey(key){\n    var intKey = parseInt(key);\n    if (intKey.toString() === key) {\n      return intKey;\n    }\n    return key;\n  }\n\n  function factory(options) {\n    options = options || {}\n\n    var objectPath = function(obj) {\n      return Object.keys(objectPath).reduce(function(proxy, prop) {\n        if(prop === 'create') {\n          return proxy;\n        }\n\n        /*istanbul ignore else*/\n        if (typeof objectPath[prop] === 'function') {\n          proxy[prop] = objectPath[prop].bind(objectPath, obj);\n        }\n\n        return proxy;\n      }, {});\n    };\n\n    function hasShallowProperty(obj, prop) {\n      return (options.includeInheritedProps || (typeof prop === 'number' && Array.isArray(obj)) || hasOwnProperty(obj, prop))\n    }\n\n    function getShallowProperty(obj, prop) {\n      if (hasShallowProperty(obj, prop)) {\n        return obj[prop];\n      }\n    }\n\n    function set(obj, path, value, doNotReplace){\n      if (typeof path === 'number') {\n        path = [path];\n      }\n      if (!path || path.length === 0) {\n        return obj;\n      }\n      if (typeof path === 'string') {\n        return set(obj, path.split('.').map(getKey), value, doNotReplace);\n      }\n      var currentPath = path[0];\n      var currentValue = getShallowProperty(obj, currentPath);\n      if (path.length === 1) {\n        if (currentValue === void 0 || !doNotReplace) {\n          obj[currentPath] = value;\n        }\n        return currentValue;\n      }\n\n      if (currentValue === void 0) {\n        //check if we assume an array\n        if(typeof path[1] === 'number') {\n          obj[currentPath] = [];\n        } else {\n          obj[currentPath] = {};\n        }\n      }\n\n      return set(obj[currentPath], path.slice(1), value, doNotReplace);\n    }\n\n    objectPath.has = function (obj, path) {\n      if (typeof path === 'number') {\n        path = [path];\n      } else if (typeof path === 'string') {\n        path = path.split('.');\n      }\n\n      if (!path || path.length === 0) {\n        return !!obj;\n      }\n\n      for (var i = 0; i < path.length; i++) {\n        var j = getKey(path[i]);\n\n        if((typeof j === 'number' && isArray(obj) && j < obj.length) ||\n          (options.includeInheritedProps ? (j in Object(obj)) : hasOwnProperty(obj, j))) {\n          obj = obj[j];\n        } else {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    objectPath.ensureExists = function (obj, path, value){\n      return set(obj, path, value, true);\n    };\n\n    objectPath.set = function (obj, path, value, doNotReplace){\n      return set(obj, path, value, doNotReplace);\n    };\n\n    objectPath.insert = function (obj, path, value, at){\n      var arr = objectPath.get(obj, path);\n      at = ~~at;\n      if (!isArray(arr)) {\n        arr = [];\n        objectPath.set(obj, path, arr);\n      }\n      arr.splice(at, 0, value);\n    };\n\n    objectPath.empty = function(obj, path) {\n      if (isEmpty(path)) {\n        return void 0;\n      }\n      if (obj == null) {\n        return void 0;\n      }\n\n      var value, i;\n      if (!(value = objectPath.get(obj, path))) {\n        return void 0;\n      }\n\n      if (typeof value === 'string') {\n        return objectPath.set(obj, path, '');\n      } else if (isBoolean(value)) {\n        return objectPath.set(obj, path, false);\n      } else if (typeof value === 'number') {\n        return objectPath.set(obj, path, 0);\n      } else if (isArray(value)) {\n        value.length = 0;\n      } else if (isObject(value)) {\n        for (i in value) {\n          if (hasShallowProperty(value, i)) {\n            delete value[i];\n          }\n        }\n      } else {\n        return objectPath.set(obj, path, null);\n      }\n    };\n\n    objectPath.push = function (obj, path /*, values */){\n      var arr = objectPath.get(obj, path);\n      if (!isArray(arr)) {\n        arr = [];\n        objectPath.set(obj, path, arr);\n      }\n\n      arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\n    };\n\n    objectPath.coalesce = function (obj, paths, defaultValue) {\n      var value;\n\n      for (var i = 0, len = paths.length; i < len; i++) {\n        if ((value = objectPath.get(obj, paths[i])) !== void 0) {\n          return value;\n        }\n      }\n\n      return defaultValue;\n    };\n\n    objectPath.get = function (obj, path, defaultValue){\n      if (typeof path === 'number') {\n        path = [path];\n      }\n      if (!path || path.length === 0) {\n        return obj;\n      }\n      if (obj == null) {\n        return defaultValue;\n      }\n      if (typeof path === 'string') {\n        return objectPath.get(obj, path.split('.'), defaultValue);\n      }\n\n      var currentPath = getKey(path[0]);\n      var nextObj = getShallowProperty(obj, currentPath)\n      if (nextObj === void 0) {\n        return defaultValue;\n      }\n\n      if (path.length === 1) {\n        return nextObj;\n      }\n\n      return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\n    };\n\n    objectPath.del = function del(obj, path) {\n      if (typeof path === 'number') {\n        path = [path];\n      }\n\n      if (obj == null) {\n        return obj;\n      }\n\n      if (isEmpty(path)) {\n        return obj;\n      }\n      if(typeof path === 'string') {\n        return objectPath.del(obj, path.split('.'));\n      }\n\n      var currentPath = getKey(path[0]);\n      if (!hasShallowProperty(obj, currentPath)) {\n        return obj;\n      }\n\n      if(path.length === 1) {\n        if (isArray(obj)) {\n          obj.splice(currentPath, 1);\n        } else {\n          delete obj[currentPath];\n        }\n      } else {\n        return objectPath.del(obj[currentPath], path.slice(1));\n      }\n\n      return obj;\n    }\n\n    return objectPath;\n  }\n\n  var mod = factory();\n  mod.create = factory;\n  mod.withInheritedProps = factory({includeInheritedProps: true})\n  return mod;\n});\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst layers_1 = __webpack_require__(7);\nexports.sisyfosChannels = {\n    [layers_1.SisyfosLLAyer.SisyfosSourceHost_1_ST_A]: {\n        isPgm: 0,\n        label: 'VRT 1'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceHost_2_ST_A]: {\n        isPgm: 0,\n        label: 'VRT 2'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_1_ST_A]: {\n        isPgm: 0,\n        label: 'GST 1'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_2_ST_A]: {\n        isPgm: 0,\n        label: 'GST 2'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_3_ST_A]: {\n        isPgm: 0,\n        label: 'GST 3'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_4_ST_A]: {\n        isPgm: 0,\n        label: 'GST 4'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceHost_1_ST_B]: {\n        isPgm: 0,\n        label: 'B-VRT 1',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceHost_2_ST_B]: {\n        isPgm: 0,\n        label: 'B-VRT 2',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_1_ST_B]: {\n        isPgm: 0,\n        label: 'B-GST 1',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_2_ST_B]: {\n        isPgm: 0,\n        label: 'B-GST 2',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_3_ST_B]: {\n        isPgm: 0,\n        label: 'B-GST 3',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceGuest_4_ST_B]: {\n        isPgm: 0,\n        label: 'B-GST 4',\n        hideInStudioA: true\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_1]: {\n        isPgm: 0,\n        label: 'LIVE 1'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_2]: {\n        isPgm: 0,\n        label: 'LIVE 2'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_3]: {\n        isPgm: 0,\n        label: 'LIVE 3'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_4]: {\n        isPgm: 0,\n        label: 'LIVE 4'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_5]: {\n        isPgm: 0,\n        label: 'LIVE 5'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_6]: {\n        isPgm: 0,\n        label: 'LIVE 6'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_7]: {\n        isPgm: 0,\n        label: 'LIVE 7'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_8]: {\n        isPgm: 0,\n        label: 'LIVE 8'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_9]: {\n        isPgm: 0,\n        label: 'LIVE 9'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceLive_10]: {\n        isPgm: 0,\n        label: 'LIVE 10'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceServerA]: {\n        isPgm: 0,\n        label: 'Server A'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceServerB]: {\n        isPgm: 0,\n        label: 'Server B'\n    },\n    // [SisyfosLLAyer.SisyfosSourceServerC]: {\n    // \tisPgm: 0,\n    // \tlabel: 'Server C',\n    // \thideInStudioA: false // for future applications\n    // },\n    [layers_1.SisyfosEVSSource('1')]: {\n        isPgm: 0,\n        label: 'EVS 1'\n    },\n    [layers_1.SisyfosEVSSource('2')]: {\n        isPgm: 0,\n        label: 'EVS 2'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceJingle]: {\n        isPgm: 0,\n        label: 'JINGLE'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceAudiobed]: {\n        isPgm: 0,\n        label: 'BED'\n    },\n    [layers_1.SisyfosLLAyer.SisyfosSourceTLF]: {\n        isPgm: 0,\n        label: 'TLF'\n    }\n};\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(7);\nconst layers_2 = __webpack_require__(6);\nexports.boxLayers = {\n    INP1: layers_2.SourceLayer.PgmDVEBox1,\n    INP2: layers_2.SourceLayer.PgmDVEBox2,\n    INP3: layers_2.SourceLayer.PgmDVEBox3,\n    INP4: layers_2.SourceLayer.PgmDVEBox4\n};\nexports.boxMappings = [layers_1.AtemLLayer.AtemSSrcBox1, layers_1.AtemLLayer.AtemSSrcBox2, layers_1.AtemLLayer.AtemSSrcBox3];\nexports.AFVD_DVE_GENERATOR_OPTIONS = {\n    dveLayers: {\n        ATEM: {\n            SSrcDefault: layers_1.AtemLLayer.AtemSSrcDefault,\n            SSrcArt: layers_1.AtemLLayer.AtemSSrcArt,\n            MEProgram: layers_1.AtemLLayer.AtemMEProgram\n        },\n        CASPAR: {\n            CGDVEKey: layers_1.CasparLLayer.CasparCGDVEKey,\n            CGDVEFrame: layers_1.CasparLLayer.CasparCGDVEFrame,\n            CGDVETemplate: layers_1.CasparLLayer.CasparCGDVETemplate\n        },\n        SisyfosLLayer: {\n            ClipPending: layers_1.SisyfosLLAyer.SisyfosSourceClipPending\n        },\n        CasparLLayer: {\n            ClipPending: layers_1.CasparLLayer.CasparPlayerClipPending\n        }\n    },\n    dveTimelineGenerators: {\n        GetSisyfosTimelineObjForCamera: tv2_common_1.GetSisyfosTimelineObjForCamera,\n        GetSisyfosTimelineObjForEkstern: tv2_common_1.GetSisyfosTimelineObjForEkstern,\n        GetLayersForEkstern: tv2_common_1.GetLayersForEkstern\n    },\n    boxLayers: {\n        INP1: layers_2.SourceLayer.PgmDVEBox1,\n        INP2: layers_2.SourceLayer.PgmDVEBox2,\n        INP3: layers_2.SourceLayer.PgmDVEBox3,\n        INP4: layers_2.SourceLayer.PgmDVEBox4\n    },\n    boxMappings: [layers_1.AtemLLayer.AtemSSrcBox1, layers_1.AtemLLayer.AtemSSrcBox2, layers_1.AtemLLayer.AtemSSrcBox3, layers_1.AtemLLayer.AtemSSrcBox4],\n    AUDIO_LAYERS: Object.keys(layers_1.SisyfosLLAyer),\n    EXCLUDED_LAYERS: [\n        layers_1.SisyfosLLAyer.SisyfosSourceClipPending,\n        layers_1.SisyfosLLAyer.SisyfosSourceServerA,\n        layers_1.SisyfosLLAyer.SisyfosSourceServerB\n    ]\n};\nfunction MakeContentDVE(context, config, partDefinition, parsedCue, dveConfig, addClass, adlib) {\n    return tv2_common_1.MakeContentDVEBase(context, config, partDefinition, parsedCue, dveConfig, exports.AFVD_DVE_GENERATOR_OPTIONS, addClass, adlib);\n}\nexports.MakeContentDVE = MakeContentDVE;\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(6);\nconst layers_2 = __webpack_require__(7);\nconst grafikViz_1 = __webpack_require__(82);\nfunction EvaluateMOSViz(config, context, pieces, adlibPieces, partId, parsedCue, engine, adlib, isTlf, rank, isGrafikPart, overrideOverlay) {\n    if (parsedCue.vcpid === undefined ||\n        parsedCue.vcpid === null ||\n        parsedCue.vcpid.toString() === '' ||\n        parsedCue.vcpid.toString().length === 0) {\n        context.warning('No valid VCPID provided');\n        return;\n    }\n    const isOverlay = !!parsedCue.name.match(/MOSART=L/i);\n    if (adlib) {\n        adlibPieces.push(makeMosAdlib(context, partId, config, parsedCue, engine, isOverlay, isTlf, rank, isGrafikPart, overrideOverlay));\n    }\n    else {\n        if (!isOverlay && !overrideOverlay && config.showStyle.MakeAdlibsForFulls && !adlib && engine !== 'WALL') {\n            adlibPieces.push(makeMosAdlib(context, partId, config, parsedCue, engine, isOverlay, isTlf, rank, isGrafikPart, overrideOverlay));\n        }\n        pieces.push(tv2_common_1.literal(Object.assign(Object.assign({ _id: '', externalId: partId, name: grafikViz_1.grafikName(config, parsedCue) }, (isTlf || isGrafikPart\n            ? { enable: { start: 0 } }\n            : {\n                enable: Object.assign({}, grafikViz_1.CreateTimingGrafik(config, parsedCue))\n            })), { outputLayerId: GetOutputLayer(engine, !!overrideOverlay, isOverlay, !!isTlf, !!isGrafikPart), sourceLayerId: GetSourceLayer(engine, isTlf, overrideOverlay || isOverlay), adlibPreroll: config.studio.PilotPrerollDuration, infiniteMode: GetInfiniteMode(engine, parsedCue, isTlf, isGrafikPart), content: GetMosObjContent(context, engine, config, parsedCue, partId, isOverlay, false, isTlf) })));\n    }\n}\nexports.EvaluateMOSViz = EvaluateMOSViz;\nfunction makeMosAdlib(context, partId, config, parsedCue, engine, isOverlay, isTlf, rank, isGrafikPart, overrideOverlay) {\n    const duration = grafikViz_1.CreateTimingGrafik(config, parsedCue).duration || !isGrafikPart ? grafikViz_1.GetDefaultOut(config) : undefined;\n    const infiniteMode = GetInfiniteMode(engine, parsedCue, isTlf, isGrafikPart);\n    return {\n        _rank: rank || 0,\n        externalId: partId,\n        name: grafikViz_1.grafikName(config, parsedCue),\n        expectedDuration: !(parsedCue.end && parsedCue.end.infiniteMode) && infiniteMode === tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal && duration\n            ? duration\n            : undefined,\n        infiniteMode,\n        sourceLayerId: GetSourceLayer(engine, isTlf, overrideOverlay || isOverlay),\n        outputLayerId: GetOutputLayer(engine, !!overrideOverlay, isOverlay, !!isTlf, !!isGrafikPart),\n        adlibPreroll: config.studio.PilotPrerollDuration,\n        content: GetMosObjContent(context, engine, config, parsedCue, `${partId}-adlib`, isOverlay, true, isTlf, rank),\n        toBeQueued: true\n    };\n}\nfunction GetOutputLayer(engine, overrideOverlay, isOverlay, isTlf, isGrafikPart) {\n    return engine === 'WALL'\n        ? 'sec'\n        : overrideOverlay || isOverlay\n            ? 'overlay'\n            : isTlf || isGrafikPart\n                ? 'pgm'\n                : 'overlay';\n}\nfunction GetSourceLayer(engine, isTlf, isOverlay) {\n    return engine === 'WALL'\n        ? layers_1.SourceLayer.WallGraphics\n        : isTlf\n            ? layers_1.SourceLayer.PgmGraphicsTLF\n            : isOverlay\n                ? layers_1.SourceLayer.PgmPilotOverlay\n                : layers_1.SourceLayer.PgmPilot;\n}\nfunction GetInfiniteMode(engine, parsedCue, isTlf, isGrafikPart) {\n    return engine === 'WALL'\n        ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite\n        : isTlf || isGrafikPart\n            ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart\n            : parsedCue.end && parsedCue.end.infiniteMode\n                ? tv2_common_1.InfiniteMode(parsedCue.end.infiniteMode, tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal)\n                : tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal;\n}\nfunction GetMosObjContent(context, engine, config, parsedCue, partId, isOverlay, adlib, tlf, adlibrank) {\n    return tv2_common_1.literal({\n        fileName: parsedCue.name,\n        path: parsedCue.vcpid.toString(),\n        timelineObjects: [\n            tv2_common_1.literal(Object.assign({ id: '', enable: {\n                    start: 0\n                }, priority: 1, layer: engine === 'WALL'\n                    ? tv2_common_1.GraphicLLayer.GraphicLLayerWall\n                    : isOverlay\n                        ? tv2_common_1.GraphicLLayer.GraphicLLayerPilotOverlay\n                        : tv2_common_1.GraphicLLayer.GraphicLLayerPilot, content: Object.assign({ deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE, type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_PILOT, templateVcpId: parsedCue.vcpid, continueStep: parsedCue.continueCount, noAutoPreloading: false, channelName: engine === 'WALL' ? 'WALL1' : isOverlay ? 'OVL1' : 'FULL1' }, (isOverlay || engine === 'WALL'\n                    ? {}\n                    : {\n                        outTransition: {\n                            type: timeline_state_resolver_types_1.VIZMSETransitionType.DELAY,\n                            delay: config.studio.PilotOutTransitionDuration\n                        }\n                    })) }, (isOverlay || tlf || engine === 'WALL' ? {} : { classes: ['full'] }))),\n            ...(isOverlay || engine === 'WALL'\n                ? []\n                : [\n                    tv2_common_1.literal(Object.assign({ id: '', enable: {\n                            start: config.studio.PilotCutToMediaPlayer\n                        }, priority: 1, layer: layers_2.AtemLLayer.AtemMEProgram, content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: config.studio.AtemSource.FullFrameGrafikBackground,\n                                transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                            }\n                        } }, (adlib ? { classes: ['adlib_deparent'] } : {}))),\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: {\n                            start: config.studio.PilotCutToMediaPlayer\n                        },\n                        priority: 1,\n                        layer: layers_2.AtemLLayer.AtemAuxPGM,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK,\n                            dsk: {\n                                onAir: true,\n                                sources: {\n                                    fillSource: config.studio.AtemSource.DSK1F,\n                                    cutSource: config.studio.AtemSource.DSK1K\n                                }\n                            }\n                        },\n                        classes: ['MIX_MINUS_OVERRIDE_DSK', 'PLACEHOLDER_OBJECT_REMOVEME']\n                    }),\n                    ...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, 'full'),\n                    ...MuteSisyfosChannels(partId, config.sources, !!adlib, adlibrank !== null && adlibrank !== void 0 ? adlibrank : 0, parsedCue.vcpid)\n                ])\n        ]\n    });\n}\nfunction CleanUpDVEBackground(config) {\n    return [layers_2.CasparLLayer.CasparCGDVEFrame, layers_2.CasparLLayer.CasparCGDVEKey, layers_2.CasparLLayer.CasparCGDVETemplate].map(layer => {\n        return {\n            id: '',\n            enable: {\n                start: config.studio.PilotCutToMediaPlayer\n            },\n            priority: 2,\n            layer,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                file: 'empty',\n                mixer: {\n                    opacity: 0\n                }\n            }\n        };\n    });\n}\nexports.CleanUpDVEBackground = CleanUpDVEBackground;\nfunction MuteSisyfosChannels(partId, sources, adlib, adlibRank, vcpid) {\n    return [\n        layers_2.SisyfosLLAyer.SisyfosSourceServerA,\n        layers_2.SisyfosLLAyer.SisyfosSourceServerB,\n        layers_2.SisyfosLLAyer.SisyfosSourceLive_1,\n        layers_2.SisyfosLLAyer.SisyfosSourceLive_2,\n        layers_2.SisyfosLLAyer.SisyfosSourceLive_3,\n        layers_2.SisyfosLLAyer.SisyfosSourceLive_4,\n        layers_2.SisyfosLLAyer.SisyfosSourceLive_5,\n        layers_2.SisyfosLLAyer.SisyfosSourceLive_6,\n        layers_2.SisyfosLLAyer.SisyfosSourceLive_7,\n        layers_2.SisyfosLLAyer.SisyfosSourceLive_8,\n        layers_2.SisyfosLLAyer.SisyfosSourceLive_9,\n        layers_2.SisyfosLLAyer.SisyfosSourceLive_10,\n        layers_2.SisyfosLLAyer.SisyfosSourceTLF,\n        ...[\n            ...sources\n                .filter(s => s.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE && s.id.match(/^DP/i))\n                .map(s => layers_2.SisyfosEVSSource(s.id.replace(/^DP/i, '')))\n        ]\n    ].map(layer => {\n        return tv2_common_1.literal({\n            id: `muteSisyfos-${layer}-${partId}-${vcpid}-${adlib ? `adlib-${adlibRank}` : ''}`,\n            enable: {\n                start: 0\n            },\n            priority: 2,\n            layer,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                isPgm: 0\n            }\n        });\n    });\n}\n\n\n/***/ }),\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nexports.showStyleConfigManifest = [\n    {\n        id: 'MakeAdlibsForFulls',\n        name: 'Make Adlibs for FULL graphics',\n        description: '',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n        defaultVal: true,\n        required: false\n    },\n    {\n        id: 'CasparCGLoadingClip',\n        name: 'CasparCG Loading Clip',\n        description: 'Clip to play when media is loading',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        defaultVal: 'LoadingLoop',\n        required: true\n    },\n    {\n        id: 'DVEStyles',\n        name: 'DVE Layouts',\n        description: '',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n        required: false,\n        defaultVal: [\n            {\n                _id: '',\n                DVEName: '',\n                DVEInputs: '',\n                DVEJSON: '{}',\n                DVEGraphicsTemplate: '',\n                DVEGraphicsTemplateJSON: '{}',\n                DVEGraphicsKey: '',\n                DVEGraphicsFrame: ''\n            }\n        ],\n        columns: [\n            {\n                id: 'DVEName',\n                name: 'DVE name',\n                description: 'The name as it will appear in iNews',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 0\n            },\n            {\n                id: 'DVEInputs',\n                name: 'Box inputs',\n                description: 'I.e.: 1:INP1;2:INP3; as an example to chose which ATEM boxes to assign iNews inputs to',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '1:INP1;2:INP2;3:INP3;4:INP4',\n                rank: 1\n            },\n            {\n                id: 'DVEJSON',\n                name: 'DVE config',\n                description: 'DVE config pulled from ATEM',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 2\n            },\n            {\n                id: 'DVEGraphicsTemplate',\n                name: 'CasparCG template',\n                description: 'File name (path) for CasparCG overlay template (locators)',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: 'dve/locators',\n                rank: 3\n            },\n            {\n                id: 'DVEGraphicsTemplateJSON',\n                name: 'CasparCG template config',\n                description: 'Position (and style) data for the boxes in the CasparCG template',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 4\n            },\n            {\n                id: 'DVEGraphicsKey',\n                name: 'CasparCG key file',\n                description: 'Key file for DVE',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 5\n            },\n            {\n                id: 'DVEGraphicsFrame',\n                name: 'CasparCG frame file',\n                description: 'Frames file for caspar',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 6\n            }\n        ]\n    },\n    {\n        /*\n        Graphic template setup\n        Grafik template (viz)\n        Source layer\n        Layer mapping\n        inews code\n        inews name\n        destination\tdefault out (default, S, B, O)\n        var 1 name\n        var 2 name\n        note\n        */\n        id: 'GFXTemplates',\n        name: 'GFX Templates',\n        description: 'This table can contain info in two ways. Things marked (**) are always required. If you want to do the mapping from iNews-code, then all (*)-elements are aslo required. VizTemplate is what the graphic is called in viz. Source layer is the ID of the Sofie Source layer in the UI (i.e. \"studio0_graphicsTema\"). Layer mapping is the Sofie studio layer mapping (i.e \"viz_layer_tema\").  iNews command can be something like \"KG=\", then iNews Name is the thing that follows in iNes i.e. \"ident_nyhederne\"',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n        required: true,\n        defaultVal: [\n            {\n                _id: '',\n                VizTemplate: '',\n                SourceLayer: '',\n                LayerMapping: '',\n                INewsCode: '',\n                INewsName: '',\n                VizDestination: '',\n                OutType: '',\n                Argument1: '',\n                Argument2: '',\n                IsDesign: false\n            }\n        ],\n        columns: [\n            {\n                id: 'INewsCode',\n                name: 'iNews Command (*)',\n                description: 'The code as it will appear in iNews',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: false,\n                defaultVal: '',\n                rank: 0\n            },\n            {\n                id: 'INewsName',\n                name: 'iNews Name (*)',\n                description: 'The name after the code',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: false,\n                defaultVal: '',\n                rank: 1\n            },\n            {\n                id: 'VizTemplate',\n                name: 'Viz Template Name (**)',\n                description: 'The name of the Viz Template',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 2\n            },\n            {\n                id: 'VizDestination',\n                name: 'Graphic Engine Destination (*)',\n                description: 'The name of the graphics engine to play this graphic on',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.SELECT,\n                required: false,\n                multiple: false,\n                options: ['OVL1', 'FULL1', 'WALL1'],\n                defaultVal: 'OVL1',\n                rank: 3\n            },\n            {\n                id: 'OutType',\n                name: 'Out type',\n                description: 'The type of out, none follow timecode, S stays on to ??, B stays on to ??, O stays on to ??',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: false,\n                defaultVal: '',\n                rank: 4\n            },\n            {\n                id: 'IsDesign',\n                name: 'Changes Design',\n                description: 'Whether this cue changes the design',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n                required: false,\n                defaultVal: false,\n                rank: 5\n            },\n            {\n                id: 'SourceLayer',\n                name: 'Source layer (**)',\n                description: 'The ID of the source layer to place the piece on in Sofie UI',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.SOURCE_LAYERS,\n                multiple: false,\n                required: true,\n                defaultVal: '',\n                rank: 6\n            },\n            {\n                id: 'LayerMapping',\n                name: 'Layer mapping (**)',\n                description: 'The Sofie Layer mapping to use in playback. This will ensure proper viz transition logic by matching the viz layers.',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n                filters: {\n                    deviceTypes: [timeline_state_resolver_types_1.DeviceType.VIZMSE]\n                },\n                multiple: false,\n                required: true,\n                defaultVal: '',\n                rank: 7\n            }\n        ]\n    },\n    {\n        /*\n        Wipes Config\n        Effekt number\n        Clip name\n        Alpha at start\n        Alpha at end\n        */\n        id: 'WipesConfig',\n        name: 'Wipes Configuration',\n        description: 'Wipes effekts configuration',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n        required: false,\n        defaultVal: [\n            {\n                _id: '',\n                EffektNumber: 0,\n                ClipName: '',\n                Duration: 0,\n                StartAlpha: 0,\n                EndAlpha: 0\n            }\n        ],\n        columns: [\n            {\n                id: 'EffektNumber',\n                name: 'Effekt Number',\n                description: 'The Effect Number',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 0\n            },\n            {\n                id: 'ClipName',\n                name: 'Clip Name',\n                description: 'The name of the wipe clip',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 1\n            },\n            {\n                id: 'Duration',\n                name: 'Effekt Duration',\n                description: 'Duration of the effekt',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 2\n            },\n            {\n                id: 'StartAlpha',\n                name: 'Alpha at Start',\n                description: 'Number of frames of alpha at start',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 3\n            },\n            {\n                id: 'EndAlpha',\n                name: 'Alpha at End',\n                description: 'Number of frames of alpha at end',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 4\n            }\n        ]\n    },\n    {\n        /*\n        Breaker Config\n        Effekt number\n        Clip name\n        Alpha at start\n        Alpha at end\n        */\n        id: 'BreakerConfig',\n        name: 'Breaker Configuration',\n        description: 'Clip name is the clip name without file extension. Duration is the length of the file, including trailing audio. Alpha start is the number of frames from the first frame and until the jingle covers the full frame. The alpha end is how many frames from the alpha starts fading out, until the very end of the file.',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n        required: false,\n        defaultVal: [\n            {\n                _id: '',\n                BreakerName: '',\n                ClipName: '',\n                Duration: 0,\n                StartAlpha: 0,\n                EndAlpha: 0,\n                Autonext: true\n            }\n        ],\n        columns: [\n            {\n                id: 'BreakerName',\n                name: 'Breaker name',\n                description: 'Breaker name as typed in iNews',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 0\n            },\n            {\n                id: 'ClipName',\n                name: 'Clip Name',\n                description: 'The name of the breaker clip to play',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 1\n            },\n            {\n                id: 'Duration',\n                name: 'Effekt Duration',\n                description: 'Duration of the effekt',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 2\n            },\n            {\n                id: 'StartAlpha',\n                name: 'Alpha at Start',\n                description: 'Number of frames of alpha at start',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 3\n            },\n            {\n                id: 'EndAlpha',\n                name: 'Alpha at End',\n                description: 'Number of frames of alpha at end',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 4\n            },\n            {\n                id: 'Autonext',\n                name: 'Autonext',\n                description: '',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n                required: true,\n                defaultVal: true,\n                rank: 5\n            }\n        ]\n    },\n    {\n        id: 'DefaultTemplateDuration',\n        name: 'Default Template Duration',\n        description: 'Default Template Duration',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: true,\n        defaultVal: 4\n    },\n    {\n        /*\n        LYD Mappings\n        iNews Name\n        File Name\n        */\n        id: 'LYDConfig',\n        name: 'LYD Config',\n        description: 'Map LYD iNews names to file names',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n        required: false,\n        defaultVal: [\n            {\n                _id: '',\n                INewsName: '',\n                FileName: ''\n            }\n        ],\n        columns: [\n            {\n                id: 'INewsName',\n                name: 'iNews Name',\n                description: 'Name of LYD as in iNews',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 0\n            },\n            {\n                id: 'FileName',\n                name: 'File Name',\n                description: 'The name of the LYD file',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 1\n            },\n            {\n                id: 'FadeIn',\n                name: 'Fade In',\n                description: 'ms duration to fade in file',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 1000,\n                rank: 2\n            },\n            {\n                id: 'FadeOut',\n                name: 'Fade Out',\n                description: 'ms duration to fade out file',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 1000,\n                rank: 3\n            }\n        ]\n    }\n];\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst layers_1 = __webpack_require__(7);\nconst layers_2 = __webpack_require__(6);\nfunction postProcessPartTimelineObjects(context, config, parts) {\n    _.each(parts, part => {\n        const ctx = new tv2_common_1.PartContext2(context, part.part.externalId);\n        _.each(part.pieces, p => postProcessPieceTimelineObjects(ctx, config, p, false));\n        _.each(part.adLibPieces, p => postProcessPieceTimelineObjects(ctx, config, p, true));\n    });\n}\nexports.postProcessPartTimelineObjects = postProcessPartTimelineObjects;\n// Do any post-process of timeline objects\nfunction postProcessPieceTimelineObjects(context, config, piece, isAdlib) {\n    var _a;\n    if ((_a = piece.content) === null || _a === void 0 ? void 0 : _a.timelineObjects) {\n        const extraObjs = [];\n        const atemMeObjs = piece.content.timelineObjects.filter(obj => obj.content &&\n            obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.ATEM &&\n            (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.ME || obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK));\n        _.each(atemMeObjs, tlObj => {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            if (tlObj.layer === layers_1.AtemLLayer.AtemMEProgram || ((_a = tlObj.classes) === null || _a === void 0 ? void 0 : _a.includes('MIX_MINUS_OVERRIDE_DSK'))) {\n                if (!tlObj.id) {\n                    tlObj.id = context.getHashId(layers_1.AtemLLayer.AtemMEProgram, true);\n                }\n                if (!tlObj.metaData) {\n                    tlObj.metaData = {};\n                }\n                // Basic clone of every object to AtemMEClean\n                const cleanObj = _.clone(tlObj); // Note: shallow clone\n                cleanObj.layer = layers_1.AtemLLayer.AtemMEClean;\n                cleanObj.id = ''; // Force new id\n                cleanObj.metaData = _.clone(tlObj.metaData);\n                cleanObj.metaData.context = `Clean for ${tlObj.id}`;\n                cleanObj.classes = (_b = cleanObj.classes) === null || _b === void 0 ? void 0 : _b.filter(c => !c.match(`studio0_parent_`));\n                extraObjs.push(cleanObj);\n                if ((!isAdlib || piece.toBeQueued) &&\n                    'me' in tlObj.content &&\n                    (tlObj.content.me.input !== undefined || ((_c = tlObj.metaData) === null || _c === void 0 ? void 0 : _c.mediaPlayerSession) !== undefined)) {\n                    // Create a lookahead-lookahead object for this me-program\n                    const lookaheadObj = tv2_common_1.literal({\n                        id: '',\n                        enable: { start: 0 },\n                        priority: tlObj.holdMode === tv_automation_sofie_blueprints_integration_1.TimelineObjHoldMode.ONLY ? 5 : 0,\n                        layer: layers_1.AtemLLayer.AtemAuxLookahead,\n                        holdMode: tlObj.holdMode,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                            aux: {\n                                input: tlObj.content.me.input !== undefined ? tlObj.content.me.input : config.studio.AtemSource.Default\n                            }\n                        },\n                        metaData: {\n                            context: `Lookahead-lookahead for ${tlObj.id}`,\n                            mediaPlayerSession: (_d = tlObj.metaData) === null || _d === void 0 ? void 0 : _d.mediaPlayerSession // TODO - does this work the same?\n                        }\n                    });\n                    extraObjs.push(lookaheadObj);\n                }\n                // mix minus\n                let mixMinusSource; // TODO - what about clips?\n                // tslint:disable-next-line:prefer-conditional-expression\n                if ((_e = tlObj.classes) === null || _e === void 0 ? void 0 : _e.includes('MIX_MINUS_OVERRIDE_DSK')) {\n                    mixMinusSource = (_f = tlObj.content.dsk.sources) === null || _f === void 0 ? void 0 : _f.fillSource;\n                }\n                else {\n                    mixMinusSource = tlObj.content.me.input;\n                }\n                if (piece.sourceLayerId === layers_2.SourceLayer.PgmLive && !piece.name.match(/EVS ?\\d+/i)) {\n                    // Never show live sources\n                    mixMinusSource = null;\n                }\n                if (piece.sourceLayerId === layers_2.SourceLayer.PgmDVE) {\n                    // If the dve has a single kam, show that. Otherwise fallback to default\n                    const pieceContent = piece.content;\n                    const kamSources = _.filter(pieceContent.boxSourceConfiguration || [], box => box.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA);\n                    mixMinusSource = kamSources.length === 1 ? Number(kamSources[0].switcherInput) : null;\n                }\n                if (mixMinusSource !== null) {\n                    const mixMinusObj = tv2_common_1.literal(Object.assign(Object.assign({}, _.omit(tlObj, 'content')), tv2_common_1.literal({\n                        id: '',\n                        layer: layers_1.AtemLLayer.AtemAuxVideoMixMinus,\n                        priority: ((_g = tlObj.classes) === null || _g === void 0 ? void 0 : _g.includes('MIX_MINUS_OVERRIDE_DSK')) ? 10 : tlObj.priority,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                            aux: {\n                                input: mixMinusSource !== undefined ? mixMinusSource : config.studio.AtemSource.MixMinusDefault\n                            }\n                        },\n                        metaData: Object.assign(Object.assign({}, tlObj.metaData), { context: `Mix-minus for ${tlObj.id}` })\n                    })));\n                    mixMinusObj.classes = (_h = mixMinusObj.classes) === null || _h === void 0 ? void 0 : _h.filter(c => !c.match(`studio0_parent_`) && !c.match('PLACEHOLDER_OBJECT_REMOVEME'));\n                    extraObjs.push(mixMinusObj);\n                }\n            }\n        });\n        const atemDskObjs = piece.content.timelineObjects.filter(obj => obj.content && obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.ATEM && obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK);\n        _.each(atemDskObjs, tlObj => {\n            if (tlObj.layer === layers_1.AtemLLayer.AtemDSKEffect) {\n                const newProps = _.pick(tlObj.content.dsk, 'onAir');\n                if (_.isEqual(newProps, tlObj.content.dsk)) {\n                    context.warning(`Unhandled Keyer properties for Clean keyer, it may look wrong`);\n                }\n                const cleanObj = tv2_common_1.literal(Object.assign(Object.assign({}, _.omit(tlObj, 'content')), tv2_common_1.literal({\n                    id: '',\n                    layer: layers_1.AtemLLayer.AtemCleanUSKEffect,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                        me: {\n                            upstreamKeyers: [\n                                {\n                                    upstreamKeyerId: 0\n                                },\n                                Object.assign({ upstreamKeyerId: 1 }, newProps)\n                            ]\n                        }\n                    }\n                })));\n                extraObjs.push(cleanObj);\n            }\n        });\n        piece.content.timelineObjects = piece.content.timelineObjects.concat(extraObjs);\n        piece.content.timelineObjects = piece.content.timelineObjects.filter((obj) => { var _a; return !((_a = obj.classes) === null || _a === void 0 ? void 0 : _a.includes('PLACEHOLDER_OBJECT_REMOVEME')); });\n    }\n}\nexports.postProcessPieceTimelineObjects = postProcessPieceTimelineObjects;\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst layers_1 = __webpack_require__(6);\nfunction EvaluateDesign(_config, context, pieces, adlibPieces, partId, parsedCue, adlib, rank) {\n    if (!parsedCue.design || !parsedCue.design.length) {\n        context.warning(`No valid design found for ${parsedCue.design}`);\n        return;\n    }\n    if (adlib) {\n        adlibPieces.push(tv2_common_1.literal({\n            _rank: rank || 0,\n            externalId: partId,\n            name: parsedCue.design,\n            outputLayerId: 'sec',\n            sourceLayerId: layers_1.SourceLayer.PgmDesign,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n            content: tv2_common_1.literal({\n                fileName: parsedCue.design,\n                path: parsedCue.design,\n                timelineObjects: _.compact([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: { start: 0 },\n                        priority: 100,\n                        layer: tv2_common_1.GraphicLLayer.GraphicLLayerDesign,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                            templateName: parsedCue.design,\n                            templateData: []\n                        }\n                    })\n                ])\n            })\n        }));\n    }\n    else {\n        pieces.push(tv2_common_1.literal({\n            _id: '',\n            externalId: partId,\n            name: parsedCue.design,\n            enable: {\n                start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n            },\n            outputLayerId: 'sec',\n            sourceLayerId: layers_1.SourceLayer.PgmDesign,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n            content: tv2_common_1.literal({\n                fileName: parsedCue.design,\n                path: parsedCue.design,\n                timelineObjects: _.compact([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: { start: 0 },\n                        priority: 100,\n                        layer: tv2_common_1.GraphicLLayer.GraphicLLayerDesign,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                            templateName: parsedCue.design,\n                            templateData: []\n                        }\n                    })\n                ])\n            })\n        }));\n    }\n}\nexports.EvaluateDesign = EvaluateDesign;\n\n\n/***/ }),\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst config_manifests_1 = __webpack_require__(97);\nconst migrations_1 = __webpack_require__(105);\nconst tv2_common_1 = __webpack_require__(0);\nconst onTimelineGenerate_1 = __webpack_require__(111);\nconst getRundown_1 = __webpack_require__(115);\nconst getSegment_1 = __webpack_require__(116);\nconst onAsRunEvent_1 = __webpack_require__(134);\nconst manifest = {\n    blueprintType: tv_automation_sofie_blueprints_integration_1.BlueprintManifestType.SHOWSTYLE,\n    blueprintVersion: \"0.1.0+v1.1.9\",\n    integrationVersion: \"0.0.0\",\n    TSRVersion: \"0.0.0\",\n    minimumCoreVersion: '1.2.0',\n    getShowStyleVariantId: getRundown_1.getShowStyleVariantId,\n    getRundown: getRundown_1.getRundown,\n    getSegment: getSegment_1.getSegment,\n    onAsRunEvent: onAsRunEvent_1.default,\n    onTimelineGenerate: onTimelineGenerate_1.onTimelineGenerateAFVD,\n    getEndStateForPart: tv2_common_1.getEndStateForPart,\n    showStyleConfigManifest: config_manifests_1.showStyleConfigManifest,\n    showStyleMigrations: migrations_1.showStyleMigrations\n};\nexports.default = manifest;\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst migrations_1 = __webpack_require__(84);\nconst util_1 = __webpack_require__(80);\nconst util_2 = __webpack_require__(106);\nconst variants_defaults_1 = __webpack_require__(110);\n/**\n * Versions:\n * 0.1.0: Core 0.24.0\n */\nexports.showStyleMigrations = tv2_common_1.literal([\n    // Fill in any layers that did not exist before\n    // Note: These should only be run as the very final step of all migrations. otherwise they will add items too early, and confuse old migrations\n    ...variants_defaults_1.getCreateVariantMigrationSteps(),\n    ...util_2.getSourceLayerDefaultsMigrationSteps(\"0.1.0+v1.1.9\"),\n    ...util_2.getOutputLayerDefaultsMigrationSteps(\"0.1.0+v1.1.9\"),\n    ...util_2.getRuntimeArgumentsDefaultsMigrationSteps(\"0.1.0+v1.1.9\"),\n    ...util_1.remapTableColumnValues(\"0.1.0+v1.1.9\", 'GFXTemplates', 'LayerMapping', migrations_1.remapVizLLayer),\n    // Rename \"viz-d-ovl\" to \"OVL1\"\n    ...util_1.remapTableColumnValues(\"0.1.0+v1.1.9\", 'GFXTemplates', 'VizDestination', migrations_1.remapVizDOvl)\n]);\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst outputlayer_defaults_1 = __webpack_require__(107);\nconst runtime_arguments_defaults_1 = __webpack_require__(108);\nconst sourcelayer_defaults_1 = __webpack_require__(109);\nfunction getSourceLayerDefaultsMigrationSteps(versionStr) {\n    return _.compact(_.map(sourcelayer_defaults_1.default, (defaultVal) => {\n        return tv2_common_1.literal({\n            id: `sourcelayer.defaults.${defaultVal._id}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                if (!context.getSourceLayer(defaultVal._id)) {\n                    return `SourceLayer \"${defaultVal._id}\" doesn't exist on ShowBaseStyle`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                if (!context.getSourceLayer(defaultVal._id)) {\n                    context.insertSourceLayer(defaultVal._id, defaultVal);\n                }\n            }\n        });\n    }));\n}\nexports.getSourceLayerDefaultsMigrationSteps = getSourceLayerDefaultsMigrationSteps;\nfunction getOutputLayerDefaultsMigrationSteps(versionStr) {\n    return _.compact(_.map(outputlayer_defaults_1.default, (defaultVal) => {\n        return tv2_common_1.literal({\n            id: `outputlayer.defaults.${defaultVal._id}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                if (!context.getOutputLayer(defaultVal._id)) {\n                    return `OutputLayer \"${defaultVal._id}\" doesn't exist on ShowBaseStyle`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                if (!context.getOutputLayer(defaultVal._id)) {\n                    context.insertOutputLayer(defaultVal._id, defaultVal);\n                }\n            }\n        });\n    }));\n}\nexports.getOutputLayerDefaultsMigrationSteps = getOutputLayerDefaultsMigrationSteps;\nfunction getRuntimeArgumentsDefaultsMigrationSteps(versionStr) {\n    return _.compact(_.map(runtime_arguments_defaults_1.default, (defaultVal) => {\n        return tv2_common_1.literal({\n            id: `runtimeArguments.defaults.${defaultVal._id}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                if (!context.getRuntimeArgument(defaultVal._id)) {\n                    return `RuntimeArgument \"${defaultVal._id}\" doesn't exist on ShowBaseStyle`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                if (!context.getRuntimeArgument(defaultVal._id)) {\n                    context.insertRuntimeArgument(defaultVal._id, defaultVal);\n                }\n            }\n        });\n    }));\n}\nexports.getRuntimeArgumentsDefaultsMigrationSteps = getRuntimeArgumentsDefaultsMigrationSteps;\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nexports.default = tv2_common_1.literal([\n    {\n        _id: 'overlay',\n        name: 'OVERLAY',\n        isPGM: false,\n        _rank: 10,\n        isDefaultCollapsed: true\n    },\n    {\n        _id: 'jingle',\n        name: 'JINGLE',\n        isPGM: false,\n        _rank: 19\n    },\n    {\n        _id: 'pgm',\n        name: 'PGM',\n        isPGM: true,\n        _rank: 20,\n        isFlattened: true\n    },\n    {\n        _id: 'musik',\n        name: 'MUSIK',\n        isPGM: false,\n        _rank: 22\n    },\n    {\n        _id: 'manus',\n        name: 'MANUS',\n        isPGM: false,\n        _rank: 23\n    },\n    {\n        _id: 'sec',\n        name: 'SEC',\n        isPGM: false,\n        _rank: 30,\n        isDefaultCollapsed: true\n    },\n    {\n        _id: 'aux',\n        name: 'AUX',\n        isPGM: false,\n        _rank: 40,\n        isDefaultCollapsed: true\n    }\n]);\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nexports.default = tv2_common_1.literal([\n    {\n        _id: 'x-mix-10',\n        label: 'Dissolve 10f',\n        hotkeys: 'x',\n        property: 'transition-mix',\n        value: '10'\n    }\n]);\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(6);\n// OVERLAY group\nconst OVERLAY = [\n    {\n        _id: layers_1.SourceLayer.PgmGraphicsIdent,\n        _rank: 10,\n        name: 'Ident',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',q,ctrl+shift+a',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmGraphicsIdentPersistent,\n        _rank: 10,\n        name: 'Ident Persistent',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',q,ctrl+shift+a',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmGraphicsTop,\n        _rank: 20,\n        name: 'Top',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',q,ctrl+shift+s',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmGraphicsLower,\n        _rank: 30,\n        name: 'Bund',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'a,s,d,f,g',\n        clearKeyboardHotkey: ',q,ctrl+shift+d',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmGraphicsHeadline,\n        _rank: 40,\n        name: 'Headline',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',q,ctrl+shift+f',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmGraphicsTema,\n        _rank: 50,\n        name: 'Tema',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',q,ctrl+shift+g',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmGraphicsOverlay,\n        _rank: 55,\n        name: 'Overlay',\n        abbreviation: 'O',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',q',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmPilotOverlay,\n        _rank: 60,\n        name: 'Overlay',\n        abbreviation: 'O',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',q',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    }\n];\n// JINGLE group\nconst JINGLE = [\n    {\n        _id: layers_1.SourceLayer.PgmJingle,\n        _rank: 10,\n        name: 'Jingle',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.TRANSITION,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// PGM group\nconst PGM = [\n    {\n        _id: layers_1.SourceLayer.PgmCam,\n        _rank: 0,\n        name: 'Kam',\n        abbreviation: 'K',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA,\n        exclusiveGroup: 'me1',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'f1,f2,f3,f4,ctrl+shift+alt+c,shift+ctrl+f1,shift+ctrl+f2,shift+ctrl+f3,shift+ctrl+f4,shift+ctrl+f5',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.SourceLayer.PgmLive,\n        _rank: 0,\n        name: 'Live',\n        abbreviation: 'L',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE,\n        exclusiveGroup: 'me1',\n        isRemoteInput: true,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '1,2,3,4,5,6,7,8,9,0',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: true,\n        stickyOriginalOnly: true,\n        activateStickyKeyboardHotkey: 'ctrl+shift+alt+b',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.SourceLayer.PgmDVE,\n        _rank: 0,\n        name: 'DVE',\n        abbreviation: 'D',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.SPLITS,\n        exclusiveGroup: 'me1',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: true,\n        stickyOriginalOnly: true,\n        activateStickyKeyboardHotkey: 'f10',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.SourceLayer.PgmDVEAdlib,\n        _rank: 0,\n        name: 'DVE',\n        abbreviation: 'D',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.SPLITS,\n        exclusiveGroup: 'me1',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'm,comma,.,n',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.SourceLayer.PgmDVEBox1,\n        _rank: 0,\n        name: 'DVE INP1',\n        abbreviation: 'DB1',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'shift+f1,shift+f2,shift+f3,shift+f4,shift+f5,shift+1,shift+2,shift+3,shift+4,shift+5,shift+6,shift+7,shift+8,shift+9,shift+0,shift+e,shift+d',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmDVEBox2,\n        _rank: 0,\n        name: 'DVE INP2',\n        abbreviation: 'DB2',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'ctrl+f1,ctrl+f2,ctrl+f3,ctrl+shift+alt+f4,ctrl+f5,ctrl+1,ctrl+2,ctrl+3,ctrl+4,ctrl+5,ctrl+6,ctrl+7,ctrl+8,ctrl+9,ctrl+0,ctrl+e,ctrl+d',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmDVEBox3,\n        _rank: 0,\n        name: 'DVE INP3',\n        abbreviation: 'DB3',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmDVEBox4,\n        _rank: 0,\n        name: 'DVE INP4',\n        abbreviation: 'DB4',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmServer,\n        _rank: 0,\n        name: 'Server',\n        abbreviation: 'S',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.VT,\n        exclusiveGroup: 'me1',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.SourceLayer.PgmVoiceOver,\n        _rank: 0,\n        name: 'Voice Over',\n        abbreviation: 'VO',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.LIVE_SPEAK,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.SourceLayer.PgmPilot,\n        _rank: 0,\n        name: 'Full',\n        abbreviation: 'F',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: 'me1',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.SourceLayer.PgmGraphicsTLF,\n        _rank: 0,\n        name: 'Telefon',\n        abbreviation: 'TLF',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: 'me1',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'i',\n        clearKeyboardHotkey: ',q',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: true,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.SourceLayer.PgmDelayed,\n        _rank: 0,\n        name: 'EVS',\n        abbreviation: 'EVS',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.VT,\n        exclusiveGroup: 'me1',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'e,r,u,i',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.SourceLayer.PgmContinuity,\n        _rank: 0,\n        name: 'CONTINUITY',\n        abbreviation: 'CONTINUITY',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.METADATA,\n        exclusiveGroup: 'me1',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    }\n];\n// MUSIK group\nconst MUSIK = [\n    {\n        _id: layers_1.SourceLayer.PgmAudioBed,\n        _rank: 30,\n        name: 'Audio bed',\n        abbreviation: 'VO',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.AUDIO,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// MANUS group\nconst MANUS = [\n    // {\n    // \t_id: SourceLayer.PgmSlutord,\n    // \t_rank: 10,\n    // \tname: 'Slutord',\n    // \tabbreviation: '',\n    // \ttype: SourceLayerType.SCRIPT,\n    // \texclusiveGroup: '',\n    // \tisRemoteInput: false,\n    // \tisGuestInput: false,\n    // \tactivateKeyboardHotkeys: '',\n    // \tclearKeyboardHotkey: ',',\n    // \tassignHotkeysToGlobalAdlibs: false,\n    // \tisSticky: false,\n    // \tactivateStickyKeyboardHotkey: '',\n    // \tisQueueable: false,\n    // \tisHidden: false,\n    // \tallowDisable: false,\n    // \tonPresenterScreen: false,\n    //\n    //\n    // },\n    {\n        _id: layers_1.SourceLayer.PgmScript,\n        _rank: 20,\n        name: 'Manus',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.SCRIPT,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// SEC group\nconst SEC = [\n    {\n        _id: layers_1.SourceLayer.PgmAdlibVizCmd,\n        _rank: 10,\n        name: 'Viz Full',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: ',space,,q',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmDSK,\n        _rank: 20,\n        name: 'DSK off',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: ',',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmDesign,\n        _rank: 30,\n        name: 'VIZ Design',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'shift+a',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmDVEBackground,\n        _rank: 40,\n        name: 'DVE Background',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.PgmSisyfosAdlibs,\n        _rank: 50,\n        name: 'Sisyfos Adlibs',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'ctrl+shift+alt+e,ctrl+shift+alt+d',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.WallGraphics,\n        _rank: 60,\n        name: 'Wall Graphics',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// AUX group\nconst AUX = [\n    {\n        _id: layers_1.SourceLayer.VizFullIn1,\n        _rank: 10,\n        name: 'Viz Full',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'ctrl+shift+alt+f',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.SourceLayer.AuxStudioScreen,\n        _rank: 20,\n        name: 'Studio',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'shift+ctrl+1,shift+ctrl+2,shift+ctrl+3,shift+ctrl+4,shift+ctrl+5,shift+ctrl+6,shift+ctrl+7,shift+ctrl+8,shift+ctrl+9,shift+ctrl+0,shift+ctrl+e',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\nexports.default = tv2_common_1.literal([...OVERLAY, ...JINGLE, ...PGM, ...MUSIK, ...MANUS, ...SEC, ...AUX]);\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nexports.showVariants = tv2_common_1.literal({\n    oddasat: {\n        name: 'Main'\n    }\n});\nfunction getCreateVariantMigrationSteps() {\n    return _.keys(exports.showVariants).map(key => {\n        return tv2_common_1.literal({\n            id: `variant.${key}`,\n            version: \"0.1.0+v1.1.9\",\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                const variant = context.getVariant(key);\n                if (!variant) {\n                    return `Variant \"${key}\" doesn't exist`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                const variant = context.getVariant(key);\n                if (!variant) {\n                    const region = exports.showVariants[key];\n                    context.insertVariant(key, {\n                        name: region.name\n                    });\n                    // Set/update config fields here\n                    // context.setVariantConfig(key, 'RegionCode', region.regionCode)\n                }\n            }\n        });\n    });\n}\nexports.getCreateVariantMigrationSteps = getCreateVariantMigrationSteps;\n\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst config_1 = __webpack_require__(89);\nconst layers_1 = __webpack_require__(7);\nfunction onTimelineGenerateAFVD(context, timeline, previousPersistentState, previousPartEndState, resolvedPieces) {\n    return tv2_common_1.onTimelineGenerate(context, timeline, previousPersistentState, previousPartEndState, resolvedPieces, config_1.parseConfig, {\n        Caspar: {\n            ClipPending: layers_1.CasparLLayer.CasparPlayerClipPending,\n            PlayerClip: layers_1.CasparPlayerClip\n        },\n        Sisyfos: {\n            ClipPending: layers_1.SisyfosLLAyer.SisyfosSourceClipPending,\n            PlayerA: layers_1.SisyfosLLAyer.SisyfosSourceServerA,\n            PlayerB: layers_1.SisyfosLLAyer.SisyfosSourceServerB\n        }\n    }, layers_1.CasparLLayer.CasparPlayerClipPending);\n}\nexports.onTimelineGenerateAFVD = onTimelineGenerateAFVD;\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst objectPath = __webpack_require__(90);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst sisyfos_1 = __webpack_require__(113);\nconst config_manifests_1 = __webpack_require__(81);\nconst sources_1 = __webpack_require__(114);\nfunction applyToConfig(context, config, manifest, sourceName, overrides) {\n    _.each(manifest, (val) => {\n        let newVal = val.defaultVal;\n        const overrideVal = overrides[val.id];\n        if (overrideVal !== undefined) {\n            switch (val.type) {\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.ENUM:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.SELECT:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.SOURCE_LAYERS:\n                    newVal = overrideVal;\n                    break;\n                default:\n                    tv2_common_1.assertUnreachable(val);\n                    context.warning('Unknown config field type: ' + val);\n                    break;\n            }\n        }\n        else if (val.required) {\n            context.warning(`Required config not defined in ${sourceName}: \"${val.name}\"`);\n        }\n        objectPath.set(config, val.id, newVal);\n    });\n}\nexports.applyToConfig = applyToConfig;\nfunction defaultStudioConfig(context) {\n    const config = {\n        studio: {},\n        showStyle: {},\n        sources: [],\n        mediaPlayers: [],\n        liveAudio: [],\n        stickyLayers: []\n    };\n    // Load values injected by core, not via manifest\n    _.each(config_manifests_1.CORE_INJECTED_KEYS, (id) => {\n        // Use the key as the value. Good enough for now\n        objectPath.set(config.studio, id, id);\n    });\n    // Load the config\n    applyToConfig(context, config.studio, config_manifests_1.studioConfigManifest, 'Studio', {});\n    // applyToConfig(context, config.showStyle, showStyleConfigManifest, 'ShowStyle', {})\n    config.sources = sources_1.parseSources(config.studio);\n    config.mediaPlayers = sources_1.parseMediaPlayers(config.studio);\n    config.liveAudio = sisyfos_1.getLiveAudioLayers(config.studio);\n    config.stickyLayers = sisyfos_1.getStickyLayers(config.studio);\n    return config;\n}\nexports.defaultStudioConfig = defaultStudioConfig;\nfunction parseStudioConfig(context) {\n    const config = {\n        studio: {},\n        showStyle: {},\n        sources: [],\n        mediaPlayers: [],\n        liveAudio: [],\n        stickyLayers: []\n    };\n    // Load values injected by core, not via manifest\n    const studioConfig = context.getStudioConfig();\n    _.each(config_manifests_1.CORE_INJECTED_KEYS, (id) => {\n        objectPath.set(config.studio, id, studioConfig[id]);\n    });\n    // Load the config\n    applyToConfig(context, config.studio, config_manifests_1.studioConfigManifest, 'Studio', studioConfig);\n    // applyToConfig(context, config.showStyle, showStyleConfigManifest, 'ShowStyle', context.getShowStyleConfig())\n    config.sources = sources_1.parseSources(config.studio);\n    config.mediaPlayers = sources_1.parseMediaPlayers(config.studio);\n    config.liveAudio = sisyfos_1.getLiveAudioLayers(config.studio);\n    config.stickyLayers = sisyfos_1.getStickyLayers(config.studio);\n    return config;\n}\nexports.parseStudioConfig = parseStudioConfig;\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nfunction GetStickyForPiece(config, layers) {\n    return tv2_common_1.literal({\n        stickySisyfosLevels: _.object(layers\n            .filter(layer => config.stickyLayers.indexOf(layer.layer) !== -1)\n            .map(layer => {\n            return [\n                layer.layer,\n                {\n                    value: layer.isPgm,\n                    followsPrevious: false\n                }\n            ];\n        }))\n    });\n}\nexports.GetStickyForPiece = GetStickyForPiece;\nfunction getStickyLayers(studioConfig) {\n    return [...studioConfig.StudioMics, ...getLiveAudioLayers(studioConfig)];\n}\nexports.getStickyLayers = getStickyLayers;\nfunction getLiveAudioLayers(studioConfig) {\n    const res = new Set();\n    _.each([studioConfig.SourcesRM, studioConfig.SourcesSkype], sources => {\n        _.each(sources, src => {\n            if (src.SisyfosLayers) {\n                _.each(src.SisyfosLayers, layer => {\n                    res.add(layer);\n                });\n            }\n        });\n    });\n    return Array.from(res);\n}\nexports.getLiveAudioLayers = getLiveAudioLayers;\n\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nfunction parseMediaPlayers(studioConfig) {\n    return studioConfig.ABMediaPlayers.map(player => ({ id: player.SourceName, val: player.AtemSource.toString() }));\n}\nexports.parseMediaPlayers = parseMediaPlayers;\nfunction parseSources(studioConfig) {\n    const res = [];\n    _.each(studioConfig.SourcesRM, rm => {\n        res.push({\n            type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE,\n            id: rm.SourceName,\n            port: rm.AtemSource,\n            sisyfosLayers: rm.SisyfosLayers,\n            useStudioMics: rm.StudioMics\n        });\n    });\n    _.each(studioConfig.SourcesCam, kam => {\n        res.push({\n            type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA,\n            id: kam.SourceName,\n            port: kam.AtemSource,\n            sisyfosLayers: kam.SisyfosLayers,\n            useStudioMics: kam.StudioMics\n        });\n    });\n    _.each(studioConfig.SourcesSkype, sk => {\n        res.push({\n            type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE,\n            id: `S${sk.SourceName}`,\n            port: sk.AtemSource,\n            sisyfosLayers: sk.SisyfosLayers,\n            useStudioMics: sk.StudioMics\n        });\n    });\n    _.each(studioConfig.SourcesDelayedPlayback, dp => {\n        res.push({\n            type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE,\n            id: `DP${dp.SourceName}`,\n            port: dp.AtemSource,\n            sisyfosLayers: dp.SisyfosLayers,\n            useStudioMics: dp.StudioMics\n        });\n    });\n    return res;\n}\nexports.parseSources = parseSources;\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst _ = __webpack_require__(3);\nconst layers_1 = __webpack_require__(7);\nconst sisyfosChannels_1 = __webpack_require__(91);\nconst atem_1 = __webpack_require__(11);\nconst config_1 = __webpack_require__(89);\nconst dve_1 = __webpack_require__(92);\nconst layers_2 = __webpack_require__(6);\nconst postProcessTimelineObjects_1 = __webpack_require__(98);\nfunction getShowStyleVariantId(_context, showStyleVariants, _ingestRundown) {\n    const variant = _.first(showStyleVariants);\n    if (variant) {\n        return variant._id;\n    }\n    return null;\n}\nexports.getShowStyleVariantId = getShowStyleVariantId;\nfunction getRundown(context, ingestRundown) {\n    const config = config_1.parseConfig(context);\n    let startTime = 0;\n    let endTime = 0;\n    // Set start / end times\n    if ('payload' in ingestRundown) {\n        if (ingestRundown.payload.expectedStart) {\n            startTime = Number(ingestRundown.payload.expectedStart);\n        }\n        if (ingestRundown.payload.expectedEnd) {\n            endTime = Number(ingestRundown.payload.expectedEnd);\n        }\n    }\n    // Can't end before we begin\n    if (endTime < startTime) {\n        endTime = startTime;\n    }\n    return {\n        rundown: tv2_common_1.literal({\n            externalId: ingestRundown.externalId,\n            name: ingestRundown.name,\n            expectedStart: startTime,\n            expectedDuration: endTime - startTime\n        }),\n        globalAdLibPieces: getGlobalAdLibPiecesAFKD(context, config),\n        baseline: getBaseline(config)\n    };\n}\nexports.getRundown = getRundown;\nfunction getGlobalAdLibPiecesAFKD(context, config) {\n    function makeSsrcAdlibBoxes(layer, port, mediaPlayer) {\n        // Generate boxes with classes to map across each layer\n        const boxObjs = _.map(dve_1.boxMappings, (m, i) => tv2_common_1.literal({\n            id: '',\n            enable: { while: `.${layer}_${m}` },\n            priority: 1,\n            layer: m,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC,\n                ssrc: {\n                    boxes: [\n                        // Pad until we are on the right box\n                        ..._.range(i).map(() => ({})),\n                        // Add the source setter\n                        { source: port }\n                    ]\n                }\n            },\n            metaData: {\n                dveAdlibEnabler: `.${layer}_${m} & !.${tv2_constants_1.ControlClasses.DVEOnAir}`,\n                mediaPlayerSession: mediaPlayer ? 'dve_placeholder' : undefined\n            }\n        }));\n        const audioWhile = boxObjs.map(obj => obj.enable.while).join(' | ');\n        return {\n            boxObjs,\n            audioWhile: `(\\$${layers_2.SourceLayer.PgmDVE} | \\$${layers_2.SourceLayer.PgmDVEAdlib}) & (${audioWhile})`\n        };\n    }\n    function makeCameraAdLibs(info, rank, preview = false) {\n        const res = [];\n        const camSisyfos = tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, `Kamera ${info.id}`);\n        res.push({\n            externalId: 'cam',\n            name: `Kamera ${info.id}`,\n            _rank: rank,\n            sourceLayerId: layers_2.SourceLayer.PgmCam,\n            outputLayerId: 'pgm',\n            expectedDuration: 0,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            toBeQueued: preview,\n            metaData: tv2_common_1.GetCameraMetaData(config, tv2_common_1.GetLayersForCamera(config, info)),\n            content: {\n                timelineObjects: _.compact([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: { while: '1' },\n                        priority: 1,\n                        layer: layers_1.AtemLLayer.AtemMEProgram,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: info.port,\n                                transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                            }\n                        },\n                        classes: ['adlib_deparent']\n                    }),\n                    ...camSisyfos,\n                    ...config.stickyLayers\n                        .filter(layer => camSisyfos.map(obj => obj.layer).indexOf(layer) === -1)\n                        .map(layer => {\n                        return tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 1,\n                            layer,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: 0\n                            },\n                            metaData: {\n                                sisyfosPersistLevel: true\n                            }\n                        });\n                    }),\n                    // Force server to be muted (for adlibbing over DVE)\n                    ...[\n                        layers_1.SisyfosLLAyer.SisyfosSourceClipPending,\n                        layers_1.SisyfosLLAyer.SisyfosSourceServerA,\n                        layers_1.SisyfosLLAyer.SisyfosSourceServerB\n                    ].map(layer => {\n                        return tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 2,\n                            layer,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: 0\n                            }\n                        });\n                    })\n                ])\n            }\n        });\n        return res;\n    }\n    // ssrc box\n    function makeCameraAdlibBoxes(info, rank) {\n        const res = [];\n        _.forEach(_.values(dve_1.boxLayers), (layer, i) => {\n            const { boxObjs, audioWhile } = makeSsrcAdlibBoxes(layer, info.port);\n            res.push({\n                externalId: 'cam',\n                name: info.id + '',\n                _rank: rank * 100 + i,\n                sourceLayerId: layer,\n                outputLayerId: 'sec',\n                expectedDuration: 0,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n                content: {\n                    timelineObjects: _.compact([\n                        ...boxObjs,\n                        ...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, `Kamera ${info.id}`, { while: audioWhile })\n                    ])\n                }\n            });\n        });\n        return res;\n    }\n    function makeEVSAdLibs(info, rank, vo) {\n        const res = [];\n        res.push({\n            externalId: 'delayed',\n            name: `Delayed Playback`,\n            _rank: rank,\n            sourceLayerId: layers_2.SourceLayer.PgmDelayed,\n            outputLayerId: 'pgm',\n            expectedDuration: 0,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            toBeQueued: true,\n            metaData: tv2_common_1.GetEksternMetaData(config.stickyLayers, config.studio.StudioMics, info.sisyfosLayers),\n            content: {\n                timelineObjects: _.compact([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: { while: '1' },\n                        priority: 1,\n                        layer: layers_1.AtemLLayer.AtemMEProgram,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: info.port,\n                                transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                            }\n                        },\n                        classes: ['adlib_deparent']\n                    }),\n                    ...(info.sisyfosLayers || []).map(l => {\n                        return tv2_common_1.literal({\n                            id: '',\n                            enable: { while: '1' },\n                            priority: 1,\n                            layer: l,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: vo ? 2 : 1\n                            }\n                        });\n                    }),\n                    ...config.stickyLayers\n                        .filter(layer => !info.sisyfosLayers || !info.sisyfosLayers.includes(layer))\n                        .map(layer => {\n                        return tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 1,\n                            layer,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: 0\n                            },\n                            metaData: {\n                                sisyfosPersistLevel: true\n                            }\n                        });\n                    }),\n                    ...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, 'evs')\n                ])\n            }\n        });\n        return res;\n    }\n    // evs ssrc box\n    function makeEvsAdlibBoxes(info, rank, vo = false) {\n        const res = [];\n        _.forEach(_.values(dve_1.boxLayers), (layer, i) => {\n            const { boxObjs, audioWhile } = makeSsrcAdlibBoxes(layer, info.port);\n            res.push({\n                externalId: 'evs',\n                name: info.id + '',\n                _rank: rank * 100 + i,\n                sourceLayerId: layer,\n                outputLayerId: 'sec',\n                expectedDuration: 0,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n                content: {\n                    timelineObjects: _.compact([\n                        ...boxObjs,\n                        ...tv2_common_1.GetLayersForEkstern(context, config.sources, `Live ${info.id}`).map(l => {\n                            return tv2_common_1.literal({\n                                id: '',\n                                enable: { while: audioWhile },\n                                priority: 1,\n                                layer: l,\n                                content: {\n                                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                    isPgm: vo === true ? 2 : 1\n                                }\n                            });\n                        })\n                    ])\n                }\n            });\n        });\n        return res;\n    }\n    function makeRemoteAdLibs(info, rank) {\n        const res = [];\n        const eksternSisyfos = [\n            ...tv2_common_1.GetSisyfosTimelineObjForEkstern(context, config.sources, `Live ${info.id}`, tv2_common_1.GetLayersForEkstern),\n            ...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, 'telefon')\n        ];\n        res.push({\n            externalId: 'live',\n            name: `Ekstern ${info.id}`,\n            _rank: rank,\n            sourceLayerId: layers_2.SourceLayer.PgmLive,\n            outputLayerId: 'pgm',\n            expectedDuration: 0,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            toBeQueued: true,\n            metaData: tv2_common_1.GetEksternMetaData(config.stickyLayers, config.studio.StudioMics, tv2_common_1.GetLayersForEkstern(context, config.sources, `Live ${info.id}`)),\n            content: {\n                timelineObjects: _.compact([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: { while: '1' },\n                        priority: 1,\n                        layer: layers_1.AtemLLayer.AtemMEProgram,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: info.port,\n                                transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                            }\n                        },\n                        classes: ['adlib_deparent']\n                    }),\n                    ...eksternSisyfos,\n                    ...config.stickyLayers\n                        .filter(layer => eksternSisyfos.map(obj => obj.layer).indexOf(layer) === -1)\n                        .filter(layer => config.liveAudio.indexOf(layer) === -1)\n                        .map(layer => {\n                        return tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 1,\n                            layer,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: 0\n                            },\n                            metaData: {\n                                sisyfosPersistLevel: true\n                            }\n                        });\n                    }),\n                    // Force server to be muted (for adlibbing over DVE)\n                    ...[\n                        layers_1.SisyfosLLAyer.SisyfosSourceClipPending,\n                        layers_1.SisyfosLLAyer.SisyfosSourceServerA,\n                        layers_1.SisyfosLLAyer.SisyfosSourceServerB\n                    ].map(layer => {\n                        return tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 2,\n                            layer,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: 0\n                            }\n                        });\n                    })\n                ])\n            }\n        });\n        return res;\n    }\n    // server ssrc box\n    function makeServerAdlibBoxes(info, rank) {\n        const res = [];\n        _.forEach(_.values(dve_1.boxLayers), (layer, i) => {\n            const { boxObjs, audioWhile } = makeSsrcAdlibBoxes(layer, info.port, true);\n            res.push({\n                externalId: info.id,\n                name: `Server`,\n                _rank: rank * 100 + i,\n                sourceLayerId: layer,\n                outputLayerId: 'sec',\n                expectedDuration: 0,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n                metaData: tv2_common_1.literal({\n                    mediaPlayerSessions: ['dve_placeholder']\n                }),\n                content: {\n                    timelineObjects: _.compact([\n                        ...boxObjs,\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                while: audioWhile\n                            },\n                            priority: 1,\n                            layer: layers_1.SisyfosLLAyer.SisyfosSourceClipPending,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: 1\n                            },\n                            metaData: {\n                                mediaPlayerSession: 'dve_placeholder'\n                            }\n                        }),\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                while: '1'\n                            },\n                            priority: 1,\n                            layer: layers_1.CasparLLayer.CasparPlayerClipPending,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: 'copy',\n                                noStarttime: true\n                            },\n                            metaData: {\n                                mediaPlayerSession: 'dve_placeholder'\n                            },\n                            classes: ['dve_placeholder']\n                        })\n                    ])\n                }\n            });\n        });\n        return res;\n    }\n    // ssrc box\n    function makeRemoteAdlibBoxes(info, rank) {\n        const res = [];\n        _.forEach(_.values(dve_1.boxLayers), (layer, i) => {\n            const { boxObjs, audioWhile } = makeSsrcAdlibBoxes(layer, info.port);\n            res.push({\n                externalId: 'cam',\n                name: info.id + '',\n                _rank: rank * 100 + i,\n                sourceLayerId: layer,\n                outputLayerId: 'sec',\n                expectedDuration: 0,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n                content: {\n                    timelineObjects: _.compact([\n                        ...boxObjs,\n                        ...tv2_common_1.GetSisyfosTimelineObjForEkstern(context, config.sources, `Live ${info.id}`, tv2_common_1.GetLayersForEkstern, {\n                            while: audioWhile\n                        }),\n                        ...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, 'telefon', { while: audioWhile })\n                    ])\n                }\n            });\n        });\n        return res;\n    }\n    // aux adlibs\n    function makeRemoteAuxStudioAdLibs(info, rank) {\n        const res = [];\n        res.push({\n            externalId: 'auxstudio',\n            name: info.id + '',\n            _rank: rank,\n            sourceLayerId: layers_2.SourceLayer.AuxStudioScreen,\n            outputLayerId: 'aux',\n            expectedDuration: 0,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n            metaData: tv2_common_1.GetEksternMetaData(config.stickyLayers, config.studio.StudioMics, tv2_common_1.GetLayersForEkstern(context, config.sources, `Live ${info.id}`)),\n            content: {\n                timelineObjects: _.compact([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: { while: '1' },\n                        priority: 1,\n                        layer: layers_1.AtemLLayer.AtemAuxAR,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                            aux: {\n                                input: info.port\n                            }\n                        }\n                    })\n                ])\n            }\n        });\n        return res;\n    }\n    const adlibItems = [];\n    let globalRank = 1000;\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA)\n        .slice(0, 5) // the first x cameras to create INP1/2/3 cam-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeCameraAdLibs(o, globalRank++));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA)\n        .slice(0, 5) // the first x cameras to create preview cam-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeCameraAdLibs(o, globalRank++, true));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA)\n        .slice(0, 5) // the first x cameras to create INP1/2/3 cam-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeCameraAdlibBoxes(o, globalRank++));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE && !u.id.match(`DP`))\n        .slice(0, 10) // the first x cameras to create live-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeRemoteAdLibs(o, globalRank++));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE && !u.id.match(`DP`))\n        .slice(0, 10) // the first x cameras to create INP1/2/3 live-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeRemoteAdlibBoxes(o, globalRank++));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE && !u.id.match(`DP`))\n        .slice(0, 10) // the first x lives to create AUX1 (studio) adlibs\n        .forEach(o => {\n        adlibItems.push(...makeRemoteAuxStudioAdLibs(o, globalRank++));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE && !!u.id.match(`DP`))\n        .forEach(o => {\n        adlibItems.push(...makeEVSAdLibs(o, globalRank++, false));\n        adlibItems.push(...makeEVSAdLibs(o, globalRank++, true));\n        adlibItems.push(...makeEvsAdlibBoxes(o, globalRank++));\n        adlibItems.push(...makeEvsAdlibBoxes(o, globalRank++, true));\n        adlibItems.push({\n            externalId: 'delayedaux',\n            name: `Delayed Playback in studio aux`,\n            _rank: globalRank++,\n            sourceLayerId: layers_2.SourceLayer.AuxStudioScreen,\n            outputLayerId: 'aux',\n            expectedDuration: 0,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n            content: {\n                timelineObjects: _.compact([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: { while: '1' },\n                        priority: 1,\n                        layer: layers_1.AtemLLayer.AtemAuxAR,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                            aux: {\n                                input: o.port\n                            }\n                        }\n                    })\n                ])\n            }\n        });\n        adlibItems.push({\n            externalId: 'delayedaux',\n            name: `Delayed Playback in viz aux`,\n            _rank: globalRank++,\n            sourceLayerId: layers_2.SourceLayer.VizFullIn1,\n            outputLayerId: 'aux',\n            expectedDuration: 0,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n            content: {\n                timelineObjects: _.compact([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: { while: '1' },\n                        priority: 1,\n                        layer: layers_1.AtemLLayer.AtemAuxVizOvlIn1,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                            aux: {\n                                input: o.port\n                            }\n                        }\n                    })\n                ])\n            }\n        });\n    });\n    adlibItems.push(...makeServerAdlibBoxes({ port: -1, id: 'Server' }, globalRank++));\n    // the rank (order) of adlibs on SourceLayer.PgmAdlibVizCmd is important, to ensure keyboard shortcuts\n    adlibItems.push({\n        externalId: 'loadGFX',\n        name: 'OVL INIT',\n        _rank: 100,\n        sourceLayerId: layers_2.SourceLayer.PgmAdlibVizCmd,\n        outputLayerId: 'sec',\n        expectedDuration: 1000,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal,\n        tags: ['static_button'],\n        content: {\n            timelineObjects: _.compact([\n                tv2_common_1.literal({\n                    id: 'loadAllElements',\n                    enable: {\n                        start: 0,\n                        duration: 1000\n                    },\n                    priority: 100,\n                    layer: tv2_common_1.GraphicLLayer.GraphicLLayerAdLibs,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.LOAD_ALL_ELEMENTS\n                    }\n                })\n            ])\n        }\n    });\n    // the rank (order) of adlibs on SourceLayer.PgmAdlibVizCmd is important, to ensure keyboard shortcuts\n    adlibItems.push({\n        externalId: 'continueForward',\n        name: 'GFX Continue',\n        _rank: 200,\n        sourceLayerId: layers_2.SourceLayer.PgmAdlibVizCmd,\n        outputLayerId: 'sec',\n        expectedDuration: 1000,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal,\n        tags: ['static_button'],\n        content: {\n            timelineObjects: _.compact([\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        start: 0,\n                        duration: 1000\n                    },\n                    priority: 100,\n                    layer: tv2_common_1.GraphicLLayer.GraphicLLayerAdLibs,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.CONTINUE,\n                        direction: 1,\n                        reference: tv2_common_1.GraphicLLayer.GraphicLLayerPilot\n                    }\n                })\n            ])\n        }\n    });\n    // the rank (order) of adlibs on SourceLayer.PgmAdlibVizCmd is important, to ensure keyboard shortcuts\n    adlibItems.push({\n        // TODO: This sould be an adlib function that clears the graphics sourcelayers as well\n        // See: https://app.asana.com/0/1144308403817753/1175546502993537/f\n        externalId: 'clearAllGFX',\n        name: 'GFX Clear',\n        _rank: 300,\n        sourceLayerId: layers_2.SourceLayer.PgmAdlibVizCmd,\n        outputLayerId: 'sec',\n        expectedDuration: 2000,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal,\n        tags: ['static_button'],\n        content: {\n            timelineObjects: _.compact([\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        start: 1000,\n                        duration: 1000\n                    },\n                    priority: 100,\n                    layer: tv2_common_1.GraphicLLayer.GraphicLLayerAdLibs,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.CLEAR_ALL_ELEMENTS,\n                        channelsToSendCommands: ['OVL1', 'FULL1', 'WALL1']\n                    }\n                })\n            ])\n        }\n    });\n    adlibItems.push({\n        externalId: 'sendAltud',\n        name: 'GFX Altud',\n        _rank: 400,\n        sourceLayerId: layers_2.SourceLayer.PgmAdlibVizCmd,\n        outputLayerId: 'sec',\n        expectedDuration: 2000,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal,\n        content: {\n            timelineObjects: _.compact([\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        start: 1000,\n                        duration: 1000\n                    },\n                    priority: 100,\n                    layer: tv2_common_1.GraphicLLayer.GraphicLLayerAdLibs,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.CLEAR_ALL_ELEMENTS\n                    }\n                })\n            ])\n        }\n    });\n    // the rank (order) of adlibs on SourceLayer.PgmAdlibVizCmd is important, to ensure keyboard shortcuts\n    // disabled since TV 2 says this doesn't work\n    // adlibItems.push({\n    // \texternalId: 'continueReverse',\n    // \tname: 'GFX Reverse',\n    // \t_rank: 300,\n    // \tsourceLayerId: SourceLayer.PgmAdlibVizCmd,\n    // \toutputLayerId: 'sec',\n    // \texpectedDuration: 1000,\n    // \tinfiniteMode: PieceLifespan.Normal,\n    // \tcontent: {\n    // \t\ttimelineObjects: _.compact<TSRTimelineObj>([\n    // \t\t\tliteral<TimelineObjVIZMSEElementContinue>({\n    // \t\t\t\tid: '',\n    // \t\t\t\tenable: {\n    // \t\t\t\t\tstart: 0,\n    // \t\t\t\t\tduration: 1000\n    // \t\t\t\t},\n    // \t\t\t\tlayer: GraphicLLayer.GraphicLLayerAdLibs,\n    // \t\t\t\tcontent: {\n    // \t\t\t\t\tdeviceType: DeviceType.VIZMSE,\n    // \t\t\t\t\ttype: TimelineContentTypeVizMSE.CONTINUE,\n    // \t\t\t\t\tdirection: -1,\n    // \t\t\t\t\treference: GraphicLLayer.GraphicLLayerPilot\n    // \t\t\t\t}\n    // \t\t\t})\n    // \t\t])\n    // \t}\n    // })\n    // the rank (order) of adlibs on SourceLayer.PgmAdlibVizCmd is important, to ensure keyboard shortcuts\n    adlibItems.push({\n        externalId: 'dskoff',\n        name: 'DSK OFF',\n        _rank: 400,\n        sourceLayerId: layers_2.SourceLayer.PgmDSK,\n        outputLayerId: 'sec',\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n        tags: ['static_button'],\n        content: {\n            timelineObjects: _.compact([\n                tv2_common_1.literal({\n                    id: '',\n                    enable: { while: '1' },\n                    priority: 10,\n                    layer: layers_1.AtemLLayer.AtemDSKGraphics,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK,\n                        dsk: {\n                            onAir: false\n                        }\n                    }\n                })\n            ])\n        }\n    });\n    adlibItems.push({\n        externalId: 'micUp',\n        name: 'Mics Up',\n        _rank: 500,\n        sourceLayerId: layers_2.SourceLayer.PgmSisyfosAdlibs,\n        outputLayerId: 'sec',\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n        tags: ['static_button'],\n        expectedDuration: 0,\n        content: {\n            timelineObjects: _.compact([\n                ...config.studio.StudioMics.map(layer => {\n                    return tv2_common_1.literal({\n                        id: '',\n                        enable: { start: 0 },\n                        priority: 1,\n                        layer,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                            isPgm: 1\n                        }\n                    });\n                })\n            ])\n        }\n    });\n    adlibItems.push({\n        externalId: 'micDown',\n        name: 'Mics Down',\n        _rank: 550,\n        sourceLayerId: layers_2.SourceLayer.PgmSisyfosAdlibs,\n        outputLayerId: 'sec',\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n        tags: ['static_button'],\n        expectedDuration: 0,\n        content: {\n            timelineObjects: _.compact([\n                ...config.studio.StudioMics.map(layer => {\n                    return tv2_common_1.literal({\n                        id: '',\n                        enable: { start: 0 },\n                        priority: 1,\n                        layer,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                            isPgm: 0\n                        }\n                    });\n                })\n            ])\n        }\n    });\n    adlibItems.push({\n        externalId: 'resyncSisyfos',\n        name: 'Resync Sisyfos',\n        _rank: 560,\n        sourceLayerId: layers_2.SourceLayer.PgmSisyfosAdlibs,\n        outputLayerId: 'sec',\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal,\n        tags: ['static_button'],\n        expectedDuration: 1000,\n        content: {\n            timelineObjects: _.compact([\n                tv2_common_1.literal({\n                    id: '',\n                    enable: { start: 0 },\n                    priority: 2,\n                    layer: layers_1.SisyfosLLAyer.SisyfosResync,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                        resync: true\n                    }\n                })\n            ])\n        }\n    });\n    _.each(config.showStyle.DVEStyles, (dveConfig, i) => {\n        // const boxSources = ['', '', '', '']\n        const content = tv2_common_1.MakeContentDVE2(context, config, dveConfig, {}, undefined, dve_1.AFVD_DVE_GENERATOR_OPTIONS);\n        if (content.valid) {\n            adlibItems.push({\n                externalId: `dve-${dveConfig.DVEName}`,\n                name: (dveConfig.DVEName || 'DVE') + '',\n                _rank: 200 + i,\n                sourceLayerId: layers_2.SourceLayer.PgmDVEAdlib,\n                outputLayerId: 'pgm',\n                expectedDuration: 0,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n                toBeQueued: true,\n                content: content.content,\n                adlibPreroll: Number(config.studio.CasparPrerollDuration) || 0\n            });\n        }\n    });\n    // viz styles and dve backgrounds\n    adlibItems.push(tv2_common_1.literal({\n        _rank: 301,\n        externalId: 'dve-design-sc',\n        name: 'DVE Design SC',\n        outputLayerId: 'sec',\n        sourceLayerId: layers_2.SourceLayer.PgmDesign,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n        content: tv2_common_1.literal({\n            fileName: 'BG_LOADER_SC',\n            path: 'BG_LOADER_SC',\n            timelineObjects: _.compact([\n                tv2_common_1.literal({\n                    id: '',\n                    enable: { start: 0 },\n                    priority: 110,\n                    layer: tv2_common_1.GraphicLLayer.GraphicLLayerDesign,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                        templateName: 'BG_LOADER_SC',\n                        templateData: []\n                    }\n                }),\n                tv2_common_1.literal({\n                    id: '',\n                    enable: { start: 0 },\n                    priority: 110,\n                    layer: layers_1.CasparLLayer.CasparCGDVELoop,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                        file: 'dve/BG_LOADER_SC',\n                        loop: true\n                    }\n                })\n            ])\n        })\n    }));\n    adlibItems.push({\n        externalId: 'stopAudioBed',\n        name: 'Stop Soundplayer',\n        _rank: 700,\n        sourceLayerId: layers_2.SourceLayer.PgmAudioBed,\n        outputLayerId: 'musik',\n        expectedDuration: 1000,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal,\n        content: {\n            timelineObjects: [\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        start: 0,\n                        duration: 1000\n                    },\n                    priority: 50,\n                    layer: layers_1.SisyfosLLAyer.SisyfosSourceAudiobed,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n                        type: 'empty'\n                    },\n                    classes: []\n                })\n            ]\n        }\n    });\n    adlibItems.forEach(p => postProcessTimelineObjects_1.postProcessPieceTimelineObjects(context, config, p, true));\n    return adlibItems;\n}\nfunction getBaseline(config) {\n    return [\n        // Default timeline\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemMEProgram,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                me: {\n                    input: config.studio.AtemSource.Default,\n                    transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemMEClean,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                me: {\n                    input: config.studio.AtemSource.Default,\n                    transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                }\n            }\n        }),\n        // route default outputs\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemAuxPGM,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                aux: {\n                    input: atem_1.AtemSourceIndex.Prg1\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemAuxClean,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                aux: {\n                    input: atem_1.AtemSourceIndex.Prg4\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemAuxLookahead,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                aux: {\n                    input: config.studio.AtemSource.Default\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemAuxSSrc,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                aux: {\n                    input: atem_1.AtemSourceIndex.SSrc\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemAuxVideoMixMinus,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                aux: {\n                    input: config.studio.AtemSource.MixMinusDefault\n                }\n            }\n        }),\n        // render presenter screen\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.CasparLLayer.CasparCountdown,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.HTMLPAGE,\n                url: config.studio.SofieHostURL + '/countdowns/studio0/presenter'\n            }\n        }),\n        // keyers\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemDSKGraphics,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK,\n                dsk: {\n                    onAir: true,\n                    sources: {\n                        fillSource: config.studio.AtemSource.DSK1F,\n                        cutSource: config.studio.AtemSource.DSK1K\n                    },\n                    properties: {\n                        tie: false,\n                        preMultiply: false,\n                        clip: config.studio.AtemSettings.VizClip * 10,\n                        gain: config.studio.AtemSettings.VizGain * 10,\n                        mask: {\n                            enabled: false\n                        }\n                    }\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemDSKEffect,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK,\n                dsk: {\n                    onAir: false,\n                    sources: {\n                        fillSource: config.studio.AtemSource.JingleFill,\n                        cutSource: config.studio.AtemSource.JingleKey\n                    },\n                    properties: {\n                        tie: false,\n                        preMultiply: false,\n                        clip: config.studio.AtemSettings.CCGClip * 10,\n                        gain: config.studio.AtemSettings.CCGGain * 10,\n                        mask: {\n                            enabled: false\n                        }\n                    }\n                }\n            }\n        }),\n        // slaves the DSK2 for jingles to ME4 USK1 to have effects on CLEAN (ME4)\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemCleanUSKEffect,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                me: {\n                    upstreamKeyers: [\n                        {\n                            upstreamKeyerId: 0,\n                            onAir: false,\n                            mixEffectKeyType: 0,\n                            flyEnabled: false,\n                            fillSource: config.studio.AtemSource.JingleFill,\n                            cutSource: config.studio.AtemSource.JingleKey,\n                            maskEnabled: false,\n                            lumaSettings: {\n                                preMultiplied: false,\n                                clip: config.studio.AtemSettings.CCGClip * 10,\n                                gain: config.studio.AtemSettings.CCGGain * 10 // input is percents (0-100), atem uses 1-000\n                            }\n                        }\n                    ]\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemSSrcArt,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRCPROPS,\n                ssrcProps: {\n                    artFillSource: config.studio.AtemSource.SplitArtF,\n                    artCutSource: config.studio.AtemSource.SplitArtK,\n                    artOption: 1,\n                    artPreMultiplied: true\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.AtemLLayer.AtemSSrcDefault,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC,\n                ssrc: {\n                    boxes: [\n                        {\n                            // left\n                            enabled: true,\n                            source: atem_1.AtemSourceIndex.Bars,\n                            size: 580,\n                            x: -800,\n                            y: 50,\n                            cropped: true,\n                            cropRight: 2000\n                        },\n                        {\n                            // right\n                            enabled: true,\n                            source: atem_1.AtemSourceIndex.Bars,\n                            size: 580,\n                            x: 800,\n                            y: 50\n                            // note: this sits behind box1, so don't crop it to ensure there is no gap between\n                        },\n                        {\n                            // box 3\n                            enabled: false\n                        },\n                        {\n                            // box 4\n                            enabled: false\n                        }\n                    ]\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.CasparLLayer.CasparCGDVEFrame,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                file: 'empty',\n                mixer: {\n                    opacity: 0\n                },\n                transitions: {\n                    inTransition: {\n                        type: timeline_state_resolver_types_1.Transition.CUT,\n                        duration: tv2_constants_1.CONSTANTS.DefaultClipFadeOut\n                    }\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.CasparLLayer.CasparCGDVEKey,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                file: 'empty',\n                mixer: {\n                    opacity: 0\n                },\n                transitions: {\n                    inTransition: {\n                        type: timeline_state_resolver_types_1.Transition.CUT,\n                        duration: tv2_constants_1.CONSTANTS.DefaultClipFadeOut\n                    }\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.CasparLLayer.CasparCGDVETemplate,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                file: 'empty',\n                mixer: {\n                    opacity: 0\n                },\n                transitions: {\n                    inTransition: {\n                        type: timeline_state_resolver_types_1.Transition.CUT,\n                        duration: tv2_constants_1.CONSTANTS.DefaultClipFadeOut\n                    }\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.CasparLLayer.CasparCGDVELoop,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                file: 'empty',\n                transitions: {\n                    inTransition: {\n                        type: timeline_state_resolver_types_1.Transition.CUT,\n                        duration: tv2_constants_1.CONSTANTS.DefaultClipFadeOut\n                    }\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: 1 },\n            priority: 0,\n            layer: layers_1.CasparLLayer.CasparCGFullBg,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.ROUTE,\n                mappedLayer: layers_1.CasparLLayer.CasparCGDVELoop\n            }\n        }),\n        // create sisyfos channels from the config\n        ...Object.keys(sisyfosChannels_1.sisyfosChannels).map(key => {\n            const llayer = key;\n            const channel = sisyfosChannels_1.sisyfosChannels[llayer];\n            return tv2_common_1.literal({\n                id: '',\n                enable: { while: '1' },\n                priority: 0,\n                layer: llayer,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: channel.isPgm,\n                    visible: !channel.hideInStudioA,\n                    label: channel.label\n                }\n            });\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.CasparLLayer.CasparCGLYD,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                loop: true,\n                file: 'EMPTY',\n                mixer: {\n                    volume: {\n                        _value: 0,\n                        inTransition: {\n                            type: timeline_state_resolver_types_1.Transition.MIX,\n                            easing: timeline_state_resolver_types_1.Ease.LINEAR,\n                            direction: timeline_state_resolver_types_1.Direction.LEFT,\n                            duration: config.studio.AudioBedSettings.fadeIn\n                        },\n                        changeTransition: {\n                            type: timeline_state_resolver_types_1.Transition.MIX,\n                            easing: timeline_state_resolver_types_1.Ease.LINEAR,\n                            direction: timeline_state_resolver_types_1.Direction.LEFT,\n                            duration: config.studio.AudioBedSettings.fadeOut\n                        },\n                        outTransition: {\n                            type: timeline_state_resolver_types_1.Transition.MIX,\n                            easing: timeline_state_resolver_types_1.Ease.LINEAR,\n                            direction: timeline_state_resolver_types_1.Direction.LEFT,\n                            duration: config.studio.AudioBedSettings.fadeOut\n                        }\n                    }\n                },\n                transitions: {\n                    inTransition: {\n                        type: timeline_state_resolver_types_1.Transition.MIX,\n                        easing: timeline_state_resolver_types_1.Ease.LINEAR,\n                        direction: timeline_state_resolver_types_1.Direction.LEFT,\n                        duration: config.studio.AudioBedSettings.fadeIn\n                    },\n                    outTransition: {\n                        type: timeline_state_resolver_types_1.Transition.MIX,\n                        easing: timeline_state_resolver_types_1.Ease.LINEAR,\n                        direction: timeline_state_resolver_types_1.Direction.LEFT,\n                        duration: config.studio.AudioBedSettings.fadeOut\n                    }\n                }\n            }\n        }),\n        ...(config.showStyle.CasparCGLoadingClip && config.showStyle.CasparCGLoadingClip.length\n            ? [...config.mediaPlayers.map(mp => layers_1.CasparPlayerClipLoadingLoop(mp.id))].map(layer => {\n                return tv2_common_1.literal({\n                    id: '',\n                    enable: { while: '1' },\n                    priority: 0,\n                    layer,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                        file: config.showStyle.CasparCGLoadingClip,\n                        loop: true\n                    }\n                });\n            })\n            : [])\n    ];\n}\n\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst layers_1 = __webpack_require__(7);\nconst config_1 = __webpack_require__(89);\nconst layers_2 = __webpack_require__(6);\nconst evs_1 = __webpack_require__(117);\nconst grafik_1 = __webpack_require__(127);\nconst intro_1 = __webpack_require__(128);\nconst kam_1 = __webpack_require__(129);\nconst server_1 = __webpack_require__(130);\nconst teknik_1 = __webpack_require__(131);\nconst unknown_1 = __webpack_require__(132);\nconst vo_1 = __webpack_require__(133);\nconst postProcessTimelineObjects_1 = __webpack_require__(98);\nfunction getSegment(context, ingestSegment) {\n    const config = config_1.parseConfig(context);\n    const result = tv2_common_1.getSegmentBase(context, ingestSegment, {\n        parseConfig: config_1.parseConfig,\n        TransformCuesIntoShowstyle: tv2_common_1.TransformCuesIntoShowstyle,\n        CreatePartContinuity,\n        CreatePartUnknown: unknown_1.CreatePartUnknown,\n        CreatePartIntro: intro_1.CreatePartIntro,\n        CreatePartKam: kam_1.CreatePartKam,\n        CreatePartServer: server_1.CreatePartServer,\n        CreatePartEVS: evs_1.CreatePartEVS,\n        CreatePartGrafik: grafik_1.CreatePartGrafik,\n        CreatePartEkstern: unknown_1.CreatePartUnknown,\n        CreatePartTeknik: teknik_1.CreatePartTeknik,\n        CreatePartDVE: unknown_1.CreatePartUnknown,\n        CreatePartTelefon: unknown_1.CreatePartUnknown,\n        CreatePartVO: vo_1.CreatePartVO\n    });\n    const blueprintParts = result.parts;\n    postProcessTimelineObjects_1.postProcessPartTimelineObjects(context, config, blueprintParts);\n    return {\n        segment: result.segment,\n        parts: blueprintParts\n    };\n}\nexports.getSegment = getSegment;\nfunction CreatePartContinuity(config, ingestSegment) {\n    return tv2_common_1.literal({\n        part: {\n            externalId: `${ingestSegment.externalId}-CONTINUITY`,\n            title: 'CONTINUITY',\n            typeVariant: ''\n        },\n        pieces: [\n            tv2_common_1.literal({\n                _id: '',\n                externalId: `${ingestSegment.externalId}-CONTINUITY`,\n                enable: {\n                    start: 0\n                },\n                name: 'CONTINUITY',\n                sourceLayerId: layers_2.SourceLayer.PgmContinuity,\n                outputLayerId: 'pgm',\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment,\n                content: tv2_common_1.literal({\n                    studioLabel: '',\n                    switcherInput: config.studio.AtemSource.Continuity,\n                    timelineObjects: _.compact([\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 1,\n                            layer: layers_1.AtemLLayer.AtemMEProgram,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                                me: {\n                                    input: config.studio.AtemSource.Continuity,\n                                    transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                                }\n                            }\n                        })\n                    ])\n                })\n            })\n        ],\n        adLibPieces: []\n    });\n}\nexports.CreatePartContinuity = CreatePartContinuity;\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(7);\nconst evaluateCues_1 = __webpack_require__(40);\nconst layers_2 = __webpack_require__(6);\nconst effekt_1 = __webpack_require__(79);\nfunction CreatePartEVS(context, config, partDefinition, totalWords) {\n    const partTime = tv2_common_1.PartTime(config, partDefinition, totalWords, false);\n    let part = tv2_common_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.rawType,\n        metaData: {},\n        typeVariant: '',\n        expectedDuration: partTime > 0 ? partTime : 0\n    });\n    const adLibPieces = [];\n    const pieces = [];\n    part = Object.assign(Object.assign({}, part), effekt_1.CreateEffektForpart(context, config, partDefinition, pieces));\n    const sourceInfoDelayedPlayback = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, partDefinition.rawType.replace(/ ?VO/i, ''));\n    if (sourceInfoDelayedPlayback === undefined) {\n        return tv2_common_1.CreatePartInvalid(partDefinition);\n    }\n    const atemInput = sourceInfoDelayedPlayback.port;\n    pieces.push(tv2_common_1.literal({\n        _id: '',\n        externalId: partDefinition.externalId,\n        name: part.title,\n        enable: { start: 0 },\n        outputLayerId: 'pgm',\n        sourceLayerId: layers_2.SourceLayer.PgmLive,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        content: makeContentEVS(context, config, atemInput, partDefinition, sourceInfoDelayedPlayback)\n    }));\n    evaluateCues_1.EvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, {});\n    tv2_common_1.AddScript(partDefinition, pieces, partTime, layers_2.SourceLayer.PgmScript);\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.CreatePartEVS = CreatePartEVS;\nfunction makeContentEVS(context, config, atemInput, partDefinition, sourceInfoDelayedPlayback) {\n    return {\n        studioLabel: '',\n        switcherInput: atemInput,\n        timelineObjects: tv2_common_1.literal([\n            tv2_common_1.literal({\n                id: ``,\n                enable: {\n                    start: 0\n                },\n                priority: 1,\n                layer: layers_1.AtemLLayer.AtemMEProgram,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                    me: {\n                        input: atemInput,\n                        transition: partDefinition.transition\n                            ? tv2_common_1.TransitionFromString(partDefinition.transition.style)\n                            : timeline_state_resolver_types_1.AtemTransitionStyle.CUT,\n                        transitionSettings: tv2_common_1.TransitionSettings(partDefinition)\n                    }\n                },\n                classes: [tv2_common_1.EVSParentClass('studio0', partDefinition.variant.evs)]\n            }),\n            tv2_common_1.literal({\n                id: '',\n                enable: {\n                    start: 0\n                },\n                priority: 1,\n                layer: layers_1.SisyfosEVSSource(sourceInfoDelayedPlayback.id.replace(/^DP/i, '')),\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: partDefinition.variant.isVO ? 2 : 1\n                }\n            }),\n            ...(partDefinition.variant.isVO\n                ? [...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, 'evs')]\n                : [\n                    ...config.liveAudio.map(layer => {\n                        return tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 1,\n                            layer,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: 0\n                            },\n                            metaData: {\n                                sisyfosPersistLevel: true\n                            }\n                        });\n                    })\n                ])\n        ])\n    };\n}\n\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst layers_1 = __webpack_require__(7);\nconst layers_2 = __webpack_require__(6);\nconst dve_1 = __webpack_require__(92);\nfunction EvaluateAdLib(context, config, adLibPieces, partId, parsedCue, partDefinition, rank) {\n    if (parsedCue.variant.match(/server/i)) {\n        // Create server AdLib\n        const file = partDefinition.fields.videoId;\n        adLibPieces.push(tv2_common_1.CreateAdlibServer(config, rank, partId, `adlib_server_${file}`, partDefinition, file, false, {\n            Caspar: {\n                ClipPending: layers_1.CasparLLayer.CasparPlayerClipPending\n            },\n            Sisyfos: {\n                ClipPending: layers_1.SisyfosLLAyer.SisyfosSourceClipPending\n            },\n            ATEM: {\n                MEPGM: layers_1.AtemLLayer.AtemMEProgram\n            },\n            STICKY_LAYERS: config.stickyLayers,\n            PgmServer: layers_2.SourceLayer.PgmServer,\n            PgmVoiceOver: layers_2.SourceLayer.PgmVoiceOver\n        }));\n    }\n    else {\n        // DVE\n        if (!parsedCue.variant) {\n            return;\n        }\n        const rawTemplate = tv2_common_1.GetDVETemplate(config.showStyle.DVEStyles, parsedCue.variant); // TODO - is this correct?\n        if (!rawTemplate) {\n            context.warning(`Could not find template ${parsedCue.variant}`);\n            return;\n        }\n        if (!tv2_common_1.TemplateIsValid(JSON.parse(rawTemplate.DVEJSON))) {\n            context.warning(`Invalid DVE template ${parsedCue.variant}`);\n            return;\n        }\n        const cueDVE = {\n            type: tv2_constants_1.CueType.DVE,\n            template: parsedCue.variant,\n            sources: parsedCue.inputs ? parsedCue.inputs : {},\n            labels: parsedCue.bynavn ? [parsedCue.bynavn] : [],\n            iNewsCommand: 'DVE'\n        };\n        const content = dve_1.MakeContentDVE(context, config, partDefinition, cueDVE, rawTemplate, false, true);\n        let sticky = {};\n        content.stickyLayers.forEach(layer => {\n            sticky = Object.assign(Object.assign({}, sticky), { [layer]: {\n                    value: 1,\n                    followsPrevious: false\n                } });\n        });\n        adLibPieces.push(tv2_common_1.literal({\n            _rank: rank,\n            externalId: partId,\n            name: `DVE: ${parsedCue.variant}`,\n            sourceLayerId: layers_2.SourceLayer.PgmDVE,\n            outputLayerId: 'pgm',\n            toBeQueued: true,\n            content: content.content,\n            invalid: !content.valid,\n            metaData: tv2_common_1.literal({\n                stickySisyfosLevels: sticky\n            })\n        }));\n    }\n}\nexports.EvaluateAdLib = EvaluateAdLib;\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(6);\nfunction EvaluateClearGrafiks(pieces, partId, parsedCue, shouldAdlib) {\n    if (shouldAdlib) {\n        return;\n    }\n    ;\n    [\n        layers_1.SourceLayer.PgmGraphicsIdent,\n        layers_1.SourceLayer.PgmGraphicsIdentPersistent,\n        layers_1.SourceLayer.PgmGraphicsTop,\n        layers_1.SourceLayer.PgmGraphicsLower,\n        layers_1.SourceLayer.PgmGraphicsHeadline,\n        layers_1.SourceLayer.PgmGraphicsTema,\n        layers_1.SourceLayer.PgmGraphicsOverlay,\n        layers_1.SourceLayer.PgmGraphicsTLF\n    ].forEach(sourceLayerId => {\n        pieces.push({\n            _id: '',\n            externalId: partId,\n            name: `CLEAR ${sourceLayerId}`,\n            enable: {\n                start: tv2_common_1.CreateTimingEnable(parsedCue).enable.start,\n                duration: 1000\n            },\n            outputLayerId: 'sec',\n            sourceLayerId,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal,\n            virtual: true\n        });\n    });\n    pieces.push(tv2_common_1.literal(Object.assign(Object.assign({ _id: '', externalId: partId, name: 'CLEAR' }, tv2_common_1.CreateTimingEnable(parsedCue)), { outputLayerId: 'sec', sourceLayerId: layers_1.SourceLayer.PgmAdlibVizCmd, infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal, content: {\n            timelineObjects: [\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        start: 0,\n                        duration: 1000\n                    },\n                    priority: 100,\n                    layer: tv2_common_1.GraphicLLayer.GraphicLLayerAdLibs,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.CLEAR_ALL_ELEMENTS\n                    }\n                })\n            ]\n        } })));\n}\nexports.EvaluateClearGrafiks = EvaluateClearGrafiks;\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(6);\nconst dve_1 = __webpack_require__(92);\nfunction EvaluateDVE(context, config, pieces, adlibPieces, partDefinition, parsedCue, adlib, rank) {\n    if (!parsedCue.template) {\n        return;\n    }\n    const rawTemplate = tv2_common_1.GetDVETemplate(config.showStyle.DVEStyles, parsedCue.template);\n    if (!rawTemplate) {\n        context.warning(`Could not find template ${parsedCue.template}`);\n        return;\n    }\n    if (!tv2_common_1.TemplateIsValid(JSON.parse(rawTemplate.DVEJSON))) {\n        context.warning(`Invalid DVE template ${parsedCue.template}`);\n        return;\n    }\n    const content = dve_1.MakeContentDVE(context, config, partDefinition, parsedCue, rawTemplate, tv2_common_1.AddParentClass(partDefinition));\n    if (content.valid) {\n        if (adlib) {\n            adlibPieces.push(tv2_common_1.literal({\n                _rank: rank || 0,\n                externalId: partDefinition.externalId,\n                name: `${partDefinition.storyName} DVE: ${parsedCue.template}`,\n                outputLayerId: 'pgm',\n                sourceLayerId: layers_1.SourceLayer.PgmDVE,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n                toBeQueued: true,\n                content: content.content,\n                adlibPreroll: Number(config.studio.CasparPrerollDuration) || 0\n            }));\n        }\n        else {\n            let start = parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0;\n            start = start ? start : 0;\n            const end = parsedCue.end ? tv2_common_1.CalculateTime(parsedCue.end) : undefined;\n            pieces.push(tv2_common_1.literal({\n                _id: '',\n                externalId: partDefinition.externalId,\n                name: `DVE: ${parsedCue.template}`,\n                enable: Object.assign({ start }, (end ? { duration: end - start } : {})),\n                outputLayerId: 'pgm',\n                sourceLayerId: layers_1.SourceLayer.PgmDVE,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n                toBeQueued: true,\n                content: content.content,\n                adlibPreroll: Number(config.studio.CasparPrerollDuration) || 0,\n                metaData: tv2_common_1.literal({\n                    mediaPlayerSessions: [partDefinition.segmentExternalId]\n                })\n            }));\n        }\n    }\n}\nexports.EvaluateDVE = EvaluateDVE;\n\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst layers_1 = __webpack_require__(7);\nconst layers_2 = __webpack_require__(6);\nfunction EvaluateEkstern(context, config, pieces, adlibPieces, partId, parsedCue, partDefinition, adlib, rank) {\n    const eksternProps = parsedCue.source\n        .replace(/\\s+/i, ' ')\n        .trim()\n        .match(/^(?:LIVE|SKYPE) ([^\\s]+)(?: (.+))?$/i);\n    if (!eksternProps) {\n        context.warning(`Could not find live source for ${parsedCue.source}, missing properties`);\n        return;\n    }\n    const source = eksternProps[1];\n    if (!source) {\n        context.warning(`Could not find live source for ${parsedCue.source}`);\n        return;\n    }\n    const sourceInfoCam = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, parsedCue.source);\n    if (sourceInfoCam === undefined) {\n        context.warning(`Could not find ATEM input for source ${parsedCue.source}`);\n        return;\n    }\n    const atemInput = sourceInfoCam.port;\n    const layers = tv2_common_1.GetLayersForEkstern(context, config.sources, parsedCue.source);\n    if (adlib) {\n        adlibPieces.push(tv2_common_1.literal({\n            _rank: rank || 0,\n            externalId: partId,\n            name: eksternProps[0],\n            outputLayerId: 'pgm',\n            sourceLayerId: layers_2.SourceLayer.PgmLive,\n            toBeQueued: true,\n            metaData: tv2_common_1.GetEksternMetaData(config.stickyLayers, config.studio.StudioMics, layers),\n            content: tv2_common_1.literal({\n                studioLabel: '',\n                switcherInput: atemInput,\n                timelineObjects: tv2_common_1.literal([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: {\n                            start: 0\n                        },\n                        priority: 1,\n                        layer: layers_1.AtemLLayer.AtemMEProgram,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: atemInput,\n                                transition: partDefinition.transition\n                                    ? tv2_common_1.TransitionFromString(partDefinition.transition.style)\n                                    : timeline_state_resolver_types_1.AtemTransitionStyle.CUT,\n                                transitionSettings: tv2_common_1.TransitionSettings(partDefinition)\n                            }\n                        }\n                    }),\n                    ...tv2_common_1.GetSisyfosTimelineObjForEkstern(context, config.sources, parsedCue.source, tv2_common_1.GetLayersForEkstern),\n                    ...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, 'telefon')\n                ])\n            })\n        }));\n    }\n    else {\n        pieces.push(tv2_common_1.literal(Object.assign(Object.assign({ _id: '', externalId: partId, name: eksternProps[0] }, tv2_common_1.CreateTimingEnable(parsedCue)), { outputLayerId: 'pgm', sourceLayerId: layers_2.SourceLayer.PgmLive, toBeQueued: true, metaData: tv2_common_1.GetEksternMetaData(config.stickyLayers, config.studio.StudioMics, layers), content: tv2_common_1.literal({\n                studioLabel: '',\n                switcherInput: atemInput,\n                timelineObjects: tv2_common_1.literal([\n                    tv2_common_1.createEmptyObject({\n                        // Only want the ident for original versions (or clones)\n                        enable: { start: 0 },\n                        layer: 'ekstern_enable_ident',\n                        classes: [tv2_constants_1.ControlClasses.ShowIdentGraphic]\n                    }),\n                    tv2_common_1.literal(Object.assign({ id: '', enable: {\n                            start: 0\n                        }, priority: 1, layer: layers_1.AtemLLayer.AtemMEProgram, content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: atemInput,\n                                transition: partDefinition.transition\n                                    ? tv2_common_1.TransitionFromString(partDefinition.transition.style)\n                                    : timeline_state_resolver_types_1.AtemTransitionStyle.CUT,\n                                transitionSettings: tv2_common_1.TransitionSettings(partDefinition)\n                            }\n                        } }, (tv2_common_1.AddParentClass(partDefinition) ? { classes: [tv2_common_1.EksternParentClass('studio0', parsedCue.source)] } : {}))),\n                    ...tv2_common_1.GetSisyfosTimelineObjForEkstern(context, config.sources, parsedCue.source, tv2_common_1.GetLayersForEkstern),\n                    ...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, 'telefon')\n                ])\n            }) })));\n    }\n}\nexports.EvaluateEkstern = EvaluateEkstern;\n\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(6);\nconst layers_2 = __webpack_require__(7);\nfunction EvaluateJingle(context, config, pieces, adlibPieces, parsedCue, part, adlib, rank, effekt) {\n    if (!config.showStyle.BreakerConfig) {\n        context.warning(`Jingles have not been configured`);\n        return;\n    }\n    let file = '';\n    const jingle = config.showStyle.BreakerConfig.find(brkr => brkr.BreakerName ? brkr.BreakerName.toString().toUpperCase() === parsedCue.clip.toUpperCase() : false);\n    if (!jingle) {\n        context.warning(`Jingle ${parsedCue.clip} is not configured`);\n        return;\n    }\n    else {\n        file = jingle.ClipName.toString();\n    }\n    if (adlib) {\n        const p = tv2_common_1.GetJinglePartProperties(context, config, part);\n        if (JSON.stringify(p) === JSON.stringify({})) {\n            context.warning(`Could not create adlib for ${parsedCue.clip}`);\n            return;\n        }\n        const props = p;\n        adlibPieces.push(tv2_common_1.literal({\n            _rank: rank !== null && rank !== void 0 ? rank : 0,\n            externalId: `${part.externalId}-JINGLE-adlib`,\n            name: effekt ? `EFFEKT ${parsedCue.clip}` : parsedCue.clip,\n            sourceLayerId: layers_1.SourceLayer.PgmJingle,\n            outputLayerId: 'jingle',\n            content: createJingleContent(config, file),\n            toBeQueued: true,\n            adlibAutoNext: props.autoNext,\n            adlibAutoNextOverlap: props.autoNextOverlap,\n            adlibPreroll: props.prerollDuration,\n            expectedDuration: props.expectedDuration,\n            adlibDisableOutTransition: false\n        }));\n    }\n    else {\n        pieces.push(tv2_common_1.literal({\n            _id: '',\n            externalId: `${part.externalId}-JINGLE`,\n            name: effekt ? `EFFEKT ${parsedCue.clip}` : parsedCue.clip,\n            enable: {\n                start: 0\n            },\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            outputLayerId: 'jingle',\n            sourceLayerId: layers_1.SourceLayer.PgmJingle,\n            content: createJingleContent(config, file)\n        }));\n    }\n}\nexports.EvaluateJingle = EvaluateJingle;\nfunction createJingleContent(config, file) {\n    const content = tv2_common_1.CreateJingleContentBase(config, file, {\n        Caspar: {\n            PlayerJingle: layers_2.CasparLLayer.CasparPlayerJingle\n        },\n        ATEM: {\n            DSKJingle: layers_2.AtemLLayer.AtemDSKEffect,\n            USKCleanEffekt: layers_2.AtemLLayer.AtemCleanUSKEffect\n        },\n        Sisyfos: {\n            PlayerJingle: layers_2.SisyfosLLAyer.SisyfosSourceJingle\n        }\n    }, false);\n    return content;\n}\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(6);\nconst layers_2 = __webpack_require__(7);\nfunction EvaluateLYD(context, config, pieces, adlibPieces, parsedCue, part, adlib, rank) {\n    const conf = config.showStyle.LYDConfig.find(lyd => lyd.INewsName ? lyd.INewsName.toString().toUpperCase() === parsedCue.variant.toUpperCase() : false);\n    const stop = !!parsedCue.variant.match(/^[^_]*STOP[^_]*$/i); // TODO: STOP 1 / STOP 2 etc.\n    if (!conf && !stop) {\n        context.warning(`LYD ${parsedCue.variant} not configured, using iNews name as file name`);\n    }\n    const file = conf ? conf.FileName.toString() : parsedCue.variant;\n    const fadeIn = conf ? Number(conf.FadeIn) : undefined;\n    const fadeOut = conf ? Number(conf.FadeOut) : undefined;\n    if (adlib) {\n        adlibPieces.push(tv2_common_1.literal({\n            _rank: rank || 0,\n            externalId: part.externalId,\n            name: parsedCue.variant,\n            outputLayerId: 'musik',\n            sourceLayerId: layers_1.SourceLayer.PgmAudioBed,\n            infiniteMode: stop ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal : tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n            content: LydContent(config, file, parsedCue, stop, fadeIn, fadeOut)\n        }));\n    }\n    else {\n        pieces.push(tv2_common_1.literal(Object.assign(Object.assign({ _id: '', externalId: part.externalId, name: parsedCue.variant }, (stop ? { enable: { start: tv2_common_1.CreateTimingEnable(parsedCue).enable.start } } : tv2_common_1.CreateTimingEnable(parsedCue))), { outputLayerId: 'musik', sourceLayerId: GetLYDSourceLayer(file), infiniteMode: stop ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal : tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite, content: LydContent(config, file, parsedCue, stop, fadeIn, fadeOut) })));\n    }\n}\nexports.EvaluateLYD = EvaluateLYD;\nfunction GetLYDSourceLayer(_name) {\n    return layers_1.SourceLayer.PgmAudioBed;\n}\nexports.GetLYDSourceLayer = GetLYDSourceLayer;\nfunction LydContent(config, file, parsedCue, stop, _fadeIn, _fadeOut) {\n    if (stop) {\n        return tv2_common_1.literal({\n            timelineObjects: [\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        start: 0\n                    },\n                    priority: 50,\n                    layer: layers_2.SisyfosLLAyer.SisyfosSourceAudiobed,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n                        type: 'empty'\n                    },\n                    classes: []\n                })\n            ]\n        });\n    }\n    const id = `${file.trim().replace(/ /gi, '_')}`;\n    return tv2_common_1.literal({\n        timelineObjects: tv2_common_1.literal([\n            tv2_common_1.literal({\n                id,\n                enable: Object.assign({ start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0 }, (parsedCue.end ? { end: tv2_common_1.CalculateTime(parsedCue.end) } : {})),\n                priority: 1,\n                layer: layers_2.CasparLLayer.CasparCGLYD,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                    file,\n                    channelLayout: 'bed',\n                    loop: true,\n                    mixer: {\n                        volume: Number(config.studio.AudioBedSettings.volume) / 100\n                    }\n                }\n            }),\n            tv2_common_1.literal({\n                id: '',\n                enable: Object.assign({ start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0 }, (parsedCue.end ? { end: tv2_common_1.CalculateTime(parsedCue.end) } : {})),\n                priority: 1,\n                layer: layers_2.SisyfosLLAyer.SisyfosSourceAudiobed,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 1\n                }\n            })\n        ])\n    });\n}\nexports.LydContent = LydContent;\n\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst _ = __webpack_require__(3);\nconst layers_1 = __webpack_require__(6);\nconst layers_2 = __webpack_require__(7);\nconst grafikViz_1 = __webpack_require__(82);\nconst mos_1 = __webpack_require__(93);\nfunction EvaluateTargetEngine(context, config, pieces, adlibPieces, partId, _partDefinition, parsedCue, adlib) {\n    // TODO: Future: Target a specific engine\n    if (!parsedCue.data.engine.match(/full|ovl|wall/i)) {\n        context.warning(`Could not find engine to target for: ${parsedCue.data.engine}`);\n        return;\n    }\n    if (!parsedCue.content.INP1 && !parsedCue.content.INP) {\n        // context.warning(`No input provided by ${parsedCue.rawType} for engine aux`)\n    }\n    else {\n        const source = parsedCue.content.INP1 ? parsedCue.content.INP1 : parsedCue.content.INP;\n        let sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, source);\n        if (!sourceInfo) {\n            sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, source);\n        }\n        if (!sourceInfo) {\n            context.warning(`Could not find source ${parsedCue.content.INP1}`);\n        }\n        else {\n            pieces.push(tv2_common_1.literal({\n                _id: '',\n                externalId: partId,\n                enable: {\n                    start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                },\n                name: parsedCue.content.INP1 || '',\n                outputLayerId: 'aux',\n                sourceLayerId: layers_1.SourceLayer.VizFullIn1,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                content: tv2_common_1.literal({\n                    studioLabel: '',\n                    switcherInput: sourceInfo.port,\n                    timelineObjects: _.compact([\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: { start: 0 },\n                            priority: 100,\n                            layer: layers_2.AtemLLayer.AtemAuxVizOvlIn1,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                                aux: {\n                                    input: sourceInfo.port\n                                }\n                            }\n                        })\n                    ])\n                })\n            }));\n        }\n    }\n    if (parsedCue.data.grafik) {\n        if (parsedCue.data.grafik.type === tv2_constants_1.CueType.Grafik) {\n            grafikViz_1.EvaluateGrafikViz(config, context, pieces, adlibPieces, partId, parsedCue.data.grafik, tv2_common_1.TranslateEngine(parsedCue.data.engine), adlib);\n        }\n        else {\n            mos_1.EvaluateMOSViz(config, context, pieces, adlibPieces, partId, parsedCue.data.grafik, tv2_common_1.TranslateEngine(parsedCue.data.engine), adlib, false, adlibPieces.length, true, !!parsedCue.data.engine.match(/ovl/i));\n        }\n    }\n}\nexports.EvaluateTargetEngine = EvaluateTargetEngine;\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst layers_1 = __webpack_require__(7);\nconst grafikViz_1 = __webpack_require__(82);\nconst mos_1 = __webpack_require__(93);\nfunction EvaluateTelefon(config, context, pieces, adlibPieces, partId, partDefinition, parsedCue, adlib, rank) {\n    if (parsedCue.vizObj) {\n        if (parsedCue.vizObj.type === tv2_constants_1.CueType.Grafik) {\n            grafikViz_1.EvaluateGrafikViz(config, context, pieces, adlibPieces, partId, parsedCue.vizObj, 'OVL', adlib ? adlib : parsedCue.adlib ? parsedCue.adlib : false, partDefinition, true, rank);\n        }\n        else {\n            mos_1.EvaluateMOSViz(config, context, pieces, adlibPieces, partId, parsedCue.vizObj, 'OVL', // TODO: Change to full if using a separate engine\n            adlib ? adlib : parsedCue.adlib ? parsedCue.adlib : false, true, rank);\n        }\n        if ((!adlib && pieces.length) || (adlib && adlibPieces.length)) {\n            if (adlib) {\n                const index = adlibPieces.length - 1;\n                const adlibPiece = adlibPieces[index];\n                if (adlibPiece.content && adlibPiece.content.timelineObjects) {\n                    adlibPiece.content.timelineObjects.push(tv2_common_1.literal(Object.assign({ id: '', enable: {\n                            start: 0\n                        }, priority: 1, layer: layers_1.SisyfosLLAyer.SisyfosSourceTLF, content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                            isPgm: 1\n                        } }, tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, 'telefon'))));\n                    adlibPiece.name = `${parsedCue.source}`;\n                    adlibPiece.adlibPreroll = config.studio.PilotPrerollDuration;\n                    adlibPieces[index] = adlibPiece;\n                }\n            }\n            else {\n                const index = pieces.length - 1;\n                const piece = pieces[index];\n                if (piece.content && piece.content.timelineObjects) {\n                    piece.content.timelineObjects.push(tv2_common_1.literal({\n                        id: '',\n                        enable: {\n                            start: 0\n                        },\n                        priority: 1,\n                        layer: layers_1.SisyfosLLAyer.SisyfosSourceTLF,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                            isPgm: 1\n                        }\n                    }), ...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, 'telefon'));\n                    piece.name = `${parsedCue.source}`;\n                    piece.adlibPreroll = config.studio.PilotPrerollDuration;\n                    pieces[index] = piece;\n                }\n            }\n        }\n    }\n}\nexports.EvaluateTelefon = EvaluateTelefon;\n\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(6);\nconst layers_2 = __webpack_require__(7);\nfunction EvaluateVIZ(context, config, pieces, adlibPieces, partId, parsedCue, adlib, rank) {\n    tv2_common_1.EvaluateVIZBase(context, config, pieces, adlibPieces, partId, parsedCue, true, {\n        SourceLayerDVEBackground: layers_1.SourceLayer.PgmDVEBackground,\n        CasparLLayerDVELoop: layers_2.CasparLLayer.CasparCGDVELoop,\n        SourceLayerVizFullIn1: layers_1.SourceLayer.VizFullIn1,\n        AtemLLayerAtemAuxVizOvlIn1: layers_2.AtemLLayer.AtemAuxVizOvlIn1,\n        SourceLayerDesign: layers_1.SourceLayer.PgmDesign,\n        GraphicLLayerGraphicLLayerDesign: tv2_common_1.GraphicLLayer.GraphicLLayerDesign\n    }, adlib, rank);\n}\nexports.EvaluateVIZ = EvaluateVIZ;\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst evaluateCues_1 = __webpack_require__(40);\nconst layers_1 = __webpack_require__(6);\nfunction CreatePartGrafik(context, config, partDefinition, totalWords) {\n    const partTime = tv2_common_1.PartTime(config, partDefinition, totalWords, false);\n    const part = tv2_common_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.type + ' - ' + partDefinition.rawType,\n        metaData: {},\n        typeVariant: ''\n    });\n    const adLibPieces = [];\n    const pieces = [];\n    evaluateCues_1.EvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, { isGrafikPart: true });\n    tv2_common_1.AddScript(partDefinition, pieces, partTime, layers_1.SourceLayer.PgmScript);\n    part.prerollDuration = config.studio.PilotPrerollDuration;\n    part.transitionKeepaliveDuration = config.studio.PilotKeepaliveDuration\n        ? Number(config.studio.PilotKeepaliveDuration)\n        : 60000;\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.CreatePartGrafik = CreatePartGrafik;\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst evaluateCues_1 = __webpack_require__(40);\nconst layers_1 = __webpack_require__(6);\nfunction CreatePartIntro(context, config, partDefinition, totalWords) {\n    const partTime = tv2_common_1.PartTime(config, partDefinition, totalWords, false);\n    const jingleCue = partDefinition.cues.find(cue => {\n        const parsedCue = cue;\n        return parsedCue.type === tv2_constants_1.CueType.Jingle;\n    });\n    if (!jingleCue) {\n        context.warning(`Intro must contain a jingle`);\n        return tv2_common_1.CreatePartInvalid(partDefinition);\n    }\n    const parsedJingle = jingleCue;\n    if (!config.showStyle.BreakerConfig) {\n        context.warning(`Jingles have not been configured`);\n        return tv2_common_1.CreatePartInvalid(partDefinition);\n    }\n    const jingle = config.showStyle.BreakerConfig.find(jngl => jngl.BreakerName ? jngl.BreakerName.toString().toUpperCase() === parsedJingle.clip.toString().toUpperCase() : false);\n    if (!jingle) {\n        context.warning(`Jingle ${parsedJingle.clip} is not configured`);\n        return tv2_common_1.CreatePartInvalid(partDefinition);\n    }\n    const overlapFrames = jingle.EndAlpha;\n    if (overlapFrames === undefined) {\n        context.warning(`Jingle ${parsedJingle.clip} does not have an out-duration set.`);\n        return tv2_common_1.CreatePartInvalid(partDefinition);\n    }\n    let part = tv2_common_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.type + ' - ' + partDefinition.rawType,\n        metaData: {},\n        typeVariant: ''\n    });\n    const adLibPieces = [];\n    const pieces = [];\n    evaluateCues_1.EvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, {});\n    tv2_common_1.AddScript(partDefinition, pieces, partTime, layers_1.SourceLayer.PgmScript);\n    part = Object.assign(Object.assign({}, part), tv2_common_1.GetJinglePartProperties(context, config, partDefinition));\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.CreatePartIntro = CreatePartIntro;\n\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(7);\nconst evaluateCues_1 = __webpack_require__(40);\nconst layers_2 = __webpack_require__(6);\nconst effekt_1 = __webpack_require__(79);\nfunction CreatePartKam(context, config, partDefinition, totalWords) {\n    const partTime = tv2_common_1.PartTime(config, partDefinition, totalWords, false);\n    let part = tv2_common_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.rawType,\n        metaData: {},\n        typeVariant: '',\n        expectedDuration: partTime > 0 ? partTime : 0\n    });\n    const adLibPieces = [];\n    const pieces = [];\n    if (partDefinition.rawType.match(/kam cs 3/i)) {\n        pieces.push(tv2_common_1.literal({\n            _id: '',\n            externalId: partDefinition.externalId,\n            name: 'CS 3 (JINGLE)',\n            enable: { start: 0 },\n            outputLayerId: 'pgm',\n            sourceLayerId: layers_2.SourceLayer.PgmJingle,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            content: {\n                studioLabel: '',\n                switcherInput: config.studio.AtemSource.JingleFill,\n                timelineObjects: tv2_common_1.literal([\n                    tv2_common_1.literal({\n                        id: ``,\n                        enable: {\n                            start: 0\n                        },\n                        priority: 1,\n                        layer: layers_1.AtemLLayer.AtemMEProgram,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: config.studio.AtemSource.JingleFill,\n                                transition: partDefinition.transition\n                                    ? tv2_common_1.TransitionFromString(partDefinition.transition.style)\n                                    : timeline_state_resolver_types_1.AtemTransitionStyle.CUT,\n                                transitionSettings: tv2_common_1.TransitionSettings(partDefinition)\n                            }\n                        }\n                    })\n                ])\n            }\n        }));\n        part.expectedDuration = Number(partDefinition.fields.totalTime) * 1000 || 0;\n    }\n    else {\n        const sourceInfoCam = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, partDefinition.rawType);\n        if (sourceInfoCam === undefined) {\n            return tv2_common_1.CreatePartInvalid(partDefinition);\n        }\n        const atemInput = sourceInfoCam.port;\n        part = Object.assign(Object.assign({}, part), effekt_1.CreateEffektForpart(context, config, partDefinition, pieces));\n        pieces.push(tv2_common_1.literal({\n            _id: '',\n            externalId: partDefinition.externalId,\n            name: part.title,\n            enable: { start: 0 },\n            outputLayerId: 'pgm',\n            sourceLayerId: layers_2.SourceLayer.PgmCam,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            metaData: tv2_common_1.GetCameraMetaData(config, tv2_common_1.GetLayersForCamera(config, sourceInfoCam)),\n            content: {\n                studioLabel: '',\n                switcherInput: atemInput,\n                timelineObjects: tv2_common_1.literal([\n                    tv2_common_1.literal(Object.assign({ id: ``, enable: {\n                            start: 0\n                        }, priority: 1, layer: layers_1.AtemLLayer.AtemMEProgram, content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: Number(atemInput),\n                                transition: partDefinition.transition\n                                    ? tv2_common_1.TransitionFromString(partDefinition.transition.style)\n                                    : timeline_state_resolver_types_1.AtemTransitionStyle.CUT,\n                                transitionSettings: tv2_common_1.TransitionSettings(partDefinition)\n                            }\n                        } }, (tv2_common_1.AddParentClass(partDefinition)\n                        ? { classes: [tv2_common_1.CameraParentClass('studio0', partDefinition.variant.name)] }\n                        : {}))),\n                    ...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, partDefinition.rawType)\n                ])\n            }\n        }));\n    }\n    evaluateCues_1.EvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, {});\n    tv2_common_1.AddScript(partDefinition, pieces, partTime, layers_2.SourceLayer.PgmScript);\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.CreatePartKam = CreatePartKam;\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(7);\nconst evaluateCues_1 = __webpack_require__(40);\nconst layers_2 = __webpack_require__(6);\nconst effekt_1 = __webpack_require__(79);\nfunction CreatePartServer(context, config, partDefinition, segmentExternalId) {\n    const basePartProps = tv2_common_1.CreatePartServerBase(context, config, partDefinition);\n    if (basePartProps.invalid) {\n        return basePartProps.part;\n    }\n    let part = basePartProps.part.part;\n    const pieces = basePartProps.part.pieces;\n    const adLibPieces = basePartProps.part.adLibPieces;\n    const file = basePartProps.file;\n    const duration = basePartProps.duration;\n    part = Object.assign(Object.assign({}, part), effekt_1.CreateEffektForpart(context, config, partDefinition, pieces));\n    tv2_common_1.AddScript(partDefinition, pieces, duration, layers_2.SourceLayer.PgmScript);\n    pieces.push(tv2_common_1.literal({\n        _id: '',\n        externalId: partDefinition.externalId,\n        name: file,\n        enable: { start: 0 },\n        outputLayerId: 'pgm',\n        sourceLayerId: layers_2.SourceLayer.PgmServer,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        metaData: tv2_common_1.literal({\n            mediaPlayerSessions: [segmentExternalId]\n        }),\n        content: tv2_common_1.MakeContentServer(file, segmentExternalId, partDefinition, config, {\n            Caspar: {\n                ClipPending: layers_1.CasparLLayer.CasparPlayerClipPending\n            },\n            Sisyfos: {\n                ClipPending: layers_1.SisyfosLLAyer.SisyfosSourceClipPending\n            },\n            ATEM: {\n                MEPGM: layers_1.AtemLLayer.AtemMEProgram\n            }\n        }),\n        adlibPreroll: config.studio.CasparPrerollDuration\n    }));\n    evaluateCues_1.EvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, {});\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.CreatePartServer = CreatePartServer;\n\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst evaluateCues_1 = __webpack_require__(40);\nconst layers_1 = __webpack_require__(6);\nfunction CreatePartTeknik(context, config, partDefinition, totalWords) {\n    const partTime = tv2_common_1.PartTime(config, partDefinition, totalWords, false);\n    const part = tv2_common_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.type + ' - ' + partDefinition.rawType,\n        metaData: {},\n        typeVariant: ''\n    });\n    const adLibPieces = [];\n    const pieces = [];\n    evaluateCues_1.EvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, {});\n    tv2_common_1.AddScript(partDefinition, pieces, partTime, layers_1.SourceLayer.PgmScript);\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.CreatePartTeknik = CreatePartTeknik;\n\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst evaluateCues_1 = __webpack_require__(40);\nconst layers_1 = __webpack_require__(6);\nconst effekt_1 = __webpack_require__(79);\nfunction CreatePartUnknown(context, config, partDefinition, totalWords, asAdlibs) {\n    const partTime = tv2_common_1.PartTime(config, partDefinition, totalWords, false);\n    let part = tv2_common_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.type + ' - ' + partDefinition.rawType,\n        metaData: {},\n        typeVariant: '',\n        autoNext: false,\n        expectedDuration: partTime\n    });\n    const adLibPieces = [];\n    const pieces = [];\n    part = Object.assign(Object.assign({}, part), effekt_1.CreateEffektForpart(context, config, partDefinition, pieces));\n    evaluateCues_1.EvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, { adlib: asAdlibs });\n    if (!asAdlibs) {\n        tv2_common_1.AddScript(partDefinition, pieces, partTime, layers_1.SourceLayer.PgmScript);\n    }\n    part = Object.assign(Object.assign({}, part), tv2_common_1.GetJinglePartProperties(context, config, partDefinition));\n    if (partDefinition.cues.filter(cue => cue.type === tv2_constants_1.CueType.MOS || cue.type === tv2_constants_1.CueType.Telefon || cue.type === tv2_constants_1.CueType.TargetEngine).length &&\n        !partDefinition.cues.filter(c => c.type === tv2_constants_1.CueType.Jingle).length) {\n        part.prerollDuration = config.studio.PilotPrerollDuration;\n        part.transitionKeepaliveDuration = config.studio.PilotKeepaliveDuration\n            ? Number(config.studio.PilotKeepaliveDuration)\n            : 60000;\n    }\n    else if (partDefinition.cues.filter(cue => cue.type === tv2_constants_1.CueType.DVE).length) {\n        part.prerollDuration = config.studio.CasparPrerollDuration;\n    }\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.CreatePartUnknown = CreatePartUnknown;\n\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(7);\nconst evaluateCues_1 = __webpack_require__(40);\nconst layers_2 = __webpack_require__(6);\nconst effekt_1 = __webpack_require__(79);\nfunction CreatePartVO(context, config, partDefinition, segmentExternalId, totalWords, totalTime) {\n    if (partDefinition.fields === undefined) {\n        context.warning('Video ID not set!');\n        return tv2_common_1.CreatePartInvalid(partDefinition);\n    }\n    if (!partDefinition.fields.videoId) {\n        context.warning('Video ID not set!');\n        return tv2_common_1.CreatePartInvalid(partDefinition);\n    }\n    const file = partDefinition.fields.videoId;\n    const duration = Number(partDefinition.fields.tapeTime) * 1000 || 0;\n    const sanitisedScript = partDefinition.script.replace(/\\n/g, '').replace(/\\r/g, '');\n    const actualDuration = (sanitisedScript.length / totalWords) * (totalTime * 1000 - duration) + duration;\n    let part = tv2_common_1.literal({\n        externalId: partDefinition.externalId,\n        title: `${partDefinition.rawType} - ${partDefinition.fields.videoId}`,\n        metaData: {},\n        typeVariant: '',\n        expectedDuration: actualDuration,\n        prerollDuration: config.studio.CasparPrerollDuration\n    });\n    const adLibPieces = [];\n    const pieces = [];\n    part = Object.assign(Object.assign({}, part), effekt_1.CreateEffektForpart(context, config, partDefinition, pieces));\n    const serverContent = tv2_common_1.MakeContentServer(file, segmentExternalId, partDefinition, config, {\n        Caspar: {\n            ClipPending: layers_1.CasparLLayer.CasparPlayerClipPending\n        },\n        Sisyfos: {\n            ClipPending: layers_1.SisyfosLLAyer.SisyfosSourceClipPending\n        },\n        ATEM: {\n            MEPGM: layers_1.AtemLLayer.AtemMEProgram\n        }\n    }, false);\n    serverContent.timelineObjects.push(...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, 'server'));\n    pieces.push(tv2_common_1.literal({\n        _id: '',\n        externalId: partDefinition.externalId,\n        name: part.title,\n        enable: { start: 0 },\n        outputLayerId: 'pgm',\n        sourceLayerId: layers_2.SourceLayer.PgmVoiceOver,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        metaData: tv2_common_1.literal({\n            mediaPlayerSessions: [segmentExternalId]\n        }),\n        content: serverContent,\n        adlibPreroll: config.studio.CasparPrerollDuration\n    }));\n    evaluateCues_1.EvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, {});\n    tv2_common_1.AddScript(partDefinition, pieces, actualDuration, layers_2.SourceLayer.PgmScript);\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.CreatePartVO = CreatePartVO;\n\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This function is called whenever an item in the as-run-log is created\n */\nfunction default_1(_context) {\n    return Promise.resolve([]);\n}\nexports.default = default_1;\n\n\n/***/ })\n/******/ ]);",
            "modified": 1590581732049,
            "studioConfigManifest": [],
            "showStyleConfigManifest": [
                {
                    "id": "MakeAdlibsForFulls",
                    "name": "Make Adlibs for FULL graphics",
                    "description": "",
                    "type": "boolean",
                    "defaultVal": true,
                    "required": false
                },
                {
                    "id": "CasparCGLoadingClip",
                    "name": "CasparCG Loading Clip",
                    "description": "Clip to play when media is loading",
                    "type": "string",
                    "defaultVal": "LoadingLoop",
                    "required": true
                },
                {
                    "id": "DVEStyles",
                    "name": "DVE Layouts",
                    "description": "",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "DVEName": "",
                            "DVEInputs": "",
                            "DVEJSON": "{}",
                            "DVEGraphicsTemplate": "",
                            "DVEGraphicsTemplateJSON": "{}",
                            "DVEGraphicsKey": "",
                            "DVEGraphicsFrame": ""
                        }
                    ],
                    "columns": [
                        {
                            "id": "DVEName",
                            "name": "DVE name",
                            "description": "The name as it will appear in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "DVEInputs",
                            "name": "Box inputs",
                            "description": "I.e.: 1:INP1;2:INP3; as an example to chose which ATEM boxes to assign iNews inputs to",
                            "type": "string",
                            "required": true,
                            "defaultVal": "1:INP1;2:INP2;3:INP3;4:INP4",
                            "rank": 1
                        },
                        {
                            "id": "DVEJSON",
                            "name": "DVE config",
                            "description": "DVE config pulled from ATEM",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 2
                        },
                        {
                            "id": "DVEGraphicsTemplate",
                            "name": "CasparCG template",
                            "description": "File name (path) for CasparCG overlay template (locators)",
                            "type": "string",
                            "required": true,
                            "defaultVal": "dve/locators",
                            "rank": 3
                        },
                        {
                            "id": "DVEGraphicsTemplateJSON",
                            "name": "CasparCG template config",
                            "description": "Position (and style) data for the boxes in the CasparCG template",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 4
                        },
                        {
                            "id": "DVEGraphicsKey",
                            "name": "CasparCG key file",
                            "description": "Key file for DVE",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 5
                        },
                        {
                            "id": "DVEGraphicsFrame",
                            "name": "CasparCG frame file",
                            "description": "Frames file for caspar",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 6
                        }
                    ]
                },
                {
                    "id": "GFXTemplates",
                    "name": "GFX Templates",
                    "description": "This table can contain info in two ways. Things marked (**) are always required. If you want to do the mapping from iNews-code, then all (*)-elements are aslo required. VizTemplate is what the graphic is called in viz. Source layer is the ID of the Sofie Source layer in the UI (i.e. \"studio0_graphicsTema\"). Layer mapping is the Sofie studio layer mapping (i.e \"viz_layer_tema\").  iNews command can be something like \"KG=\", then iNews Name is the thing that follows in iNes i.e. \"ident_nyhederne\"",
                    "type": "table",
                    "required": true,
                    "defaultVal": [
                        {
                            "_id": "",
                            "VizTemplate": "",
                            "SourceLayer": "",
                            "LayerMapping": "",
                            "INewsCode": "",
                            "INewsName": "",
                            "VizDestination": "",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        }
                    ],
                    "columns": [
                        {
                            "id": "INewsCode",
                            "name": "iNews Command (*)",
                            "description": "The code as it will appear in iNews",
                            "type": "string",
                            "required": false,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "INewsName",
                            "name": "iNews Name (*)",
                            "description": "The name after the code",
                            "type": "string",
                            "required": false,
                            "defaultVal": "",
                            "rank": 1
                        },
                        {
                            "id": "VizTemplate",
                            "name": "Viz Template Name (**)",
                            "description": "The name of the Viz Template",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 2
                        },
                        {
                            "id": "VizDestination",
                            "name": "Graphic Engine Destination (*)",
                            "description": "The name of the graphics engine to play this graphic on",
                            "type": "select",
                            "required": false,
                            "multiple": false,
                            "options": [
                                "OVL1",
                                "FULL1",
                                "WALL1"
                            ],
                            "defaultVal": "OVL1",
                            "rank": 3
                        },
                        {
                            "id": "OutType",
                            "name": "Out type",
                            "description": "The type of out, none follow timecode, S stays on to ??, B stays on to ??, O stays on to ??",
                            "type": "string",
                            "required": false,
                            "defaultVal": "",
                            "rank": 4
                        },
                        {
                            "id": "IsDesign",
                            "name": "Changes Design",
                            "description": "Whether this cue changes the design",
                            "type": "boolean",
                            "required": false,
                            "defaultVal": false,
                            "rank": 5
                        },
                        {
                            "id": "SourceLayer",
                            "name": "Source layer (**)",
                            "description": "The ID of the source layer to place the piece on in Sofie UI",
                            "type": "source_layers",
                            "multiple": false,
                            "required": true,
                            "defaultVal": "",
                            "rank": 6
                        },
                        {
                            "id": "LayerMapping",
                            "name": "Layer mapping (**)",
                            "description": "The Sofie Layer mapping to use in playback. This will ensure proper viz transition logic by matching the viz layers.",
                            "type": "layer_mappings",
                            "filters": {
                                "deviceTypes": [
                                    13
                                ]
                            },
                            "multiple": false,
                            "required": true,
                            "defaultVal": "",
                            "rank": 7
                        }
                    ]
                },
                {
                    "id": "WipesConfig",
                    "name": "Wipes Configuration",
                    "description": "Wipes effekts configuration",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "EffektNumber": 0,
                            "ClipName": "",
                            "Duration": 0,
                            "StartAlpha": 0,
                            "EndAlpha": 0
                        }
                    ],
                    "columns": [
                        {
                            "id": "EffektNumber",
                            "name": "Effekt Number",
                            "description": "The Effect Number",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 0
                        },
                        {
                            "id": "ClipName",
                            "name": "Clip Name",
                            "description": "The name of the wipe clip",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 1
                        },
                        {
                            "id": "Duration",
                            "name": "Effekt Duration",
                            "description": "Duration of the effekt",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 2
                        },
                        {
                            "id": "StartAlpha",
                            "name": "Alpha at Start",
                            "description": "Number of frames of alpha at start",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 3
                        },
                        {
                            "id": "EndAlpha",
                            "name": "Alpha at End",
                            "description": "Number of frames of alpha at end",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 4
                        }
                    ]
                },
                {
                    "id": "BreakerConfig",
                    "name": "Breaker Configuration",
                    "description": "Clip name is the clip name without file extension. Duration is the length of the file, including trailing audio. Alpha start is the number of frames from the first frame and until the jingle covers the full frame. The alpha end is how many frames from the alpha starts fading out, until the very end of the file.",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "BreakerName": "",
                            "ClipName": "",
                            "Duration": 0,
                            "StartAlpha": 0,
                            "EndAlpha": 0,
                            "Autonext": true
                        }
                    ],
                    "columns": [
                        {
                            "id": "BreakerName",
                            "name": "Breaker name",
                            "description": "Breaker name as typed in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "ClipName",
                            "name": "Clip Name",
                            "description": "The name of the breaker clip to play",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 1
                        },
                        {
                            "id": "Duration",
                            "name": "Effekt Duration",
                            "description": "Duration of the effekt",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 2
                        },
                        {
                            "id": "StartAlpha",
                            "name": "Alpha at Start",
                            "description": "Number of frames of alpha at start",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 3
                        },
                        {
                            "id": "EndAlpha",
                            "name": "Alpha at End",
                            "description": "Number of frames of alpha at end",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 4
                        },
                        {
                            "id": "Autonext",
                            "name": "Autonext",
                            "description": "",
                            "type": "boolean",
                            "required": true,
                            "defaultVal": true,
                            "rank": 5
                        }
                    ]
                },
                {
                    "id": "DefaultTemplateDuration",
                    "name": "Default Template Duration",
                    "description": "Default Template Duration",
                    "type": "number",
                    "required": true,
                    "defaultVal": 4
                },
                {
                    "id": "LYDConfig",
                    "name": "LYD Config",
                    "description": "Map LYD iNews names to file names",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "INewsName": "",
                            "FileName": ""
                        }
                    ],
                    "columns": [
                        {
                            "id": "INewsName",
                            "name": "iNews Name",
                            "description": "Name of LYD as in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "FileName",
                            "name": "File Name",
                            "description": "The name of the LYD file",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 1
                        },
                        {
                            "id": "FadeIn",
                            "name": "Fade In",
                            "description": "ms duration to fade in file",
                            "type": "number",
                            "required": true,
                            "defaultVal": 1000,
                            "rank": 2
                        },
                        {
                            "id": "FadeOut",
                            "name": "Fade Out",
                            "description": "ms duration to fade out file",
                            "type": "number",
                            "required": true,
                            "defaultVal": 1000,
                            "rank": 3
                        }
                    ]
                }
            ],
            "databaseVersion": {
                "studio": {},
                "showStyle": {
                    "show0": "0.1.0"
                }
            },
            "blueprintVersion": "0.1.0+v1.1.9",
            "integrationVersion": "0.0.0",
            "TSRVersion": "0.0.0",
            "minimumCoreVersion": "1.2.0",
            "blueprintType": "showstyle"
        },
        {
            "_id": "tv2_system",
            "name": "tv2_system",
            "created": 1574442209223,
            "code": "/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 142);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 1:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(25), exports);\ntslib_1.__exportStar(__webpack_require__(26), exports);\ntslib_1.__exportStar(__webpack_require__(27), exports);\ntslib_1.__exportStar(__webpack_require__(28), exports);\ntslib_1.__exportStar(__webpack_require__(29), exports);\ntslib_1.__exportStar(__webpack_require__(30), exports);\ntslib_1.__exportStar(__webpack_require__(31), exports);\ntslib_1.__exportStar(__webpack_require__(32), exports);\ntslib_1.__exportStar(__webpack_require__(33), exports);\ntslib_1.__exportStar(__webpack_require__(34), exports);\ntslib_1.__exportStar(__webpack_require__(35), exports);\ntslib_1.__exportStar(__webpack_require__(36), exports);\ntslib_1.__exportStar(__webpack_require__(37), exports);\nconst Timeline = __webpack_require__(38);\nexports.Timeline = Timeline;\nvar DeviceType;\n(function (DeviceType) {\n    DeviceType[DeviceType[\"ABSTRACT\"] = 0] = \"ABSTRACT\";\n    DeviceType[DeviceType[\"CASPARCG\"] = 1] = \"CASPARCG\";\n    DeviceType[DeviceType[\"ATEM\"] = 2] = \"ATEM\";\n    DeviceType[DeviceType[\"LAWO\"] = 3] = \"LAWO\";\n    DeviceType[DeviceType[\"HTTPSEND\"] = 4] = \"HTTPSEND\";\n    DeviceType[DeviceType[\"PANASONIC_PTZ\"] = 5] = \"PANASONIC_PTZ\";\n    DeviceType[DeviceType[\"TCPSEND\"] = 6] = \"TCPSEND\";\n    DeviceType[DeviceType[\"HYPERDECK\"] = 7] = \"HYPERDECK\";\n    DeviceType[DeviceType[\"PHAROS\"] = 8] = \"PHAROS\";\n    DeviceType[DeviceType[\"OSC\"] = 9] = \"OSC\";\n    DeviceType[DeviceType[\"HTTPWATCHER\"] = 10] = \"HTTPWATCHER\";\n    DeviceType[DeviceType[\"SISYFOS\"] = 11] = \"SISYFOS\";\n    DeviceType[DeviceType[\"QUANTEL\"] = 12] = \"QUANTEL\";\n    DeviceType[DeviceType[\"VIZMSE\"] = 13] = \"VIZMSE\";\n    DeviceType[DeviceType[\"SINGULAR_LIVE\"] = 14] = \"SINGULAR_LIVE\";\n})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 142:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst manifest = {\n    blueprintType: tv_automation_sofie_blueprints_integration_1.BlueprintManifestType.SYSTEM,\n    blueprintVersion: \"0.1.0+v1.1.9\",\n    integrationVersion: \"0.0.0\",\n    TSRVersion: \"0.0.0\",\n    minimumCoreVersion: '1.2.0'\n};\nexports.default = manifest;\n\n\n/***/ }),\n\n/***/ 17:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BlueprintManifestType;\n(function (BlueprintManifestType) {\n    BlueprintManifestType[\"SYSTEM\"] = \"system\";\n    BlueprintManifestType[\"STUDIO\"] = \"studio\";\n    BlueprintManifestType[\"SHOWSTYLE\"] = \"showstyle\";\n})(BlueprintManifestType = exports.BlueprintManifestType || (exports.BlueprintManifestType = {}));\n//# sourceMappingURL=api.js.map\n\n/***/ }),\n\n/***/ 18:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IBlueprintAsRunLogEventContent;\n(function (IBlueprintAsRunLogEventContent) {\n    IBlueprintAsRunLogEventContent[\"STARTEDPLAYBACK\"] = \"startedPlayback\";\n    IBlueprintAsRunLogEventContent[\"STOPPEDPLAYBACK\"] = \"stoppedPlayback\";\n})(IBlueprintAsRunLogEventContent = exports.IBlueprintAsRunLogEventContent || (exports.IBlueprintAsRunLogEventContent = {}));\n//# sourceMappingURL=asRunLog.js.map\n\n/***/ }),\n\n/***/ 19:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConfigManifestEntryType;\n(function (ConfigManifestEntryType) {\n    ConfigManifestEntryType[\"STRING\"] = \"string\";\n    ConfigManifestEntryType[\"NUMBER\"] = \"number\";\n    ConfigManifestEntryType[\"BOOLEAN\"] = \"boolean\";\n    ConfigManifestEntryType[\"ENUM\"] = \"enum\";\n    ConfigManifestEntryType[\"TABLE\"] = \"table\";\n    ConfigManifestEntryType[\"SELECT\"] = \"select\";\n    ConfigManifestEntryType[\"SOURCE_LAYERS\"] = \"source_layers\";\n    ConfigManifestEntryType[\"LAYER_MAPPINGS\"] = \"layer_mappings\";\n})(ConfigManifestEntryType = exports.ConfigManifestEntryType || (exports.ConfigManifestEntryType = {}));\n//# sourceMappingURL=config.js.map\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(17), exports);\ntslib_1.__exportStar(__webpack_require__(18), exports);\ntslib_1.__exportStar(__webpack_require__(19), exports);\ntslib_1.__exportStar(__webpack_require__(20), exports);\ntslib_1.__exportStar(__webpack_require__(21), exports);\ntslib_1.__exportStar(__webpack_require__(22), exports);\ntslib_1.__exportStar(__webpack_require__(23), exports);\ntslib_1.__exportStar(__webpack_require__(24), exports);\ntslib_1.__exportStar(__webpack_require__(39), exports);\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** The type of the source layer, used to enable specific functions for special-type layers */\nvar SourceLayerType;\n(function (SourceLayerType) {\n    SourceLayerType[SourceLayerType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    SourceLayerType[SourceLayerType[\"CAMERA\"] = 1] = \"CAMERA\";\n    SourceLayerType[SourceLayerType[\"VT\"] = 2] = \"VT\";\n    SourceLayerType[SourceLayerType[\"REMOTE\"] = 3] = \"REMOTE\";\n    SourceLayerType[SourceLayerType[\"SCRIPT\"] = 4] = \"SCRIPT\";\n    SourceLayerType[SourceLayerType[\"GRAPHICS\"] = 5] = \"GRAPHICS\";\n    SourceLayerType[SourceLayerType[\"SPLITS\"] = 6] = \"SPLITS\";\n    SourceLayerType[SourceLayerType[\"AUDIO\"] = 7] = \"AUDIO\";\n    SourceLayerType[SourceLayerType[\"CAMERA_MOVEMENT\"] = 8] = \"CAMERA_MOVEMENT\";\n    SourceLayerType[SourceLayerType[\"METADATA\"] = 9] = \"METADATA\";\n    SourceLayerType[SourceLayerType[\"LOWER_THIRD\"] = 10] = \"LOWER_THIRD\";\n    SourceLayerType[SourceLayerType[\"LIVE_SPEAK\"] = 11] = \"LIVE_SPEAK\";\n    SourceLayerType[SourceLayerType[\"MIC\"] = 12] = \"MIC\";\n    SourceLayerType[SourceLayerType[\"TRANSITION\"] = 13] = \"TRANSITION\";\n    SourceLayerType[SourceLayerType[\"LIGHTS\"] = 14] = \"LIGHTS\";\n})(SourceLayerType = exports.SourceLayerType || (exports.SourceLayerType = {}));\n//# sourceMappingURL=content.js.map\n\n/***/ }),\n\n/***/ 21:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IBlueprintExternalMessageQueueType;\n(function (IBlueprintExternalMessageQueueType) {\n    IBlueprintExternalMessageQueueType[\"SOAP\"] = \"soap\";\n    IBlueprintExternalMessageQueueType[\"SLACK\"] = \"slack\";\n    IBlueprintExternalMessageQueueType[\"RABBIT_MQ\"] = \"rabbitmq\";\n})(IBlueprintExternalMessageQueueType = exports.IBlueprintExternalMessageQueueType || (exports.IBlueprintExternalMessageQueueType = {}));\n//# sourceMappingURL=message.js.map\n\n/***/ }),\n\n/***/ 22:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PartHoldMode;\n(function (PartHoldMode) {\n    PartHoldMode[PartHoldMode[\"NONE\"] = 0] = \"NONE\";\n    PartHoldMode[PartHoldMode[\"FROM\"] = 1] = \"FROM\";\n    PartHoldMode[PartHoldMode[\"TO\"] = 2] = \"TO\";\n})(PartHoldMode = exports.PartHoldMode || (exports.PartHoldMode = {}));\nvar PieceLifespan;\n(function (PieceLifespan) {\n    PieceLifespan[PieceLifespan[\"Normal\"] = 0] = \"Normal\";\n    PieceLifespan[PieceLifespan[\"OutOnNextPart\"] = 1] = \"OutOnNextPart\";\n    PieceLifespan[PieceLifespan[\"OutOnNextSegment\"] = 2] = \"OutOnNextSegment\";\n    PieceLifespan[PieceLifespan[\"Infinite\"] = 3] = \"Infinite\";\n})(PieceLifespan = exports.PieceLifespan || (exports.PieceLifespan = {}));\n//# sourceMappingURL=rundown.js.map\n\n/***/ }),\n\n/***/ 23:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LookaheadMode;\n(function (LookaheadMode) {\n    LookaheadMode[LookaheadMode[\"NONE\"] = 0] = \"NONE\";\n    LookaheadMode[LookaheadMode[\"PRELOAD\"] = 1] = \"PRELOAD\";\n    LookaheadMode[LookaheadMode[\"RETAIN\"] = 2] = \"RETAIN\";\n    LookaheadMode[LookaheadMode[\"WHEN_CLEAR\"] = 3] = \"WHEN_CLEAR\";\n})(LookaheadMode = exports.LookaheadMode || (exports.LookaheadMode = {}));\n//# sourceMappingURL=studio.js.map\n\n/***/ }),\n\n/***/ 24:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nexports.Timeline = timeline_state_resolver_types_1.Timeline;\nvar PlayoutTimelinePrefixes;\n(function (PlayoutTimelinePrefixes) {\n    PlayoutTimelinePrefixes[\"PART_GROUP_PREFIX\"] = \"part_group_\";\n    PlayoutTimelinePrefixes[\"PART_GROUP_FIRST_ITEM_PREFIX\"] = \"part_group_firstobject_\";\n    PlayoutTimelinePrefixes[\"PIECE_GROUP_PREFIX\"] = \"piece_group_\";\n    PlayoutTimelinePrefixes[\"PIECE_GROUP_FIRST_ITEM_PREFIX\"] = \"piece_group_firstobject_\";\n})(PlayoutTimelinePrefixes = exports.PlayoutTimelinePrefixes || (exports.PlayoutTimelinePrefixes = {}));\nfunction getPartGroupId(part) {\n    if (typeof part === 'string') {\n        return PlayoutTimelinePrefixes.PART_GROUP_PREFIX + part;\n    }\n    return PlayoutTimelinePrefixes.PART_GROUP_PREFIX + part._id;\n}\nexports.getPartGroupId = getPartGroupId;\nfunction getPieceGroupId(piece) {\n    if (typeof piece === 'string') {\n        return PlayoutTimelinePrefixes.PIECE_GROUP_PREFIX + piece;\n    }\n    return PlayoutTimelinePrefixes.PIECE_GROUP_PREFIX + piece._id;\n}\nexports.getPieceGroupId = getPieceGroupId;\nfunction getPartFirstObjectId(part) {\n    if (typeof part === 'string') {\n        return PlayoutTimelinePrefixes.PART_GROUP_FIRST_ITEM_PREFIX + part;\n    }\n    return PlayoutTimelinePrefixes.PART_GROUP_FIRST_ITEM_PREFIX + part._id;\n}\nexports.getPartFirstObjectId = getPartFirstObjectId;\nfunction getPieceFirstObjectId(piece) {\n    if (typeof piece === 'string') {\n        return PlayoutTimelinePrefixes.PIECE_GROUP_FIRST_ITEM_PREFIX + piece;\n    }\n    return PlayoutTimelinePrefixes.PIECE_GROUP_FIRST_ITEM_PREFIX + piece._id;\n}\nexports.getPieceFirstObjectId = getPieceFirstObjectId;\nvar TimelineObjHoldMode;\n(function (TimelineObjHoldMode) {\n    TimelineObjHoldMode[TimelineObjHoldMode[\"NORMAL\"] = 0] = \"NORMAL\";\n    TimelineObjHoldMode[TimelineObjHoldMode[\"ONLY\"] = 1] = \"ONLY\";\n    TimelineObjHoldMode[TimelineObjHoldMode[\"EXCEPT\"] = 2] = \"EXCEPT\"; // Only use when not in HOLD\n})(TimelineObjHoldMode = exports.TimelineObjHoldMode || (exports.TimelineObjHoldMode = {}));\n//# sourceMappingURL=timeline.js.map\n\n/***/ }),\n\n/***/ 25:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingAtemType;\n(function (MappingAtemType) {\n    MappingAtemType[MappingAtemType[\"MixEffect\"] = 0] = \"MixEffect\";\n    MappingAtemType[MappingAtemType[\"DownStreamKeyer\"] = 1] = \"DownStreamKeyer\";\n    MappingAtemType[MappingAtemType[\"SuperSourceBox\"] = 2] = \"SuperSourceBox\";\n    MappingAtemType[MappingAtemType[\"Auxilliary\"] = 3] = \"Auxilliary\";\n    MappingAtemType[MappingAtemType[\"MediaPlayer\"] = 4] = \"MediaPlayer\";\n    MappingAtemType[MappingAtemType[\"SuperSourceProperties\"] = 5] = \"SuperSourceProperties\";\n    MappingAtemType[MappingAtemType[\"AudioChannel\"] = 6] = \"AudioChannel\";\n    MappingAtemType[MappingAtemType[\"MacroPlayer\"] = 7] = \"MacroPlayer\";\n})(MappingAtemType = exports.MappingAtemType || (exports.MappingAtemType = {}));\nvar TimelineContentTypeAtem;\n(function (TimelineContentTypeAtem) {\n    TimelineContentTypeAtem[\"ME\"] = \"me\";\n    TimelineContentTypeAtem[\"DSK\"] = \"dsk\";\n    TimelineContentTypeAtem[\"AUX\"] = \"aux\";\n    TimelineContentTypeAtem[\"SSRC\"] = \"ssrc\";\n    TimelineContentTypeAtem[\"SSRCPROPS\"] = \"ssrcProps\";\n    TimelineContentTypeAtem[\"MEDIAPLAYER\"] = \"mp\";\n    TimelineContentTypeAtem[\"AUDIOCHANNEL\"] = \"audioChan\";\n    TimelineContentTypeAtem[\"MACROPLAYER\"] = \"macroPlayer\";\n})(TimelineContentTypeAtem = exports.TimelineContentTypeAtem || (exports.TimelineContentTypeAtem = {}));\nvar AtemTransitionStyle;\n(function (AtemTransitionStyle) {\n    AtemTransitionStyle[AtemTransitionStyle[\"MIX\"] = 0] = \"MIX\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DIP\"] = 1] = \"DIP\";\n    AtemTransitionStyle[AtemTransitionStyle[\"WIPE\"] = 2] = \"WIPE\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DVE\"] = 3] = \"DVE\";\n    AtemTransitionStyle[AtemTransitionStyle[\"STING\"] = 4] = \"STING\";\n    AtemTransitionStyle[AtemTransitionStyle[\"CUT\"] = 5] = \"CUT\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DUMMY\"] = 6] = \"DUMMY\";\n})(AtemTransitionStyle = exports.AtemTransitionStyle || (exports.AtemTransitionStyle = {}));\n//# sourceMappingURL=atem.js.map\n\n/***/ }),\n\n/***/ 26:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeCasparCg;\n(function (TimelineContentTypeCasparCg) {\n    TimelineContentTypeCasparCg[\"MEDIA\"] = \"media\";\n    TimelineContentTypeCasparCg[\"IP\"] = \"ip\";\n    TimelineContentTypeCasparCg[\"INPUT\"] = \"input\";\n    TimelineContentTypeCasparCg[\"TEMPLATE\"] = \"template\";\n    TimelineContentTypeCasparCg[\"HTMLPAGE\"] = \"htmlpage\";\n    TimelineContentTypeCasparCg[\"ROUTE\"] = \"route\";\n    TimelineContentTypeCasparCg[\"RECORD\"] = \"record\";\n})(TimelineContentTypeCasparCg = exports.TimelineContentTypeCasparCg || (exports.TimelineContentTypeCasparCg = {}));\n// Note: enums copied from casparcg-connection\nvar Transition;\n(function (Transition) {\n    Transition[\"MIX\"] = \"MIX\";\n    Transition[\"CUT\"] = \"CUT\";\n    Transition[\"PUSH\"] = \"PUSH\";\n    Transition[\"WIPE\"] = \"WIPE\";\n    Transition[\"SLIDE\"] = \"SLIDE\";\n    Transition[\"STING\"] = \"STING\";\n})(Transition = exports.Transition || (exports.Transition = {}));\nvar Ease;\n(function (Ease) {\n    Ease[\"LINEAR\"] = \"LINEAR\";\n    Ease[\"NONE\"] = \"NONE\";\n    Ease[\"EASEINBACK\"] = \"EASEINBACK\";\n    Ease[\"EASEINBOUNCE\"] = \"EASEINBOUNCE\";\n    Ease[\"EASEINCIRC\"] = \"EASEINCIRC\";\n    Ease[\"EASEINCUBIC\"] = \"EASEINCUBIC\";\n    Ease[\"EASEINELASTIC\"] = \"EASEINELASTIC\";\n    Ease[\"EASEINEXPO\"] = \"EASEINEXPO\";\n    Ease[\"EASEINOUTBACK\"] = \"EASEINOUTBACK\";\n    Ease[\"EASEINOUTBOUNCE\"] = \"EASEINOUTBOUNCE\";\n    Ease[\"EASEINOUTCIRC\"] = \"EASEINOUTCIRC\";\n    Ease[\"EASEINOUTCUBIC\"] = \"EASEINOUTCUBIC\";\n    Ease[\"EASEINOUTELASTIC\"] = \"EASEINOUTELASTIC\";\n    Ease[\"EASEINOUTEXPO\"] = \"EASEINOUTEXPO\";\n    Ease[\"EASEINOUTQUAD\"] = \"EASEINOUTQUAD\";\n    Ease[\"EASEINOUTQUART\"] = \"EASEINOUTQUART\";\n    Ease[\"EASEINOUTQUINT\"] = \"EASEINOUTQUINT\";\n    Ease[\"EASEINOUTSINE\"] = \"EASEINOUTSINE\";\n    Ease[\"EASEINQUAD\"] = \"EASEINQUAD\";\n    Ease[\"EASEINQUART\"] = \"EASEINQUART\";\n    Ease[\"EASEINQUINT\"] = \"EASEINQUINT\";\n    Ease[\"EASEINSINE\"] = \"EASEINSINE\";\n    Ease[\"EASELINEAR\"] = \"EASELINEAR\";\n    Ease[\"EASENONE\"] = \"EASENONE\";\n    Ease[\"EASEOUTBACK\"] = \"EASEOUTBACK\";\n    Ease[\"EASEOUTBOUNCE\"] = \"EASEOUTBOUNCE\";\n    Ease[\"EASEOUTCIRC\"] = \"EASEOUTCIRC\";\n    Ease[\"EASEOUTCUBIC\"] = \"EASEOUTCUBIC\";\n    Ease[\"EASEOUTELASTIC\"] = \"EASEOUTELASTIC\";\n    Ease[\"EASEOUTEXPO\"] = \"EASEOUTEXPO\";\n    Ease[\"EASEOUTINBACK\"] = \"EASEOUTINBACK\";\n    Ease[\"EASEOUTINBOUNCE\"] = \"EASEOUTINBOUNCE\";\n    Ease[\"EASEOUTINCIRC\"] = \"EASEOUTINCIRC\";\n    Ease[\"EASEOUTINCUBIC\"] = \"EASEOUTINCUBIC\";\n    Ease[\"EASEOUTINELASTIC\"] = \"EASEOUTINELASTIC\";\n    Ease[\"EASEOUTINEXPO\"] = \"EASEOUTINEXPO\";\n    Ease[\"EASEOUTINQUAD\"] = \"EASEOUTINQUAD\";\n    Ease[\"EASEOUTINQUART\"] = \"EASEOUTINQUART\";\n    Ease[\"EASEOUTINQUINT\"] = \"EASEOUTINQUINT\";\n    Ease[\"EASEOUTINSINE\"] = \"EASEOUTINSINE\";\n    Ease[\"EASEOUTQUAD\"] = \"EASEOUTQUAD\";\n    Ease[\"EASEOUTQUART\"] = \"EASEOUTQUART\";\n    Ease[\"EASEOUTQUINT\"] = \"EASEOUTQUINT\";\n    Ease[\"EASEOUTSINE\"] = \"EASEOUTSINE\";\n    Ease[\"IN_BACK\"] = \"IN_BACK\";\n    Ease[\"IN_BOUNCE\"] = \"IN_BOUNCE\";\n    Ease[\"IN_CIRC\"] = \"IN_CIRC\";\n    Ease[\"IN_CUBIC\"] = \"IN_CUBIC\";\n    Ease[\"IN_ELASTIC\"] = \"IN_ELASTIC\";\n    Ease[\"IN_EXPO\"] = \"IN_EXPO\";\n    Ease[\"IN_OUT_BACK\"] = \"IN_OUT_BACK\";\n    Ease[\"IN_OUT_BOUNCE\"] = \"IN_OUT_BOUNCE\";\n    Ease[\"IN_OUT_CIRC\"] = \"IN_OUT_CIRC\";\n    Ease[\"IN_OUT_CUBIC\"] = \"IN_OUT_CUBIC\";\n    Ease[\"IN_OUT_ELASTIC\"] = \"IN_OUT_ELASTIC\";\n    Ease[\"IN_OUT_EXPO\"] = \"IN_OUT_EXPO\";\n    Ease[\"IN_OUT_QUAD\"] = \"IN_OUT_QUAD\";\n    Ease[\"IN_OUT_QUART\"] = \"IN_OUT_QUART\";\n    Ease[\"IN_OUT_QUINT\"] = \"IN_OUT_QUINT\";\n    Ease[\"IN_OUT_SINE\"] = \"IN_OUT_SINE\";\n    Ease[\"IN_QUAD\"] = \"IN_QUAD\";\n    Ease[\"IN_QUART\"] = \"IN_QUART\";\n    Ease[\"IN_QUINT\"] = \"IN_QUINT\";\n    Ease[\"IN_SINE\"] = \"IN_SINE\";\n    Ease[\"OUT_BACK\"] = \"OUT_BACK\";\n    Ease[\"OUT_BOUNCE\"] = \"OUT_BOUNCE\";\n    Ease[\"OUT_CIRC\"] = \"OUT_CIRC\";\n    Ease[\"OUT_CUBIC\"] = \"OUT_CUBIC\";\n    Ease[\"OUT_ELASTIC\"] = \"OUT_ELASTIC\";\n    Ease[\"OUT_EXPO\"] = \"OUT_EXPO\";\n    Ease[\"OUT_IN_BACK\"] = \"OUT_IN_BACK\";\n    Ease[\"OUT_IN_BOUNCE\"] = \"OUT_IN_BOUNCE\";\n    Ease[\"OUT_IN_CIRC\"] = \"OUT_IN_CIRC\";\n    Ease[\"OUT_IN_CUBIC\"] = \"OUT_IN_CUBIC\";\n    Ease[\"OUT_IN_ELASTIC\"] = \"OUT_IN_ELASTIC\";\n    Ease[\"OUT_IN_EXPO\"] = \"OUT_IN_EXPO\";\n    Ease[\"OUT_IN_QUAD\"] = \"OUT_IN_QUAD\";\n    Ease[\"OUT_IN_QUART\"] = \"OUT_IN_QUART\";\n    Ease[\"OUT_IN_QUINT\"] = \"OUT_IN_QUINT\";\n    Ease[\"OUT_IN_SINE\"] = \"OUT_IN_SINE\";\n    Ease[\"OUT_QUAD\"] = \"OUT_QUAD\";\n    Ease[\"OUT_QUART\"] = \"OUT_QUART\";\n    Ease[\"OUT_QUINT\"] = \"OUT_QUINT\";\n})(Ease = exports.Ease || (exports.Ease = {}));\nvar Direction;\n(function (Direction) {\n    Direction[\"LEFT\"] = \"LEFT\";\n    Direction[\"RIGHT\"] = \"RIGHT\";\n})(Direction = exports.Direction || (exports.Direction = {}));\nvar BlendMode;\n(function (BlendMode) {\n    BlendMode[\"ADD\"] = \"ADD\";\n    BlendMode[\"AVERAGE\"] = \"AVERAGE\";\n    BlendMode[\"COLOR\"] = \"COLOR\";\n    BlendMode[\"COLOR_BURN\"] = \"COLOR_BURN\";\n    BlendMode[\"COLOR_DODGE\"] = \"COLOR_DODGE\";\n    BlendMode[\"CONTRAST\"] = \"CONTRAST\";\n    BlendMode[\"DARKEN\"] = \"DARKEN\";\n    BlendMode[\"DIFFERENCE\"] = \"DIFFERENCE\";\n    BlendMode[\"EXCLUSION\"] = \"EXCLUSION\";\n    BlendMode[\"GLOW\"] = \"GLOW\";\n    BlendMode[\"HARD_LIGHT\"] = \"HARD_LIGHT\";\n    BlendMode[\"HARD_MIX\"] = \"HARD_MIX\";\n    BlendMode[\"LIGHTEN\"] = \"LIGHTEN\";\n    BlendMode[\"LINEAR_BURN\"] = \"LINEAR_BURN\";\n    BlendMode[\"LINEAR_DODGE\"] = \"LINEAR_DODGE\";\n    BlendMode[\"LINEAR_LIGHT\"] = \"LINEAR_LIGHT\";\n    BlendMode[\"LUMINOSITY\"] = \"LUMINOSITY\";\n    BlendMode[\"MULTIPLY\"] = \"MULTIPLY\";\n    BlendMode[\"NEGATION\"] = \"NEGATION\";\n    BlendMode[\"NORMAL\"] = \"NORMAL\";\n    BlendMode[\"OVERLAY\"] = \"OVERLAY\";\n    BlendMode[\"PHOENIX\"] = \"PHOENIX\";\n    BlendMode[\"PIN_LIGHT\"] = \"PIN_LIGHT\";\n    BlendMode[\"REFLECT\"] = \"REFLECT\";\n    BlendMode[\"SATURATION\"] = \"SATURATION\";\n    BlendMode[\"SCREEN\"] = \"SCREEN\";\n    BlendMode[\"SOFT_LIGHT\"] = \"SOFT_LIGHT\";\n    BlendMode[\"SUBTRACT\"] = \"SUBTRACT\";\n    BlendMode[\"VIVID_LIGHT\"] = \"VIVID_LIGHT\";\n})(BlendMode = exports.BlendMode || (exports.BlendMode = {}));\nvar ChannelFormat;\n(function (ChannelFormat) {\n    ChannelFormat[\"PAL\"] = \"PAL\";\n    ChannelFormat[\"NTSC\"] = \"NTSC\";\n    ChannelFormat[\"SD_576P2500\"] = \"SD_576P2500\";\n    ChannelFormat[\"HD_720P2398\"] = \"HD_720P2398\";\n    ChannelFormat[\"HD_720P2400\"] = \"HD_720P2400\";\n    ChannelFormat[\"HD_720P2500\"] = \"HD_720P2500\";\n    ChannelFormat[\"HD_720P2997\"] = \"HD_720P2997\";\n    ChannelFormat[\"HD_720P3000\"] = \"HD_720P3000\";\n    ChannelFormat[\"HD_720P5000\"] = \"HD_720P5000\";\n    ChannelFormat[\"HD_720P5994\"] = \"HD_720P5994\";\n    ChannelFormat[\"HD_720P6000\"] = \"HD_720P6000\";\n    ChannelFormat[\"HD_1080I5000\"] = \"HD_1080I5000\";\n    ChannelFormat[\"HD_1080I5994\"] = \"HD_1080I5994\";\n    ChannelFormat[\"HD_1080I6000\"] = \"HD_1080I6000\";\n    ChannelFormat[\"HD_1080P2398\"] = \"HD_1080P2398\";\n    ChannelFormat[\"HD_1080P2400\"] = \"HD_1080P2400\";\n    ChannelFormat[\"HD_1080P2500\"] = \"HD_1080P2500\";\n    ChannelFormat[\"HD_1080P2997\"] = \"HD_1080P2997\";\n    ChannelFormat[\"HD_1080P3000\"] = \"HD_1080P3000\";\n    ChannelFormat[\"HD_1080P5000\"] = \"HD_1080P5000\";\n    ChannelFormat[\"HD_1080P5994\"] = \"HD_1080P5994\";\n    ChannelFormat[\"HD_1080P6000\"] = \"HD_1080P6000\";\n    ChannelFormat[\"DCI_1080P2398\"] = \"DCI_1080P2398\";\n    ChannelFormat[\"DCI_1080P2400\"] = \"DCI_1080P2400\";\n    ChannelFormat[\"DCI_1080P2500\"] = \"DCI_1080P2500\";\n    ChannelFormat[\"DCI_2160P2398\"] = \"DCI_2160P2398\";\n    ChannelFormat[\"DCI_2160P2400\"] = \"DCI_2160P2400\";\n    ChannelFormat[\"DCI_2160P2500\"] = \"DCI_2160P2500\";\n    ChannelFormat[\"UCH_2160P2400\"] = \"UCH_2160P2400\";\n    ChannelFormat[\"UHD_1556P2398\"] = \"UHD_1556P2398\";\n    ChannelFormat[\"UHD_1556P2400\"] = \"UHD_1556P2400\";\n    ChannelFormat[\"UHD_1556P2500\"] = \"UHD_1556P2500\";\n    ChannelFormat[\"UHD_2160P2398\"] = \"UHD_2160P2398\";\n    ChannelFormat[\"UHD_2160P2500\"] = \"UHD_2160P2500\";\n    ChannelFormat[\"UHD_2160P2997\"] = \"UHD_2160P2997\";\n    ChannelFormat[\"UHD_2160P3000\"] = \"UHD_2160P3000\";\n    ChannelFormat[\"UHD_2160P5000\"] = \"UHD_2160P5000\";\n    ChannelFormat[\"UHD_2160P5994\"] = \"UHD_2160P5994\";\n    ChannelFormat[\"INVALID\"] = \"INVALID\";\n})(ChannelFormat = exports.ChannelFormat || (exports.ChannelFormat = {}));\nvar Chroma;\n(function (Chroma) {\n    Chroma[\"BLUE\"] = \"BLUE\";\n    Chroma[\"GREEN\"] = \"GREEN\";\n    Chroma[\"NONE\"] = \"NONE\";\n})(Chroma = exports.Chroma || (exports.Chroma = {}));\n//# sourceMappingURL=casparcg.js.map\n\n/***/ }),\n\n/***/ 27:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeHTTP;\n(function (TimelineContentTypeHTTP) {\n    TimelineContentTypeHTTP[\"GET\"] = \"get\";\n    TimelineContentTypeHTTP[\"POST\"] = \"post\";\n    TimelineContentTypeHTTP[\"PUT\"] = \"put\";\n    TimelineContentTypeHTTP[\"DELETE\"] = \"delete\";\n})(TimelineContentTypeHTTP = exports.TimelineContentTypeHTTP || (exports.TimelineContentTypeHTTP = {}));\n//# sourceMappingURL=httpSend.js.map\n\n/***/ }),\n\n/***/ 28:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingHyperdeckType;\n(function (MappingHyperdeckType) {\n    MappingHyperdeckType[\"TRANSPORT\"] = \"transport\";\n})(MappingHyperdeckType = exports.MappingHyperdeckType || (exports.MappingHyperdeckType = {}));\nvar TimelineContentTypeHyperdeck;\n(function (TimelineContentTypeHyperdeck) {\n    TimelineContentTypeHyperdeck[\"TRANSPORT\"] = \"transport\";\n})(TimelineContentTypeHyperdeck = exports.TimelineContentTypeHyperdeck || (exports.TimelineContentTypeHyperdeck = {}));\n// Note: These are copied from hyperdeck-connection -----------\nvar TransportStatus;\n(function (TransportStatus) {\n    TransportStatus[\"PREVIEW\"] = \"preview\";\n    TransportStatus[\"STOPPED\"] = \"stopped\";\n    TransportStatus[\"PLAY\"] = \"play\";\n    TransportStatus[\"FORWARD\"] = \"forward\";\n    TransportStatus[\"REWIND\"] = \"rewind\";\n    TransportStatus[\"JOG\"] = \"jog\";\n    TransportStatus[\"SHUTTLE\"] = \"shuttle\";\n    TransportStatus[\"RECORD\"] = \"record\";\n})(TransportStatus = exports.TransportStatus || (exports.TransportStatus = {}));\nvar SlotId;\n(function (SlotId) {\n    SlotId[SlotId[\"ONE\"] = 1] = \"ONE\";\n    SlotId[SlotId[\"TWO\"] = 2] = \"TWO\";\n})(SlotId = exports.SlotId || (exports.SlotId = {}));\nvar SlotStatus;\n(function (SlotStatus) {\n    SlotStatus[\"EMPTY\"] = \"empty\";\n    SlotStatus[\"MOUNTING\"] = \"mounting\";\n    SlotStatus[\"ERROR\"] = \"error\";\n    SlotStatus[\"MOUNTED\"] = \"mounted\";\n})(SlotStatus = exports.SlotStatus || (exports.SlotStatus = {}));\nvar VideoFormat;\n(function (VideoFormat) {\n    VideoFormat[\"NTSC\"] = \"NTSC\";\n    VideoFormat[\"PAL\"] = \"PAL\";\n    VideoFormat[\"NTSCp\"] = \"NTSCp\";\n    VideoFormat[\"PALp\"] = \"PALp\";\n    VideoFormat[\"_720p50\"] = \"720p50\";\n    VideoFormat[\"_720p5994\"] = \"720p5994\";\n    VideoFormat[\"_720p60\"] = \"720p60\";\n    VideoFormat[\"_1080p23976\"] = \"1080p23976\";\n    VideoFormat[\"_1080p24\"] = \"1080p24\";\n    VideoFormat[\"_1080p25\"] = \"1080p25\";\n    VideoFormat[\"_1080p2997\"] = \"1080p2997\";\n    VideoFormat[\"_1080p30\"] = \"1080p30\";\n    VideoFormat[\"_1080i50\"] = \"1080i50\";\n    VideoFormat[\"_1080i5994\"] = \"1080i5994\";\n    VideoFormat[\"_1080i60\"] = \"1080i60\";\n    VideoFormat[\"_4Kp23976\"] = \"4Kp23976\";\n    VideoFormat[\"_4Kp24\"] = \"4Kp24\";\n    VideoFormat[\"_4Kp25\"] = \"4Kp25\";\n    VideoFormat[\"_4Kp2997\"] = \"4Kp2997\";\n    VideoFormat[\"_4Kp30\"] = \"4Kp30\";\n    VideoFormat[\"_4Kp50\"] = \"4Kp50\";\n    VideoFormat[\"_4Kp5994\"] = \"4Kp5994\";\n    VideoFormat[\"_4Kp60\"] = \"4Kp60\";\n})(VideoFormat = exports.VideoFormat || (exports.VideoFormat = {}));\n//# sourceMappingURL=hyperdeck.js.map\n\n/***/ }),\n\n/***/ 29:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingLawoType;\n(function (MappingLawoType) {\n    MappingLawoType[\"SOURCE\"] = \"source\";\n    MappingLawoType[\"FULL_PATH\"] = \"fullpath\";\n    MappingLawoType[\"TRIGGER_VALUE\"] = \"triggerValue\";\n})(MappingLawoType = exports.MappingLawoType || (exports.MappingLawoType = {}));\nvar TimelineContentTypeLawo;\n(function (TimelineContentTypeLawo) {\n    TimelineContentTypeLawo[\"SOURCE\"] = \"lawosource\";\n    TimelineContentTypeLawo[\"EMBER_PROPERTY\"] = \"lawofullpathemberproperty\";\n    TimelineContentTypeLawo[\"TRIGGER_VALUE\"] = \"triggervalue\";\n})(TimelineContentTypeLawo = exports.TimelineContentTypeLawo || (exports.TimelineContentTypeLawo = {}));\nvar EmberTypes;\n(function (EmberTypes) {\n    EmberTypes[\"STRING\"] = \"string\";\n    EmberTypes[\"INTEGER\"] = \"integer\";\n    EmberTypes[\"REAL\"] = \"real\";\n    EmberTypes[\"BOOLEAN\"] = \"bool\";\n})(EmberTypes = exports.EmberTypes || (exports.EmberTypes = {}));\n//# sourceMappingURL=lawo.js.map\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\nmodule.exports = _;\n\n/***/ }),\n\n/***/ 30:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeOSC;\n(function (TimelineContentTypeOSC) {\n    TimelineContentTypeOSC[\"OSC\"] = \"osc\";\n})(TimelineContentTypeOSC = exports.TimelineContentTypeOSC || (exports.TimelineContentTypeOSC = {}));\nvar OSCValueType;\n(function (OSCValueType) {\n    OSCValueType[\"INT\"] = \"i\";\n    OSCValueType[\"FLOAT\"] = \"f\";\n    OSCValueType[\"STRING\"] = \"s\";\n    OSCValueType[\"BLOB\"] = \"b\";\n})(OSCValueType = exports.OSCValueType || (exports.OSCValueType = {}));\n//# sourceMappingURL=osc.js.map\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypePharos;\n(function (TimelineContentTypePharos) {\n    TimelineContentTypePharos[\"SCENE\"] = \"scene\";\n    TimelineContentTypePharos[\"TIMELINE\"] = \"timeline\";\n})(TimelineContentTypePharos = exports.TimelineContentTypePharos || (exports.TimelineContentTypePharos = {}));\n//# sourceMappingURL=pharos.js.map\n\n/***/ }),\n\n/***/ 32:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingPanasonicPtzType;\n(function (MappingPanasonicPtzType) {\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"PRESET_SPEED\"] = 0] = \"PRESET_SPEED\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"PRESET\"] = 1] = \"PRESET\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"ZOOM\"] = 2] = \"ZOOM\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"ZOOM_SPEED\"] = 3] = \"ZOOM_SPEED\";\n})(MappingPanasonicPtzType = exports.MappingPanasonicPtzType || (exports.MappingPanasonicPtzType = {}));\nvar TimelineContentTypePanasonicPtz;\n(function (TimelineContentTypePanasonicPtz) {\n    TimelineContentTypePanasonicPtz[\"PRESET\"] = \"presetMem\";\n    TimelineContentTypePanasonicPtz[\"SPEED\"] = \"presetSpeed\";\n    TimelineContentTypePanasonicPtz[\"ZOOM_SPEED\"] = \"zoomSpeed\";\n    TimelineContentTypePanasonicPtz[\"ZOOM\"] = \"zoom\";\n})(TimelineContentTypePanasonicPtz = exports.TimelineContentTypePanasonicPtz || (exports.TimelineContentTypePanasonicPtz = {}));\n//# sourceMappingURL=panasonicPTZ.js.map\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeSisyfos;\n(function (TimelineContentTypeSisyfos) {\n    TimelineContentTypeSisyfos[\"SISYFOS\"] = \"sisyfos\";\n})(TimelineContentTypeSisyfos = exports.TimelineContentTypeSisyfos || (exports.TimelineContentTypeSisyfos = {}));\nvar Commands;\n(function (Commands) {\n    Commands[\"TOGGLE_PGM\"] = \"togglePgm\";\n    Commands[\"TOGGLE_PST\"] = \"togglePst\";\n    Commands[\"SET_FADER\"] = \"setFader\";\n    Commands[\"CLEAR_PST_ROW\"] = \"clearPstRow\";\n    Commands[\"LABEL\"] = \"label\";\n    Commands[\"TAKE\"] = \"take\";\n    Commands[\"VISIBLE\"] = \"visible\";\n    Commands[\"RESYNC\"] = \"resync\";\n})(Commands = exports.Commands || (exports.Commands = {}));\n// ------------------------------------------------------\n//# sourceMappingURL=sisyfos.js.map\n\n/***/ }),\n\n/***/ 34:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QuantelControlMode;\n(function (QuantelControlMode) {\n    /** Try to avoid freeze-frames when playing */\n    QuantelControlMode[\"QUALITY\"] = \"quality\";\n    /** Try to play as fast as possible */\n    QuantelControlMode[\"SPEED\"] = \"speed\";\n})(QuantelControlMode = exports.QuantelControlMode || (exports.QuantelControlMode = {}));\nvar QuantelTransitionType;\n(function (QuantelTransitionType) {\n    QuantelTransitionType[QuantelTransitionType[\"DELAY\"] = 0] = \"DELAY\";\n})(QuantelTransitionType = exports.QuantelTransitionType || (exports.QuantelTransitionType = {}));\n//# sourceMappingURL=quantel.js.map\n\n/***/ }),\n\n/***/ 35:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeTcp;\n(function (TimelineContentTypeTcp) {\n    TimelineContentTypeTcp[\"GET\"] = \"get\";\n    TimelineContentTypeTcp[\"POST\"] = \"post\";\n    TimelineContentTypeTcp[\"PUT\"] = \"put\";\n    TimelineContentTypeTcp[\"DELETE\"] = \"delete\";\n})(TimelineContentTypeTcp = exports.TimelineContentTypeTcp || (exports.TimelineContentTypeTcp = {}));\n//# sourceMappingURL=tcpSend.js.map\n\n/***/ }),\n\n/***/ 36:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeVizMSE;\n(function (TimelineContentTypeVizMSE) {\n    TimelineContentTypeVizMSE[\"ELEMENT_INTERNAL\"] = \"element_internal\";\n    TimelineContentTypeVizMSE[\"ELEMENT_PILOT\"] = \"element_pilot\";\n    TimelineContentTypeVizMSE[\"CONTINUE\"] = \"continue\";\n    TimelineContentTypeVizMSE[\"LOAD_ALL_ELEMENTS\"] = \"load_all_elements\";\n    TimelineContentTypeVizMSE[\"CLEAR_ALL_ELEMENTS\"] = \"clear_all_elements\";\n})(TimelineContentTypeVizMSE = exports.TimelineContentTypeVizMSE || (exports.TimelineContentTypeVizMSE = {}));\nvar VIZMSETransitionType;\n(function (VIZMSETransitionType) {\n    VIZMSETransitionType[VIZMSETransitionType[\"DELAY\"] = 0] = \"DELAY\";\n})(VIZMSETransitionType = exports.VIZMSETransitionType || (exports.VIZMSETransitionType = {}));\n//# sourceMappingURL=vizMSE.js.map\n\n/***/ }),\n\n/***/ 37:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeSingularLive;\n(function (TimelineContentTypeSingularLive) {\n    TimelineContentTypeSingularLive[\"COMPOSITION\"] = \"composition\";\n})(TimelineContentTypeSingularLive = exports.TimelineContentTypeSingularLive || (exports.TimelineContentTypeSingularLive = {}));\n//# sourceMappingURL=singularLive.js.map\n\n/***/ }),\n\n/***/ 38:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Note: These types are copies from superfly-timeline\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Enums ------------------------------------------------------------\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"START\"] = 0] = \"START\";\n    EventType[EventType[\"END\"] = 1] = \"END\";\n    EventType[EventType[\"KEYFRAME\"] = 2] = \"KEYFRAME\";\n})(EventType = exports.EventType || (exports.EventType = {}));\n//# sourceMappingURL=superfly-timeline.js.map\n\n/***/ }),\n\n/***/ 39:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\nconst _ = __webpack_require__(3);\nvar iterateDeeplyEnum;\n(function (iterateDeeplyEnum) {\n    iterateDeeplyEnum[\"CONTINUE\"] = \"$continue\";\n})(iterateDeeplyEnum = exports.iterateDeeplyEnum || (exports.iterateDeeplyEnum = {}));\n/**\n * Iterates deeply through object or array\n * @param obj the object or array to iterate through\n * @param iteratee function to apply on every attribute\n */\nfunction iterateDeeply(obj, iteratee, key) {\n    const newValue = iteratee(obj, key);\n    if (newValue === iterateDeeplyEnum.CONTINUE) {\n        // Continue iterate deeper if possible\n        if (_.isObject(obj)) {\n            // object or array\n            _.each(obj, (v, k) => {\n                obj[k] = iterateDeeply(v, iteratee, k);\n            });\n        }\n        else {\n            // don't change anything\n        }\n        return obj;\n    }\n    else {\n        return newValue;\n    }\n}\nexports.iterateDeeply = iterateDeeply;\n/**\n * Iterates deeply through object or array, using an asynchronous iteratee\n * @param obj the object or array to iterate through\n * @param iteratee function to apply on every attribute\n */\nfunction iterateDeeplyAsync(obj, iteratee, key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const newValue = yield iteratee(obj, key);\n        if (newValue === iterateDeeplyEnum.CONTINUE) {\n            // Continue iterate deeper if possible\n            if (_.isObject(obj)) {\n                // object or array\n                yield Promise.all(_.map(obj, (v, k) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                    obj[k] = yield iterateDeeplyAsync(v, iteratee, k);\n                })));\n            }\n            else {\n                // don't change anything\n            }\n            return obj;\n        }\n        else {\n            return newValue;\n        }\n    });\n}\nexports.iterateDeeplyAsync = iterateDeeplyAsync;\n//# sourceMappingURL=util.js.map\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n\n\n/***/ })\n\n/******/ });",
            "modified": 1590581732172,
            "studioConfigManifest": [],
            "showStyleConfigManifest": [],
            "databaseVersion": {
                "studio": {},
                "showStyle": {}
            },
            "blueprintVersion": "0.1.0+v1.1.9",
            "integrationVersion": "0.0.0",
            "TSRVersion": "0.0.0",
            "minimumCoreVersion": "1.2.0",
            "blueprintType": "system"
        },
        {
            "_id": "tv2_offtube_showstyle",
            "name": "tv2_offtube_showstyle",
            "created": 1590581732119,
            "code": "/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 150);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(41), exports);\ntslib_1.__exportStar(__webpack_require__(12), exports);\ntslib_1.__exportStar(__webpack_require__(42), exports);\ntslib_1.__exportStar(__webpack_require__(8), exports);\ntslib_1.__exportStar(__webpack_require__(49), exports);\ntslib_1.__exportStar(__webpack_require__(50), exports);\ntslib_1.__exportStar(__webpack_require__(51), exports);\ntslib_1.__exportStar(__webpack_require__(52), exports);\ntslib_1.__exportStar(__webpack_require__(53), exports);\ntslib_1.__exportStar(__webpack_require__(54), exports);\ntslib_1.__exportStar(__webpack_require__(55), exports);\ntslib_1.__exportStar(__webpack_require__(56), exports);\ntslib_1.__exportStar(__webpack_require__(57), exports);\ntslib_1.__exportStar(__webpack_require__(58), exports);\ntslib_1.__exportStar(__webpack_require__(61), exports);\ntslib_1.__exportStar(__webpack_require__(63), exports);\ntslib_1.__exportStar(__webpack_require__(66), exports);\ntslib_1.__exportStar(__webpack_require__(69), exports);\ntslib_1.__exportStar(__webpack_require__(16), exports);\ntslib_1.__exportStar(__webpack_require__(72), exports);\ntslib_1.__exportStar(__webpack_require__(73), exports);\ntslib_1.__exportStar(__webpack_require__(76), exports);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(25), exports);\ntslib_1.__exportStar(__webpack_require__(26), exports);\ntslib_1.__exportStar(__webpack_require__(27), exports);\ntslib_1.__exportStar(__webpack_require__(28), exports);\ntslib_1.__exportStar(__webpack_require__(29), exports);\ntslib_1.__exportStar(__webpack_require__(30), exports);\ntslib_1.__exportStar(__webpack_require__(31), exports);\ntslib_1.__exportStar(__webpack_require__(32), exports);\ntslib_1.__exportStar(__webpack_require__(33), exports);\ntslib_1.__exportStar(__webpack_require__(34), exports);\ntslib_1.__exportStar(__webpack_require__(35), exports);\ntslib_1.__exportStar(__webpack_require__(36), exports);\ntslib_1.__exportStar(__webpack_require__(37), exports);\nconst Timeline = __webpack_require__(38);\nexports.Timeline = Timeline;\nvar DeviceType;\n(function (DeviceType) {\n    DeviceType[DeviceType[\"ABSTRACT\"] = 0] = \"ABSTRACT\";\n    DeviceType[DeviceType[\"CASPARCG\"] = 1] = \"CASPARCG\";\n    DeviceType[DeviceType[\"ATEM\"] = 2] = \"ATEM\";\n    DeviceType[DeviceType[\"LAWO\"] = 3] = \"LAWO\";\n    DeviceType[DeviceType[\"HTTPSEND\"] = 4] = \"HTTPSEND\";\n    DeviceType[DeviceType[\"PANASONIC_PTZ\"] = 5] = \"PANASONIC_PTZ\";\n    DeviceType[DeviceType[\"TCPSEND\"] = 6] = \"TCPSEND\";\n    DeviceType[DeviceType[\"HYPERDECK\"] = 7] = \"HYPERDECK\";\n    DeviceType[DeviceType[\"PHAROS\"] = 8] = \"PHAROS\";\n    DeviceType[DeviceType[\"OSC\"] = 9] = \"OSC\";\n    DeviceType[DeviceType[\"HTTPWATCHER\"] = 10] = \"HTTPWATCHER\";\n    DeviceType[DeviceType[\"SISYFOS\"] = 11] = \"SISYFOS\";\n    DeviceType[DeviceType[\"QUANTEL\"] = 12] = \"QUANTEL\";\n    DeviceType[DeviceType[\"VIZMSE\"] = 13] = \"VIZMSE\";\n    DeviceType[DeviceType[\"SINGULAR_LIVE\"] = 14] = \"SINGULAR_LIVE\";\n})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(17), exports);\ntslib_1.__exportStar(__webpack_require__(18), exports);\ntslib_1.__exportStar(__webpack_require__(19), exports);\ntslib_1.__exportStar(__webpack_require__(20), exports);\ntslib_1.__exportStar(__webpack_require__(21), exports);\ntslib_1.__exportStar(__webpack_require__(22), exports);\ntslib_1.__exportStar(__webpack_require__(23), exports);\ntslib_1.__exportStar(__webpack_require__(24), exports);\ntslib_1.__exportStar(__webpack_require__(39), exports);\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = _;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(44), exports);\ntslib_1.__exportStar(__webpack_require__(45), exports);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n\n\n/***/ }),\n/* 6 */,\n/* 7 */,\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nfunction literal(o) {\n    return o;\n}\nexports.literal = literal;\nfunction assertUnreachable(_never) {\n    throw new Error('Switch validation failed, look for assertUnreachable(...)');\n}\nexports.assertUnreachable = assertUnreachable;\nfunction createVirtualPiece(layer, enable, mainPiece) {\n    return {\n        _id: '',\n        name: '',\n        externalId: mainPiece ? mainPiece.externalId : '-',\n        enable: typeof enable === 'number'\n            ? {\n                start: enable,\n                duration: 0\n            }\n            : enable,\n        sourceLayerId: layer,\n        outputLayerId: 'pgm',\n        virtual: true,\n        content: {\n            timelineObjects: []\n        }\n    };\n}\nexports.createVirtualPiece = createVirtualPiece;\nfunction createEmptyObject(obj) {\n    return literal(Object.assign(Object.assign({ id: '', priority: 0 }, obj), { content: {\n            deviceType: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n            type: 'empty'\n        } }));\n}\nexports.createEmptyObject = createEmptyObject;\n/**\n * Returs true if the piece is interface IBlueprintAdLibPiece\n * @param {IBlueprintPiece | IBlueprintAdLibPiece} piece Piece to check\n */\nfunction isAdLibPiece(piece) {\n    return '_rank' in piece;\n}\nexports.isAdLibPiece = isAdLibPiece;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\n/** Get all the Real LLayers (map to devices). Note: Does not include some which are dynamically generated */\nfunction RealLLayers() {\n    return (_.values(OfftubeAbstractLLayer)\n        // @ts-ignore\n        .concat(_.values(OfftubeSisyfosLLayer))\n        .concat(_.values(OfftubeAtemLLayer))\n        .concat(_.values(OfftubeCasparLLayer))\n        .concat(_.values(tv2_common_1.GraphicLLayer)));\n}\nexports.RealLLayers = RealLLayers;\nvar OfftubeAbstractLLayer;\n(function (OfftubeAbstractLLayer) {\n    /** Contains the classes to enable infinites */\n    OfftubeAbstractLLayer[\"OfftubeAbstractLLayerPgmEnabler\"] = \"offtube_abstract_pgm_enabler\";\n})(OfftubeAbstractLLayer = exports.OfftubeAbstractLLayer || (exports.OfftubeAbstractLLayer = {}));\nvar OfftubeSisyfosLLayer;\n(function (OfftubeSisyfosLLayer) {\n    OfftubeSisyfosLLayer[\"SisyfosSourceClipPending\"] = \"sisyfos_source_clip_pending\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceJingle\"] = \"sisyfos_source_jingle\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceHost_1_ST_A\"] = \"sisyfos_source_Host_1_st_a\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceHost_2_ST_A\"] = \"sisyfos_source_Host_2_st_a\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceHost_3_ST_A\"] = \"sisyfos_source_Host_3_st_a\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceLive_1\"] = \"sisyfos_source_live_1\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceLive_2\"] = \"sisyfos_source_live_2\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceWorldFeed_Stereo\"] = \"sisyfos_source_world_feed_stereo\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceWorldFeed_Surround\"] = \"sisyfos_source_world_feed_surround\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceServerA\"] = \"sisyfos_source_server_a\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceServerB\"] = \"sisyfos_source_server_b\";\n})(OfftubeSisyfosLLayer = exports.OfftubeSisyfosLLayer || (exports.OfftubeSisyfosLLayer = {}));\nvar OfftubeAtemLLayer;\n(function (OfftubeAtemLLayer) {\n    OfftubeAtemLLayer[\"AtemMEClean\"] = \"atem_me_clean\";\n    OfftubeAtemLLayer[\"AtemDSKGraphics\"] = \"atem_dsk_graphics\";\n    OfftubeAtemLLayer[\"AtemMEProgram\"] = \"atem_me_program\";\n    OfftubeAtemLLayer[\"AtemSSrcArt\"] = \"atem_supersource_art\";\n    OfftubeAtemLLayer[\"AtemSSrcDefault\"] = \"atem_supersource_default\";\n    OfftubeAtemLLayer[\"AtemAuxClean\"] = \"atem_aux_clean\";\n    OfftubeAtemLLayer[\"AtemAuxScreen\"] = \"atem_aux_screen\";\n    OfftubeAtemLLayer[\"AtemSSrcBox1\"] = \"atem_supersource_z_box1\";\n    OfftubeAtemLLayer[\"AtemSSrcBox2\"] = \"atem_supersource_z_box2\";\n    OfftubeAtemLLayer[\"AtemSSrcBox3\"] = \"atem_supersource_z_box3\";\n    OfftubeAtemLLayer[\"AtemSSrcBox4\"] = \"atem_supersource_z_box4\";\n})(OfftubeAtemLLayer = exports.OfftubeAtemLLayer || (exports.OfftubeAtemLLayer = {}));\nvar OfftubeCasparLLayer;\n(function (OfftubeCasparLLayer) {\n    OfftubeCasparLLayer[\"CasparPlayerClipPending\"] = \"casparcg_player_clip_pending\";\n    OfftubeCasparLLayer[\"CasparGraphicsOverlay\"] = \"casparcg_graphics_overlay\";\n    OfftubeCasparLLayer[\"CasparPlayerJingle\"] = \"casparcg_player_jingle\";\n    OfftubeCasparLLayer[\"CasparGraphicsFull\"] = \"casparcg_graphics_full\";\n    OfftubeCasparLLayer[\"CasparCGDVELoop\"] = \"casparcg_dve_loop\";\n    OfftubeCasparLLayer[\"CasparCGDVETemplate\"] = \"casparcg_cg_dve_template\";\n    OfftubeCasparLLayer[\"CasparCGDVEKey\"] = \"casparcg_dve_key\";\n    OfftubeCasparLLayer[\"CasparCGDVEFrame\"] = \"casparcg_dve_frame\";\n    OfftubeCasparLLayer[\"CasparStudioScreenLoop\"] = \"casparcg_studio_screen_loop\";\n})(OfftubeCasparLLayer = exports.OfftubeCasparLLayer || (exports.OfftubeCasparLLayer = {}));\nfunction CasparPlayerClip(i) {\n    return `casparcg_player_clip_${i}`;\n}\nexports.CasparPlayerClip = CasparPlayerClip;\nfunction CasparPlayerClipLoadingLoop(i) {\n    return `casparcg_player_clip_${i}_loading_loop`;\n}\nexports.CasparPlayerClipLoadingLoop = CasparPlayerClipLoadingLoop;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nvar SourceLayer;\n(function (SourceLayer) {\n    // Pgm\n    SourceLayer[\"PgmSourceSelect\"] = \"studio0_offtube_pgm_source_select\";\n    SourceLayer[\"PgmDVEBackground\"] = \"studio0_offtube_dve_back\";\n    SourceLayer[\"PgmJingle\"] = \"studio0_offtube_jingle\";\n    // TODO: This should be a shared sourcelayer, needs migration for pilot graphics.\n    SourceLayer[\"PgmFull\"] = \"studio0_full\";\n    // TODO: These will be removed by adlib actions\n    // Adlib selection\n    SourceLayer[\"SelectedAdLibDVE\"] = \"studio0_offtube_dve\";\n    SourceLayer[\"SelectedAdLibServer\"] = \"studio0_offtube_clip\";\n    SourceLayer[\"SelectedAdLibVoiceOver\"] = \"studio0_offtube_voiceover\";\n    SourceLayer[\"SelectedAdlibGraphicsFull\"] = \"studio0_offtube_graphicsFull\";\n    SourceLayer[\"PgmContinuity\"] = \"studio0_offtube_continuity\";\n    // Aux\n    SourceLayer[\"AuxStudioScreen\"] = \"studio0_offtube_aux_studio_screen\";\n})(SourceLayer = exports.SourceLayer || (exports.SourceLayer = {}));\n// tslint:disable-next-line: variable-name\nexports.OffTubeSourceLayer = Object.assign(Object.assign({}, SourceLayer), tv2_common_1.SharedSourceLayers);\nvar OfftubeOutputLayers;\n(function (OfftubeOutputLayers) {\n    OfftubeOutputLayers[\"SEC\"] = \"sec\";\n    OfftubeOutputLayers[\"OVERLAY\"] = \"overlay\";\n    OfftubeOutputLayers[\"JINGLE\"] = \"jingle\";\n    OfftubeOutputLayers[\"SELECTED_ADLIB\"] = \"selectedAdlib\";\n    OfftubeOutputLayers[\"AUX\"] = \"aux\";\n    OfftubeOutputLayers[\"PGM\"] = \"pgm\";\n})(OfftubeOutputLayers = exports.OfftubeOutputLayers || (exports.OfftubeOutputLayers = {}));\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AtemSourceIndex;\n(function (AtemSourceIndex) {\n    AtemSourceIndex[AtemSourceIndex[\"Blk\"] = 0] = \"Blk\";\n    AtemSourceIndex[AtemSourceIndex[\"Bars\"] = 1000] = \"Bars\";\n    AtemSourceIndex[AtemSourceIndex[\"Col1\"] = 2001] = \"Col1\";\n    AtemSourceIndex[AtemSourceIndex[\"Col2\"] = 2002] = \"Col2\";\n    AtemSourceIndex[AtemSourceIndex[\"MP1\"] = 3010] = \"MP1\";\n    AtemSourceIndex[AtemSourceIndex[\"MP1K\"] = 3011] = \"MP1K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP2\"] = 3020] = \"MP2\";\n    AtemSourceIndex[AtemSourceIndex[\"MP2K\"] = 3021] = \"MP2K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP3\"] = 3030] = \"MP3\";\n    AtemSourceIndex[AtemSourceIndex[\"MP3K\"] = 3031] = \"MP3K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP4\"] = 3040] = \"MP4\";\n    AtemSourceIndex[AtemSourceIndex[\"MP4K\"] = 3041] = \"MP4K\";\n    AtemSourceIndex[AtemSourceIndex[\"SSrc\"] = 6000] = \"SSrc\";\n    AtemSourceIndex[AtemSourceIndex[\"SSrc2\"] = 6001] = \"SSrc2\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd1\"] = 7001] = \"Cfd1\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd2\"] = 7002] = \"Cfd2\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd3\"] = 7003] = \"Cfd3\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd4\"] = 7004] = \"Cfd4\";\n    AtemSourceIndex[AtemSourceIndex[\"Output1\"] = 8001] = \"Output1\";\n    AtemSourceIndex[AtemSourceIndex[\"Output2\"] = 8002] = \"Output2\";\n    AtemSourceIndex[AtemSourceIndex[\"Output3\"] = 8003] = \"Output3\";\n    AtemSourceIndex[AtemSourceIndex[\"Output4\"] = 8004] = \"Output4\";\n    AtemSourceIndex[AtemSourceIndex[\"Output5\"] = 8005] = \"Output5\";\n    AtemSourceIndex[AtemSourceIndex[\"Output6\"] = 8006] = \"Output6\";\n    AtemSourceIndex[AtemSourceIndex[\"Output7\"] = 8007] = \"Output7\";\n    AtemSourceIndex[AtemSourceIndex[\"Output8\"] = 8008] = \"Output8\";\n    AtemSourceIndex[AtemSourceIndex[\"Output9\"] = 8009] = \"Output9\";\n    AtemSourceIndex[AtemSourceIndex[\"Output10\"] = 80010] = \"Output10\";\n    AtemSourceIndex[AtemSourceIndex[\"Output11\"] = 80011] = \"Output11\";\n    AtemSourceIndex[AtemSourceIndex[\"Output12\"] = 80012] = \"Output12\";\n    AtemSourceIndex[AtemSourceIndex[\"Output13\"] = 80013] = \"Output13\";\n    AtemSourceIndex[AtemSourceIndex[\"Output14\"] = 80014] = \"Output14\";\n    AtemSourceIndex[AtemSourceIndex[\"Output15\"] = 80015] = \"Output15\";\n    AtemSourceIndex[AtemSourceIndex[\"Output16\"] = 80016] = \"Output16\";\n    AtemSourceIndex[AtemSourceIndex[\"Output17\"] = 80017] = \"Output17\";\n    AtemSourceIndex[AtemSourceIndex[\"Output18\"] = 80018] = \"Output18\";\n    AtemSourceIndex[AtemSourceIndex[\"Output19\"] = 80019] = \"Output19\";\n    AtemSourceIndex[AtemSourceIndex[\"Output20\"] = 80020] = \"Output20\";\n    AtemSourceIndex[AtemSourceIndex[\"Output21\"] = 80021] = \"Output21\";\n    AtemSourceIndex[AtemSourceIndex[\"Output22\"] = 80022] = \"Output22\";\n    AtemSourceIndex[AtemSourceIndex[\"Output23\"] = 80023] = \"Output23\";\n    AtemSourceIndex[AtemSourceIndex[\"Output24\"] = 80024] = \"Output24\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg1\"] = 10010] = \"Prg1\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv1\"] = 10011] = \"Prv1\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg2\"] = 10020] = \"Prg2\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv2\"] = 10021] = \"Prv2\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg3\"] = 10030] = \"Prg3\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv3\"] = 10031] = \"Prv3\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg4\"] = 10040] = \"Prg4\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv4\"] = 10041] = \"Prv4\";\n})(AtemSourceIndex = exports.AtemSourceIndex || (exports.AtemSourceIndex = {}));\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TimeFromFrames(frames) {\n    return (1000 / 25) * frames;\n}\nexports.TimeFromFrames = TimeFromFrames;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nfunction ParseCue(cue) {\n    if (!cue) {\n        return {\n            type: tv2_constants_1.CueType.Unknown,\n            iNewsCommand: ''\n        };\n    }\n    cue = cue.filter(c => c !== '');\n    // Replace multiple spaces / tabs with a single space\n    cue = cue.map(c => c.trim().replace(/\\s+/g, ' '));\n    if (cue.length === 0) {\n        return {\n            type: tv2_constants_1.CueType.Unknown,\n            iNewsCommand: ''\n        };\n    }\n    if (cue[0].match(/^[#* ]?kg[= ]ovl-all-out$/i) || cue[0].match(/^[#* ]?kg[= ]altud$/i)) {\n        // All out\n        return parseAllOut(cue);\n    }\n    else if (cue[0].match(/(?:^[*|#]?kg[ |=])|(?:^digi)/i)) {\n        // kg (Grafik)\n        return parsekg(cue);\n    }\n    else if (cue[0].match(/^]] [a-z]\\d\\.\\d [a-z] \\d \\[\\[$/i)) {\n        // MOS\n        return parseMOS(cue);\n    }\n    else if (cue[0].match(/[#|*]?cg\\d+[ -]pilotdata/i)) {\n        return parseMOS(cue);\n    }\n    else if (cue[0].match(/^EKSTERN=/i)) {\n        // EKSTERN\n        const eksternSource = cue[0].match(/^EKSTERN=(.+)$/i);\n        if (eksternSource) {\n            return {\n                type: tv2_constants_1.CueType.Ekstern,\n                source: eksternSource[1],\n                iNewsCommand: 'EKSTERN'\n            };\n        }\n    }\n    else if (cue[0].match(/^DVE=/i)) {\n        // DVE\n        return parseDVE(cue);\n    }\n    else if (cue[0].match(/^TELEFON=/i)) {\n        // Telefon\n        return parseTelefon(cue);\n    }\n    else if (cue[0].match(/^SS|(?:GRAFIK)=(?:.*)(?:$| )/i)) {\n        // Target engine\n        return parseTargetEngine(cue);\n    }\n    else if (cue[0].match(/^SS|(?:GRAFIK|VIZ)=(?:full|ovl|wall)(?:$| )/i)) {\n        return parseTargetEngine(cue);\n    }\n    else if (cue[0].match(/^VIZ=/i)) {\n        return parseVIZCues(cue);\n    }\n    else if (cue[0].match(/^STUDIE=MIC ON OFF$/i)) {\n        return parseMic(cue);\n    }\n    else if (cue[0].match(/^ADLIBPI?X=/i)) {\n        return parseAdLib(cue);\n    }\n    else if (cue[0].match(/^KOMMANDO=/i)) {\n        return parseKommando(cue);\n    }\n    else if (cue[0].match(/^LYD=/i)) {\n        return parseLYD(cue);\n    }\n    else if (cue[0].match(/^JINGLE\\d+=/i)) {\n        return parseJingle(cue);\n    }\n    return {\n        type: tv2_constants_1.CueType.Unknown,\n        iNewsCommand: ''\n    };\n}\nexports.ParseCue = ParseCue;\nfunction parsekg(cue) {\n    let kgCue = {\n        type: tv2_constants_1.CueType.Grafik,\n        template: '',\n        cue: '',\n        textFields: [],\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^([*|#]?kg|digi)/i);\n    kgCue.iNewsCommand = command ? command[1] : 'kg';\n    const firstLineValues = cue[0].match(/^[*|#]?kg[ |=]([\\w|\\d]+)( (.+))*$/i);\n    if (firstLineValues) {\n        kgCue.cue = cue[0].match(/kg/) ? 'kg' : 'KG'; // THIS ONE SHOULD NOT BE INSENSITIVE\n        kgCue.template = firstLineValues[1];\n        if (firstLineValues[3]) {\n            kgCue.textFields.push(firstLineValues[3]);\n        }\n    }\n    else if (cue[0].match(/^DIGI=/i)) {\n        kgCue.cue = 'DIGI';\n        const templateType = cue[0].match(/^DIGI=(.+)$/i);\n        if (templateType) {\n            kgCue.template = templateType[1];\n        }\n    }\n    let textFields = cue.length - 1;\n    if (isTime(cue[cue.length - 1])) {\n        kgCue = Object.assign(Object.assign({}, kgCue), parseTime(cue[cue.length - 1]));\n    }\n    else if (!cue[cue.length - 1].match(/;x.xx/i)) {\n        textFields += 1;\n    }\n    else {\n        kgCue.adlib = true;\n        const end = parseTime(cue[cue.length - 1]).end;\n        if (end) {\n            kgCue = Object.assign(Object.assign({}, kgCue), { end });\n        }\n    }\n    for (let i = 1; i < textFields; i++) {\n        kgCue.textFields.push(cue[i]);\n    }\n    if (!kgCue.start) {\n        kgCue.adlib = true;\n    }\n    return kgCue;\n}\nfunction parseMOS(cue) {\n    const mosCue = {\n        type: tv2_constants_1.CueType.MOS,\n        name: '',\n        vcpid: -1,\n        continueCount: -1,\n        iNewsCommand: 'VCP'\n    };\n    const realCue = [];\n    cue.forEach(line => {\n        if (!line.match(/[#|*]?cg\\d+[ -]pilotdata/i) &&\n            !line.match(/^]] [a-z]\\d\\.\\d [a-z] \\d \\[\\[$/i) &&\n            !line.match(/cg\\d+ \\]\\] .+? \\[\\[ pilotdata/i)) {\n            realCue.push(line);\n        }\n        else if (!!line.match(/[#|*]?cg\\d+[ -]pilotdata/i)) {\n            const engine = line.match(/[#|*]?cg(\\d+)[ -]pilotdata/i);\n            if (engine && engine[1]) {\n                mosCue.engine = engine[1];\n            }\n        }\n    });\n    if (realCue.length === 4) {\n        const vcpid = realCue[1].match(/^VCPID=(\\d+)$/i);\n        const continueCount = realCue[2].match(/^ContinueCount=(-?\\d+)$/i);\n        const timing = realCue[0].match(/L\\|(M|\\d{1,2}(?:\\:\\d{1,2}){0,2})\\|([SBO]|\\d{1,2}(?:\\:\\d{1,2}){0,2})$/i);\n        if (vcpid && continueCount) {\n            mosCue.name = realCue[0];\n            mosCue.vcpid = Number(vcpid[1]);\n            mosCue.continueCount = Number(continueCount[1]);\n            if (!!mosCue.name.match(/^ST4_WALL/i)) {\n                mosCue.isActuallyWall = true;\n            }\n            if (timing) {\n                if (timing[1] === 'M') {\n                    mosCue.adlib = true;\n                }\n                else if (isMosTime(timing[1])) {\n                    mosCue.start = parseTime(timing[1]).start;\n                }\n                if (timing[2].match(/[SBO]/i)) {\n                    mosCue.end = {\n                        infiniteMode: timing[2]\n                    };\n                }\n                else if (isMosTime(timing[2])) {\n                    mosCue.end = parseTime(timing[2]).start;\n                }\n            }\n            else {\n                mosCue.start = { seconds: 0 };\n            }\n        }\n    }\n    return mosCue;\n}\nfunction parseDVE(cue) {\n    let dvecue = {\n        type: tv2_constants_1.CueType.DVE,\n        template: '',\n        sources: {},\n        labels: [],\n        iNewsCommand: 'DVE'\n    };\n    cue.forEach(c => {\n        if (c.match(/^DVE=/i)) {\n            const template = c.match(/^DVE=(.+)$/i);\n            if (template) {\n                dvecue.template = template[1];\n            }\n        }\n        else if (c.match(/^INP\\d+=/i)) {\n            const input = c.match(/^(INP\\d)+=(.+)$/i);\n            if (input && input[1] && input[2]) {\n                dvecue.sources[input[1].toUpperCase()] = input[2];\n            }\n        }\n        else if (c.match(/^BYNAVN=/i)) {\n            const labels = c.match(/^BYNAVN=(.+)$/i);\n            if (labels) {\n                dvecue.labels = labels[1].split(/\\/|\\\\/i);\n            }\n        }\n        else if (isTime(c)) {\n            dvecue = Object.assign(Object.assign({}, dvecue), parseTime(c));\n        }\n    });\n    return dvecue;\n}\nfunction parseTelefon(cue) {\n    const telefonCue = {\n        type: tv2_constants_1.CueType.Telefon,\n        source: '',\n        iNewsCommand: 'TELEFON'\n    };\n    const source = cue[0].match(/^TELEFON=(.+)$/i);\n    if (source) {\n        telefonCue.source = source[1];\n    }\n    if (cue.length > 1) {\n        // tslint:disable-next-line:prefer-conditional-expression\n        if (cue[1].match(/(?:^[*|#]?kg[ |=])|(?:^digi)/i)) {\n            telefonCue.vizObj = parsekg(cue.slice(1, cue.length));\n        }\n        else {\n            telefonCue.vizObj = parseMOS(cue.slice(1, cue.length));\n        }\n    }\n    return telefonCue;\n}\nfunction parseVIZCues(cue) {\n    let vizCues = {\n        type: tv2_constants_1.CueType.VIZ,\n        rawType: cue[0],\n        content: {},\n        design: '',\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^(VIZ|GRAFIK)/i);\n    vizCues.iNewsCommand = command ? command[1] : 'VIZ';\n    const design = cue[0].match(/^(?:VIZ|GRAFIK)=(.*)$/i);\n    if (design) {\n        vizCues.design = design[1];\n    }\n    for (let i = 1; i < cue.length; i++) {\n        if (isTime(cue[i])) {\n            vizCues = Object.assign(Object.assign({}, vizCues), parseTime(cue[i]));\n        }\n        else {\n            const c = cue[i].split('=');\n            vizCues.content[c[0].toString().toUpperCase()] = c[1];\n        }\n    }\n    return vizCues;\n}\nfunction parseMic(cue) {\n    let micCue = {\n        type: tv2_constants_1.CueType.Mic,\n        mics: {},\n        iNewsCommand: 'STUDIE'\n    };\n    cue.forEach(c => {\n        if (!c.match(/^STUDIE=MIC ON OFF$/i)) {\n            if (isTime(c)) {\n                micCue = Object.assign(Object.assign({}, micCue), parseTime(c));\n            }\n            else {\n                const micState = c.match(/^(.+)=((?:ON)|(?:OFF))?$/i);\n                if (micState) {\n                    micCue.mics[micState[1].toString()] = micState[2] ? micState[2] === 'ON' : false;\n                }\n            }\n        }\n    });\n    return micCue;\n}\nfunction parseAdLib(cue) {\n    const adlib = {\n        type: tv2_constants_1.CueType.AdLib,\n        variant: '',\n        inputs: {},\n        iNewsCommand: 'ADLIBPIX'\n    };\n    const variant = cue[0].match(/^ADLIBPI?X=(.+)$/i);\n    if (variant) {\n        adlib.variant = variant[1];\n    }\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < cue.length; i++) {\n        const input = cue[i].match(/^(INP\\d)+=(.+)$/i);\n        if (input && input[1] && input[2] && adlib.inputs !== undefined) {\n            adlib.inputs[input[1].toString().toUpperCase()] = input[2];\n        }\n        const bynavn = cue[i].match(/^BYNAVN=(.)$/i);\n        if (bynavn) {\n            adlib.bynavn = bynavn[1];\n        }\n    }\n    return adlib;\n}\nfunction parseKommando(cue) {\n    let kommandoCue = {\n        type: tv2_constants_1.CueType.Profile,\n        profile: '',\n        iNewsCommand: 'KOMMANDO'\n    };\n    if (cue[1]) {\n        kommandoCue.profile = cue[1];\n    }\n    if (cue[2] && isTime(cue[2])) {\n        kommandoCue = Object.assign(Object.assign({}, kommandoCue), parseTime(cue[2]));\n    }\n    return kommandoCue;\n}\nfunction parseLYD(cue) {\n    let lydCue = {\n        type: tv2_constants_1.CueType.LYD,\n        variant: '',\n        iNewsCommand: 'LYD'\n    };\n    const command = cue[0].match(/^LYD=(.*)$/i);\n    if (command) {\n        lydCue.variant = command[1];\n    }\n    if (cue[1]) {\n        if (isTime(cue[1])) {\n            lydCue = Object.assign(Object.assign({}, lydCue), parseTime(cue[1]));\n        }\n        else if (cue[1].match(/;x.xx/i)) {\n            lydCue.adlib = true;\n        }\n    }\n    return lydCue;\n}\nfunction parseJingle(cue) {\n    const jingleCue = {\n        type: tv2_constants_1.CueType.Jingle,\n        clip: '',\n        iNewsCommand: 'JINGLE'\n    };\n    const clip = cue[0].match(/^JINGLE\\d+=(.*)$/i);\n    if (clip && clip[1]) {\n        jingleCue.clip = clip[1];\n    }\n    return jingleCue;\n}\nfunction parseTargetEngine(cue) {\n    let engineCue = {\n        type: tv2_constants_1.CueType.TargetEngine,\n        rawType: cue[0],\n        content: {},\n        data: {\n            engine: ''\n        },\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^(VIZ|GRAFIK|SS)/i);\n    engineCue.iNewsCommand = command ? command[1] : 'SS';\n    const engine = cue[0].match(/^(?:VIZ|GRAFIK|SS)=(.*)$/i);\n    if (engine) {\n        engineCue.data.engine = engine[1];\n    }\n    for (let i = 1; i < cue.length; i++) {\n        if (isTime(cue[i])) {\n            engineCue = Object.assign(Object.assign({}, engineCue), parseTime(cue[i]));\n        }\n        else {\n            const c = cue[i].split('=');\n            engineCue.content[c[0].toString().toUpperCase()] = c[1];\n        }\n    }\n    return engineCue;\n}\nfunction parseAllOut(cue) {\n    let clearCue = {\n        type: tv2_constants_1.CueType.ClearGrafiks,\n        iNewsCommand: ''\n    };\n    let time = false;\n    cue.forEach(c => {\n        const command = c.match(/^([#* ]?kg)/i);\n        if (command) {\n            clearCue.iNewsCommand = command[1];\n        }\n        if (isTime(c)) {\n            time = true;\n            clearCue = Object.assign(Object.assign({}, clearCue), parseTime(c));\n        }\n    });\n    if (!time) {\n        clearCue.adlib = true;\n    }\n    return clearCue;\n}\nfunction isTime(line) {\n    return (line &&\n        !!line\n            .replace(/\\s+/gi, '')\n            .match(/^;\\d{1,2}(?:(?:\\.\\d{1,2}){0,1}){0,2}(?:(?:-\\d{1,2}(?:(?:\\.\\d{1,2}){0,1}){0,2}){0,1}|(?:-[BSO]))$/i));\n}\nexports.isTime = isTime;\nfunction isMosTime(line) {\n    return !!line.replace(/\\s+/gi, '').match(/\\d{1,2}(?:\\:\\d{1,2}){1,2}/i);\n}\nexports.isMosTime = isMosTime;\nfunction parseTime(line) {\n    const retTime = {\n        start: {},\n        end: {}\n    };\n    const startAndEnd = line.split('-');\n    startAndEnd[0] = startAndEnd[0].replace(';', '');\n    startAndEnd.forEach((time, i) => {\n        time = time.replace(/\\s+/gi, '');\n        const field = i === 0 ? 'start' : 'end';\n        if (time.match(/^[BSO]$/i) && i !== 0) {\n            retTime[field].infiniteMode = time;\n        }\n        else {\n            if (!!time.match(/\\./i)) {\n                const timeSegments = time.split('.');\n                if (timeSegments[0]) {\n                    retTime[field].seconds = (Number(timeSegments[0]) || 0) * 60;\n                }\n                if (timeSegments[1]) {\n                    if (retTime[field].seconds) {\n                        retTime[field].seconds += Number(timeSegments[1].replace('.', '')) || 0;\n                    }\n                    else {\n                        retTime[field].seconds = Number(timeSegments[1].replace('.', '')) || 0;\n                    }\n                }\n                if (timeSegments[2]) {\n                    retTime[field].frames = Number(timeSegments[2].replace('.', '')) || 0;\n                }\n            }\n            else {\n                const timeSegments = time.split(':');\n                if (timeSegments[0]) {\n                    retTime[field].seconds = (Number(timeSegments[0]) || 0) * 60;\n                }\n                if (timeSegments[1]) {\n                    if (retTime[field].seconds) {\n                        retTime[field].seconds += Number(timeSegments[1]) || 0;\n                    }\n                    else {\n                        retTime[field].seconds = Number(timeSegments[1]) || 0;\n                    }\n                }\n            }\n        }\n    });\n    if (!Object.keys(retTime.start).length) {\n        retTime.start = undefined;\n    }\n    if (!Object.keys(retTime.end).length) {\n        retTime.end = undefined;\n    }\n    return retTime;\n}\nexports.parseTime = parseTime;\n/**\n * Creates a parent class for a part, for keeping children of the parent alive when the parent is alive.\n * @param studio Studio name that the part belongs to.\n * @param partDefinition Part to create parent string for.\n */\nfunction PartToParentClass(studio, partDefinition) {\n    switch (partDefinition.type) {\n        case \"Kam\" /* Kam */:\n            return CameraParentClass(studio, partDefinition.variant.name);\n        case \"Server\" /* Server */:\n            const clip = partDefinition.fields.videoId;\n            if (clip) {\n                return ServerParentClass(studio, clip);\n            }\n            else {\n                return;\n            }\n        case \"EVS\" /* EVS */:\n            return EVSParentClass(studio, partDefinition.variant.evs);\n        case \"Unknown\" /* Unknown */:\n            return UnknownPartParentClass(studio, partDefinition);\n        default:\n            return;\n    }\n}\nexports.PartToParentClass = PartToParentClass;\nfunction CameraParentClass(studio, cameraName) {\n    return `${studio.toLowerCase()}_parent_camera_${cameraName.toLowerCase()}`;\n}\nexports.CameraParentClass = CameraParentClass;\nfunction EksternParentClass(studio, source) {\n    return `${studio.toLowerCase()}_parent_ekstern_${source.toLowerCase()}`;\n}\nexports.EksternParentClass = EksternParentClass;\nfunction ServerParentClass(studio, clip) {\n    return `${studio.toLowerCase()}_parent_server_${clip.toLowerCase()}`;\n}\nexports.ServerParentClass = ServerParentClass;\nfunction EVSParentClass(studio, evs) {\n    return `${studio.toLowerCase()}_parent_evs_${evs.toLowerCase()}`;\n}\nexports.EVSParentClass = EVSParentClass;\nfunction DVEParentClass(studio, dve) {\n    return `${studio.toLowerCase()}_parent_dve_${dve.toLowerCase()}`;\n}\nexports.DVEParentClass = DVEParentClass;\nfunction TLFParentClass(studio, source) {\n    return `${studio.toLowerCase()}_parent_tlf_${source.toLowerCase()}`;\n}\nexports.TLFParentClass = TLFParentClass;\nfunction UnknownPartParentClass(studio, partDefinition) {\n    const firstCue = partDefinition.cues[0];\n    if (!firstCue) {\n        return;\n    }\n    switch (firstCue.type) {\n        case tv2_constants_1.CueType.DVE:\n            return DVEParentClass(studio, firstCue.template);\n        case tv2_constants_1.CueType.Ekstern:\n            return EksternParentClass(studio, firstCue.source);\n        case tv2_constants_1.CueType.Telefon:\n            return TLFParentClass(studio, firstCue.source);\n        default:\n            return;\n    }\n}\nexports.UnknownPartParentClass = UnknownPartParentClass;\nfunction AddParentClass(partDefinition) {\n    return !!partDefinition.cues.filter(cue => (cue.type === tv2_constants_1.CueType.Grafik || cue.type === tv2_constants_1.CueType.MOS) &&\n        cue.end &&\n        cue.end.infiniteMode &&\n        cue.end.infiniteMode === 'B').length;\n}\nexports.AddParentClass = AddParentClass;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nfunction CreatePartInvalid(ingestPart, externalIdSuffix) {\n    const part = tv2_common_1.literal({\n        externalId: ingestPart.externalId + (externalIdSuffix ? `_${externalIdSuffix}` : ''),\n        title: ingestPart.rawType || 'Unknown',\n        metaData: {},\n        typeVariant: '',\n        invalid: true,\n        autoNext: true\n    });\n    return {\n        part,\n        adLibPieces: [],\n        pieces: []\n    };\n}\nexports.CreatePartInvalid = CreatePartInvalid;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nfunction MakeContentServer(file, mediaPlayerSessionId, partDefinition, config, sourceLayers, adLib, offtubeOptions) {\n    return tv2_common_1.literal({\n        studioLabel: '',\n        fileName: file,\n        path: `${config.studio.ClipSourcePath}\\\\${file}${config.studio.ClipFileExtension}`,\n        mediaFlowIds: [config.studio.MediaFlowId],\n        firstWords: '',\n        lastWords: '',\n        timelineObjects: tv2_common_1.literal([\n            tv2_common_1.literal(Object.assign(Object.assign({ id: '', enable: {\n                    while: '1'\n                }, priority: 1, layer: sourceLayers.Caspar.ClipPending, content: Object.assign({ deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG, type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA, file, loop: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? false : adLib, noStarttime: true }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? { playing: false } : {})) }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? {\n                keyframes: [\n                    {\n                        id: '',\n                        enable: {\n                            while: `.${offtubeOptions.enabler}`\n                        },\n                        content: {\n                            inPoint: 0,\n                            playing: true\n                        }\n                    }\n                ]\n            }\n                : {})), { metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                }, classes: [...(tv2_common_1.AddParentClass(partDefinition) && !adLib ? [tv2_common_1.ServerParentClass('studio0', file)] : [])] })),\n            tv2_common_1.literal({\n                id: '',\n                enable: getServerAdlibEnable(!!adLib, config.studio.CasparPrerollDuration, offtubeOptions),\n                priority: 1,\n                layer: sourceLayers.ATEM.MEPGM,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                    me: {\n                        input: undefined,\n                        transition: partDefinition.transition\n                            ? tv2_common_1.TransitionFromString(partDefinition.transition.style)\n                            : timeline_state_resolver_types_1.AtemTransitionStyle.CUT,\n                        transitionSettings: tv2_common_1.TransitionSettings(partDefinition)\n                    }\n                },\n                metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                },\n                classes: [...(adLib ? ['adlib_deparent'] : [])]\n            }),\n            tv2_common_1.literal({\n                id: '',\n                enable: getServerAdlibEnable(!!adLib, 0, offtubeOptions),\n                priority: 1,\n                layer: sourceLayers.Sisyfos.ClipPending,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    // isPgm: voiceOver ? 2 : 1\n                    isPgm: 1\n                },\n                metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                },\n                classes: []\n            }),\n            ...(sourceLayers.STICKY_LAYERS\n                ? sourceLayers.STICKY_LAYERS.map(layer => {\n                    return tv2_common_1.literal({\n                        id: '',\n                        enable: getServerAdlibEnable(!!adLib, 0, offtubeOptions),\n                        priority: 1,\n                        layer,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                            isPgm: 0\n                        },\n                        metaData: {\n                            sisyfosPersistLevel: true\n                        }\n                    });\n                })\n                : [])\n        ])\n    });\n}\nexports.MakeContentServer = MakeContentServer;\nfunction getServerAdlibEnable(adlib, startTime, offtubeOptions) {\n    if (adlib && (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube)) {\n        return {\n            while: `.${offtubeOptions.enabler}`\n        };\n    }\n    return {\n        start: startTime\n    };\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(70), exports);\ntslib_1.__exportStar(__webpack_require__(71), exports);\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BlueprintManifestType;\n(function (BlueprintManifestType) {\n    BlueprintManifestType[\"SYSTEM\"] = \"system\";\n    BlueprintManifestType[\"STUDIO\"] = \"studio\";\n    BlueprintManifestType[\"SHOWSTYLE\"] = \"showstyle\";\n})(BlueprintManifestType = exports.BlueprintManifestType || (exports.BlueprintManifestType = {}));\n//# sourceMappingURL=api.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IBlueprintAsRunLogEventContent;\n(function (IBlueprintAsRunLogEventContent) {\n    IBlueprintAsRunLogEventContent[\"STARTEDPLAYBACK\"] = \"startedPlayback\";\n    IBlueprintAsRunLogEventContent[\"STOPPEDPLAYBACK\"] = \"stoppedPlayback\";\n})(IBlueprintAsRunLogEventContent = exports.IBlueprintAsRunLogEventContent || (exports.IBlueprintAsRunLogEventContent = {}));\n//# sourceMappingURL=asRunLog.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConfigManifestEntryType;\n(function (ConfigManifestEntryType) {\n    ConfigManifestEntryType[\"STRING\"] = \"string\";\n    ConfigManifestEntryType[\"NUMBER\"] = \"number\";\n    ConfigManifestEntryType[\"BOOLEAN\"] = \"boolean\";\n    ConfigManifestEntryType[\"ENUM\"] = \"enum\";\n    ConfigManifestEntryType[\"TABLE\"] = \"table\";\n    ConfigManifestEntryType[\"SELECT\"] = \"select\";\n    ConfigManifestEntryType[\"SOURCE_LAYERS\"] = \"source_layers\";\n    ConfigManifestEntryType[\"LAYER_MAPPINGS\"] = \"layer_mappings\";\n})(ConfigManifestEntryType = exports.ConfigManifestEntryType || (exports.ConfigManifestEntryType = {}));\n//# sourceMappingURL=config.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** The type of the source layer, used to enable specific functions for special-type layers */\nvar SourceLayerType;\n(function (SourceLayerType) {\n    SourceLayerType[SourceLayerType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    SourceLayerType[SourceLayerType[\"CAMERA\"] = 1] = \"CAMERA\";\n    SourceLayerType[SourceLayerType[\"VT\"] = 2] = \"VT\";\n    SourceLayerType[SourceLayerType[\"REMOTE\"] = 3] = \"REMOTE\";\n    SourceLayerType[SourceLayerType[\"SCRIPT\"] = 4] = \"SCRIPT\";\n    SourceLayerType[SourceLayerType[\"GRAPHICS\"] = 5] = \"GRAPHICS\";\n    SourceLayerType[SourceLayerType[\"SPLITS\"] = 6] = \"SPLITS\";\n    SourceLayerType[SourceLayerType[\"AUDIO\"] = 7] = \"AUDIO\";\n    SourceLayerType[SourceLayerType[\"CAMERA_MOVEMENT\"] = 8] = \"CAMERA_MOVEMENT\";\n    SourceLayerType[SourceLayerType[\"METADATA\"] = 9] = \"METADATA\";\n    SourceLayerType[SourceLayerType[\"LOWER_THIRD\"] = 10] = \"LOWER_THIRD\";\n    SourceLayerType[SourceLayerType[\"LIVE_SPEAK\"] = 11] = \"LIVE_SPEAK\";\n    SourceLayerType[SourceLayerType[\"MIC\"] = 12] = \"MIC\";\n    SourceLayerType[SourceLayerType[\"TRANSITION\"] = 13] = \"TRANSITION\";\n    SourceLayerType[SourceLayerType[\"LIGHTS\"] = 14] = \"LIGHTS\";\n})(SourceLayerType = exports.SourceLayerType || (exports.SourceLayerType = {}));\n//# sourceMappingURL=content.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IBlueprintExternalMessageQueueType;\n(function (IBlueprintExternalMessageQueueType) {\n    IBlueprintExternalMessageQueueType[\"SOAP\"] = \"soap\";\n    IBlueprintExternalMessageQueueType[\"SLACK\"] = \"slack\";\n    IBlueprintExternalMessageQueueType[\"RABBIT_MQ\"] = \"rabbitmq\";\n})(IBlueprintExternalMessageQueueType = exports.IBlueprintExternalMessageQueueType || (exports.IBlueprintExternalMessageQueueType = {}));\n//# sourceMappingURL=message.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PartHoldMode;\n(function (PartHoldMode) {\n    PartHoldMode[PartHoldMode[\"NONE\"] = 0] = \"NONE\";\n    PartHoldMode[PartHoldMode[\"FROM\"] = 1] = \"FROM\";\n    PartHoldMode[PartHoldMode[\"TO\"] = 2] = \"TO\";\n})(PartHoldMode = exports.PartHoldMode || (exports.PartHoldMode = {}));\nvar PieceLifespan;\n(function (PieceLifespan) {\n    PieceLifespan[PieceLifespan[\"Normal\"] = 0] = \"Normal\";\n    PieceLifespan[PieceLifespan[\"OutOnNextPart\"] = 1] = \"OutOnNextPart\";\n    PieceLifespan[PieceLifespan[\"OutOnNextSegment\"] = 2] = \"OutOnNextSegment\";\n    PieceLifespan[PieceLifespan[\"Infinite\"] = 3] = \"Infinite\";\n})(PieceLifespan = exports.PieceLifespan || (exports.PieceLifespan = {}));\n//# sourceMappingURL=rundown.js.map\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LookaheadMode;\n(function (LookaheadMode) {\n    LookaheadMode[LookaheadMode[\"NONE\"] = 0] = \"NONE\";\n    LookaheadMode[LookaheadMode[\"PRELOAD\"] = 1] = \"PRELOAD\";\n    LookaheadMode[LookaheadMode[\"RETAIN\"] = 2] = \"RETAIN\";\n    LookaheadMode[LookaheadMode[\"WHEN_CLEAR\"] = 3] = \"WHEN_CLEAR\";\n})(LookaheadMode = exports.LookaheadMode || (exports.LookaheadMode = {}));\n//# sourceMappingURL=studio.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nexports.Timeline = timeline_state_resolver_types_1.Timeline;\nvar PlayoutTimelinePrefixes;\n(function (PlayoutTimelinePrefixes) {\n    PlayoutTimelinePrefixes[\"PART_GROUP_PREFIX\"] = \"part_group_\";\n    PlayoutTimelinePrefixes[\"PART_GROUP_FIRST_ITEM_PREFIX\"] = \"part_group_firstobject_\";\n    PlayoutTimelinePrefixes[\"PIECE_GROUP_PREFIX\"] = \"piece_group_\";\n    PlayoutTimelinePrefixes[\"PIECE_GROUP_FIRST_ITEM_PREFIX\"] = \"piece_group_firstobject_\";\n})(PlayoutTimelinePrefixes = exports.PlayoutTimelinePrefixes || (exports.PlayoutTimelinePrefixes = {}));\nfunction getPartGroupId(part) {\n    if (typeof part === 'string') {\n        return PlayoutTimelinePrefixes.PART_GROUP_PREFIX + part;\n    }\n    return PlayoutTimelinePrefixes.PART_GROUP_PREFIX + part._id;\n}\nexports.getPartGroupId = getPartGroupId;\nfunction getPieceGroupId(piece) {\n    if (typeof piece === 'string') {\n        return PlayoutTimelinePrefixes.PIECE_GROUP_PREFIX + piece;\n    }\n    return PlayoutTimelinePrefixes.PIECE_GROUP_PREFIX + piece._id;\n}\nexports.getPieceGroupId = getPieceGroupId;\nfunction getPartFirstObjectId(part) {\n    if (typeof part === 'string') {\n        return PlayoutTimelinePrefixes.PART_GROUP_FIRST_ITEM_PREFIX + part;\n    }\n    return PlayoutTimelinePrefixes.PART_GROUP_FIRST_ITEM_PREFIX + part._id;\n}\nexports.getPartFirstObjectId = getPartFirstObjectId;\nfunction getPieceFirstObjectId(piece) {\n    if (typeof piece === 'string') {\n        return PlayoutTimelinePrefixes.PIECE_GROUP_FIRST_ITEM_PREFIX + piece;\n    }\n    return PlayoutTimelinePrefixes.PIECE_GROUP_FIRST_ITEM_PREFIX + piece._id;\n}\nexports.getPieceFirstObjectId = getPieceFirstObjectId;\nvar TimelineObjHoldMode;\n(function (TimelineObjHoldMode) {\n    TimelineObjHoldMode[TimelineObjHoldMode[\"NORMAL\"] = 0] = \"NORMAL\";\n    TimelineObjHoldMode[TimelineObjHoldMode[\"ONLY\"] = 1] = \"ONLY\";\n    TimelineObjHoldMode[TimelineObjHoldMode[\"EXCEPT\"] = 2] = \"EXCEPT\"; // Only use when not in HOLD\n})(TimelineObjHoldMode = exports.TimelineObjHoldMode || (exports.TimelineObjHoldMode = {}));\n//# sourceMappingURL=timeline.js.map\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingAtemType;\n(function (MappingAtemType) {\n    MappingAtemType[MappingAtemType[\"MixEffect\"] = 0] = \"MixEffect\";\n    MappingAtemType[MappingAtemType[\"DownStreamKeyer\"] = 1] = \"DownStreamKeyer\";\n    MappingAtemType[MappingAtemType[\"SuperSourceBox\"] = 2] = \"SuperSourceBox\";\n    MappingAtemType[MappingAtemType[\"Auxilliary\"] = 3] = \"Auxilliary\";\n    MappingAtemType[MappingAtemType[\"MediaPlayer\"] = 4] = \"MediaPlayer\";\n    MappingAtemType[MappingAtemType[\"SuperSourceProperties\"] = 5] = \"SuperSourceProperties\";\n    MappingAtemType[MappingAtemType[\"AudioChannel\"] = 6] = \"AudioChannel\";\n    MappingAtemType[MappingAtemType[\"MacroPlayer\"] = 7] = \"MacroPlayer\";\n})(MappingAtemType = exports.MappingAtemType || (exports.MappingAtemType = {}));\nvar TimelineContentTypeAtem;\n(function (TimelineContentTypeAtem) {\n    TimelineContentTypeAtem[\"ME\"] = \"me\";\n    TimelineContentTypeAtem[\"DSK\"] = \"dsk\";\n    TimelineContentTypeAtem[\"AUX\"] = \"aux\";\n    TimelineContentTypeAtem[\"SSRC\"] = \"ssrc\";\n    TimelineContentTypeAtem[\"SSRCPROPS\"] = \"ssrcProps\";\n    TimelineContentTypeAtem[\"MEDIAPLAYER\"] = \"mp\";\n    TimelineContentTypeAtem[\"AUDIOCHANNEL\"] = \"audioChan\";\n    TimelineContentTypeAtem[\"MACROPLAYER\"] = \"macroPlayer\";\n})(TimelineContentTypeAtem = exports.TimelineContentTypeAtem || (exports.TimelineContentTypeAtem = {}));\nvar AtemTransitionStyle;\n(function (AtemTransitionStyle) {\n    AtemTransitionStyle[AtemTransitionStyle[\"MIX\"] = 0] = \"MIX\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DIP\"] = 1] = \"DIP\";\n    AtemTransitionStyle[AtemTransitionStyle[\"WIPE\"] = 2] = \"WIPE\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DVE\"] = 3] = \"DVE\";\n    AtemTransitionStyle[AtemTransitionStyle[\"STING\"] = 4] = \"STING\";\n    AtemTransitionStyle[AtemTransitionStyle[\"CUT\"] = 5] = \"CUT\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DUMMY\"] = 6] = \"DUMMY\";\n})(AtemTransitionStyle = exports.AtemTransitionStyle || (exports.AtemTransitionStyle = {}));\n//# sourceMappingURL=atem.js.map\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeCasparCg;\n(function (TimelineContentTypeCasparCg) {\n    TimelineContentTypeCasparCg[\"MEDIA\"] = \"media\";\n    TimelineContentTypeCasparCg[\"IP\"] = \"ip\";\n    TimelineContentTypeCasparCg[\"INPUT\"] = \"input\";\n    TimelineContentTypeCasparCg[\"TEMPLATE\"] = \"template\";\n    TimelineContentTypeCasparCg[\"HTMLPAGE\"] = \"htmlpage\";\n    TimelineContentTypeCasparCg[\"ROUTE\"] = \"route\";\n    TimelineContentTypeCasparCg[\"RECORD\"] = \"record\";\n})(TimelineContentTypeCasparCg = exports.TimelineContentTypeCasparCg || (exports.TimelineContentTypeCasparCg = {}));\n// Note: enums copied from casparcg-connection\nvar Transition;\n(function (Transition) {\n    Transition[\"MIX\"] = \"MIX\";\n    Transition[\"CUT\"] = \"CUT\";\n    Transition[\"PUSH\"] = \"PUSH\";\n    Transition[\"WIPE\"] = \"WIPE\";\n    Transition[\"SLIDE\"] = \"SLIDE\";\n    Transition[\"STING\"] = \"STING\";\n})(Transition = exports.Transition || (exports.Transition = {}));\nvar Ease;\n(function (Ease) {\n    Ease[\"LINEAR\"] = \"LINEAR\";\n    Ease[\"NONE\"] = \"NONE\";\n    Ease[\"EASEINBACK\"] = \"EASEINBACK\";\n    Ease[\"EASEINBOUNCE\"] = \"EASEINBOUNCE\";\n    Ease[\"EASEINCIRC\"] = \"EASEINCIRC\";\n    Ease[\"EASEINCUBIC\"] = \"EASEINCUBIC\";\n    Ease[\"EASEINELASTIC\"] = \"EASEINELASTIC\";\n    Ease[\"EASEINEXPO\"] = \"EASEINEXPO\";\n    Ease[\"EASEINOUTBACK\"] = \"EASEINOUTBACK\";\n    Ease[\"EASEINOUTBOUNCE\"] = \"EASEINOUTBOUNCE\";\n    Ease[\"EASEINOUTCIRC\"] = \"EASEINOUTCIRC\";\n    Ease[\"EASEINOUTCUBIC\"] = \"EASEINOUTCUBIC\";\n    Ease[\"EASEINOUTELASTIC\"] = \"EASEINOUTELASTIC\";\n    Ease[\"EASEINOUTEXPO\"] = \"EASEINOUTEXPO\";\n    Ease[\"EASEINOUTQUAD\"] = \"EASEINOUTQUAD\";\n    Ease[\"EASEINOUTQUART\"] = \"EASEINOUTQUART\";\n    Ease[\"EASEINOUTQUINT\"] = \"EASEINOUTQUINT\";\n    Ease[\"EASEINOUTSINE\"] = \"EASEINOUTSINE\";\n    Ease[\"EASEINQUAD\"] = \"EASEINQUAD\";\n    Ease[\"EASEINQUART\"] = \"EASEINQUART\";\n    Ease[\"EASEINQUINT\"] = \"EASEINQUINT\";\n    Ease[\"EASEINSINE\"] = \"EASEINSINE\";\n    Ease[\"EASELINEAR\"] = \"EASELINEAR\";\n    Ease[\"EASENONE\"] = \"EASENONE\";\n    Ease[\"EASEOUTBACK\"] = \"EASEOUTBACK\";\n    Ease[\"EASEOUTBOUNCE\"] = \"EASEOUTBOUNCE\";\n    Ease[\"EASEOUTCIRC\"] = \"EASEOUTCIRC\";\n    Ease[\"EASEOUTCUBIC\"] = \"EASEOUTCUBIC\";\n    Ease[\"EASEOUTELASTIC\"] = \"EASEOUTELASTIC\";\n    Ease[\"EASEOUTEXPO\"] = \"EASEOUTEXPO\";\n    Ease[\"EASEOUTINBACK\"] = \"EASEOUTINBACK\";\n    Ease[\"EASEOUTINBOUNCE\"] = \"EASEOUTINBOUNCE\";\n    Ease[\"EASEOUTINCIRC\"] = \"EASEOUTINCIRC\";\n    Ease[\"EASEOUTINCUBIC\"] = \"EASEOUTINCUBIC\";\n    Ease[\"EASEOUTINELASTIC\"] = \"EASEOUTINELASTIC\";\n    Ease[\"EASEOUTINEXPO\"] = \"EASEOUTINEXPO\";\n    Ease[\"EASEOUTINQUAD\"] = \"EASEOUTINQUAD\";\n    Ease[\"EASEOUTINQUART\"] = \"EASEOUTINQUART\";\n    Ease[\"EASEOUTINQUINT\"] = \"EASEOUTINQUINT\";\n    Ease[\"EASEOUTINSINE\"] = \"EASEOUTINSINE\";\n    Ease[\"EASEOUTQUAD\"] = \"EASEOUTQUAD\";\n    Ease[\"EASEOUTQUART\"] = \"EASEOUTQUART\";\n    Ease[\"EASEOUTQUINT\"] = \"EASEOUTQUINT\";\n    Ease[\"EASEOUTSINE\"] = \"EASEOUTSINE\";\n    Ease[\"IN_BACK\"] = \"IN_BACK\";\n    Ease[\"IN_BOUNCE\"] = \"IN_BOUNCE\";\n    Ease[\"IN_CIRC\"] = \"IN_CIRC\";\n    Ease[\"IN_CUBIC\"] = \"IN_CUBIC\";\n    Ease[\"IN_ELASTIC\"] = \"IN_ELASTIC\";\n    Ease[\"IN_EXPO\"] = \"IN_EXPO\";\n    Ease[\"IN_OUT_BACK\"] = \"IN_OUT_BACK\";\n    Ease[\"IN_OUT_BOUNCE\"] = \"IN_OUT_BOUNCE\";\n    Ease[\"IN_OUT_CIRC\"] = \"IN_OUT_CIRC\";\n    Ease[\"IN_OUT_CUBIC\"] = \"IN_OUT_CUBIC\";\n    Ease[\"IN_OUT_ELASTIC\"] = \"IN_OUT_ELASTIC\";\n    Ease[\"IN_OUT_EXPO\"] = \"IN_OUT_EXPO\";\n    Ease[\"IN_OUT_QUAD\"] = \"IN_OUT_QUAD\";\n    Ease[\"IN_OUT_QUART\"] = \"IN_OUT_QUART\";\n    Ease[\"IN_OUT_QUINT\"] = \"IN_OUT_QUINT\";\n    Ease[\"IN_OUT_SINE\"] = \"IN_OUT_SINE\";\n    Ease[\"IN_QUAD\"] = \"IN_QUAD\";\n    Ease[\"IN_QUART\"] = \"IN_QUART\";\n    Ease[\"IN_QUINT\"] = \"IN_QUINT\";\n    Ease[\"IN_SINE\"] = \"IN_SINE\";\n    Ease[\"OUT_BACK\"] = \"OUT_BACK\";\n    Ease[\"OUT_BOUNCE\"] = \"OUT_BOUNCE\";\n    Ease[\"OUT_CIRC\"] = \"OUT_CIRC\";\n    Ease[\"OUT_CUBIC\"] = \"OUT_CUBIC\";\n    Ease[\"OUT_ELASTIC\"] = \"OUT_ELASTIC\";\n    Ease[\"OUT_EXPO\"] = \"OUT_EXPO\";\n    Ease[\"OUT_IN_BACK\"] = \"OUT_IN_BACK\";\n    Ease[\"OUT_IN_BOUNCE\"] = \"OUT_IN_BOUNCE\";\n    Ease[\"OUT_IN_CIRC\"] = \"OUT_IN_CIRC\";\n    Ease[\"OUT_IN_CUBIC\"] = \"OUT_IN_CUBIC\";\n    Ease[\"OUT_IN_ELASTIC\"] = \"OUT_IN_ELASTIC\";\n    Ease[\"OUT_IN_EXPO\"] = \"OUT_IN_EXPO\";\n    Ease[\"OUT_IN_QUAD\"] = \"OUT_IN_QUAD\";\n    Ease[\"OUT_IN_QUART\"] = \"OUT_IN_QUART\";\n    Ease[\"OUT_IN_QUINT\"] = \"OUT_IN_QUINT\";\n    Ease[\"OUT_IN_SINE\"] = \"OUT_IN_SINE\";\n    Ease[\"OUT_QUAD\"] = \"OUT_QUAD\";\n    Ease[\"OUT_QUART\"] = \"OUT_QUART\";\n    Ease[\"OUT_QUINT\"] = \"OUT_QUINT\";\n})(Ease = exports.Ease || (exports.Ease = {}));\nvar Direction;\n(function (Direction) {\n    Direction[\"LEFT\"] = \"LEFT\";\n    Direction[\"RIGHT\"] = \"RIGHT\";\n})(Direction = exports.Direction || (exports.Direction = {}));\nvar BlendMode;\n(function (BlendMode) {\n    BlendMode[\"ADD\"] = \"ADD\";\n    BlendMode[\"AVERAGE\"] = \"AVERAGE\";\n    BlendMode[\"COLOR\"] = \"COLOR\";\n    BlendMode[\"COLOR_BURN\"] = \"COLOR_BURN\";\n    BlendMode[\"COLOR_DODGE\"] = \"COLOR_DODGE\";\n    BlendMode[\"CONTRAST\"] = \"CONTRAST\";\n    BlendMode[\"DARKEN\"] = \"DARKEN\";\n    BlendMode[\"DIFFERENCE\"] = \"DIFFERENCE\";\n    BlendMode[\"EXCLUSION\"] = \"EXCLUSION\";\n    BlendMode[\"GLOW\"] = \"GLOW\";\n    BlendMode[\"HARD_LIGHT\"] = \"HARD_LIGHT\";\n    BlendMode[\"HARD_MIX\"] = \"HARD_MIX\";\n    BlendMode[\"LIGHTEN\"] = \"LIGHTEN\";\n    BlendMode[\"LINEAR_BURN\"] = \"LINEAR_BURN\";\n    BlendMode[\"LINEAR_DODGE\"] = \"LINEAR_DODGE\";\n    BlendMode[\"LINEAR_LIGHT\"] = \"LINEAR_LIGHT\";\n    BlendMode[\"LUMINOSITY\"] = \"LUMINOSITY\";\n    BlendMode[\"MULTIPLY\"] = \"MULTIPLY\";\n    BlendMode[\"NEGATION\"] = \"NEGATION\";\n    BlendMode[\"NORMAL\"] = \"NORMAL\";\n    BlendMode[\"OVERLAY\"] = \"OVERLAY\";\n    BlendMode[\"PHOENIX\"] = \"PHOENIX\";\n    BlendMode[\"PIN_LIGHT\"] = \"PIN_LIGHT\";\n    BlendMode[\"REFLECT\"] = \"REFLECT\";\n    BlendMode[\"SATURATION\"] = \"SATURATION\";\n    BlendMode[\"SCREEN\"] = \"SCREEN\";\n    BlendMode[\"SOFT_LIGHT\"] = \"SOFT_LIGHT\";\n    BlendMode[\"SUBTRACT\"] = \"SUBTRACT\";\n    BlendMode[\"VIVID_LIGHT\"] = \"VIVID_LIGHT\";\n})(BlendMode = exports.BlendMode || (exports.BlendMode = {}));\nvar ChannelFormat;\n(function (ChannelFormat) {\n    ChannelFormat[\"PAL\"] = \"PAL\";\n    ChannelFormat[\"NTSC\"] = \"NTSC\";\n    ChannelFormat[\"SD_576P2500\"] = \"SD_576P2500\";\n    ChannelFormat[\"HD_720P2398\"] = \"HD_720P2398\";\n    ChannelFormat[\"HD_720P2400\"] = \"HD_720P2400\";\n    ChannelFormat[\"HD_720P2500\"] = \"HD_720P2500\";\n    ChannelFormat[\"HD_720P2997\"] = \"HD_720P2997\";\n    ChannelFormat[\"HD_720P3000\"] = \"HD_720P3000\";\n    ChannelFormat[\"HD_720P5000\"] = \"HD_720P5000\";\n    ChannelFormat[\"HD_720P5994\"] = \"HD_720P5994\";\n    ChannelFormat[\"HD_720P6000\"] = \"HD_720P6000\";\n    ChannelFormat[\"HD_1080I5000\"] = \"HD_1080I5000\";\n    ChannelFormat[\"HD_1080I5994\"] = \"HD_1080I5994\";\n    ChannelFormat[\"HD_1080I6000\"] = \"HD_1080I6000\";\n    ChannelFormat[\"HD_1080P2398\"] = \"HD_1080P2398\";\n    ChannelFormat[\"HD_1080P2400\"] = \"HD_1080P2400\";\n    ChannelFormat[\"HD_1080P2500\"] = \"HD_1080P2500\";\n    ChannelFormat[\"HD_1080P2997\"] = \"HD_1080P2997\";\n    ChannelFormat[\"HD_1080P3000\"] = \"HD_1080P3000\";\n    ChannelFormat[\"HD_1080P5000\"] = \"HD_1080P5000\";\n    ChannelFormat[\"HD_1080P5994\"] = \"HD_1080P5994\";\n    ChannelFormat[\"HD_1080P6000\"] = \"HD_1080P6000\";\n    ChannelFormat[\"DCI_1080P2398\"] = \"DCI_1080P2398\";\n    ChannelFormat[\"DCI_1080P2400\"] = \"DCI_1080P2400\";\n    ChannelFormat[\"DCI_1080P2500\"] = \"DCI_1080P2500\";\n    ChannelFormat[\"DCI_2160P2398\"] = \"DCI_2160P2398\";\n    ChannelFormat[\"DCI_2160P2400\"] = \"DCI_2160P2400\";\n    ChannelFormat[\"DCI_2160P2500\"] = \"DCI_2160P2500\";\n    ChannelFormat[\"UCH_2160P2400\"] = \"UCH_2160P2400\";\n    ChannelFormat[\"UHD_1556P2398\"] = \"UHD_1556P2398\";\n    ChannelFormat[\"UHD_1556P2400\"] = \"UHD_1556P2400\";\n    ChannelFormat[\"UHD_1556P2500\"] = \"UHD_1556P2500\";\n    ChannelFormat[\"UHD_2160P2398\"] = \"UHD_2160P2398\";\n    ChannelFormat[\"UHD_2160P2500\"] = \"UHD_2160P2500\";\n    ChannelFormat[\"UHD_2160P2997\"] = \"UHD_2160P2997\";\n    ChannelFormat[\"UHD_2160P3000\"] = \"UHD_2160P3000\";\n    ChannelFormat[\"UHD_2160P5000\"] = \"UHD_2160P5000\";\n    ChannelFormat[\"UHD_2160P5994\"] = \"UHD_2160P5994\";\n    ChannelFormat[\"INVALID\"] = \"INVALID\";\n})(ChannelFormat = exports.ChannelFormat || (exports.ChannelFormat = {}));\nvar Chroma;\n(function (Chroma) {\n    Chroma[\"BLUE\"] = \"BLUE\";\n    Chroma[\"GREEN\"] = \"GREEN\";\n    Chroma[\"NONE\"] = \"NONE\";\n})(Chroma = exports.Chroma || (exports.Chroma = {}));\n//# sourceMappingURL=casparcg.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeHTTP;\n(function (TimelineContentTypeHTTP) {\n    TimelineContentTypeHTTP[\"GET\"] = \"get\";\n    TimelineContentTypeHTTP[\"POST\"] = \"post\";\n    TimelineContentTypeHTTP[\"PUT\"] = \"put\";\n    TimelineContentTypeHTTP[\"DELETE\"] = \"delete\";\n})(TimelineContentTypeHTTP = exports.TimelineContentTypeHTTP || (exports.TimelineContentTypeHTTP = {}));\n//# sourceMappingURL=httpSend.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingHyperdeckType;\n(function (MappingHyperdeckType) {\n    MappingHyperdeckType[\"TRANSPORT\"] = \"transport\";\n})(MappingHyperdeckType = exports.MappingHyperdeckType || (exports.MappingHyperdeckType = {}));\nvar TimelineContentTypeHyperdeck;\n(function (TimelineContentTypeHyperdeck) {\n    TimelineContentTypeHyperdeck[\"TRANSPORT\"] = \"transport\";\n})(TimelineContentTypeHyperdeck = exports.TimelineContentTypeHyperdeck || (exports.TimelineContentTypeHyperdeck = {}));\n// Note: These are copied from hyperdeck-connection -----------\nvar TransportStatus;\n(function (TransportStatus) {\n    TransportStatus[\"PREVIEW\"] = \"preview\";\n    TransportStatus[\"STOPPED\"] = \"stopped\";\n    TransportStatus[\"PLAY\"] = \"play\";\n    TransportStatus[\"FORWARD\"] = \"forward\";\n    TransportStatus[\"REWIND\"] = \"rewind\";\n    TransportStatus[\"JOG\"] = \"jog\";\n    TransportStatus[\"SHUTTLE\"] = \"shuttle\";\n    TransportStatus[\"RECORD\"] = \"record\";\n})(TransportStatus = exports.TransportStatus || (exports.TransportStatus = {}));\nvar SlotId;\n(function (SlotId) {\n    SlotId[SlotId[\"ONE\"] = 1] = \"ONE\";\n    SlotId[SlotId[\"TWO\"] = 2] = \"TWO\";\n})(SlotId = exports.SlotId || (exports.SlotId = {}));\nvar SlotStatus;\n(function (SlotStatus) {\n    SlotStatus[\"EMPTY\"] = \"empty\";\n    SlotStatus[\"MOUNTING\"] = \"mounting\";\n    SlotStatus[\"ERROR\"] = \"error\";\n    SlotStatus[\"MOUNTED\"] = \"mounted\";\n})(SlotStatus = exports.SlotStatus || (exports.SlotStatus = {}));\nvar VideoFormat;\n(function (VideoFormat) {\n    VideoFormat[\"NTSC\"] = \"NTSC\";\n    VideoFormat[\"PAL\"] = \"PAL\";\n    VideoFormat[\"NTSCp\"] = \"NTSCp\";\n    VideoFormat[\"PALp\"] = \"PALp\";\n    VideoFormat[\"_720p50\"] = \"720p50\";\n    VideoFormat[\"_720p5994\"] = \"720p5994\";\n    VideoFormat[\"_720p60\"] = \"720p60\";\n    VideoFormat[\"_1080p23976\"] = \"1080p23976\";\n    VideoFormat[\"_1080p24\"] = \"1080p24\";\n    VideoFormat[\"_1080p25\"] = \"1080p25\";\n    VideoFormat[\"_1080p2997\"] = \"1080p2997\";\n    VideoFormat[\"_1080p30\"] = \"1080p30\";\n    VideoFormat[\"_1080i50\"] = \"1080i50\";\n    VideoFormat[\"_1080i5994\"] = \"1080i5994\";\n    VideoFormat[\"_1080i60\"] = \"1080i60\";\n    VideoFormat[\"_4Kp23976\"] = \"4Kp23976\";\n    VideoFormat[\"_4Kp24\"] = \"4Kp24\";\n    VideoFormat[\"_4Kp25\"] = \"4Kp25\";\n    VideoFormat[\"_4Kp2997\"] = \"4Kp2997\";\n    VideoFormat[\"_4Kp30\"] = \"4Kp30\";\n    VideoFormat[\"_4Kp50\"] = \"4Kp50\";\n    VideoFormat[\"_4Kp5994\"] = \"4Kp5994\";\n    VideoFormat[\"_4Kp60\"] = \"4Kp60\";\n})(VideoFormat = exports.VideoFormat || (exports.VideoFormat = {}));\n//# sourceMappingURL=hyperdeck.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingLawoType;\n(function (MappingLawoType) {\n    MappingLawoType[\"SOURCE\"] = \"source\";\n    MappingLawoType[\"FULL_PATH\"] = \"fullpath\";\n    MappingLawoType[\"TRIGGER_VALUE\"] = \"triggerValue\";\n})(MappingLawoType = exports.MappingLawoType || (exports.MappingLawoType = {}));\nvar TimelineContentTypeLawo;\n(function (TimelineContentTypeLawo) {\n    TimelineContentTypeLawo[\"SOURCE\"] = \"lawosource\";\n    TimelineContentTypeLawo[\"EMBER_PROPERTY\"] = \"lawofullpathemberproperty\";\n    TimelineContentTypeLawo[\"TRIGGER_VALUE\"] = \"triggervalue\";\n})(TimelineContentTypeLawo = exports.TimelineContentTypeLawo || (exports.TimelineContentTypeLawo = {}));\nvar EmberTypes;\n(function (EmberTypes) {\n    EmberTypes[\"STRING\"] = \"string\";\n    EmberTypes[\"INTEGER\"] = \"integer\";\n    EmberTypes[\"REAL\"] = \"real\";\n    EmberTypes[\"BOOLEAN\"] = \"bool\";\n})(EmberTypes = exports.EmberTypes || (exports.EmberTypes = {}));\n//# sourceMappingURL=lawo.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeOSC;\n(function (TimelineContentTypeOSC) {\n    TimelineContentTypeOSC[\"OSC\"] = \"osc\";\n})(TimelineContentTypeOSC = exports.TimelineContentTypeOSC || (exports.TimelineContentTypeOSC = {}));\nvar OSCValueType;\n(function (OSCValueType) {\n    OSCValueType[\"INT\"] = \"i\";\n    OSCValueType[\"FLOAT\"] = \"f\";\n    OSCValueType[\"STRING\"] = \"s\";\n    OSCValueType[\"BLOB\"] = \"b\";\n})(OSCValueType = exports.OSCValueType || (exports.OSCValueType = {}));\n//# sourceMappingURL=osc.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypePharos;\n(function (TimelineContentTypePharos) {\n    TimelineContentTypePharos[\"SCENE\"] = \"scene\";\n    TimelineContentTypePharos[\"TIMELINE\"] = \"timeline\";\n})(TimelineContentTypePharos = exports.TimelineContentTypePharos || (exports.TimelineContentTypePharos = {}));\n//# sourceMappingURL=pharos.js.map\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingPanasonicPtzType;\n(function (MappingPanasonicPtzType) {\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"PRESET_SPEED\"] = 0] = \"PRESET_SPEED\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"PRESET\"] = 1] = \"PRESET\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"ZOOM\"] = 2] = \"ZOOM\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"ZOOM_SPEED\"] = 3] = \"ZOOM_SPEED\";\n})(MappingPanasonicPtzType = exports.MappingPanasonicPtzType || (exports.MappingPanasonicPtzType = {}));\nvar TimelineContentTypePanasonicPtz;\n(function (TimelineContentTypePanasonicPtz) {\n    TimelineContentTypePanasonicPtz[\"PRESET\"] = \"presetMem\";\n    TimelineContentTypePanasonicPtz[\"SPEED\"] = \"presetSpeed\";\n    TimelineContentTypePanasonicPtz[\"ZOOM_SPEED\"] = \"zoomSpeed\";\n    TimelineContentTypePanasonicPtz[\"ZOOM\"] = \"zoom\";\n})(TimelineContentTypePanasonicPtz = exports.TimelineContentTypePanasonicPtz || (exports.TimelineContentTypePanasonicPtz = {}));\n//# sourceMappingURL=panasonicPTZ.js.map\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeSisyfos;\n(function (TimelineContentTypeSisyfos) {\n    TimelineContentTypeSisyfos[\"SISYFOS\"] = \"sisyfos\";\n})(TimelineContentTypeSisyfos = exports.TimelineContentTypeSisyfos || (exports.TimelineContentTypeSisyfos = {}));\nvar Commands;\n(function (Commands) {\n    Commands[\"TOGGLE_PGM\"] = \"togglePgm\";\n    Commands[\"TOGGLE_PST\"] = \"togglePst\";\n    Commands[\"SET_FADER\"] = \"setFader\";\n    Commands[\"CLEAR_PST_ROW\"] = \"clearPstRow\";\n    Commands[\"LABEL\"] = \"label\";\n    Commands[\"TAKE\"] = \"take\";\n    Commands[\"VISIBLE\"] = \"visible\";\n    Commands[\"RESYNC\"] = \"resync\";\n})(Commands = exports.Commands || (exports.Commands = {}));\n// ------------------------------------------------------\n//# sourceMappingURL=sisyfos.js.map\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QuantelControlMode;\n(function (QuantelControlMode) {\n    /** Try to avoid freeze-frames when playing */\n    QuantelControlMode[\"QUALITY\"] = \"quality\";\n    /** Try to play as fast as possible */\n    QuantelControlMode[\"SPEED\"] = \"speed\";\n})(QuantelControlMode = exports.QuantelControlMode || (exports.QuantelControlMode = {}));\nvar QuantelTransitionType;\n(function (QuantelTransitionType) {\n    QuantelTransitionType[QuantelTransitionType[\"DELAY\"] = 0] = \"DELAY\";\n})(QuantelTransitionType = exports.QuantelTransitionType || (exports.QuantelTransitionType = {}));\n//# sourceMappingURL=quantel.js.map\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeTcp;\n(function (TimelineContentTypeTcp) {\n    TimelineContentTypeTcp[\"GET\"] = \"get\";\n    TimelineContentTypeTcp[\"POST\"] = \"post\";\n    TimelineContentTypeTcp[\"PUT\"] = \"put\";\n    TimelineContentTypeTcp[\"DELETE\"] = \"delete\";\n})(TimelineContentTypeTcp = exports.TimelineContentTypeTcp || (exports.TimelineContentTypeTcp = {}));\n//# sourceMappingURL=tcpSend.js.map\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeVizMSE;\n(function (TimelineContentTypeVizMSE) {\n    TimelineContentTypeVizMSE[\"ELEMENT_INTERNAL\"] = \"element_internal\";\n    TimelineContentTypeVizMSE[\"ELEMENT_PILOT\"] = \"element_pilot\";\n    TimelineContentTypeVizMSE[\"CONTINUE\"] = \"continue\";\n    TimelineContentTypeVizMSE[\"LOAD_ALL_ELEMENTS\"] = \"load_all_elements\";\n    TimelineContentTypeVizMSE[\"CLEAR_ALL_ELEMENTS\"] = \"clear_all_elements\";\n})(TimelineContentTypeVizMSE = exports.TimelineContentTypeVizMSE || (exports.TimelineContentTypeVizMSE = {}));\nvar VIZMSETransitionType;\n(function (VIZMSETransitionType) {\n    VIZMSETransitionType[VIZMSETransitionType[\"DELAY\"] = 0] = \"DELAY\";\n})(VIZMSETransitionType = exports.VIZMSETransitionType || (exports.VIZMSETransitionType = {}));\n//# sourceMappingURL=vizMSE.js.map\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeSingularLive;\n(function (TimelineContentTypeSingularLive) {\n    TimelineContentTypeSingularLive[\"COMPOSITION\"] = \"composition\";\n})(TimelineContentTypeSingularLive = exports.TimelineContentTypeSingularLive || (exports.TimelineContentTypeSingularLive = {}));\n//# sourceMappingURL=singularLive.js.map\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Note: These types are copies from superfly-timeline\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Enums ------------------------------------------------------------\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"START\"] = 0] = \"START\";\n    EventType[EventType[\"END\"] = 1] = \"END\";\n    EventType[EventType[\"KEYFRAME\"] = 2] = \"KEYFRAME\";\n})(EventType = exports.EventType || (exports.EventType = {}));\n//# sourceMappingURL=superfly-timeline.js.map\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\nconst _ = __webpack_require__(3);\nvar iterateDeeplyEnum;\n(function (iterateDeeplyEnum) {\n    iterateDeeplyEnum[\"CONTINUE\"] = \"$continue\";\n})(iterateDeeplyEnum = exports.iterateDeeplyEnum || (exports.iterateDeeplyEnum = {}));\n/**\n * Iterates deeply through object or array\n * @param obj the object or array to iterate through\n * @param iteratee function to apply on every attribute\n */\nfunction iterateDeeply(obj, iteratee, key) {\n    const newValue = iteratee(obj, key);\n    if (newValue === iterateDeeplyEnum.CONTINUE) {\n        // Continue iterate deeper if possible\n        if (_.isObject(obj)) {\n            // object or array\n            _.each(obj, (v, k) => {\n                obj[k] = iterateDeeply(v, iteratee, k);\n            });\n        }\n        else {\n            // don't change anything\n        }\n        return obj;\n    }\n    else {\n        return newValue;\n    }\n}\nexports.iterateDeeply = iterateDeeply;\n/**\n * Iterates deeply through object or array, using an asynchronous iteratee\n * @param obj the object or array to iterate through\n * @param iteratee function to apply on every attribute\n */\nfunction iterateDeeplyAsync(obj, iteratee, key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const newValue = yield iteratee(obj, key);\n        if (newValue === iterateDeeplyEnum.CONTINUE) {\n            // Continue iterate deeper if possible\n            if (_.isObject(obj)) {\n                // object or array\n                yield Promise.all(_.map(obj, (v, k) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                    obj[k] = yield iterateDeeplyAsync(v, iteratee, k);\n                })));\n            }\n            else {\n                // don't change anything\n            }\n            return obj;\n        }\n        else {\n            return newValue;\n        }\n    });\n}\nexports.iterateDeeplyAsync = iterateDeeplyAsync;\n//# sourceMappingURL=util.js.map\n\n/***/ }),\n/* 40 */,\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst FRAME_TIME = 1000 / 25; // TODO: This should be pulled from config.\nfunction CreateTiming(cue) {\n    if (cue.adlib) {\n        return CreateTimingAdLib(cue);\n    }\n    else {\n        return CreateTimingEnable(cue);\n    }\n}\nexports.CreateTiming = CreateTiming;\nfunction CreateTimingEnable(cue) {\n    const result = {\n        enable: {},\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal\n    };\n    if (cue.start) {\n        ;\n        result.enable.start = CalculateTime(cue.start);\n    }\n    else {\n        ;\n        result.enable.start = 0;\n    }\n    if (cue.end) {\n        if (cue.end.infiniteMode) {\n            result.infiniteMode = InfiniteMode(cue.end.infiniteMode, tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal);\n        }\n        else {\n            const end = CalculateTime(cue.end);\n            result.enable.duration = end\n                ? result.enable.start\n                    ? end - Number(result.enable.start)\n                    : end\n                : undefined;\n        }\n    }\n    else {\n        result.infiniteMode = tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart;\n    }\n    return result;\n}\nexports.CreateTimingEnable = CreateTimingEnable;\nfunction CreateTimingAdLib(cue) {\n    const result = {\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        expectedDuration: 0\n    };\n    if (cue.end) {\n        if (cue.end.infiniteMode) {\n            result.infiniteMode = InfiniteMode(cue.end.infiniteMode, tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart);\n        }\n        else {\n            result.expectedDuration = CalculateTime(cue.end);\n        }\n    }\n    return result;\n}\nexports.CreateTimingAdLib = CreateTimingAdLib;\nfunction InfiniteMode(mode, defaultLifespan) {\n    switch (mode) {\n        case 'B':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart;\n        case 'S':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment;\n        case 'O':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite;\n    }\n    return defaultLifespan;\n}\nexports.InfiniteMode = InfiniteMode;\nfunction CalculateTime(time) {\n    if (time.infiniteMode) {\n        return;\n    }\n    let result = 0;\n    if (time.seconds) {\n        result += time.seconds * 1000;\n    }\n    if (time.frames) {\n        result += time.frames * FRAME_TIME;\n    }\n    return result;\n}\nexports.CalculateTime = CalculateTime;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(43), exports);\ntslib_1.__exportStar(__webpack_require__(46), exports);\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nfunction TransformCuesIntoShowstyle(config, partDefinition) {\n    let i = -1;\n    while (i + 1 < partDefinition.cues.length) {\n        i++;\n        const cue = partDefinition.cues[i];\n        if (cue.type === tv2_constants_1.CueType.TargetEngine && cue.data.engine && cue.data.engine.toUpperCase() !== 'OVL1') {\n            const conf = config.GFXTemplates.find(gfx => gfx.INewsName.toUpperCase() === cue.data.engine.toUpperCase() &&\n                gfx.INewsCode.toUpperCase() === cue.iNewsCommand.toUpperCase());\n            if (!conf) {\n                continue;\n            }\n            if (conf.VizTemplate.toUpperCase() === 'VCP') {\n                const nextCue = partDefinition.cues[i + 1];\n                if (!nextCue) {\n                    if (!cue.grafik) {\n                        continue;\n                    }\n                    cue.data.grafik = cue.grafik;\n                    delete cue.grafik;\n                    cue.data.engine = conf.VizDestination.trim();\n                    partDefinition.cues[i] = cue;\n                }\n                else {\n                    if (nextCue.type !== tv2_constants_1.CueType.MOS) {\n                        continue;\n                    }\n                    cue.data.grafik = nextCue;\n                    cue.data.engine = conf.VizDestination.trim();\n                    partDefinition.cues[i] = cue;\n                    i++;\n                    partDefinition.cues.splice(i, 1);\n                }\n            }\n            else {\n                const gfxGue = {\n                    type: tv2_constants_1.CueType.Grafik,\n                    template: conf.VizTemplate.toUpperCase(),\n                    cue: `${cue.iNewsCommand}=${cue.data.engine}`,\n                    textFields: [],\n                    iNewsCommand: cue.iNewsCommand\n                };\n                cue.data.engine = conf.VizDestination.trim();\n                cue.data.grafik = gfxGue;\n                partDefinition.cues[i] = cue;\n            }\n        }\n    }\n    return partDefinition;\n}\nexports.TransformCuesIntoShowstyle = TransformCuesIntoShowstyle;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NoteType;\n(function (NoteType) {\n    NoteType[NoteType[\"WARNING\"] = 1] = \"WARNING\";\n    NoteType[NoteType[\"ERROR\"] = 2] = \"ERROR\";\n})(NoteType = exports.NoteType || (exports.NoteType = {}));\nvar MediaPlayerClaimType;\n(function (MediaPlayerClaimType) {\n    MediaPlayerClaimType[MediaPlayerClaimType[\"Preloaded\"] = 0] = \"Preloaded\";\n    MediaPlayerClaimType[MediaPlayerClaimType[\"Active\"] = 1] = \"Active\";\n})(MediaPlayerClaimType = exports.MediaPlayerClaimType || (exports.MediaPlayerClaimType = {}));\nvar CueType;\n(function (CueType) {\n    CueType[CueType[\"Unknown\"] = 0] = \"Unknown\";\n    CueType[CueType[\"Grafik\"] = 1] = \"Grafik\";\n    CueType[CueType[\"MOS\"] = 2] = \"MOS\";\n    CueType[CueType[\"Ekstern\"] = 3] = \"Ekstern\";\n    CueType[CueType[\"DVE\"] = 4] = \"DVE\";\n    CueType[CueType[\"Telefon\"] = 5] = \"Telefon\";\n    CueType[CueType[\"VIZ\"] = 6] = \"VIZ\";\n    CueType[CueType[\"Mic\"] = 7] = \"Mic\";\n    CueType[CueType[\"AdLib\"] = 8] = \"AdLib\";\n    CueType[CueType[\"LYD\"] = 9] = \"LYD\";\n    CueType[CueType[\"Jingle\"] = 10] = \"Jingle\";\n    CueType[CueType[\"Design\"] = 11] = \"Design\";\n    CueType[CueType[\"Profile\"] = 12] = \"Profile\";\n    CueType[CueType[\"TargetEngine\"] = 13] = \"TargetEngine\";\n    CueType[CueType[\"ClearGrafiks\"] = 14] = \"ClearGrafiks\";\n})(CueType = exports.CueType || (exports.CueType = {}));\nvar Enablers;\n(function (Enablers) {\n    Enablers[\"OFFTUBE_ENABLE_SERVER\"] = \"offtube_enable_server\";\n    Enablers[\"OFFTUBE_ENABLE_FULL\"] = \"offtube_enable_full\";\n    Enablers[\"OFFTUBE_ENABLE_DVE\"] = \"offtube_enable_dve\";\n})(Enablers = exports.Enablers || (exports.Enablers = {}));\nvar AdlibTags;\n(function (AdlibTags) {\n    AdlibTags[\"OFFTUBE_ADLIB_SERVER\"] = \"offtube_adlib_server\";\n    AdlibTags[\"OFFTUBE_100pc_SERVER\"] = \"offtube_adlib_100pc_server\";\n    AdlibTags[\"OFFTUBE_SET_CAM_NEXT\"] = \"offtube_set_cam_next\";\n    AdlibTags[\"OFFTUBE_SET_REMOTE_NEXT\"] = \"offtube_set_remote_next\";\n    AdlibTags[\"OFFTUBE_SET_FULL_NEXT\"] = \"offtube_set_full_next\";\n    AdlibTags[\"OFFTUBE_SET_JINGLE_NEXT\"] = \"offtube_set_jingle_next\";\n    AdlibTags[\"OFFTUBE_SET_SERVER_NEXT\"] = \"offtube_set_server_next\";\n    AdlibTags[\"OFFTUBE_SET_DVE_NEXT\"] = \"offtube_set_dve_next\";\n    AdlibTags[\"ADLIB_FLOW_PRODUCER\"] = \"flow_producer\";\n})(AdlibTags = exports.AdlibTags || (exports.AdlibTags = {}));\nvar ControlClasses;\n(function (ControlClasses) {\n    ControlClasses[\"ShowIdentGraphic\"] = \"show_ident_graphic\";\n    ControlClasses[\"DVEOnAir\"] = \"dve_on_air\"; // DVE Part is on air\n})(ControlClasses = exports.ControlClasses || (exports.ControlClasses = {}));\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONSTANTS = {\n    DefaultClipFadeOut: 35 * 40 // 35 frames\n};\n// Note: This doesnt play nice with transitions, so if they are required, then auto cannot be used\nexports.MEDIA_PLAYER_AUTO = 'auto';\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(47), exports);\ntslib_1.__exportStar(__webpack_require__(13), exports);\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nconst postProcessDefinitions_1 = __webpack_require__(48);\nconst ParseCue_1 = __webpack_require__(13);\nconst ACCEPTED_RED_TEXT = /\\b(KAM(?:\\d+)?|CAM(?:\\d+)?|KAMERA(?:\\d+)?|CAMERA(?:\\d+)?|SERVER|ATTACK|TEKNIK|GRAFIK|EVS ?\\d+(?:VOV?)?|VOV?|VOSB)+\\b/gi;\nfunction ParseBody(segmentId, segmentName, body, cues, fields, modified) {\n    const definitions = [];\n    let definition = initDefinition(fields, modified, segmentName);\n    // Handle intro segments, they have special behaviour.\n    if (segmentName === 'INTRO') {\n        ;\n        definition.type = \"INTRO\" /* INTRO */;\n        cues.forEach(cue => {\n            if (cue !== null) {\n                definition.cues.push(ParseCue_1.ParseCue(cue));\n            }\n        });\n        definition.rawType = 'INTRO';\n        definition.externalId = `${segmentId}-${definitions.length}`;\n        definition.segmentExternalId = segmentId;\n        definitions.push(definition);\n        definition = initDefinition(fields, modified, segmentName);\n        return definitions;\n    }\n    let lines = body.split('\\r\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = lines[i].replace(/<cc>(.*?)<\\/cc>/gi, '');\n    }\n    lines = lines.filter(line => line !== '<p></p>' && line !== '<p><pi></pi></p>');\n    lines.forEach(line => {\n        const type = line.match(/<pi>(.*?)<\\/pi>/i);\n        if (type) {\n            const typeStr = type[1]\n                .replace(/<[a-z]+>/gi, '')\n                .replace(/<\\/[a-z]+>/gi, '')\n                .replace(/[^\\w\\s]*\\B[^\\w\\s]/gi, '')\n                .replace(/[\\s]+/i, ' ')\n                .replace(/<tab>/i, '')\n                .replace(/<\\/tab>/i, '')\n                .trim();\n            if (typeStr && !!typeStr.match(ACCEPTED_RED_TEXT)) {\n                const inlineCues = line\n                    .replace(/<\\/?p>/g, '')\n                    .split(/<pi>(.*?)<\\/pi>/i)\n                    .filter(cue => cue !== '' && !cue.match(/<\\/a>/));\n                /** Hold any secondary cues in the form: `[] KAM 1` */\n                const secondaryInlineCues = [];\n                // Find all inline primaries appearing before the red text\n                let pos = 0;\n                let redTextFound = false;\n                while (pos < inlineCues.length && !redTextFound) {\n                    if (inlineCues[pos].match(ACCEPTED_RED_TEXT)) {\n                        redTextFound = true;\n                    }\n                    else {\n                        const parsedCues = getCuesInLine(inlineCues[pos], cues);\n                        parsedCues.forEach(cue => {\n                            // Create standalone parts for primary cues.\n                            if (isPrimaryCue(cue)) {\n                                if (shouldPushDefinition(definition)) {\n                                    definitions.push(definition);\n                                    definition = initDefinition(fields, modified, segmentName);\n                                }\n                                definition = makeDefinitionPrimaryCue(segmentId, definitions.length, '', fields, modified, segmentName, definition.type, cue);\n                                definition.cues.push(cue);\n                            }\n                            else {\n                                secondaryInlineCues.push(cue);\n                            }\n                            line = line.replace(inlineCues[pos], '');\n                        });\n                    }\n                    pos++;\n                }\n                line = line.replace(/<\\/a>/g, '');\n                if (shouldPushDefinition(definition)) {\n                    definitions.push(definition);\n                    definition = initDefinition(fields, modified, segmentName);\n                }\n                definition = makeDefinition(segmentId, definitions.length, typeStr, fields, modified, segmentName);\n                definition.cues.push(...secondaryInlineCues);\n            }\n            if (typeStr && typeStr.match(/SLUTORD/i)) {\n                if (definition.endWords) {\n                    definition.endWords += ` ${typeStr.replace(/^SLUTORD:? ?/i, '')}`;\n                }\n                else {\n                    definition.endWords = typeStr.replace(/^SLUTORD:? ?/i, '');\n                }\n            }\n        }\n        addScript(line, definition);\n        // Add any remaining cues in the line.\n        if (cueInLine(line)) {\n            const parsedCues = getCuesInLine(line, cues);\n            parsedCues.forEach(cue => {\n                if (isPrimaryCue(cue)) {\n                    let storedScript = '';\n                    if (shouldPushDefinition(definition)) {\n                        definitions.push(definition);\n                        definition = initDefinition(fields, modified, segmentName);\n                    }\n                    else if (definition.script.length) {\n                        storedScript = definition.script;\n                    }\n                    definition = makeDefinitionPrimaryCue(segmentId, definitions.length, definition.rawType, fields, modified, segmentName, definition.type, cue);\n                    definition.script = storedScript;\n                }\n                definition.cues.push(cue);\n            });\n        }\n    });\n    if (shouldPushDefinition(definition)) {\n        definitions.push(definition);\n        definition = initDefinition(fields, modified, segmentName);\n    }\n    // Flatten cues such as targetEngine.\n    definitions.forEach(partDefinition => {\n        if (partDefinition.cues.length) {\n            while (FindTargetPair(partDefinition)) {\n                // NO-OP\n            }\n        }\n    });\n    return postProcessDefinitions_1.PostProcessDefinitions(definitions, segmentId);\n}\nexports.ParseBody = ParseBody;\nfunction FindTargetPair(partDefinition) {\n    const index = partDefinition.cues.findIndex(cue => (cue.type === tv2_constants_1.CueType.TargetEngine && !cue.grafik && !!cue.data.engine.match(/FULL|WALL|OVL/i)) ||\n        (cue.type === tv2_constants_1.CueType.Telefon && !cue.vizObj));\n    if (index === -1) {\n        // No more targets\n        return false;\n    }\n    if (index + 1 < partDefinition.cues.length) {\n        if (partDefinition.cues[index + 1].type === tv2_constants_1.CueType.MOS) {\n            const mosCue = partDefinition.cues[index + 1];\n            if (partDefinition.cues[index].type === tv2_constants_1.CueType.TargetEngine) {\n                const targetCue = partDefinition.cues[index];\n                targetCue.grafik = mosCue;\n                partDefinition.cues[index] = targetCue;\n            }\n            else {\n                const targetCue = partDefinition.cues[index];\n                targetCue.vizObj = mosCue;\n                partDefinition.cues[index] = targetCue;\n            }\n            partDefinition.cues.splice(index + 1, 1);\n            return true;\n        }\n        else {\n            // Target with no grafik\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexports.FindTargetPair = FindTargetPair;\n/** Creates an initial part definition. */\nfunction initDefinition(fields, modified, segmentName) {\n    return {\n        externalId: '',\n        type: \"Unknown\" /* Unknown */,\n        rawType: '',\n        variant: {},\n        cues: [],\n        script: '',\n        fields,\n        modified,\n        storyName: segmentName,\n        segmentExternalId: ''\n    };\n}\n/** Returns true if there is a cue in the given line. */\nfunction cueInLine(line) {\n    return !!line.match(/<a idref=[\"|'](\\d+)[\"|']>/gi);\n}\n/** Returns all the cues in a given line as parsed cues. */\nfunction getCuesInLine(line, cues) {\n    if (!cueInLine(line)) {\n        return [];\n    }\n    const definitions = [];\n    const cue = line.match(/<a idref=[\"|'](\\d+)[\"|']>/gi);\n    cue === null || cue === void 0 ? void 0 : cue.forEach(c => {\n        const value = c.match(/<a idref=[\"|'](\\d+)[\"|']>/i);\n        if (value) {\n            const realCue = cues[Number(value[1])];\n            if (realCue) {\n                definitions.push(ParseCue_1.ParseCue(realCue));\n            }\n        }\n    });\n    return definitions;\n}\nfunction addScript(line, definition) {\n    const script = line.match(/<p>(.*)?<\\/p>/i);\n    if (script && script[1] && !script[1].match(/<pi>(.*?)<\\/pi>/i)) {\n        const trimscript = script[1]\n            .replace(/<.*?>/gi, '')\n            .replace('\\n\\r', '')\n            .trim();\n        if (trimscript) {\n            definition.script += `${trimscript}\\n`;\n        }\n    }\n}\nfunction isPrimaryCue(cue) {\n    return (cue.type === tv2_constants_1.CueType.Telefon ||\n        cue.type === tv2_constants_1.CueType.Ekstern ||\n        cue.type === tv2_constants_1.CueType.DVE ||\n        (cue.type === tv2_constants_1.CueType.TargetEngine && cue.data.engine.toUpperCase() === 'FULL'));\n}\nfunction shouldPushDefinition(definition) {\n    return ((definition.cues.length ||\n        (definition.script.length && definition.cues.length) ||\n        definition.type !== \"Unknown\" /* Unknown */) &&\n        !(definition.type === \"Grafik\" /* Grafik */ && definition.cues.length === 0));\n}\nfunction makeDefinitionPrimaryCue(segmentId, i, typeStr, fields, modified, storyName, partType, cue) {\n    const definition = makeDefinition(segmentId, i, typeStr, fields, modified, storyName);\n    switch (cue.type) {\n        case tv2_constants_1.CueType.Ekstern:\n            definition.type = \"Ekstern\" /* Ekstern */;\n            break;\n        case tv2_constants_1.CueType.DVE:\n            definition.type = \"DVE\" /* DVE */;\n            break;\n        case tv2_constants_1.CueType.Telefon:\n            definition.type = \"Telefon\" /* Telefon */;\n            break;\n        case tv2_constants_1.CueType.TargetEngine:\n            definition.type = partType;\n            break;\n        default:\n            // For log purposes + to catch future issues.\n            console.log(`Blueprint recieved non-primary cue when creating primary cue part. Likely a new primary cue type has been added recently.`);\n            break;\n    }\n    return definition;\n}\nfunction makeDefinition(segmentId, i, typeStr, fields, modified, storyName) {\n    const part = Object.assign(Object.assign({ externalId: `${segmentId}-${i}` }, extractTypeProperties(typeStr)), { rawType: typeStr\n            .replace(/effekt \\d+/gi, '')\n            .replace(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/gi, '')\n            .replace(/\\s+/gi, ' ')\n            .trim(), cues: [], script: '', fields,\n        modified,\n        storyName, segmentExternalId: '' });\n    return part;\n}\nfunction extractTypeProperties(typeStr) {\n    const effektMatch = typeStr.match(/effekt (\\d+)/i);\n    const transitionMatch = typeStr.match(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/i);\n    const definition = {};\n    if (effektMatch) {\n        definition.effekt = Number(effektMatch[1]);\n    }\n    if (transitionMatch) {\n        definition.transition = {\n            style: transitionMatch[1].toUpperCase(),\n            duration: transitionMatch[2] ? Number(transitionMatch[2]) : undefined\n        };\n    }\n    const tokens = typeStr\n        .replace(/effekt (\\d+)/gi, '')\n        .replace(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/gi, '')\n        .replace(/100%/g, '')\n        .replace(/\\s+/gi, ' ')\n        .trim()\n        .split(' ');\n    const firstToken = tokens[0];\n    if (firstToken.match(/KAM|CAM/i)) {\n        const adjacentKamNumber = tokens[0].match(/KAM(\\d+)/i);\n        return Object.assign({ type: \"Kam\" /* Kam */, variant: {\n                name: adjacentKamNumber ? adjacentKamNumber[1] : tokens[1]\n            } }, definition);\n    }\n    else if (firstToken.match(/SERVER/i) || firstToken.match(/ATTACK/i)) {\n        return Object.assign({ type: \"Server\" /* Server */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/TEKNIK/i)) {\n        return Object.assign({ type: \"Teknik\" /* Teknik */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/GRAFIK/i)) {\n        return Object.assign({ type: \"Grafik\" /* Grafik */, variant: {} }, definition);\n    }\n    else if (typeStr.match(/EVS ?\\d+(?:VOV?)?/i)) {\n        const strippedToken = typeStr.match(/EVS ?(\\d+)(VOV?)?/i);\n        return {\n            type: \"EVS\" /* EVS */,\n            variant: {\n                evs: strippedToken && strippedToken[1] ? strippedToken[1] : '1',\n                isVO: !!strippedToken && !!strippedToken[2]\n            }\n        };\n    }\n    else if (firstToken.match(/VOV?/i)) {\n        return Object.assign({ type: \"VO\" /* VO */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/VOSB/i)) {\n        return Object.assign({ type: \"VO\" /* VO */, variant: {} }, definition);\n    }\n    else {\n        return Object.assign({ type: \"Unknown\" /* Unknown */, variant: {} }, definition);\n    }\n}\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction PostProcessDefinitions(partDefinitions, segmentExternalId) {\n    const foundMap = {};\n    partDefinitions.forEach((part, i) => {\n        partDefinitions[i] = Object.assign(Object.assign({}, part), { externalId: getExternalId(segmentExternalId, part, foundMap), segmentExternalId });\n    });\n    return partDefinitions;\n}\nexports.PostProcessDefinitions = PostProcessDefinitions;\nfunction getExternalId(segmentId, partDefinition, foundMap) {\n    var _a, _b;\n    let id = `${segmentId}-${partDefinition.type.toString()}`;\n    switch (partDefinition.type) {\n        case \"EVS\" /* EVS */:\n            // Common pattern to see EV1 and EVS1VO in the same story. Changing from EVS1 to EVS1VO would mean a new part\n            id += `-${partDefinition.variant.evs}-${partDefinition.variant.isVO}`;\n            break;\n        case \"INTRO\" /* INTRO */:\n            // Intro must have a jingle cue, if it doesn't then padId will handle\n            const jingle = partDefinition.cues.find(cue => cue.type === tv2_constants_1.CueType.Jingle);\n            if (jingle) {\n                id += `-${jingle.clip}`;\n            }\n            break;\n        case \"Kam\" /* Kam */:\n            // No way of uniquely identifying, add some entropy from cues\n            id += `-${partDefinition.rawType}-${partDefinition.variant.name}-${partDefinition.cues.length}`;\n            break;\n        case \"Server\" /* Server */:\n            // Only one video Id per story. Changing the video Id will result in a new part\n            id += `-${partDefinition.fields.videoId ? partDefinition.fields.videoId : 'noId'}`;\n            break;\n        case \"Teknik\" /* Teknik */:\n            // Possibly an unused part type, not seen in production - only one example found in original test data\n            id += `-TEKNIK`;\n            break;\n        case \"VO\" /* VO */:\n            // Only one video Id per story. Changing the video Id will result in a new part\n            id += `-${partDefinition.fields.videoId}`;\n            break;\n        case \"Grafik\" /* Grafik */:\n        case \"DVE\" /* DVE */:\n        case \"Ekstern\" /* Ekstern */:\n        case \"Telefon\" /* Telefon */:\n        case \"Unknown\" /* Unknown */:\n            // Special cases based on cues\n            const firstCue = partDefinition.cues[0];\n            if (firstCue) {\n                switch (firstCue.type) {\n                    case tv2_constants_1.CueType.AdLib:\n                        id += `-${firstCue.variant}`;\n                        break;\n                    case tv2_constants_1.CueType.DVE:\n                        function countSources(sources) {\n                            let count = 0;\n                            for (const [key, value] of Object.entries(sources)) {\n                                if (key !== undefined && value !== undefined) {\n                                    count += 1;\n                                }\n                            }\n                            return count;\n                        }\n                        id += `-${firstCue.template}-${countSources(firstCue.sources)}`;\n                        break;\n                    case tv2_constants_1.CueType.Ekstern:\n                        // Identify based on live source. Changing live source will result in a new part\n                        id += `-${firstCue.source}`;\n                        break;\n                    case tv2_constants_1.CueType.Jingle:\n                        // Changing the jingle clip will result in a new part\n                        id += `-${firstCue.clip}`;\n                        break;\n                    case tv2_constants_1.CueType.TargetEngine:\n                        // Pair the engine will the graphic, common to see 'FULL' targeted multiple times in one story\n                        const end = ((_a = firstCue.grafik) === null || _a === void 0 ? void 0 : _a.type) === tv2_constants_1.CueType.Grafik\n                            ? firstCue.grafik.template\n                            : ((_b = firstCue.grafik) === null || _b === void 0 ? void 0 : _b.type) === tv2_constants_1.CueType.MOS\n                                ? firstCue.grafik.vcpid\n                                : '';\n                        id += `-${firstCue.data.engine}-${end}`;\n                        break;\n                    case tv2_constants_1.CueType.Telefon:\n                        id += `-${firstCue.source}`;\n                        break;\n                    case tv2_constants_1.CueType.MOS:\n                        id += `-${firstCue.vcpid}`;\n                        break;\n                }\n            }\n            else {\n                // This should never happen. Log it in case it ever occurs.\n                console.log(`Adding part with potentially bad Id: ${JSON.stringify(partDefinition)}`);\n                id += `UNKNOWN`;\n            }\n            break;\n        default:\n            tv2_common_1.assertUnreachable(partDefinition);\n    }\n    id = padId(id.trim().replace(/ /g, '-'), foundMap);\n    return id;\n    // return md5(`${id}`)\n}\nfunction padId(id, foundMap) {\n    if (Object.keys(foundMap).includes(id)) {\n        foundMap[id] += 1;\n        id = `${id}-${foundMap[id]}`;\n    }\n    else {\n        foundMap[id] = 1;\n    }\n    foundMap = foundMap;\n    return id;\n}\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nfunction parseMapStr(context, str, canBeStrings) {\n    str = str.trim();\n    const res = [];\n    const inputs = str.split(',');\n    inputs.forEach(i => {\n        if (i === '') {\n            return;\n        }\n        try {\n            const p = i.split(':');\n            if (p.length === 2) {\n                const ind = p[0];\n                const val = parseInt(p[1], 10);\n                if (!canBeStrings && !isNaN(val)) {\n                    res.push({ id: ind, val: parseInt(p[1], 10) });\n                    return;\n                }\n                else if (canBeStrings && p[1] !== undefined) {\n                    res.push({ id: ind, val: p[1] });\n                    return;\n                }\n            }\n        }\n        catch (e) {\n            // Ignore?\n        }\n        if (context) {\n            context.warning('Invalid input map chunk: ' + i);\n        }\n    });\n    return res;\n}\nexports.parseMapStr = parseMapStr;\nfunction ParseMappingTable(studioConfig, type) {\n    return studioConfig.map(conf => ({\n        type,\n        id: conf.SourceName,\n        port: conf.AtemSource,\n        sisyfosLayers: conf.SisyfosLayers\n    }));\n}\nexports.ParseMappingTable = ParseMappingTable;\nfunction FindSourceInfo(sources, type, id) {\n    id = id.replace(/\\s+/i, ' ').trim();\n    switch (type) {\n        case tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA:\n            const cameraName = id.match(/^(?:KAM|CAM)(?:ERA)? ?(.+)$/i);\n            if (cameraName === undefined || cameraName === null) {\n                return undefined;\n            }\n            return _.find(sources, s => s.type === type && s.id === cameraName[1].replace(/minus mic/i, '').trim());\n        case tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE:\n            const remoteName = id.match(/^(?:LIVE|SKYPE|EVS) ?(.+).*$/i);\n            if (!remoteName) {\n                return undefined;\n            }\n            if (id.match(/^LIVE/i)) {\n                return _.find(sources, s => s.type === type && s.id === remoteName[1]);\n            }\n            else if (id.match(/^EVS/i)) {\n                return _.find(sources, s => s.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE && s.id === `DP${remoteName[1]}`);\n            }\n            else {\n                // Skype\n                return _.find(sources, s => s.type === type && s.id === `S${remoteName[1]}`);\n            }\n        default:\n            return undefined;\n    }\n}\nexports.FindSourceInfo = FindSourceInfo;\nfunction FindSourceInfoStrict(context, sources, type, id) {\n    const source = FindSourceInfo(sources, type, id);\n    if (!source) {\n        context.warning(`Invalid source \"${id}\" of type \"${type}\"`);\n    }\n    return source;\n}\nexports.FindSourceInfoStrict = FindSourceInfoStrict;\nfunction FindSourceByName(context, sources, name) {\n    name = (name + '').toLowerCase();\n    if (name.indexOf('k') === 0 || name.indexOf('c') === 0) {\n        return FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, name);\n    }\n    // TODO: This will be different for TV 2\n    if (name.indexOf('r') === 0) {\n        return FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, name);\n    }\n    context.warning(`Invalid source name \"${name}\"`);\n    return undefined;\n}\nexports.FindSourceByName = FindSourceByName;\nfunction GetInputValue(context, sources, name) {\n    let input = 1000;\n    const source = FindSourceByName(context, sources, name);\n    if (source !== undefined) {\n        input = tv2_common_1.literal(source).port;\n    }\n    return input;\n}\nexports.GetInputValue = GetInputValue;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction PartTime(config, partDefinition, totalWords, defaultTime = true) {\n    const storyDuration = Number(partDefinition.fields.audioTime) * 1000 || 0;\n    const partTime = (partDefinition.script.replace(/[\\r\\n]/g, '').length / totalWords) * storyDuration;\n    return Math.min(partTime > 0 ? partTime : defaultTime ? config.studio.DefaultPartDuration : 0, config.studio.MaximumPartDuration || 10000);\n}\nexports.PartTime = PartTime;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PartContext2 {\n    constructor(baseContext, externalId) {\n        this.baseContext = baseContext;\n        this.externalId = externalId;\n        this.rundownId = baseContext.rundownId;\n        this.rundown = baseContext.rundown;\n    }\n    /** PartContext */\n    getRuntimeArguments() {\n        return this.baseContext.getRuntimeArguments(this.externalId) || {};\n    }\n    /** IShowStyleConfigContext */\n    getShowStyleConfig() {\n        return this.baseContext.getShowStyleConfig();\n    }\n    getShowStyleConfigRef(configKey) {\n        return this.baseContext.getShowStyleConfigRef(configKey);\n    }\n    /** IStudioContext */\n    getStudioMappings() {\n        return this.baseContext.getStudioMappings();\n    }\n    /** IStudioConfigContext */\n    getStudioConfig() {\n        return this.baseContext.getStudioConfig();\n    }\n    getStudioConfigRef(configKey) {\n        return this.baseContext.getStudioConfigRef(configKey);\n    }\n    /** NotesContext */\n    error(message) {\n        return this.baseContext.error(message);\n    }\n    warning(message) {\n        return this.baseContext.warning(message);\n    }\n    getNotes() {\n        return this.baseContext.getNotes();\n    }\n    /** ICommonContext */\n    getHashId(originString, originIsNotUnique) {\n        return this.baseContext.getHashId(`${this.externalId}_${originString}`, originIsNotUnique);\n    }\n    unhashId(hash) {\n        return this.baseContext.unhashId(hash);\n    }\n}\nexports.PartContext2 = PartContext2;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction getSegmentBase(context, ingestSegment, showStyleOptions) {\n    const segment = tv2_common_1.literal({\n        name: ingestSegment.name,\n        metaData: {},\n        identifier: ingestSegment.payload.iNewsStory.fields.pageNumber && ingestSegment.payload.iNewsStory.fields.pageNumber.trim()\n            ? ingestSegment.payload.iNewsStory.fields.pageNumber.trim()\n            : undefined\n    });\n    const config = showStyleOptions.parseConfig(context);\n    if (ingestSegment.payload.iNewsStory.meta.float === 'float') {\n        segment.isHidden = true;\n        return {\n            segment,\n            parts: []\n        };\n    }\n    else {\n        segment.isHidden = false;\n    }\n    let blueprintParts = [];\n    const parsedParts = tv2_common_1.ParseBody(ingestSegment.externalId, ingestSegment.name, ingestSegment.payload.iNewsStory.body, ingestSegment.payload.iNewsStory.cues, ingestSegment.payload.iNewsStory.fields, ingestSegment.payload.iNewsStory.fields.modifyDate);\n    const totalWords = parsedParts.reduce((prev, cur) => {\n        if (cur.type === \"Server\" /* Server */) {\n            return prev;\n        }\n        return prev + cur.script.replace(/\\n/g, '').replace(/\\r/g, '').length;\n    }, 0);\n    if (segment.name.trim().match(/^CONTINUITY$/i)) {\n        blueprintParts.push(showStyleOptions.CreatePartContinuity(config, ingestSegment));\n        return {\n            segment,\n            parts: blueprintParts\n        };\n    }\n    let serverParts = 0;\n    let jingleTime = 0;\n    let serverTime = 0;\n    for (const par of parsedParts) {\n        // Apply showstyle-specific transformations of cues.\n        const part = showStyleOptions.TransformCuesIntoShowstyle(config.showStyle, par);\n        const partContext = new tv2_common_1.PartContext2(context, part.externalId);\n        // Make orphaned secondary cues into adlibs\n        if (tv2_common_1.GetNextPartCue(part, -1) === -1 &&\n            part.type === \"Unknown\" /* Unknown */ &&\n            part.cues.filter(cue => cue.type === tv2_constants_1.CueType.Jingle || cue.type === tv2_constants_1.CueType.AdLib).length === 0) {\n            blueprintParts.push(showStyleOptions.CreatePartUnknown(partContext, config, part, totalWords, true));\n            continue;\n        }\n        switch (part.type) {\n            case \"INTRO\" /* INTRO */:\n                if (showStyleOptions.CreatePartIntro) {\n                    blueprintParts.push(showStyleOptions.CreatePartIntro(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Kam\" /* Kam */:\n                if (showStyleOptions.CreatePartKam) {\n                    blueprintParts.push(showStyleOptions.CreatePartKam(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Server\" /* Server */:\n                if (showStyleOptions.CreatePartServer) {\n                    blueprintParts.push(showStyleOptions.CreatePartServer(partContext, config, part, ingestSegment.externalId));\n                }\n                break;\n            case \"Teknik\" /* Teknik */:\n                if (showStyleOptions.CreatePartTeknik) {\n                    blueprintParts.push(showStyleOptions.CreatePartTeknik(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Grafik\" /* Grafik */:\n                if (showStyleOptions.CreatePartGrafik) {\n                    blueprintParts.push(showStyleOptions.CreatePartGrafik(partContext, config, part, totalWords));\n                }\n                break;\n            case \"VO\" /* VO */:\n                if (showStyleOptions.CreatePartVO) {\n                    blueprintParts.push(showStyleOptions.CreatePartVO(partContext, config, part, ingestSegment.externalId, totalWords, Number(ingestSegment.payload.iNewsStory.fields.totalTime)));\n                }\n                break;\n            case \"DVE\" /* DVE */:\n                if (showStyleOptions.CreatePartDVE) {\n                    blueprintParts.push(showStyleOptions.CreatePartDVE(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Ekstern\" /* Ekstern */:\n                if (showStyleOptions.CreatePartEkstern) {\n                    blueprintParts.push(showStyleOptions.CreatePartEkstern(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Telefon\" /* Telefon */:\n                if (showStyleOptions.CreatePartTelefon) {\n                    blueprintParts.push(showStyleOptions.CreatePartTelefon(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Unknown\" /* Unknown */:\n                if (part.cues.length) {\n                    blueprintParts.push(showStyleOptions.CreatePartUnknown(partContext, config, part, totalWords));\n                }\n                break;\n            case \"EVS\" /* EVS */:\n                if (showStyleOptions.CreatePartEVS) {\n                    blueprintParts.push(showStyleOptions.CreatePartEVS(partContext, config, part, totalWords));\n                }\n                break;\n            default:\n                tv2_common_1.assertUnreachable(part);\n                break;\n        }\n        if (part.type === \"Server\" /* Server */ ||\n            (part.type === \"VO\" /* VO */ && (Number(part.fields.tapeTime) > 0 || part.script.length))) {\n            if (blueprintParts[blueprintParts.length - 1]) {\n                serverTime += Number(blueprintParts[blueprintParts.length - 1].part.expectedDuration);\n                serverParts++;\n            }\n        }\n        if (part.cues.filter(cue => cue.type === tv2_constants_1.CueType.Jingle).length) {\n            if (blueprintParts[blueprintParts.length - 1]) {\n                const t = blueprintParts[blueprintParts.length - 1].part.expectedDuration;\n                if (t) {\n                    jingleTime += t;\n                }\n            }\n        }\n    }\n    let allocatedTime = blueprintParts.reduce((prev, cur) => {\n        return prev + (cur.part.expectedDuration ? cur.part.expectedDuration : 0);\n    }, 0) - jingleTime;\n    if (allocatedTime < 0) {\n        allocatedTime = 0;\n    }\n    blueprintParts.forEach(part => {\n        part.part.displayDurationGroup = ingestSegment.externalId;\n        if (!part.part.expectedDuration && Number(ingestSegment.payload.iNewsStory.fields.totalTime) > 0) {\n            part.part.expectedDuration =\n                (Number(ingestSegment.payload.iNewsStory.fields.totalTime) * 1000 - allocatedTime - serverTime || 0) /\n                    (blueprintParts.length - serverParts);\n            if (part.part.expectedDuration < 0) {\n                part.part.expectedDuration = 0;\n            }\n            if (part.part.expectedDuration > config.studio.MaximumPartDuration) {\n                part.part.expectedDuration = config.studio.MaximumPartDuration;\n            }\n        }\n    });\n    let extraTime = Number(ingestSegment.payload.iNewsStory.fields.totalTime) * 1000;\n    blueprintParts.forEach(part => {\n        if (part.part.expectedDuration === undefined || part.part.expectedDuration < 0) {\n            part.part.expectedDuration =\n                extraTime > config.studio.DefaultPartDuration\n                    ? extraTime > config.studio.MaximumPartDuration\n                        ? config.studio.MaximumPartDuration\n                        : extraTime\n                    : config.studio.DefaultPartDuration;\n        }\n        extraTime -= part.part.expectedDuration;\n        if (part.part.displayDuration && (part.part.displayDuration < 0 || isNaN(part.part.displayDuration))) {\n            part.part.displayDuration = 0;\n        }\n    });\n    if (blueprintParts.filter(part => part.pieces.length === 0 && part.adLibPieces.length).length === blueprintParts.length) {\n        segment.isHidden = true;\n    }\n    if (extraTime > 0 &&\n        // Filter out Jingle-only parts\n        (blueprintParts.length !== 1 ||\n            (blueprintParts[blueprintParts.length - 1] &&\n                !blueprintParts[blueprintParts.length - 1].pieces.some(piece => piece.sourceLayerId === 'studio0_jingle')))) {\n        const gapPart = tv2_common_1.literal({\n            part: tv2_common_1.literal({\n                externalId: `${ingestSegment.externalId}-GAP`,\n                title: `Adlib Gap`,\n                metaData: {},\n                typeVariant: '',\n                gap: true,\n                invalid: true,\n                expectedDuration: extraTime,\n                displayDurationGroup: ingestSegment.externalId\n            }),\n            pieces: [],\n            adLibPieces: []\n        });\n        blueprintParts.push(gapPart);\n    }\n    if (blueprintParts.filter(part => part.part.invalid === true).length === blueprintParts.length &&\n        ingestSegment.payload.iNewsStory.cues.length === 0) {\n        segment.isHidden = true;\n    }\n    blueprintParts = blueprintParts.map(part => {\n        const actualPart = part.part;\n        actualPart.metaData = tv2_common_1.literal(Object.assign(Object.assign({}, actualPart.metaData), { segmentExternalId: ingestSegment.externalId }));\n        if (actualPart.autoNext === undefined) {\n            actualPart.autoNext = false;\n        }\n        if (actualPart.invalid === undefined) {\n            actualPart.invalid = false;\n        }\n        return Object.assign(Object.assign({}, part), { part: actualPart });\n    });\n    return {\n        segment,\n        parts: blueprintParts\n    };\n}\nexports.getSegmentBase = getSegmentBase;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\n/**\n * Finds the index of the next primary cue.\n * @param partdefinition Part.\n * @param currentCue Index of current cue.\n */\nfunction GetNextPartCue(partdefinition, currentCue) {\n    const index = partdefinition.cues\n        .slice(currentCue + 1)\n        .findIndex(cue => cue.type === tv2_constants_1.CueType.DVE ||\n        cue.type === tv2_constants_1.CueType.Ekstern ||\n        (cue.type === tv2_constants_1.CueType.TargetEngine &&\n            cue.data.engine.match(/full/i) &&\n            partdefinition.type !== \"Grafik\" /* Grafik */) ||\n        cue.type === tv2_constants_1.CueType.Telefon);\n    if (index === -1) {\n        return -1;\n    }\n    return index + currentCue + 1;\n}\nexports.GetNextPartCue = GetNextPartCue;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nconst frameTime_1 = __webpack_require__(12);\n// TODO: OFFTUBE: find a way to do this for adlibs\nfunction GetJinglePartProperties(_context, config, part) {\n    if (part.cues) {\n        const cue = part.cues.find(c => c.type === tv2_constants_1.CueType.Jingle);\n        if (cue) {\n            const realBreaker = config.showStyle.BreakerConfig.find(conf => {\n                return conf.BreakerName && typeof conf.BreakerName === 'string'\n                    ? conf.BreakerName.toString()\n                        .trim()\n                        .toUpperCase() === cue.clip.toUpperCase()\n                    : false;\n            });\n            if (realBreaker) {\n                return {\n                    expectedDuration: frameTime_1.TimeFromFrames(Number(realBreaker.Duration)) -\n                        frameTime_1.TimeFromFrames(Number(realBreaker.EndAlpha)) -\n                        frameTime_1.TimeFromFrames(Number(realBreaker.StartAlpha)),\n                    prerollDuration: config.studio.CasparPrerollDuration + frameTime_1.TimeFromFrames(Number(realBreaker.StartAlpha)),\n                    autoNextOverlap: frameTime_1.TimeFromFrames(Number(realBreaker.EndAlpha)),\n                    disableOutTransition: false,\n                    autoNext: realBreaker.Autonext === true\n                };\n            }\n        }\n    }\n    return {};\n}\nexports.GetJinglePartProperties = GetJinglePartProperties;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction EvaluateCuesBase(showStyleOptions, context, config, pieces, adLibPieces, cues, partDefinition, options) {\n    var _a;\n    let adLibRank = 0;\n    for (const cue of cues) {\n        if (cue && !SkipCue(cue, options.selectedCueTypes, options.excludeAdlibs, options.adlibsOnly)) {\n            const shouldAdlib = /* config.showStyle.IsOfftube || */ options.adlib ? true : cue.adlib ? true : false;\n            switch (cue.type) {\n                case tv2_constants_1.CueType.Grafik:\n                    if (showStyleOptions.EvaluateCueGrafik) {\n                        showStyleOptions.EvaluateCueGrafik(config, context, pieces, adLibPieces, partDefinition.externalId, cue, 'OVL', shouldAdlib, partDefinition, false, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.MOS:\n                    if (showStyleOptions.EvaluateCueMOS) {\n                        showStyleOptions.EvaluateCueMOS(config, context, pieces, adLibPieces, partDefinition.externalId, cue, cue.type === tv2_constants_1.CueType.MOS && ((_a = cue.engine) === null || _a === void 0 ? void 0 : _a.match(/FULL/i)) ? 'FULL' : 'OVL', shouldAdlib, false, adLibRank, options.isGrafikPart);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Ekstern:\n                    if (showStyleOptions.EvaluateCueEkstern) {\n                        showStyleOptions.EvaluateCueEkstern(context, config, pieces, adLibPieces, partDefinition.externalId, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.DVE:\n                    if (showStyleOptions.EvaluateCueDVE) {\n                        showStyleOptions.EvaluateCueDVE(context, config, pieces, adLibPieces, partDefinition, cue, shouldAdlib, adLibRank);\n                        // Always make an adlib for DVEs\n                        if (!shouldAdlib) {\n                            showStyleOptions.EvaluateCueDVE(context, config, pieces, adLibPieces, partDefinition, cue, true, adLibRank);\n                        }\n                    }\n                    break;\n                case tv2_constants_1.CueType.AdLib:\n                    if (showStyleOptions.EvaluateCueAdLib) {\n                        showStyleOptions.EvaluateCueAdLib(context, config, adLibPieces, partDefinition.externalId, cue, partDefinition, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Telefon:\n                    if (showStyleOptions.EvaluateCueTelefon) {\n                        showStyleOptions.EvaluateCueTelefon(config, context, pieces, adLibPieces, partDefinition.externalId, partDefinition, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.VIZ:\n                    if (showStyleOptions.EvaluateCueVIZ) {\n                        showStyleOptions.EvaluateCueVIZ(context, config, pieces, adLibPieces, partDefinition.externalId, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Jingle:\n                    if (showStyleOptions.EvaluateCueJingle) {\n                        showStyleOptions.EvaluateCueJingle(context, config, pieces, adLibPieces, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.LYD:\n                    if (showStyleOptions.EvaluateCueLYD) {\n                        showStyleOptions.EvaluateCueLYD(context, config, pieces, adLibPieces, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Design:\n                    if (showStyleOptions.EvaluateCueDesign) {\n                        showStyleOptions.EvaluateCueDesign(config, context, pieces, adLibPieces, partDefinition.externalId, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.TargetEngine:\n                    if (showStyleOptions.EvaluateCueTargetEngine) {\n                        showStyleOptions.EvaluateCueTargetEngine(context, config, pieces, adLibPieces, partDefinition.externalId, partDefinition, cue, shouldAdlib);\n                    }\n                    break;\n                case tv2_constants_1.CueType.ClearGrafiks:\n                    if (showStyleOptions.EvaluateCueClearGrafiks) {\n                        showStyleOptions.EvaluateCueClearGrafiks(pieces, partDefinition.externalId, cue, shouldAdlib);\n                    }\n                    break;\n                default:\n                    if (cue.type !== tv2_constants_1.CueType.Unknown && cue.type !== tv2_constants_1.CueType.Profile && cue.type !== tv2_constants_1.CueType.Mic) {\n                        // TODO: Profile -> Change the profile as defined in VIZ device settings\n                        // TODO: Mic -> For the future\n                        // context.warning(`Unimplemented cue type: ${CueType[cue.type]}`)\n                        tv2_common_1.assertUnreachable(cue);\n                    }\n                    break;\n            }\n            if (shouldAdlib || cue.type === tv2_constants_1.CueType.AdLib || cue.type === tv2_constants_1.CueType.DVE) {\n                adLibRank++;\n            }\n        }\n    }\n    ;\n    [...pieces, ...adLibPieces].forEach(piece => {\n        if (piece.content && piece.content.timelineObjects) {\n            piece.content.timelineObjects.forEach((obj) => {\n                if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.VIZMSE) {\n                    if (!piece.expectedPlayoutItems) {\n                        piece.expectedPlayoutItems = [];\n                    }\n                    if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL) {\n                        const o = obj;\n                        const name = obj.content.templateName;\n                        if (name && name.length) {\n                            piece.expectedPlayoutItems.push({\n                                deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                content: {\n                                    templateName: obj.content.templateName,\n                                    templateData: obj.content.templateData,\n                                    channelName: o.content.channelName,\n                                    rundownId: ''\n                                }\n                            });\n                        }\n                    }\n                    else if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_PILOT) {\n                        const name = obj.content.templateVcpId;\n                        if (name !== undefined && name.toString().length) {\n                            piece.expectedPlayoutItems.push({\n                                deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                content: {\n                                    templateName: obj.content.templateVcpId,\n                                    channelName: obj.content.channelName,\n                                    rundownId: ''\n                                }\n                            });\n                        }\n                    }\n                    else if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.CLEAR_ALL_ELEMENTS) {\n                        piece.expectedPlayoutItems.push({\n                            deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                            content: {\n                                templateName: 'altud',\n                                channelName: 'OVL1',\n                                templateData: [],\n                                rundownId: ''\n                            }\n                        });\n                    }\n                }\n            });\n        }\n    });\n}\nexports.EvaluateCuesBase = EvaluateCuesBase;\nfunction SkipCue(cue, selectedCueTypes, excludeAdlibs, adlibsOnly) {\n    if (excludeAdlibs === true && cue.adlib) {\n        return true;\n    }\n    if (adlibsOnly === true && !cue.adlib) {\n        return true;\n    }\n    if (selectedCueTypes && !selectedCueTypes.includes(cue.type)) {\n        return true;\n    }\n    return false;\n}\nexports.SkipCue = SkipCue;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nfunction TransitionFromString(str) {\n    if (str.match(/MIX/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.MIX;\n    }\n    else if (str.match(/DIP/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.DIP;\n    }\n    else if (str.match(/WIPE/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.WIPE;\n    }\n    else if (str.match(/STING/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.STING;\n    }\n    return timeline_state_resolver_types_1.AtemTransitionStyle.CUT;\n}\nexports.TransitionFromString = TransitionFromString;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TransitionSettings(part) {\n    if (part.transition && part.transition.duration) {\n        if (part.transition.style === 'WIPE') {\n            return {\n                wipe: {\n                    rate: part.transition.duration\n                }\n            };\n        }\n        return {\n            mix: {\n                rate: part.transition.duration\n            }\n        };\n    }\n    return {};\n}\nexports.TransitionSettings = TransitionSettings;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(59), exports);\ntslib_1.__exportStar(__webpack_require__(60), exports);\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nfunction EvaluateVIZBase(context, config, pieces, adlibPieces, partId, parsedCue, useVizEngine, sourceLayers, adlib, rank) {\n    if (parsedCue.design.match(/^dve-triopage$/i)) {\n        const fileName = parsedCue.content.TRIOPAGE ? parsedCue.content.TRIOPAGE : parsedCue.content.GRAFIK;\n        const path = `dve/${fileName}`;\n        if (adlib) {\n            adlibPieces.push(tv2_common_1.literal({\n                _rank: rank || 0,\n                externalId: partId,\n                name: fileName,\n                outputLayerId: 'sec',\n                sourceLayerId: sourceLayers.SourceLayerDVEBackground,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                content: tv2_common_1.literal({\n                    fileName,\n                    path,\n                    timelineObjects: _.compact([\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: { start: 0 },\n                            priority: 100,\n                            layer: sourceLayers.CasparLLayerDVELoop,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: path,\n                                loop: true\n                            }\n                        })\n                    ])\n                })\n            }));\n        }\n        else {\n            pieces.push(tv2_common_1.literal({\n                _id: '',\n                externalId: partId,\n                name: fileName,\n                enable: {\n                    start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                },\n                outputLayerId: 'sec',\n                sourceLayerId: sourceLayers.SourceLayerDVEBackground,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                content: tv2_common_1.literal({\n                    fileName,\n                    path,\n                    timelineObjects: _.compact([\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: { start: 0 },\n                            priority: 100,\n                            layer: sourceLayers.CasparLLayerDVELoop,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: path,\n                                loop: true\n                            }\n                        })\n                    ])\n                })\n            }));\n        }\n    }\n    else if (parsedCue.rawType.match(/^VIZ=grafik-design$/i)) {\n        context.warning('VIZ=grafik-design is not supported for this showstyle');\n    }\n    else if (parsedCue.rawType.match(/^VIZ=full$/i)) {\n        if (useVizEngine) {\n            if (sourceLayers.SourceLayerVizFullIn1 && sourceLayers.AtemLLayerAtemAuxVizOvlIn1) {\n                if (!parsedCue.content.INP1) {\n                    context.warning(`No input provided by ${parsedCue.rawType}`);\n                    return;\n                }\n                let sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, parsedCue.content.INP1);\n                if (!sourceInfo) {\n                    sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, parsedCue.content.INP1);\n                    if (!sourceInfo) {\n                        context.warning(`Could not find source ${parsedCue.content.INP1}`);\n                        return;\n                    }\n                }\n                pieces.push(tv2_common_1.literal({\n                    _id: '',\n                    externalId: partId,\n                    enable: {\n                        start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                    },\n                    name: parsedCue.content.INP1 || '',\n                    outputLayerId: 'aux',\n                    sourceLayerId: sourceLayers.SourceLayerVizFullIn1,\n                    infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                    content: tv2_common_1.literal({\n                        studioLabel: '',\n                        switcherInput: sourceInfo.port,\n                        timelineObjects: _.compact([\n                            tv2_common_1.literal({\n                                id: '',\n                                enable: { start: 0 },\n                                priority: 100,\n                                layer: sourceLayers.AtemLLayerAtemAuxVizOvlIn1,\n                                content: {\n                                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                                    aux: {\n                                        input: sourceInfo.port\n                                    }\n                                }\n                            })\n                        ])\n                    })\n                }));\n            }\n            else {\n                context.warning(`Could not route source to Viz engine, this studio is not configured correctly.`);\n            }\n        }\n    }\n    else {\n        if (useVizEngine) {\n            if (sourceLayers.SourceLayerDesign && sourceLayers.GraphicLLayerGraphicLLayerDesign) {\n                const path = parsedCue.content.triopage ? parsedCue.content.triopage : parsedCue.content.GRAFIK;\n                if (!path || !path.length) {\n                    context.warning(`No valid template found for ${parsedCue.design}`);\n                    return;\n                }\n                if (adlib) {\n                    adlibPieces.push(tv2_common_1.literal({\n                        _rank: rank || 0,\n                        externalId: partId,\n                        name: path,\n                        outputLayerId: 'sec',\n                        sourceLayerId: sourceLayers.SourceLayerDesign,\n                        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                        content: tv2_common_1.literal({\n                            fileName: path,\n                            path,\n                            timelineObjects: _.compact([\n                                tv2_common_1.literal({\n                                    id: '',\n                                    enable: { start: 0 },\n                                    priority: 100,\n                                    layer: sourceLayers.GraphicLLayerGraphicLLayerDesign,\n                                    content: {\n                                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                                        templateName: path,\n                                        templateData: []\n                                    }\n                                })\n                            ])\n                        })\n                    }));\n                }\n                else {\n                    pieces.push(tv2_common_1.literal({\n                        _id: '',\n                        externalId: partId,\n                        name: path,\n                        enable: {\n                            start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                        },\n                        outputLayerId: 'sec',\n                        sourceLayerId: sourceLayers.SourceLayerDesign,\n                        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                        content: tv2_common_1.literal({\n                            fileName: path,\n                            path,\n                            timelineObjects: _.compact([\n                                tv2_common_1.literal({\n                                    id: '',\n                                    enable: { start: 0 },\n                                    priority: 100,\n                                    layer: sourceLayers.GraphicLLayerGraphicLLayerDesign,\n                                    content: {\n                                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                                        templateName: path,\n                                        templateData: []\n                                    }\n                                })\n                            ])\n                        })\n                    }));\n                }\n            }\n            else {\n                context.warning(`Could not create VIZ design, this studio is not configured correctly.`);\n            }\n        }\n    }\n}\nexports.EvaluateVIZBase = EvaluateVIZBase;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\n/**\n * Check that a template string is valid.\n * @param template User-provided template.\n */\nfunction TemplateIsValid(template) {\n    let boxesValid = false;\n    let indexValid = false;\n    let propertiesValid = false;\n    let borderValid = false;\n    if (Object.keys(template).indexOf('boxes') !== -1) {\n        if (_.isEqual(Object.keys(template.boxes), ['0', '1', '2', '3'])) {\n            boxesValid = true;\n        }\n    }\n    if (Object.keys(template).indexOf('index') !== -1) {\n        indexValid = true;\n    }\n    if (Object.keys(template).indexOf('properties') !== -1) {\n        if (_.isEqual(Object.keys(template.properties), [\n            'artFillSource',\n            'artCutSource',\n            'artOption',\n            'artPreMultiplied',\n            'artClip',\n            'artGain',\n            'artInvertKey'\n        ])) {\n            propertiesValid = true;\n        }\n    }\n    if (Object.keys(template).indexOf('border') !== -1) {\n        if (_.isEqual(Object.keys(template.border), [\n            'borderEnabled',\n            'borderBevel',\n            'borderOuterWidth',\n            'borderInnerWidth',\n            'borderOuterSoftness',\n            'borderInnerSoftness',\n            'borderBevelSoftness',\n            'borderBevelPosition',\n            'borderHue',\n            'borderSaturation',\n            'borderLuma',\n            'borderLightSourceDirection',\n            'borderLightSourceAltitude'\n        ])) {\n            borderValid = true;\n        }\n    }\n    if (boxesValid && indexValid && propertiesValid && borderValid) {\n        return true;\n    }\n    return false;\n}\nexports.TemplateIsValid = TemplateIsValid;\nfunction GetDVETemplate(config, templateName) {\n    return config ? config.find(c => c.DVEName.toString().toUpperCase() === templateName.toUpperCase()) : undefined;\n}\nexports.GetDVETemplate = GetDVETemplate;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(62), exports);\ntslib_1.__exportStar(__webpack_require__(14), exports);\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = __webpack_require__(8);\nconst invalid_1 = __webpack_require__(14);\nfunction CreatePartServerBase(context, config, partDefinition) {\n    if (partDefinition.fields === undefined) {\n        context.warning('Video ID not set!');\n        return { part: invalid_1.CreatePartInvalid(partDefinition), file: '', duration: 0, invalid: true };\n    }\n    if (!partDefinition.fields.videoId) {\n        context.warning('Video ID not set!');\n        return { part: invalid_1.CreatePartInvalid(partDefinition), file: '', duration: 0, invalid: true };\n    }\n    const file = partDefinition.fields.videoId;\n    const duration = Number(partDefinition.fields.tapeTime) * 1000 || 0;\n    const basePart = util_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.rawType,\n        metaData: {},\n        typeVariant: '',\n        expectedDuration: duration || 1000,\n        prerollDuration: config.studio.CasparPrerollDuration\n    });\n    return {\n        part: {\n            part: basePart,\n            adLibPieces: [],\n            pieces: []\n        },\n        file,\n        duration\n    };\n}\nexports.CreatePartServerBase = CreatePartServerBase;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(64), exports);\ntslib_1.__exportStar(__webpack_require__(65), exports);\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst server_1 = __webpack_require__(15);\nfunction CreateAdlibServer(config, rank, externalId, mediaPlayerSession, partDefinition, file, vo, sourceLayers, offtubeOptions) {\n    return tv2_common_1.literal(Object.assign(Object.assign({ _rank: rank, externalId }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? { tags: offtubeOptions.tagAsAdlib ? [tv2_constants_1.AdlibTags.OFFTUBE_ADLIB_SERVER] : [] } : {})), { name: `${partDefinition.storyName} Server: ${file}`, sourceLayerId: vo ? sourceLayers.PgmVoiceOver : sourceLayers.PgmServer, outputLayerId: 'pgm', infiniteMode: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment : tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart, toBeQueued: !(offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube), metaData: tv2_common_1.literal({\n            mediaPlayerSessions: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? [tv2_constants_1.MEDIA_PLAYER_AUTO] : [mediaPlayerSession]\n        }), content: server_1.MakeContentServer(file, (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? tv2_constants_1.MEDIA_PLAYER_AUTO : mediaPlayerSession, partDefinition, config, sourceLayers, true, offtubeOptions), adlibPreroll: config.studio.CasparPrerollDuration }));\n}\nexports.CreateAdlibServer = CreateAdlibServer;\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst PREVIEW_CHARACTERS = 30;\n// export function AddScript(part: PartDefinition, pieces: IBlueprintPiece[], duration: number, slutord: boolean) {\nfunction AddScript(part, pieces, duration, sourceLayerId) {\n    if (!pieces.length) {\n        return;\n    }\n    let script = part.script.replace(/^\\**/i, '').trim();\n    if (part.endWords) {\n        script = script.length ? `${script} SLUTORD: ${part.endWords}` : part.endWords;\n    }\n    if (script.length) {\n        const stripLength = Math.min(PREVIEW_CHARACTERS, script.length);\n        pieces.push(tv2_common_1.literal({\n            _id: '',\n            externalId: part.externalId,\n            name: script.slice(0, stripLength),\n            enable: {\n                start: 0,\n                duration\n            },\n            outputLayerId: 'manus',\n            sourceLayerId,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            content: tv2_common_1.literal({\n                firstWords: script.slice(0, stripLength),\n                lastWords: script\n                    .replace(/\\n/gi, ' ')\n                    .trim()\n                    .slice(script.length - stripLength)\n                    .trim(),\n                fullScript: script,\n                sourceDuration: duration,\n                lastModified: part.modified * 1000\n            })\n        }));\n    }\n}\nexports.AddScript = AddScript;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(15), exports);\ntslib_1.__exportStar(__webpack_require__(67), exports);\ntslib_1.__exportStar(__webpack_require__(68), exports);\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst _ = __webpack_require__(3);\nconst atem_1 = __webpack_require__(11);\nfunction MakeContentDVEBase(context, config, partDefinition, parsedCue, dveConfig, dveGeneratorOptions, addClass, adlib) {\n    if (!dveConfig) {\n        context.warning(`DVE ${parsedCue.template} is not configured`);\n        return {\n            valid: false,\n            content: {\n                boxSourceConfiguration: [],\n                timelineObjects: [],\n                dveConfiguration: []\n            },\n            stickyLayers: []\n        };\n    }\n    // console.log('boxmap1', boxMap)\n    // boxMap = boxMap.filter(map => map !== '')\n    // console.log('boxmap2', boxMap)\n    const graphicsTemplateContent = {};\n    parsedCue.labels.forEach((label, i) => {\n        graphicsTemplateContent[`locator${i + 1}`] = label;\n    });\n    return MakeContentDVE2(context, config, dveConfig, graphicsTemplateContent, parsedCue.sources, dveGeneratorOptions, addClass ? tv2_common_1.DVEParentClass('studio0', dveConfig.DVEName) : undefined, adlib, partDefinition);\n}\nexports.MakeContentDVEBase = MakeContentDVEBase;\nfunction MakeContentDVE2(context, config, dveConfig, graphicsTemplateContent, sources, dveGeneratorOptions, className, adlib, partDefinition, offtube) {\n    var _a;\n    const template = JSON.parse(dveConfig.DVEJSON);\n    const inputs = dveConfig.DVEInputs\n        ? dveConfig.DVEInputs.toString().split(';')\n        : '1:INP1;2:INP2;3:INP3;4:INP4'.split(';');\n    const boxMap = [];\n    const classes = [];\n    inputs.forEach(source => {\n        const sourceProps = source.split(':');\n        const fromCue = sourceProps[1];\n        const targetBox = Number(sourceProps[0]);\n        if (!fromCue || !targetBox || isNaN(targetBox)) {\n            context.warning(`Invalid DVE mapping: ${sourceProps}`);\n            return;\n        }\n        const sourceLayer = dveGeneratorOptions.boxLayers[fromCue];\n        classes.push(`${sourceLayer}_${dveGeneratorOptions.boxMappings[targetBox - 1]}`);\n        let usedServer = false;\n        if (sources) {\n            const prop = sources[fromCue];\n            if (prop === null || prop === void 0 ? void 0 : prop.match(/[K|C]AM(?:era)? ?.*/i)) {\n                const match = prop.match(/[K|C]AM(?:era)? ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `KAM ${match[1]}`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/LIVE ?.*/i)) {\n                const match = prop.match(/LIVE ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `LIVE ${match[1]}`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/full/i)) {\n                boxMap[targetBox - 1] = { source: `ENGINE FULL`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/EVS ?.*/i)) {\n                const match = prop.match(/EVS ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `EVS ${match[1]}`, sourceLayer };\n            }\n            else if (prop) {\n                if (partDefinition && partDefinition.fields.videoId && !usedServer) {\n                    boxMap[targetBox - 1] = { source: `SERVER ${partDefinition.fields.videoId}`, sourceLayer };\n                    usedServer = true;\n                }\n                else {\n                    boxMap[targetBox - 1] = { source: prop, sourceLayer };\n                }\n            }\n            else {\n                if (partDefinition && partDefinition.fields.videoId && !usedServer) {\n                    boxMap[targetBox - 1] = { source: `SERVER ${partDefinition.fields.videoId}`, sourceLayer };\n                    usedServer = true;\n                }\n                else {\n                    context.warning(`Missing mapping for ${targetBox}`);\n                    boxMap[targetBox - 1] = { source: '', sourceLayer };\n                }\n            }\n        }\n        else {\n            // Need something to keep the layout etc\n            boxMap[targetBox - 1] = { source: '', sourceLayer };\n        }\n    });\n    const boxes = _.map(template.boxes, box => (Object.assign(Object.assign({}, box), { source: config.studio.AtemSource.Default })));\n    const dveTimeline = [];\n    const boxSources = [];\n    const setBoxSource = (num, sourceInfo, mappingFrom) => {\n        if (boxes[num]) {\n            boxes[num].source = Number(sourceInfo.port);\n            boxSources.push(Object.assign(Object.assign({}, boxSource(sourceInfo, mappingFrom)), tv2_common_1.literal({\n                studioLabel: '',\n                switcherInput: Number(sourceInfo.port),\n                timelineObjects: []\n            })));\n        }\n    };\n    let valid = true;\n    let server = false;\n    const timelineStartObjId = `ssrc-${(_a = partDefinition === null || partDefinition === void 0 ? void 0 : partDefinition.externalId) !== null && _a !== void 0 ? _a : ''}-${template}`;\n    boxMap.forEach((mappingFrom, num) => {\n        if (mappingFrom === undefined || mappingFrom.source === '') {\n            if (sources) {\n                // If it is intentional there are no sources, then ignore\n                // TODO - should this warn?\n                context.warning(`Missing source type for DVE box: ${num + 1}`);\n                valid = false;\n            }\n        }\n        else {\n            const props = mappingFrom.source.split(' ');\n            const sourceType = props[0];\n            const sourceInput = props[1];\n            if (!sourceType || !sourceInput) {\n                context.warning(`Invalid DVE source: ${mappingFrom.source}`);\n                return;\n            }\n            const audioEnable = {\n                while: `!\\$${mappingFrom.sourceLayer}`\n                // while: `!.${ControlClasses.DVEBoxOverridePrefix + boxMappings[num]}`\n            }; // TODO - test\n            if (sourceType.match(/KAM/i)) {\n                const sourceInfoCam = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, mappingFrom.source);\n                if (sourceInfoCam === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoCam, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, mappingFrom.source, audioEnable));\n            }\n            else if (sourceType.match(/LIVE/i) || sourceType.match(/SKYPE/i)) {\n                const sourceInfoLive = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, mappingFrom.source);\n                if (sourceInfoLive === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoLive, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForEkstern(context, config.sources, mappingFrom.source, dveGeneratorOptions.dveTimelineGenerators.GetLayersForEkstern, audioEnable));\n            }\n            else if (sourceType.match(/EVS/i)) {\n                const sourceInfoDelayedPlayback = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, mappingFrom.source);\n                if (sourceInfoDelayedPlayback === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoDelayedPlayback, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, 'evs'));\n            }\n            else if (sourceType.match(/ENGINE/i)) {\n                if (sourceInput.match(/full/i)) {\n                    const sourceInfoFull = {\n                        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n                        id: 'full',\n                        port: config.studio.AtemSource.DSK1F\n                    };\n                    setBoxSource(num, sourceInfoFull, mappingFrom.source);\n                    dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, 'full'));\n                }\n                else {\n                    context.warning(`Unsupported engine for DVE: ${sourceInput}`);\n                }\n            }\n            else if (sourceType.match(/SERVER/i)) {\n                const file = partDefinition ? partDefinition.fields.videoId : undefined;\n                server = true;\n                setBoxSource(num, {\n                    type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.VT,\n                    id: 'SERVER',\n                    port: -1\n                }, mappingFrom.source);\n                dveTimeline.push(tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, undefined, undefined, true),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.CasparLLayer.ClipPending,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                        file: adlib ? 'continue' : file ? file : 'continue',\n                        loop: true\n                    },\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    },\n                    classes: [`dve_placeholder`]\n                }), tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, undefined, undefined, true),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.SisyfosLLayer.ClipPending,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                        isPgm: 1\n                    },\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    },\n                    classes: []\n                }));\n                return;\n            }\n            else {\n                context.warning(`Unknown source type for DVE: ${mappingFrom.source}`);\n                valid = false;\n            }\n        }\n    });\n    const graphicsTemplateName = dveConfig.DVEGraphicsTemplate ? dveConfig.DVEGraphicsTemplate.toString() : '';\n    const graphicsTemplateStyle = dveConfig.DVEGraphicsTemplateJSON\n        ? JSON.parse(dveConfig.DVEGraphicsTemplateJSON.toString())\n        : '';\n    const keyFile = dveConfig.DVEGraphicsKey ? dveConfig.DVEGraphicsKey.toString() : '';\n    const frameFile = dveConfig.DVEGraphicsFrame ? dveConfig.DVEGraphicsFrame.toString() : '';\n    if (adlib) {\n        dveTimeline.push(...config.stickyLayers\n            .filter(layer => dveTimeline.map(obj => obj.layer).indexOf(layer) === -1)\n            .filter(layer => config.liveAudio.indexOf(layer) === -1)\n            .map(layer => {\n            return tv2_common_1.literal({\n                id: '',\n                enable: getDVEEnable(!!offtube),\n                priority: 1,\n                layer,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 0\n                },\n                metaData: {\n                    sisyfosPersistLevel: true\n                }\n            });\n        }));\n    }\n    return {\n        valid,\n        content: tv2_common_1.literal({\n            boxSourceConfiguration: boxSources,\n            dveConfiguration: {},\n            timelineObjects: _.compact([\n                // Setup classes for adlibs to be able to override boxes\n                tv2_common_1.createEmptyObject({\n                    enable: getDVEEnable(!!offtube),\n                    layer: 'dve_lookahead_control',\n                    classes: [tv2_constants_1.ControlClasses.DVEOnAir]\n                }),\n                // setup ssrc\n                tv2_common_1.literal({\n                    id: offtube ? timelineStartObjId : '',\n                    enable: getDVEEnable(!!offtube),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.ATEM.SSrcDefault,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC,\n                        ssrc: { boxes }\n                    },\n                    classes: className ? [...classes, className] : classes,\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    }\n                }),\n                tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, Number(config.studio.CasparPrerollDuration) - 10, timelineStartObjId),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.ATEM.SSrcArt,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRCPROPS,\n                        ssrcProps: {\n                            artFillSource: config.studio.AtemSource.SplitArtF,\n                            artCutSource: config.studio.AtemSource.SplitArtK,\n                            artOption: 1,\n                            artPreMultiplied: true\n                        }\n                    }\n                }),\n                tv2_common_1.literal(Object.assign({ id: '', enable: getDVEEnable(!!offtube, Number(config.studio.CasparPrerollDuration), timelineStartObjId), priority: 1, layer: dveGeneratorOptions.dveLayers.ATEM.MEProgram, content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                        me: {\n                            input: atem_1.AtemSourceIndex.SSrc,\n                            transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                        }\n                    } }, (adlib ? { classes: ['adlib_deparent'] } : {}))),\n                ...(graphicsTemplateName\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVETemplate,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.TEMPLATE,\n                                templateType: 'html',\n                                name: graphicsTemplateName,\n                                data: {\n                                    display: {\n                                        isPreview: false,\n                                        displayState: 'locators'\n                                    },\n                                    locators: {\n                                        style: graphicsTemplateStyle ? graphicsTemplateStyle : {},\n                                        content: graphicsTemplateContent\n                                    }\n                                },\n                                useStopCommand: false\n                            }\n                        })\n                    ]\n                    : []),\n                ...(keyFile\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVEKey,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: keyFile,\n                                mixer: {\n                                    keyer: true\n                                },\n                                loop: true\n                            }\n                        })\n                    ]\n                    : []),\n                ...(frameFile\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVEFrame,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: frameFile,\n                                loop: true\n                            }\n                        })\n                    ]\n                    : []),\n                ...dveTimeline\n            ])\n        }),\n        stickyLayers: [\n            ...dveTimeline\n                .filter(obj => obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS)\n                .filter(obj => dveGeneratorOptions.AUDIO_LAYERS.includes(obj.layer.toString()))\n                .filter(obj => !dveGeneratorOptions.EXCLUDED_LAYERS.includes(obj.layer.toString()))\n                .map(obj => obj.layer.toString())\n        ]\n    };\n}\nexports.MakeContentDVE2 = MakeContentDVE2;\nfunction boxSource(info, label) {\n    return {\n        studioLabel: label,\n        switcherInput: info.port,\n        type: info.type\n    };\n}\nfunction getDVEEnable(offtube, offsetFromStart, startId, media) {\n    if (offsetFromStart) {\n        return offtube\n            ? { start: startId ? `#${startId}.start + ${offsetFromStart}` : offsetFromStart }\n            : { start: offsetFromStart !== null && offsetFromStart !== void 0 ? offsetFromStart : 0 };\n    }\n    return offtube\n        ? { while: `.${[tv2_constants_1.Enablers.OFFTUBE_ENABLE_DVE]}` }\n        : media\n            ? { while: '1' }\n            : { start: offsetFromStart !== null && offsetFromStart !== void 0 ? offsetFromStart : 0 };\n}\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst util_1 = __webpack_require__(8);\nfunction CreateJingleContentBase(config, file, layers, preMultiplied) {\n    return util_1.literal({\n        studioLabel: '',\n        fileName: file,\n        path: file,\n        firstWords: '',\n        lastWords: '',\n        timelineObjects: util_1.literal([\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: 0\n                },\n                priority: 1,\n                layer: layers.Caspar.PlayerJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                    file\n                }\n            }),\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: Number(config.studio.CasparPrerollDuration)\n                },\n                priority: 1,\n                layer: layers.ATEM.DSKJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK,\n                    dsk: {\n                        onAir: true,\n                        sources: {\n                            fillSource: config.studio.AtemSource.JingleFill,\n                            cutSource: config.studio.AtemSource.JingleKey\n                        },\n                        properties: {\n                            tie: false,\n                            preMultiply: preMultiplied,\n                            clip: config.studio.AtemSettings.CCGClip * 10,\n                            gain: config.studio.AtemSettings.CCGGain * 10,\n                            mask: {\n                                enabled: false\n                            }\n                        }\n                    }\n                },\n                classes: ['MIX_MINUS_OVERRIDE_DSK']\n            }),\n            ...(layers.ATEM.USKCleanEffekt\n                ? [\n                    util_1.literal({\n                        id: '',\n                        enable: {\n                            start: Number(config.studio.CasparPrerollDuration)\n                        },\n                        priority: 1,\n                        layer: layers.ATEM.USKCleanEffekt,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                upstreamKeyers: [\n                                    {\n                                        upstreamKeyerId: 0,\n                                        onAir: true,\n                                        mixEffectKeyType: 0,\n                                        flyEnabled: false,\n                                        fillSource: config.studio.AtemSource.JingleFill,\n                                        cutSource: config.studio.AtemSource.JingleKey,\n                                        maskEnabled: false,\n                                        lumaSettings: {\n                                            preMultiplied,\n                                            clip: config.studio.AtemSettings.CCGClip * 10,\n                                            gain: config.studio.AtemSettings.CCGGain * 10 // input is percents (0-100), atem uses 1-000\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    })\n                ]\n                : []),\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: 0\n                },\n                priority: 1,\n                layer: layers.Sisyfos.PlayerJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 1\n                }\n            })\n        ])\n    });\n}\nexports.CreateJingleContentBase = CreateJingleContentBase;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst _ = __webpack_require__(3);\nconst helpers_1 = __webpack_require__(16);\nfunction onTimelineGenerate(context, timeline, previousPersistentState, previousPartEndState, resolvedPieces, parseConfig, sourceLayers, casparLayerClipPending) {\n    const previousPartEndState2 = previousPartEndState;\n    const replacedSessions = {}; // TODO: Replace with map\n    const config = parseConfig(context);\n    // Find server in pgm\n    const activeServerObj = timeline.find(o => o.layer.toString() === casparLayerClipPending && !o.isLookahead);\n    // Find any placeholders to replace\n    const objsToReplace = timeline.filter(o => { var _a; return ((_a = o.classes) === null || _a === void 0 ? void 0 : _a.includes(`dve_placeholder`)) && !o.id.match(/^previous/i); });\n    // Replace contents of placeholder objects\n    // TOD: Replace this with an adlib action\n    objsToReplace.forEach(objToReplace => {\n        const index = timeline.indexOf(objToReplace);\n        if (objToReplace && activeServerObj) {\n            objToReplace.content = activeServerObj.content;\n            let replaceMeta = objToReplace.metaData;\n            const activeMeta = activeServerObj.metaData;\n            if (activeMeta && activeMeta.mediaPlayerSession && replaceMeta && replaceMeta.mediaPlayerSession) {\n                replacedSessions[replaceMeta.mediaPlayerSession] = activeMeta.mediaPlayerSession;\n                replaceMeta = Object.assign(Object.assign({}, replaceMeta), { mediaPlayerSession: activeMeta.mediaPlayerSession });\n            }\n            objToReplace.metaData = replaceMeta;\n        }\n        timeline[index] = objToReplace;\n    });\n    // Replace all sessions that have been overwritten\n    _.each(timeline, o => {\n        const meta = o.metaData;\n        if (meta && meta.mediaPlayerSession) {\n            if (Object.keys(replacedSessions).includes(meta.mediaPlayerSession)) {\n                meta.mediaPlayerSession = replacedSessions[meta.mediaPlayerSession];\n                o.metaData = meta;\n            }\n        }\n    });\n    // Do the same for pieces\n    _.each(resolvedPieces, piece => {\n        if (piece.metaData) {\n            const meta = piece.metaData;\n            if (meta.mediaPlayerSessions) {\n                piece.metaData.mediaPlayerSessions = meta.mediaPlayerSessions.map(session => {\n                    if (Object.keys(replacedSessions).includes(session)) {\n                        return replacedSessions[session];\n                    }\n                    return session;\n                });\n            }\n        }\n    });\n    copyPreviousSisyfosLevels(context, timeline, previousPartEndState2 ? previousPartEndState2.stickySisyfosLevels : {}, resolvedPieces);\n    const persistentState = {\n        activeMediaPlayers: {},\n        segmentSession: context.part.segmentId\n    };\n    const previousPersistentState2 = previousPersistentState;\n    persistentState.activeMediaPlayers = helpers_1.assignMediaPlayers(context, config, timeline, previousPersistentState2 ? previousPersistentState2.activeMediaPlayers : {}, resolvedPieces, sourceLayers);\n    dveBoxLookaheadUseOriginalEnable(timeline);\n    return Promise.resolve({\n        timeline,\n        persistentState\n    });\n}\nexports.onTimelineGenerate = onTimelineGenerate;\nfunction getEndStateForPart(_context, _previousPersistentState, previousPartEndState, resolvedPieces, time) {\n    const endState = {\n        stickySisyfosLevels: {},\n        mediaPlayerSessions: {}\n    };\n    const previousPartEndState2 = previousPartEndState;\n    const activePieces = _.filter(resolvedPieces, p => p.enable && p.enable.start <= time && (!p.enable.end || p.enable.end >= time));\n    _.each(activePieces, piece => {\n        preservePieceSisfosLevel(endState, previousPartEndState2, piece);\n    });\n    _.each(activePieces, piece => {\n        if (piece.metaData) {\n            const meta = piece.metaData.mediaPlayerSessions;\n            if (meta && meta.length) {\n                endState.mediaPlayerSessions[piece.sourceLayerId] = meta;\n            }\n        }\n    });\n    return endState;\n}\nexports.getEndStateForPart = getEndStateForPart;\n/**\n * DVE box lookahead uses classes to select the correct object.\n * Lookahead is replacing this selector rule with a '1' which causes every box to show the same.\n * This simply restores the original enable, which gets put into metaData for this purpose.\n */\nfunction dveBoxLookaheadUseOriginalEnable(timeline) {\n    // DVE_box lookahead class\n    _.each(timeline, obj => {\n        const obj2 = obj;\n        if (obj2.isLookahead &&\n            obj2.content.deviceType === timeline_state_resolver_types_1.DeviceType.ATEM &&\n            obj2.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC\n        // obj2.enable &&\n        // (obj2.enable.while === '1' || obj2.enable.while === 1)\n        ) {\n            const origClass = obj2.metaData ? obj2.metaData.dveAdlibEnabler : undefined;\n            if (origClass) {\n                // Restore the original enable rule\n                obj2.enable = { while: origClass };\n            }\n        }\n    });\n}\nfunction preservePieceSisfosLevel(endState, previousPartEndState, piece) {\n    const metaData = piece.metaData;\n    if (metaData) {\n        // Loop through rm level persistance\n        if (metaData.stickySisyfosLevels) {\n            for (const key of Object.keys(metaData.stickySisyfosLevels)) {\n                const values = metaData.stickySisyfosLevels[key];\n                // Follow the previous state, if specified, or start with this exposed value\n                endState.stickySisyfosLevels[key] =\n                    values.followsPrevious &&\n                        previousPartEndState &&\n                        previousPartEndState.stickySisyfosLevels &&\n                        previousPartEndState.stickySisyfosLevels[key]\n                        ? previousPartEndState.stickySisfosLevels[key]\n                        : values.value;\n            }\n        }\n    }\n}\nexports.preservePieceSisfosLevel = preservePieceSisfosLevel;\nfunction isSisyfosSource(obj) {\n    return (obj.content &&\n        obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS &&\n        obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS);\n}\nfunction copyPreviousSisyfosLevels(context, timelineObjs, previousLevels, resolvedPieces) {\n    // This needs to look at previous pieces within the part, to make it work for adlibs\n    const sisyfosObjs = timelineObjs.filter(isSisyfosSource);\n    // Pieces should be ordered, we shall assume that\n    const groupedPieces = _.groupBy(resolvedPieces, p => p.enable.start);\n    _.each(groupedPieces, pieces => {\n        const pieceIds = _.pluck(pieces, '_id'); // getPieceGroupId(p._id))\n        // Find all the objs that start here\n        const objs = sisyfosObjs.filter(o => {\n            const groupId = o.pieceId;\n            return groupId && pieceIds.indexOf(groupId) !== -1;\n        });\n        // Stop if no objects\n        if (objs.length === 0 || !pieces[0].enable) {\n            return;\n        }\n        // Find the active pieces before this time\n        const time = pieces[0].enable.start;\n        // Start of part\n        if (time !== 0) {\n            // Calculate the previous 'state'\n            const activePieces = _.filter(resolvedPieces, p => {\n                if (!p.enable) {\n                    return false;\n                }\n                const start = p.enable.start; // Core should be always setting this to a number\n                const duration = p.playoutDuration;\n                // Piece must start before target, and end at or after target starts\n                return start < time && (duration === undefined || start + duration >= time);\n            });\n            const newPreviousLevels = {};\n            _.each(activePieces, piece => {\n                const metadata = piece.metaData;\n                if (metadata && metadata.stickySisyfosLevels) {\n                    _.each(metadata.stickySisyfosLevels, (val, id) => {\n                        // context.warning(\n                        // \t`New level from ${piece._id} for ${id} of ${JSON.stringify(val)} (last was ${previousLevels[id]})`\n                        // )\n                        if (newPreviousLevels[id]) {\n                            context.warning('duplicate level, going with the first!');\n                        }\n                        else {\n                            if (val.followsPrevious && previousLevels[id] !== undefined) {\n                                newPreviousLevels[id] = previousLevels[id];\n                            }\n                            else {\n                                newPreviousLevels[id] = val.value;\n                            }\n                        }\n                    });\n                }\n            });\n            // Apply newly calculated levels\n            previousLevels = newPreviousLevels;\n        }\n        // Apply newly calculated levels\n        _.each(objs, sisyfosObj => {\n            const contentObj = sisyfosObj.content;\n            const previousVal = previousLevels[sisyfosObj.layer + ''];\n            if (contentObj && previousVal !== undefined && sisyfosObj.metaData && sisyfosObj.metaData.sisyfosPersistLevel) {\n                contentObj.isPgm = previousVal;\n            }\n        });\n    });\n}\nexports.copyPreviousSisyfosLevels = copyPreviousSisyfosLevels;\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_constants_1 = __webpack_require__(4);\nconst _ = __webpack_require__(3);\nfunction reversePreviousAssignment(previousAssignment) {\n    const previousAssignmentRev = {};\n    for (const key of _.keys(previousAssignment)) {\n        _.each(previousAssignment[key] || [], v2 => {\n            previousAssignmentRev[v2.sessionId] = v2;\n        });\n    }\n    return previousAssignmentRev;\n}\nfunction maxUndefined(a, b) {\n    if (a === undefined) {\n        return b;\n    }\n    if (b === undefined) {\n        return a;\n    }\n    return Math.max(a, b);\n}\nfunction calculateSessionTimeRanges(resolvedPieces) {\n    const piecesWantingMediaPlayers = _.filter(resolvedPieces, p => {\n        if (!p.metaData) {\n            return false;\n        }\n        const metadata = p.metaData;\n        return (metadata.mediaPlayerSessions || []).length > 0;\n    });\n    const sessionRequests = {};\n    _.each(piecesWantingMediaPlayers, p => {\n        const metadata = p.metaData;\n        const start = p.enable.start;\n        const duration = p.playoutDuration;\n        const end = duration !== undefined ? start + duration : undefined;\n        // Track the range of each session\n        _.each(metadata.mediaPlayerSessions || [], sessionId => {\n            // TODO - will fixed ids ever be wanted? Is it reasonable to want to have the same session across multiple pieces?\n            // Infinites are the exception here, but anything else?\n            // Perhaps the id given should be prefixed with the piece(instance) id? And sharing sessions can be figured out when it becomes needed\n            if (sessionId === '' || sessionId === tv2_constants_1.MEDIA_PLAYER_AUTO) {\n                sessionId = `${p.infiniteId || p._id}`;\n            }\n            // Note: multiple generated sessionIds for a single piece will not work as there will not be enough info to assign objects to different players\n            const val = sessionRequests[sessionId] || undefined;\n            if (val) {\n                sessionRequests[sessionId] = {\n                    start: Math.min(val.start, start),\n                    end: maxUndefined(val.end, end),\n                    optional: val.optional && (metadata.mediaPlayerOptional || false)\n                };\n            }\n            else {\n                sessionRequests[sessionId] = {\n                    start,\n                    end,\n                    optional: metadata.mediaPlayerOptional || false\n                };\n            }\n        });\n    });\n    return sessionRequests;\n}\nfunction findNextAvailablePlayer(config, inUse, req) {\n    const pickFirstNotInUse = (inUseRequests) => {\n        const inUseIds = _.compact(_.map(inUseRequests, r => r.player));\n        for (const mp of config.mediaPlayers) {\n            if (inUseIds.indexOf(mp.id) === -1) {\n                return mp.id;\n            }\n        }\n        return undefined;\n    };\n    const tryForInUse = (filteredInUse) => {\n        // Try finding something which is free\n        let mpId = pickFirstNotInUse(inUse);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // Try reclaiming any lookahead\n        const allActiveUses = _.filter(filteredInUse, r => r.type !== tv2_constants_1.MediaPlayerClaimType.Preloaded);\n        mpId = pickFirstNotInUse(allActiveUses);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // Is there something ending at the same time this starts?\n        const activeUsesNotEndingNow = _.filter(filteredInUse, r => r.end === undefined || r.end > req.start);\n        mpId = pickFirstNotInUse(activeUsesNotEndingNow);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // TODO - more strategies?\n        return undefined;\n    };\n    // Try with all players in use\n    let res = tryForInUse(inUse);\n    if (res !== undefined) {\n        return res;\n    }\n    // Try again with optional ones ignored\n    res = tryForInUse(_.filter(inUse, r => !r.optional));\n    if (res !== undefined) {\n        return res;\n    }\n    // TODO - more strategies?\n    // Nothing was free\n    return undefined;\n}\nfunction doesRequestOverlap(thisReq, other) {\n    if (thisReq.id === other.id) {\n        return false;\n    }\n    if (other.player === undefined) {\n        return false;\n    }\n    if (thisReq.start >= other.start && thisReq.start < (other.end || Infinity)) {\n        return true;\n    }\n    if (other.start >= thisReq.start && other.start < (thisReq.end || Infinity)) {\n        return true;\n    }\n    return false;\n}\nexports.doesRequestOverlap = doesRequestOverlap;\nfunction resolveMediaPlayerAssignments(context, config, previousAssignmentRev, resolvedPieces) {\n    const debugLog = config.studio.ABPlaybackDebugLogging;\n    const sessionRequests = calculateSessionTimeRanges(resolvedPieces);\n    // In future this may want a better fit algorithm than this. This only applies if being done for multiple clips playing simultaneously, and more players\n    // Convert requests into a sorted array\n    const activeRequests = [];\n    _.each(sessionRequests, (r, sessionId) => {\n        if (r) {\n            const prev = previousAssignmentRev[sessionId];\n            activeRequests.push({\n                id: sessionId,\n                start: r.start,\n                end: r.end,\n                player: prev ? prev.playerId.toString() : undefined,\n                type: prev && prev.lookahead ? tv2_constants_1.MediaPlayerClaimType.Preloaded : tv2_constants_1.MediaPlayerClaimType.Active,\n                optional: r.optional\n            });\n        }\n    });\n    _.sortBy(activeRequests, r => r.start);\n    // Go through and assign players\n    if (debugLog) {\n        context.warning('all reqs' + JSON.stringify(activeRequests, undefined, 4));\n    }\n    _.each(activeRequests, req => {\n        if (req.player !== undefined) {\n            // Keep existing assignment\n            if (debugLog) {\n                context.warning('Retained mp' + req.player + ' for ' + req.id);\n            }\n            return;\n        }\n        const otherActive = _.filter(activeRequests, r => doesRequestOverlap(req, r));\n        if (debugLog) {\n            context.warning(`for ${JSON.stringify(req)} there is: ${JSON.stringify(otherActive, undefined, 4)}`);\n        }\n        // TODO - what about playing the same piece back-to-back?\n        const nextPlayerId = findNextAvailablePlayer(config, otherActive, req);\n        if (nextPlayerId === undefined) {\n            context.warning('All the mediaplayers are in use (' + req.id + ')!');\n        }\n        else {\n            _.each(otherActive, o => {\n                if (o.player === nextPlayerId) {\n                    if (debugLog) {\n                        context.warning('Stole mp from ' + o.id);\n                    }\n                    o.player = undefined;\n                }\n            });\n            req.player = nextPlayerId;\n            if (debugLog) {\n                context.warning('Assigned mp' + req.player + ' to ' + req.id + '_' + JSON.stringify(req));\n            }\n        }\n    });\n    if (debugLog) {\n        context.warning('result' + JSON.stringify(activeRequests));\n    }\n    return activeRequests;\n}\nexports.resolveMediaPlayerAssignments = resolveMediaPlayerAssignments;\nfunction updateObjectsToMediaPlayer(context, config, playerId, objs, sourceLayers) {\n    _.each(objs, obj => {\n        // Mutate each object to the correct player\n        if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.CASPARCG) {\n            if (obj.layer === sourceLayers.Caspar.ClipPending) {\n                obj.layer = sourceLayers.Caspar.PlayerClip(playerId);\n            }\n            else if (obj.lookaheadForLayer === sourceLayers.Caspar.ClipPending) {\n                // This works on the assumption that layer will contain lookaheadForLayer, but not the exact syntax.\n                // Hopefully this will be durable to any potential future core changes\n                obj.layer = (obj.layer + '').replace(obj.lookaheadForLayer.toString(), sourceLayers.Caspar.PlayerClip(playerId));\n                obj.lookaheadForLayer = sourceLayers.Caspar.PlayerClip(playerId);\n            }\n            else {\n                context.warning(`Moving object to mediaPlayer that probably shouldnt be? (from layer: ${obj.layer})`);\n                // context.warning(obj)\n            }\n        }\n        else if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.ATEM) {\n            let atemInput = _.find(config.mediaPlayers, mp => mp.id === playerId.toString());\n            if (!atemInput) {\n                context.warning(`Trying to find atem input for unknown mediaPlayer: #${playerId}`);\n                atemInput = { id: playerId.toString(), val: config.studio.AtemSource.Default.toString() };\n            }\n            const atemObj = obj;\n            if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.ME) {\n                const atemObj2 = atemObj;\n                atemObj2.content.me.input = Number(atemInput.val) || 0;\n            }\n            else if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX) {\n                const atemObj2 = atemObj;\n                atemObj2.content.aux.input = Number(atemInput.val) || 0;\n            }\n            else if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC) {\n                const atemObj2 = atemObj;\n                // Find box with no source\n                const input = Number(atemInput.val) || 0;\n                atemObj2.content.ssrc.boxes.forEach((box, i) => {\n                    if (box.source === -1) {\n                        atemObj2.content.ssrc.boxes[i].source = input; // Pgm box\n                    }\n                });\n            }\n            else {\n                context.warning(`Trying to move ATEM object of unknown type (${atemObj.content.type}) for media player assignment`);\n            }\n        }\n        else if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS) {\n            if (obj.layer === sourceLayers.Sisyfos.ClipPending) {\n                // TODO: Change when adding more servers\n                obj.layer = playerId === 1 ? sourceLayers.Sisyfos.PlayerA : sourceLayers.Sisyfos.PlayerB;\n            }\n            else if (obj.lookaheadForLayer === sourceLayers.Sisyfos.ClipPending) {\n                // This works on the assumption that layer will contain lookaheadForLayer, but not the exact syntax.\n                // Hopefully this will be durable to any potential future core changes\n                const targetPlayer = playerId === 1 ? sourceLayers.Sisyfos.PlayerA : sourceLayers.Sisyfos.PlayerB;\n                // TODO: Change when adding more servers\n                obj.layer = (obj.layer + '').replace(obj.lookaheadForLayer.toString(), targetPlayer);\n                obj.lookaheadForLayer = targetPlayer;\n            }\n            else {\n                context.warning(`Moving object to mediaPlayer that probably shouldnt be? (from layer: ${obj.layer})`);\n                // context.warning(obj)\n            }\n        }\n        else {\n            context.warning(`Trying to move object of unknown type (${obj.content.deviceType}) for media player assignment`);\n        }\n    });\n}\nfunction assignMediaPlayers(context, config, timelineObjs, previousAssignment, resolvedPieces, sourceLayers) {\n    const previousAssignmentRev = reversePreviousAssignment(previousAssignment);\n    const activeRequests = resolveMediaPlayerAssignments(context, config, previousAssignmentRev, resolvedPieces);\n    return applyMediaPlayersAssignments(context, config, timelineObjs, previousAssignmentRev, activeRequests, sourceLayers);\n}\nexports.assignMediaPlayers = assignMediaPlayers;\nfunction applyMediaPlayersAssignments(context, config, timelineObjs, previousAssignmentRev, activeRequests, sourceLayers) {\n    const debugLog = config.studio.ABPlaybackDebugLogging;\n    const newAssignments = {};\n    const persistAssignment = (sessionId, playerId, lookahead) => {\n        let ls = newAssignments[playerId];\n        if (!ls) {\n            newAssignments[playerId] = ls = [];\n        }\n        ls.push({ sessionId, playerId, lookahead });\n    };\n    // collect objects by their sessionId\n    const labelledObjs = timelineObjs.filter(o => o.metaData && o.metaData.mediaPlayerSession);\n    const groupedObjs = _.groupBy(labelledObjs, o => {\n        const sessionId = (o.metaData || {}).mediaPlayerSession;\n        if (sessionId === '' || sessionId === tv2_constants_1.MEDIA_PLAYER_AUTO) {\n            return o.infinitePieceId || o.pieceId || tv2_constants_1.MEDIA_PLAYER_AUTO;\n        }\n        else {\n            return sessionId;\n        }\n    });\n    // Apply the known assignments\n    const remainingGroups = [];\n    _.each(groupedObjs, (group, groupId) => {\n        const request = _.find(activeRequests, req => req.id === groupId);\n        if (request) {\n            if (request.player) {\n                // TODO - what if player is undefined?\n                updateObjectsToMediaPlayer(context, config, Number(request.player) || 0, group, sourceLayers);\n                persistAssignment(groupId, Number(request.player) || 0, false);\n            }\n        }\n        else {\n            remainingGroups.push({ id: groupId, objs: group });\n        }\n    });\n    // Find the groups needing more work\n    // Not matching a request means this is either a rogue object in a mislabeled piece, or lookahead for a future part.\n    const unknownGroups = [];\n    const lookaheadGroups = [];\n    _.each(remainingGroups, grp => {\n        // If this is lookahead for a future part (no end set on the object)\n        const isFuturePartLookahead = _.all(grp.objs, o => !!o.isLookahead /*|| (o as any).wasLookahead*/ && o.enable.duration === undefined && o.enable.end === undefined);\n        if (isFuturePartLookahead) {\n            lookaheadGroups.push(grp);\n        }\n        else {\n            unknownGroups.push(grp);\n        }\n    });\n    // These are the groups that shouldn't exist, so are likely a bug. There isnt a lot we can do beyond warn about the potential bug\n    _.each(unknownGroups, grp => {\n        const objIds = _.map(grp.objs, o => o.id);\n        const prev = previousAssignmentRev[grp.id];\n        if (prev) {\n            updateObjectsToMediaPlayer(context, config, prev.playerId, grp.objs, sourceLayers);\n            persistAssignment(grp.id, prev.playerId, false);\n            context.warning(`Found unexpected session remaining on the timeline: \"${grp.id}\" belonging to ${objIds}. This may cause playback glitches`);\n        }\n        else {\n            context.warning(`Found unexpected unknown session on the timeline: \"${grp.id}\" belonging to ${objIds}. This could result in black playback`);\n        }\n    });\n    let mediaPlayerUsageEnd = [];\n    for (const mp of config.mediaPlayers) {\n        // Block players with an 'infinite' clip from being used for lookahead\n        const endTimes = _.map(_.filter(activeRequests, s => s.player === mp.id), s => s.end);\n        const realEndTimes = _.filter(endTimes, e => e !== undefined);\n        if (endTimes.length === realEndTimes.length) {\n            // No infinite(undefined) ones, so find the highest end\n            mediaPlayerUsageEnd.push({\n                playerId: Number(mp.id) || 0,\n                end: realEndTimes.length === 0 ? 0 : _.max(realEndTimes)\n            });\n        }\n    }\n    // Sort by the end time\n    mediaPlayerUsageEnd = _.sortBy(mediaPlayerUsageEnd, u => u.end).reverse();\n    // Finish up with allocating lookahead based on what is left. If there is no space left that is not a problem until playback is closer\n    _.each(lookaheadGroups, grp => {\n        if (debugLog) {\n            context.warning(`Attempting assignment for future lookahead ${grp.id}`);\n        }\n        const prev = previousAssignmentRev[grp.id];\n        let nextPlayer;\n        if (debugLog) {\n            context.warning('Players are available at:' + JSON.stringify(mediaPlayerUsageEnd));\n        }\n        const prevAssignment = prev ? _.find(mediaPlayerUsageEnd, mp => mp.playerId === prev.playerId) : undefined;\n        if (prevAssignment && (prevAssignment.end === 0 || false)) {\n            // TODO - decide if the previous assignment is still suitable\n            if (debugLog) {\n                context.warning('lookahead can retain existing player');\n            }\n            nextPlayer = prevAssignment;\n            mediaPlayerUsageEnd = _.without(mediaPlayerUsageEnd, prevAssignment);\n        }\n        else {\n            // Take the next from the queue, as it is the next freed\n            nextPlayer = mediaPlayerUsageEnd.pop();\n        }\n        if (nextPlayer === undefined) {\n            if (debugLog) {\n                context.warning('no player available for lookahead. This likely means one is in use by a playing clip');\n            }\n        }\n        else {\n            if (debugLog) {\n                context.warning(`lookahead chose: ${nextPlayer.playerId} (Free after: ${nextPlayer.end})`);\n            }\n            // Record the assignment, so that the next update can try and reuse it\n            persistAssignment(grp.id, nextPlayer.playerId, true);\n            updateObjectsToMediaPlayer(context, config, nextPlayer.playerId, grp.objs, sourceLayers);\n        }\n    });\n    if (debugLog) {\n        context.warning('new assignments:' + JSON.stringify(newAssignments));\n    }\n    return newAssignments;\n}\nexports.applyMediaPlayersAssignments = applyMediaPlayersAssignments;\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst util_1 = __webpack_require__(8);\nfunction GetStickyForPiece(layers, STICKY_LAYERS) {\n    return util_1.literal({\n        stickySisyfosLevels: _.object(layers\n            .filter(layer => STICKY_LAYERS.indexOf(layer.layer) !== -1)\n            .map(layer => {\n            return [\n                layer.layer,\n                {\n                    value: layer.isPgm,\n                    followsPrevious: false\n                }\n            ];\n        }))\n    });\n}\nexports.GetStickyForPiece = GetStickyForPiece;\nfunction GetEksternMetaData(STICKY_LAYERS, studioMics, layers) {\n    return layers && layers.length\n        ? GetStickyForPiece([\n            ...layers.map(layer => {\n                return { layer, isPgm: 1 };\n            }),\n            ...studioMics.map(l => {\n                return { layer: l, isPgm: 1 };\n            })\n        ], STICKY_LAYERS)\n        : undefined;\n}\nexports.GetEksternMetaData = GetEksternMetaData;\nfunction GetCameraMetaData(config, layers) {\n    return GetStickyForPiece([...(layers || []), ...config.studio.StudioMics].map(l => {\n        return { layer: l, isPgm: 1 };\n    }), config.stickyLayers);\n}\nexports.GetCameraMetaData = GetCameraMetaData;\nfunction GetSisyfosTimelineObjForEkstern(context, sources, sourceType, getLayersForEkstern, enable) {\n    if (!enable) {\n        enable = { start: 0 };\n    }\n    const audioTimeline = [];\n    const layers = getLayersForEkstern(context, sources, sourceType);\n    if (!layers || !layers.length) {\n        context.warning(`Could not set audio levels for ${sourceType}`);\n        return audioTimeline;\n    }\n    layers.forEach(layer => {\n        audioTimeline.push(util_1.literal({\n            id: '',\n            enable: enable,\n            priority: 1,\n            layer,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                isPgm: 1\n            }\n        }));\n    });\n    return audioTimeline;\n}\nexports.GetSisyfosTimelineObjForEkstern = GetSisyfosTimelineObjForEkstern;\nfunction GetLayersForEkstern(context, sources, sourceType) {\n    const eksternProps = sourceType.match(/^(?:LIVE|SKYPE) ([^\\s]+)(?: (.+))?$/i);\n    const eksternLayers = [];\n    if (eksternProps) {\n        const sourceInfo = tv2_common_1.FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, sourceType);\n        if (sourceInfo && sourceInfo.sisyfosLayers) {\n            eksternLayers.push(...sourceInfo.sisyfosLayers);\n        }\n    }\n    return eksternLayers;\n}\nexports.GetLayersForEkstern = GetLayersForEkstern;\nfunction GetSisyfosTimelineObjForCamera(context, config, sourceType, enable) {\n    if (!enable) {\n        enable = { start: 0 };\n    }\n    const audioTimeline = [];\n    const useMic = !sourceType.match(/^(?:KAM|CAM)(?:ERA)? (.+) minus mic(.*)$/i);\n    const camName = sourceType.match(/^(?:KAM|CAM)(?:ERA)? (.+)$/i);\n    const nonCam = !!sourceType.match(/server|telefon|full|evs/i);\n    if ((useMic && camName) || nonCam) {\n        const camLayers = [];\n        if (useMic && camName) {\n            const sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, sourceType);\n            if (sourceInfo) {\n                if (sourceInfo.sisyfosLayers) {\n                    camLayers.push(...sourceInfo.sisyfosLayers);\n                }\n                if (sourceInfo.useStudioMics) {\n                    camLayers.push(...config.studio.StudioMics);\n                }\n            }\n        }\n        else if (nonCam) {\n            camLayers.push(...config.studio.StudioMics);\n        }\n        audioTimeline.push(...camLayers.map(layer => {\n            return util_1.literal({\n                id: '',\n                enable: enable ? enable : { start: 0 },\n                priority: 1,\n                layer,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 1\n                }\n            });\n        }));\n    }\n    return audioTimeline;\n}\nexports.GetSisyfosTimelineObjForCamera = GetSisyfosTimelineObjForCamera;\nfunction GetLayersForCamera(config, sourceInfo) {\n    const cameraLayers = [];\n    if (sourceInfo.sisyfosLayers) {\n        cameraLayers.push(...sourceInfo.sisyfosLayers);\n    }\n    if (sourceInfo.useStudioMics) {\n        cameraLayers.push(...config.studio.StudioMics);\n    }\n    return cameraLayers;\n}\nexports.GetLayersForCamera = GetLayersForCamera;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TranslateEngine(eng) {\n    return !!eng.match(/WALL/i) ? 'WALL' : !!eng.match(/FULL/i) ? 'FULL' : 'OVL';\n}\nexports.TranslateEngine = TranslateEngine;\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(74), exports);\ntslib_1.__exportStar(__webpack_require__(75), exports);\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Layers shared across showstyles, to maintain compatibility with config tables.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GraphicLLayer;\n(function (GraphicLLayer) {\n    GraphicLLayer[\"GraphicLLayerOverlay\"] = \"graphic_overlay\";\n    GraphicLLayer[\"GraphicLLayerOverlayIdent\"] = \"graphic_overlay_ident\";\n    GraphicLLayer[\"GraphicLLayerOverlayTopt\"] = \"graphic_overlay_topt\";\n    GraphicLLayer[\"GraphicLLayerOverlayLower\"] = \"graphic_overlay_lower\";\n    GraphicLLayer[\"GraphicLLayerOverlayHeadline\"] = \"graphic_overlay_headline\";\n    GraphicLLayer[\"GraphicLLayerOverlayTema\"] = \"graphic_overlay_tema\";\n    GraphicLLayer[\"GraphicLLayerPilot\"] = \"graphic_pilot\";\n    GraphicLLayer[\"GraphicLLayerPilotOverlay\"] = \"graphic_pilot_overlay\";\n    GraphicLLayer[\"GraphicLLayerDesign\"] = \"graphic_design\";\n    GraphicLLayer[\"GraphicLLayerAdLibs\"] = \"graphic_adlibs\";\n    GraphicLLayer[\"GraphicLLayerWall\"] = \"graphic_wall\"; // <= viz_layer_wall\n})(GraphicLLayer = exports.GraphicLLayer || (exports.GraphicLLayer = {}));\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SharedSourceLayers;\n(function (SharedSourceLayers) {\n    SharedSourceLayers[\"PgmCam\"] = \"studio0_camera\";\n    SharedSourceLayers[\"PgmLive\"] = \"studio0_live\";\n    SharedSourceLayers[\"PgmDVE\"] = \"studio0_dve\";\n    // PgmDVEAdlib = 'studio0_dve_adlib', // TODO: Future: Adlib functions?\n    SharedSourceLayers[\"PgmServer\"] = \"studio0_clip\";\n    SharedSourceLayers[\"PgmVoiceOver\"] = \"studio0_voiceover\";\n    // Graphics\n    SharedSourceLayers[\"PgmGraphicsIdent\"] = \"studio0_graphicsIdent\";\n    SharedSourceLayers[\"PgmGraphicsIdentPersistent\"] = \"studio0_graphicsIdent_persistent\";\n    SharedSourceLayers[\"PgmGraphicsTop\"] = \"studio0_graphicsTop\";\n    SharedSourceLayers[\"PgmGraphicsLower\"] = \"studio0_graphicsLower\";\n    SharedSourceLayers[\"PgmGraphicsHeadline\"] = \"studio0_graphicsHeadline\";\n    SharedSourceLayers[\"PgmGraphicsTema\"] = \"studio0_graphicsTema\";\n    SharedSourceLayers[\"PgmGraphicsTLF\"] = \"studio0_graphicsTelefon\";\n    /** General, 'fallback', overlay layer */\n    SharedSourceLayers[\"PgmGraphicsOverlay\"] = \"studio0_overlay\";\n    SharedSourceLayers[\"WallGraphics\"] = \"studio0_wall_graphics\";\n    // Note: there is a regex in core to ignore some DVE layers. That will need updating if adding more\n    SharedSourceLayers[\"PgmDVEBox1\"] = \"studio0_dve_box1\";\n    SharedSourceLayers[\"PgmDVEBox2\"] = \"studio0_dve_box2\";\n    SharedSourceLayers[\"PgmDVEBox3\"] = \"studio0_dve_box3\";\n    SharedSourceLayers[\"PgmDVEBox4\"] = \"studio0_dve_box4\";\n    // Other / sec / manus\n    SharedSourceLayers[\"PgmScript\"] = \"studio0_script\";\n})(SharedSourceLayers = exports.SharedSourceLayers || (exports.SharedSourceLayers = {}));\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(77), exports);\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst util_1 = __webpack_require__(8);\nfunction MoveSourcesToTable(versionStr, configName, withSisyfos, getSisyfosLayersForMigration, studioMics) {\n    const res = util_1.literal({\n        id: `studioConfig.moveToTable.${configName}`,\n        version: versionStr,\n        canBeRunAutomatically: true,\n        validate: (context) => {\n            const configVal = context.getConfig(configName);\n            if (configVal === undefined || typeof configVal === 'string') {\n                return `${configName} has old format or doesn't exist`;\n            }\n            return false;\n        },\n        migrate: (context) => {\n            const configVal = context.getConfig(configName);\n            const table = [];\n            if (configVal === undefined) {\n                context.setConfig(configName, table);\n            }\n            else if (typeof configVal === 'string') {\n                const oldConfig = tv2_common_1.parseMapStr(undefined, configVal, true);\n                _.each(oldConfig, (source, i) => {\n                    if (withSisyfos) {\n                        table.push(util_1.literal({\n                            _id: i.toString(),\n                            SourceName: source.id,\n                            AtemSource: source.val,\n                            SisyfosLayers: getSisyfosLayersForMigration(configName, source.id.toString().toUpperCase()),\n                            StudioMics: !!studioMics\n                        }));\n                    }\n                    else {\n                        table.push(util_1.literal({\n                            _id: i.toString(),\n                            SourceName: source.id,\n                            AtemSource: source.val\n                        }));\n                    }\n                });\n                context.setConfig(configName, table);\n            }\n        }\n    });\n    return res;\n}\nexports.MoveSourcesToTable = MoveSourcesToTable;\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst OfftubeAdlib_1 = __webpack_require__(157);\nconst OfftubeDVE_1 = __webpack_require__(158);\nconst OfftubeGrafikCaspar_1 = __webpack_require__(102);\nconst OfftubeJingle_1 = __webpack_require__(159);\nconst OfftubeTargetEngine_1 = __webpack_require__(160);\nconst OfftubeViz_1 = __webpack_require__(161);\nfunction OfftubeEvaluateCues(context, config, pieces, adLibPieces, cues, partDefinition, options) {\n    tv2_common_1.EvaluateCuesBase({\n        EvaluateCueVIZ: OfftubeViz_1.OfftubeEvaluateVIZ,\n        EvaluateCueDVE: OfftubeDVE_1.OfftubeEvaluateDVE,\n        EvaluateCueTargetEngine: OfftubeTargetEngine_1.OfftubeEvaluateTargetEngine,\n        EvaluateCueGrafik: OfftubeGrafikCaspar_1.OfftubeEvaluateGrafikCaspar,\n        EvaluateCueJingle: OfftubeJingle_1.OfftubeEvaluateJingle,\n        EvaluateCueAdLib: OfftubeAdlib_1.OfftubeEvaluateAdLib\n    }, context, config, pieces, adLibPieces, cues, partDefinition, options);\n}\nexports.OfftubeEvaluateCues = OfftubeEvaluateCues;\n\n\n/***/ }),\n/* 79 */,\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst outputlayer_defaults_1 = __webpack_require__(85);\nconst runtime_arguments_defaults_1 = __webpack_require__(86);\nconst sourcelayer_defaults_1 = __webpack_require__(87);\nfunction getSourceLayerDefaultsMigrationSteps(versionStr) {\n    return _.compact(_.map(sourcelayer_defaults_1.default, (defaultVal) => {\n        return tv2_common_1.literal({\n            id: `sourcelayer.defaults.${defaultVal._id}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                if (!context.getSourceLayer(defaultVal._id)) {\n                    return `SourceLayer \"${defaultVal._id}\" doesn't exist on ShowBaseStyle`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                if (!context.getSourceLayer(defaultVal._id)) {\n                    context.insertSourceLayer(defaultVal._id, defaultVal);\n                }\n            }\n        });\n    }));\n}\nexports.getSourceLayerDefaultsMigrationSteps = getSourceLayerDefaultsMigrationSteps;\nfunction getOutputLayerDefaultsMigrationSteps(versionStr) {\n    return _.compact(_.map(outputlayer_defaults_1.default, (defaultVal) => {\n        return tv2_common_1.literal({\n            id: `outputlayer.defaults.${defaultVal._id}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                if (!context.getOutputLayer(defaultVal._id)) {\n                    return `OutputLayer \"${defaultVal._id}\" doesn't exist on ShowBaseStyle`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                if (!context.getOutputLayer(defaultVal._id)) {\n                    context.insertOutputLayer(defaultVal._id, defaultVal);\n                }\n            }\n        });\n    }));\n}\nexports.getOutputLayerDefaultsMigrationSteps = getOutputLayerDefaultsMigrationSteps;\nfunction getRuntimeArgumentsDefaultsMigrationSteps(versionStr) {\n    return _.compact(_.map(runtime_arguments_defaults_1.default, (defaultVal) => {\n        return tv2_common_1.literal({\n            id: `runtimeArguments.defaults.${defaultVal._id}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                if (!context.getRuntimeArgument(defaultVal._id)) {\n                    return `RuntimeArgument \"${defaultVal._id}\" doesn't exist on ShowBaseStyle`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                if (!context.getRuntimeArgument(defaultVal._id)) {\n                    context.insertRuntimeArgument(defaultVal._id, defaultVal);\n                }\n            }\n        });\n    }));\n}\nexports.getRuntimeArgumentsDefaultsMigrationSteps = getRuntimeArgumentsDefaultsMigrationSteps;\nfunction remapTableColumnValuesInner(table, columnId, \n/** Map values [from, to] */\nremapping) {\n    let changed = 0;\n    table.map(row => {\n        const val = row[columnId];\n        if (val) {\n            const remap = remapping.get(val.toString());\n            if (remap) {\n                row[columnId] = remap;\n                changed++;\n            }\n        }\n        return row;\n    });\n    return { changed, table };\n}\nfunction remapTableColumnValues(versionStr, tableId, columnId, \n/** Map values [from, to] */\nremapping) {\n    return [\n        tv2_common_1.literal({\n            id: `remapTableColumnValue.${tableId}.${columnId}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                const table = context.getBaseConfig(tableId);\n                if (!table) {\n                    return `Table \"${tableId}\" does not exist`;\n                }\n                if (!table.length) {\n                    // No values, nothing to remap\n                    return false;\n                }\n                const first = table[0];\n                if (!Object.keys(first).includes(columnId)) {\n                    return `Column \"${columnId}\" does not exist in table \"${tableId}\"`;\n                }\n                const ret = remapTableColumnValuesInner(table, columnId, remapping);\n                if (typeof ret === 'string' || typeof ret === 'boolean') {\n                    return ret;\n                }\n                return ret.changed !== 0;\n            },\n            migrate: (context) => {\n                const table = context.getBaseConfig(tableId);\n                const ret = remapTableColumnValuesInner(table, columnId, remapping);\n                context.setBaseConfig(tableId, ret.table);\n            }\n        })\n    ];\n}\nexports.remapTableColumnValues = remapTableColumnValues;\n\n\n/***/ }),\n/* 81 */,\n/* 82 */,\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst atem_1 = __webpack_require__(11);\nconst layers_1 = __webpack_require__(9);\nexports.CORE_INJECTED_KEYS = ['SofieHostURL'];\nconst DEFAULT_STUDIO_MICS_LAYERS = [\n    layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_1_ST_A,\n    layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_2_ST_A,\n    layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_3_ST_A\n];\nexports.manifestOfftubeSourcesCam = {\n    id: 'SourcesCam',\n    name: 'Camera Mapping',\n    description: 'Camera number to ATEM input and Sisyfos layer',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: true,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '',\n            AtemSource: 0,\n            SisyfosLayers: [],\n            StudioMics: true\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'Camera name',\n            description: 'Camera name as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for Camera',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for Camera',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: true,\n            rank: 3\n        }\n    ]\n};\nexports.manifestOfftubeSourcesRM = {\n    id: 'SourcesRM',\n    name: 'RM Mapping',\n    description: 'RM number to ATEM input',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 1,\n            SisyfosLayers: [layers_1.OfftubeSisyfosLLayer.SisyfosSourceLive_1],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 2,\n            SisyfosLayers: [layers_1.OfftubeSisyfosLLayer.SisyfosSourceLive_2],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: 'WF',\n            AtemSource: 3,\n            SisyfosLayers: [\n                layers_1.OfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Stereo,\n                layers_1.OfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Surround\n            ],\n            StudioMics: false\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'RM number',\n            description: 'RM number as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for RM input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for RM input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: true,\n            rank: 3\n        }\n    ]\n};\nexports.manifestOfftubeSourcesABMediaPlayers = {\n    id: 'ABMediaPlayers',\n    name: 'Media Players inputs',\n    description: 'ATEM inputs for A/B media players',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 6\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 5\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'Media player',\n            description: 'Media player name as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for Media player',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        }\n    ]\n};\nexports.manifestOfftubeStudioMics = {\n    id: 'StudioMics',\n    name: 'Studio Mics',\n    description: 'Sisyfos layers for Studio Mics',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n    filters: {\n        deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n    },\n    required: true,\n    multiple: true,\n    defaultVal: DEFAULT_STUDIO_MICS_LAYERS\n};\nexports.studioConfigManifest = [\n    {\n        id: 'MediaFlowId',\n        name: 'Media Flow Id',\n        description: '',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: false,\n        defaultVal: 'flow0'\n    },\n    {\n        id: 'ClipFileExtension',\n        name: 'Clip files extension',\n        description: 'Default file extension to clips to fetch from Omneon and play at CasparCG',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: true,\n        defaultVal: '.mxf'\n    },\n    {\n        id: 'ClipSourcePath',\n        name: 'Network base path',\n        description: 'The base path for the Omneon network share. Needs to match the base path of the source in Media manager',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: true,\n        defaultVal: ''\n    },\n    exports.manifestOfftubeSourcesCam,\n    exports.manifestOfftubeSourcesRM,\n    exports.manifestOfftubeSourcesABMediaPlayers,\n    exports.manifestOfftubeStudioMics,\n    {\n        id: 'ABPlaybackDebugLogging',\n        name: 'Media players selection debug logging',\n        description: 'Enable debug logging for A/B media player selection',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n        required: false,\n        defaultVal: false\n    },\n    {\n        id: 'AtemSource.DSK1F',\n        name: 'ATEM DSK1 Fill',\n        description: 'ATEM vision mixer input for DSK1 Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 8\n    },\n    {\n        id: 'AtemSource.DSK1K',\n        name: 'ATEM DSK1 Key',\n        description: 'ATEM vision mixer input for DSK1 Key',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 7\n    },\n    {\n        id: 'AtemSource.JingleFill',\n        name: 'Jingle Fill Source',\n        description: 'ATEM vision mixer input for Jingle Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 8\n    },\n    {\n        id: 'AtemSource.JingleKey',\n        name: 'Jingle Key Source',\n        description: 'ATEM vision mixer input for Jingle Source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 7\n    },\n    {\n        id: 'AtemSettings.CCGClip',\n        name: 'CasparCG keyer clip',\n        description: 'CasparCG keyer clip',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 50.0\n    },\n    {\n        id: 'AtemSettings.CCGGain',\n        name: 'CasparCG keyer gain',\n        description: 'CasparCG keyer gain',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 12.5\n    },\n    {\n        id: 'AtemSource.SplitArtF',\n        name: 'ATEM Split Screen Art Fill',\n        description: 'ATEM vision mixer input for Split Screen Art Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 10\n    },\n    {\n        id: 'AtemSource.SplitArtK',\n        name: 'ATEM Split Screen Art Key',\n        description: 'ATEM vision mixer input for Split Screen Art Key',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 9\n    },\n    {\n        id: 'AtemSource.SplitBackground',\n        name: 'ATEM split screen background loop source',\n        description: 'ATEM source for mos full-frame grafik background source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 11\n    },\n    {\n        id: 'AtemSource.GFXFull',\n        name: 'Full graphics source',\n        description: 'ATEM source for full graphics',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 7\n    },\n    {\n        id: 'AtemSource.Loop',\n        name: 'Studio screen loop graphics source',\n        description: 'ATEM source for loop for studio screen',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 12\n    },\n    {\n        id: 'AtemSource.Default',\n        name: 'ATEM Default source',\n        description: 'ATEM vision mixer default source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: atem_1.AtemSourceIndex.Col1\n    },\n    {\n        id: 'AtemSource.Continuity',\n        name: 'ATEM continuity source',\n        description: 'ATEM input for continuity',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: atem_1.AtemSourceIndex.Col2\n    },\n    {\n        id: 'AudioBedSettings.fadeIn',\n        name: 'Bed Fade In',\n        description: 'Default fade in duration for audio beds',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 25\n    },\n    {\n        id: 'AudioBedSettings.volume',\n        name: 'Bed Volume',\n        description: 'Volume (0 - 100)',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 80\n    },\n    {\n        id: 'AudioBedSettings.fadeOut',\n        name: 'Bed Fade Out',\n        description: 'Default fade out duration for audio beds',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 25\n    },\n    {\n        id: 'CasparPrerollDuration',\n        name: 'Caspar preroll duration',\n        description: 'ms of preroll before switching to caspar',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 200 // 5 frames\n    },\n    {\n        id: 'MaximumPartDuration',\n        name: 'Maximum Part Duration',\n        description: 'Maximum duration (ms) to give parts in UI',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 10000\n    },\n    {\n        id: 'DefaultPartDuration',\n        name: 'Default Part Duration',\n        description: 'Duration to give parts by default',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 4000\n    }\n];\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst util_1 = __webpack_require__(80);\nconst variants_defaults_1 = __webpack_require__(88);\n/**\n * Old layers, used here for reference. Should not be used anywhere else.\n */\nvar VizLLayer;\n(function (VizLLayer) {\n    VizLLayer[\"VizLLayerOverlay\"] = \"viz_layer_overlay\";\n    VizLLayer[\"VizLLayerOverlayIdent\"] = \"viz_layer_overlay_ident\";\n    VizLLayer[\"VizLLayerOverlayTopt\"] = \"viz_layer_overlay_topt\";\n    VizLLayer[\"VizLLayerOverlayLower\"] = \"viz_layer_overlay_lower\";\n    VizLLayer[\"VizLLayerOverlayHeadline\"] = \"viz_layer_overlay_headline\";\n    VizLLayer[\"VizLLayerOverlayTema\"] = \"viz_layer_overlay_tema\";\n    VizLLayer[\"VizLLayerPilot\"] = \"viz_layer_pilot\";\n    VizLLayer[\"VizLLayerPilotOverlay\"] = \"viz_layer_pilot_overlay\";\n    VizLLayer[\"VizLLayerDesign\"] = \"viz_layer_design\";\n    VizLLayer[\"VizLLayerAdLibs\"] = \"viz_layer_adlibs\";\n    VizLLayer[\"VizLLayerWall\"] = \"viz_layer_wall\";\n})(VizLLayer || (VizLLayer = {}));\nexports.remapVizLLayer = new Map([\n    [VizLLayer.VizLLayerOverlay, tv2_common_1.GraphicLLayer.GraphicLLayerOverlay],\n    [VizLLayer.VizLLayerOverlayIdent, tv2_common_1.GraphicLLayer.GraphicLLayerOverlayIdent],\n    [VizLLayer.VizLLayerOverlayTopt, tv2_common_1.GraphicLLayer.GraphicLLayerOverlayIdent],\n    [VizLLayer.VizLLayerOverlayLower, tv2_common_1.GraphicLLayer.GraphicLLayerOverlayLower],\n    [VizLLayer.VizLLayerOverlayHeadline, tv2_common_1.GraphicLLayer.GraphicLLayerOverlayHeadline],\n    [VizLLayer.VizLLayerOverlayTema, tv2_common_1.GraphicLLayer.GraphicLLayerOverlayTema],\n    [VizLLayer.VizLLayerPilot, tv2_common_1.GraphicLLayer.GraphicLLayerPilot],\n    [VizLLayer.VizLLayerPilotOverlay, tv2_common_1.GraphicLLayer.GraphicLLayerPilotOverlay],\n    [VizLLayer.VizLLayerDesign, tv2_common_1.GraphicLLayer.GraphicLLayerDesign],\n    [VizLLayer.VizLLayerAdLibs, tv2_common_1.GraphicLLayer.GraphicLLayerAdLibs],\n    [VizLLayer.VizLLayerWall, tv2_common_1.GraphicLLayer.GraphicLLayerWall]\n]);\nexports.remapVizDOvl = new Map([['viz-d-ovl', 'OVL1']]);\n/**\n * Versions:\n * 0.1.0: Core 0.24.0\n */\nexports.showStyleMigrations = tv2_common_1.literal([\n    // Fill in any layers that did not exist before\n    // Note: These should only be run as the very final step of all migrations. otherwise they will add items too early, and confuse old migrations\n    ...variants_defaults_1.getCreateVariantMigrationSteps(),\n    ...util_1.getSourceLayerDefaultsMigrationSteps(\"0.1.0+v1.1.9\"),\n    ...util_1.getOutputLayerDefaultsMigrationSteps(\"0.1.0+v1.1.9\"),\n    ...util_1.getRuntimeArgumentsDefaultsMigrationSteps(\"0.1.0+v1.1.9\"),\n    ...util_1.remapTableColumnValues(\"0.1.0+v1.1.9\", 'GFXTemplates', 'LayerMapping', exports.remapVizLLayer)\n]);\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nexports.default = tv2_common_1.literal([\n    {\n        _id: 'overlay',\n        name: 'OVERLAY',\n        isPGM: false,\n        _rank: 10,\n        isDefaultCollapsed: true\n    },\n    {\n        _id: 'jingle',\n        name: 'JINGLE',\n        isPGM: false,\n        _rank: 19\n    },\n    {\n        _id: 'pgm',\n        name: 'PGM',\n        isPGM: true,\n        _rank: 20,\n        isFlattened: true\n    },\n    {\n        _id: 'selectedAdlib',\n        name: 'ADLIB',\n        isPGM: false,\n        _rank: 30,\n        isDefaultCollapsed: true\n    },\n    {\n        _id: 'manus',\n        name: 'MANUS',\n        isPGM: false,\n        _rank: 23\n    },\n    {\n        _id: 'sec',\n        name: 'SEC',\n        isPGM: false,\n        _rank: 40,\n        isDefaultCollapsed: true\n    },\n    {\n        _id: 'aux',\n        name: 'AUX',\n        isPGM: false,\n        _rank: 50,\n        isDefaultCollapsed: true\n    }\n]);\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nexports.default = tv2_common_1.literal([\n    {\n        _id: 'x-mix-10',\n        label: 'Dissolve 10f',\n        hotkeys: 'x',\n        property: 'transition-mix',\n        value: '10'\n    }\n]);\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(10);\n// OVERLAY group\nconst OVERLAY = [\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsIdent,\n        _rank: 10,\n        name: 'Ident',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsIdentPersistent,\n        _rank: 10,\n        name: 'Ident Persistent',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsTop,\n        _rank: 20,\n        name: 'Top',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsLower,\n        _rank: 30,\n        name: 'Bund',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsHeadline,\n        _rank: 40,\n        name: 'Headline',\n        abbreviation: 'G',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: true,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsOverlay,\n        _rank: 50,\n        name: 'Overlay',\n        abbreviation: 'O',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsTLF,\n        _rank: 60,\n        name: 'Telefon',\n        abbreviation: 'TLF',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmGraphicsTema,\n        _rank: 70,\n        name: 'Tema',\n        abbreviation: 'T',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.WallGraphics,\n        _rank: 80,\n        name: 'Wall',\n        abbreviation: 'Wall',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// JINGLE group\nconst JINGLE = [\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmJingle,\n        _rank: 10,\n        name: 'Jingle',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.TRANSITION,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// PGM group\nconst PGM = [\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmSourceSelect,\n        _rank: 0,\n        name: 'Source Select',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.METADATA,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmCam,\n        _rank: 0,\n        name: 'Kam',\n        abbreviation: 'K',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'f1,shift+ctrl+f1',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmLive,\n        _rank: 0,\n        name: 'Live',\n        abbreviation: 'L',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE,\n        exclusiveGroup: 'me2',\n        isRemoteInput: true,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '1,2,3',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: true,\n        stickyOriginalOnly: true,\n        activateStickyKeyboardHotkey: 'ctrl+shift+alt+b',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVE,\n        _rank: 0,\n        name: 'DVE',\n        abbreviation: 'D',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.SPLITS,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: true,\n        stickyOriginalOnly: true,\n        activateStickyKeyboardHotkey: 'f10',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmServer,\n        _rank: 0,\n        name: 'Server',\n        abbreviation: 'S',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.VT,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmVoiceOver,\n        _rank: 0,\n        name: 'Voice Over',\n        abbreviation: 'VO',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.LIVE_SPEAK,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmFull,\n        _rank: 0,\n        name: 'Full',\n        abbreviation: 'Full',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: 'me2',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVEBackground,\n        _rank: 50,\n        name: 'DVE Background',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.METADATA,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmContinuity,\n        _rank: 50,\n        name: 'CONTINUITY',\n        abbreviation: 'CONTINUITY',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.METADATA,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVEBox1,\n        _rank: 0,\n        name: 'DVE INP1',\n        abbreviation: 'DB1',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'shift+f1,shift+f2,shift+f3,shift+f4,shift+f5,shift+1,shift+2,shift+3,shift+4,shift+5,shift+6,shift+7,shift+8,shift+9,shift+0,shift+e,shift+d',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVEBox2,\n        _rank: 0,\n        name: 'DVE INP2',\n        abbreviation: 'DB2',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'ctrl+f1,ctrl+f2,ctrl+f3,ctrl+shift+alt+f4,ctrl+f5,ctrl+1,ctrl+2,ctrl+3,ctrl+4,ctrl+5,ctrl+6,ctrl+7,ctrl+8,ctrl+9,ctrl+0,ctrl+e,ctrl+d',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVEBox3,\n        _rank: 0,\n        name: 'DVE INP3',\n        abbreviation: 'DB3',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmDVEBox4,\n        _rank: 0,\n        name: 'DVE INP4',\n        abbreviation: 'DB4',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: true,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// MANUS group\nconst MANUS = [\n    {\n        _id: layers_1.OffTubeSourceLayer.PgmScript,\n        _rank: 20,\n        name: 'Manus',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.SCRIPT,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\n// SEC group\nconst SEC = [];\n// SELECTED_ADLIB group\nconst SELECTED_ADLIB = [\n    {\n        _id: layers_1.OffTubeSourceLayer.SelectedAdLibDVE,\n        _rank: 0,\n        name: 'DVE',\n        abbreviation: 'D',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.SPLITS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'm,comma,.,n',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: true,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.SelectedAdLibServer,\n        _rank: 0,\n        name: 'Server',\n        abbreviation: 'S',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.VT,\n        exclusiveGroup: 'server',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: true,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.SelectedAdLibVoiceOver,\n        _rank: 0,\n        name: 'Voice Over',\n        abbreviation: 'VO',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.LIVE_SPEAK,\n        exclusiveGroup: 'server',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: true,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    },\n    {\n        _id: layers_1.OffTubeSourceLayer.SelectedAdlibGraphicsFull,\n        _rank: 0,\n        name: 'GFX Full',\n        abbreviation: 'GFX Full',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: '',\n        clearKeyboardHotkey: '',\n        assignHotkeysToGlobalAdlibs: false,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: true,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: true\n    }\n];\n// AUX group\nconst AUX = [\n    {\n        _id: layers_1.OffTubeSourceLayer.AuxStudioScreen,\n        _rank: 20,\n        name: 'Studio',\n        abbreviation: '',\n        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.UNKNOWN,\n        exclusiveGroup: '',\n        isRemoteInput: false,\n        isGuestInput: false,\n        activateKeyboardHotkeys: 'shift+ctrl+1,shift+ctrl+2,shift+ctrl+3,shift+ctrl+4,shift+ctrl+5,shift+ctrl+6,shift+ctrl+7,shift+ctrl+8,shift+ctrl+9,shift+ctrl+0,shift+ctrl+e',\n        clearKeyboardHotkey: ',',\n        assignHotkeysToGlobalAdlibs: true,\n        isSticky: false,\n        activateStickyKeyboardHotkey: '',\n        isQueueable: false,\n        isHidden: false,\n        allowDisable: false,\n        onPresenterScreen: false\n    }\n];\nexports.default = tv2_common_1.literal([...OVERLAY, ...JINGLE, ...PGM, ...MANUS, ...SEC, ...SELECTED_ADLIB, ...AUX]);\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nexports.showVariants = tv2_common_1.literal({\n    oddasat: {\n        name: 'Main'\n    }\n});\nfunction getCreateVariantMigrationSteps() {\n    return _.keys(exports.showVariants).map(key => {\n        return tv2_common_1.literal({\n            id: `variant.${key}`,\n            version: \"0.1.0+v1.1.9\",\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                const variant = context.getVariant(key);\n                if (!variant) {\n                    return `Variant \"${key}\" doesn't exist`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                const variant = context.getVariant(key);\n                if (!variant) {\n                    const region = exports.showVariants[key];\n                    context.insertVariant(key, {\n                        name: region.name\n                    });\n                    // Set/update config fields here\n                    // context.setVariantConfig(key, 'RegionCode', region.regionCode)\n                }\n            }\n        });\n    });\n}\nexports.getCreateVariantMigrationSteps = getCreateVariantMigrationSteps;\n\n\n/***/ }),\n/* 89 */,\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory){\n  'use strict';\n\n  /*istanbul ignore next:cant test*/\n  if ( true && typeof module.exports === 'object') {\n    module.exports = factory();\n  } else if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this, function(){\n  'use strict';\n\n  var toStr = Object.prototype.toString;\n  function hasOwnProperty(obj, prop) {\n    if(obj == null) {\n      return false\n    }\n    //to handle objects with null prototypes (too edge case?)\n    return Object.prototype.hasOwnProperty.call(obj, prop)\n  }\n\n  function isEmpty(value){\n    if (!value) {\n      return true;\n    }\n    if (isArray(value) && value.length === 0) {\n        return true;\n    } else if (typeof value !== 'string') {\n        for (var i in value) {\n            if (hasOwnProperty(value, i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n  }\n\n  function toString(type){\n    return toStr.call(type);\n  }\n\n  function isObject(obj){\n    return typeof obj === 'object' && toString(obj) === \"[object Object]\";\n  }\n\n  var isArray = Array.isArray || function(obj){\n    /*istanbul ignore next:cant test*/\n    return toStr.call(obj) === '[object Array]';\n  }\n\n  function isBoolean(obj){\n    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\n  }\n\n  function getKey(key){\n    var intKey = parseInt(key);\n    if (intKey.toString() === key) {\n      return intKey;\n    }\n    return key;\n  }\n\n  function factory(options) {\n    options = options || {}\n\n    var objectPath = function(obj) {\n      return Object.keys(objectPath).reduce(function(proxy, prop) {\n        if(prop === 'create') {\n          return proxy;\n        }\n\n        /*istanbul ignore else*/\n        if (typeof objectPath[prop] === 'function') {\n          proxy[prop] = objectPath[prop].bind(objectPath, obj);\n        }\n\n        return proxy;\n      }, {});\n    };\n\n    function hasShallowProperty(obj, prop) {\n      return (options.includeInheritedProps || (typeof prop === 'number' && Array.isArray(obj)) || hasOwnProperty(obj, prop))\n    }\n\n    function getShallowProperty(obj, prop) {\n      if (hasShallowProperty(obj, prop)) {\n        return obj[prop];\n      }\n    }\n\n    function set(obj, path, value, doNotReplace){\n      if (typeof path === 'number') {\n        path = [path];\n      }\n      if (!path || path.length === 0) {\n        return obj;\n      }\n      if (typeof path === 'string') {\n        return set(obj, path.split('.').map(getKey), value, doNotReplace);\n      }\n      var currentPath = path[0];\n      var currentValue = getShallowProperty(obj, currentPath);\n      if (path.length === 1) {\n        if (currentValue === void 0 || !doNotReplace) {\n          obj[currentPath] = value;\n        }\n        return currentValue;\n      }\n\n      if (currentValue === void 0) {\n        //check if we assume an array\n        if(typeof path[1] === 'number') {\n          obj[currentPath] = [];\n        } else {\n          obj[currentPath] = {};\n        }\n      }\n\n      return set(obj[currentPath], path.slice(1), value, doNotReplace);\n    }\n\n    objectPath.has = function (obj, path) {\n      if (typeof path === 'number') {\n        path = [path];\n      } else if (typeof path === 'string') {\n        path = path.split('.');\n      }\n\n      if (!path || path.length === 0) {\n        return !!obj;\n      }\n\n      for (var i = 0; i < path.length; i++) {\n        var j = getKey(path[i]);\n\n        if((typeof j === 'number' && isArray(obj) && j < obj.length) ||\n          (options.includeInheritedProps ? (j in Object(obj)) : hasOwnProperty(obj, j))) {\n          obj = obj[j];\n        } else {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    objectPath.ensureExists = function (obj, path, value){\n      return set(obj, path, value, true);\n    };\n\n    objectPath.set = function (obj, path, value, doNotReplace){\n      return set(obj, path, value, doNotReplace);\n    };\n\n    objectPath.insert = function (obj, path, value, at){\n      var arr = objectPath.get(obj, path);\n      at = ~~at;\n      if (!isArray(arr)) {\n        arr = [];\n        objectPath.set(obj, path, arr);\n      }\n      arr.splice(at, 0, value);\n    };\n\n    objectPath.empty = function(obj, path) {\n      if (isEmpty(path)) {\n        return void 0;\n      }\n      if (obj == null) {\n        return void 0;\n      }\n\n      var value, i;\n      if (!(value = objectPath.get(obj, path))) {\n        return void 0;\n      }\n\n      if (typeof value === 'string') {\n        return objectPath.set(obj, path, '');\n      } else if (isBoolean(value)) {\n        return objectPath.set(obj, path, false);\n      } else if (typeof value === 'number') {\n        return objectPath.set(obj, path, 0);\n      } else if (isArray(value)) {\n        value.length = 0;\n      } else if (isObject(value)) {\n        for (i in value) {\n          if (hasShallowProperty(value, i)) {\n            delete value[i];\n          }\n        }\n      } else {\n        return objectPath.set(obj, path, null);\n      }\n    };\n\n    objectPath.push = function (obj, path /*, values */){\n      var arr = objectPath.get(obj, path);\n      if (!isArray(arr)) {\n        arr = [];\n        objectPath.set(obj, path, arr);\n      }\n\n      arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\n    };\n\n    objectPath.coalesce = function (obj, paths, defaultValue) {\n      var value;\n\n      for (var i = 0, len = paths.length; i < len; i++) {\n        if ((value = objectPath.get(obj, paths[i])) !== void 0) {\n          return value;\n        }\n      }\n\n      return defaultValue;\n    };\n\n    objectPath.get = function (obj, path, defaultValue){\n      if (typeof path === 'number') {\n        path = [path];\n      }\n      if (!path || path.length === 0) {\n        return obj;\n      }\n      if (obj == null) {\n        return defaultValue;\n      }\n      if (typeof path === 'string') {\n        return objectPath.get(obj, path.split('.'), defaultValue);\n      }\n\n      var currentPath = getKey(path[0]);\n      var nextObj = getShallowProperty(obj, currentPath)\n      if (nextObj === void 0) {\n        return defaultValue;\n      }\n\n      if (path.length === 1) {\n        return nextObj;\n      }\n\n      return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\n    };\n\n    objectPath.del = function del(obj, path) {\n      if (typeof path === 'number') {\n        path = [path];\n      }\n\n      if (obj == null) {\n        return obj;\n      }\n\n      if (isEmpty(path)) {\n        return obj;\n      }\n      if(typeof path === 'string') {\n        return objectPath.del(obj, path.split('.'));\n      }\n\n      var currentPath = getKey(path[0]);\n      if (!hasShallowProperty(obj, currentPath)) {\n        return obj;\n      }\n\n      if(path.length === 1) {\n        if (isArray(obj)) {\n          obj.splice(currentPath, 1);\n        } else {\n          delete obj[currentPath];\n        }\n      } else {\n        return objectPath.del(obj[currentPath], path.slice(1));\n      }\n\n      return obj;\n    }\n\n    return objectPath;\n  }\n\n  var mod = factory();\n  mod.create = factory;\n  mod.withInheritedProps = factory({includeInheritedProps: true})\n  return mod;\n});\n\n\n/***/ }),\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst layers_1 = __webpack_require__(9);\nexports.sisyfosChannels = {\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_1_ST_A]: {\n        isPgm: 0,\n        label: 'VRT 1'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_2_ST_A]: {\n        isPgm: 0,\n        label: 'VRT 2'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_3_ST_A]: {\n        isPgm: 0,\n        label: 'VRT 3'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceLive_1]: {\n        isPgm: 0,\n        label: 'LIVE 1'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceLive_2]: {\n        isPgm: 0,\n        label: 'LIVE 2'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Stereo]: {\n        isPgm: 0,\n        label: 'WF ST'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Surround]: {\n        isPgm: 0,\n        label: 'WF 5.1'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceServerA]: {\n        isPgm: 0,\n        label: 'Server A'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceServerB]: {\n        isPgm: 0,\n        label: 'Server B'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceJingle]: {\n        isPgm: 0,\n        label: 'JINGLE'\n    }\n};\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst config_1 = __webpack_require__(152);\nconst config_manifests_1 = __webpack_require__(100);\nfunction extendWithShowStyleConfig(context, baseConfig, values) {\n    const config = tv2_common_1.literal(Object.assign(Object.assign({}, baseConfig), { showStyle: {} }));\n    config_1.applyToConfig(context, config.showStyle, config_manifests_1.showStyleConfigManifest, 'ShowStyle', values);\n    return config;\n}\nfunction defaultConfig(context) {\n    return extendWithShowStyleConfig(context, config_1.defaultStudioConfig(context), {});\n}\nexports.defaultConfig = defaultConfig;\nfunction parseConfig(context) {\n    return extendWithShowStyleConfig(context, config_1.parseStudioConfig(context), context.getShowStyleConfig());\n}\nexports.parseConfig = parseConfig;\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(9);\nconst layers_2 = __webpack_require__(10);\nexports.boxLayers = {\n    INP1: layers_2.OffTubeSourceLayer.PgmDVEBox1,\n    INP2: layers_2.OffTubeSourceLayer.PgmDVEBox2,\n    INP3: layers_2.OffTubeSourceLayer.PgmDVEBox3,\n    INP4: layers_2.OffTubeSourceLayer.PgmDVEBox4\n};\nexports.boxMappings = [\n    layers_1.OfftubeAtemLLayer.AtemSSrcBox1,\n    layers_1.OfftubeAtemLLayer.AtemSSrcBox2,\n    layers_1.OfftubeAtemLLayer.AtemSSrcBox3,\n    layers_1.OfftubeAtemLLayer.AtemSSrcBox4\n];\nexports.OFFTUBE_DVE_GENERATOR_OPTIONS = {\n    dveLayers: {\n        ATEM: {\n            SSrcDefault: layers_1.OfftubeAtemLLayer.AtemSSrcDefault,\n            SSrcArt: layers_1.OfftubeAtemLLayer.AtemSSrcArt,\n            MEProgram: layers_1.OfftubeAtemLLayer.AtemMEClean\n        },\n        CASPAR: {\n            CGDVEKey: layers_1.OfftubeCasparLLayer.CasparCGDVEKey,\n            CGDVEFrame: layers_1.OfftubeCasparLLayer.CasparCGDVEFrame,\n            CGDVETemplate: layers_1.OfftubeCasparLLayer.CasparCGDVETemplate\n        },\n        SisyfosLLayer: {\n            ClipPending: layers_1.OfftubeSisyfosLLayer.SisyfosSourceClipPending\n        },\n        CasparLLayer: {\n            ClipPending: layers_1.OfftubeCasparLLayer.CasparPlayerClipPending\n        }\n    },\n    dveTimelineGenerators: {\n        GetSisyfosTimelineObjForCamera: () => [],\n        GetSisyfosTimelineObjForEkstern: () => [],\n        GetLayersForEkstern: () => [] // TODO\n    },\n    boxLayers: exports.boxLayers,\n    boxMappings: exports.boxMappings,\n    AUDIO_LAYERS: [],\n    EXCLUDED_LAYERS: [] // TODO\n};\nfunction OfftubeMakeContentDVE(context, config, partDefinition, parsedCue, dveConfig, addClass, adlib) {\n    return tv2_common_1.MakeContentDVEBase(context, config, partDefinition, parsedCue, dveConfig, exports.OFFTUBE_DVE_GENERATOR_OPTIONS, addClass, adlib);\n}\nexports.OfftubeMakeContentDVE = OfftubeMakeContentDVE;\n\n\n/***/ }),\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nexports.showStyleConfigManifest = [\n    {\n        id: 'CasparCGLoadingClip',\n        name: 'CasparCG Loading Clip',\n        description: 'Clip to play when media is loading',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        defaultVal: 'LoadingLoop',\n        required: true\n    },\n    {\n        id: 'DVEStyles',\n        name: 'DVE Layouts',\n        description: '',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n        required: false,\n        defaultVal: [\n            {\n                _id: '',\n                DVEName: '',\n                DVEInputs: '',\n                DVEJSON: '{}',\n                DVEGraphicsTemplate: '',\n                DVEGraphicsTemplateJSON: '{}',\n                DVEGraphicsKey: '',\n                DVEGraphicsFrame: ''\n            }\n        ],\n        columns: [\n            {\n                id: 'DVEName',\n                name: 'DVE name',\n                description: 'The name as it will appear in iNews',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 0\n            },\n            {\n                id: 'DVEInputs',\n                name: 'Box inputs',\n                description: 'I.e.: 1:INP1;2:INP3; as an example to chose which ATEM boxes to assign iNews inputs to',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '1:INP1;2:INP2;3:INP3;4:INP4',\n                rank: 1\n            },\n            {\n                id: 'DVEJSON',\n                name: 'DVE config',\n                description: 'DVE config pulled from ATEM',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 2\n            },\n            {\n                id: 'DVEGraphicsTemplate',\n                name: 'CasparCG template',\n                description: 'File name (path) for CasparCG overlay template (locators)',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: 'dve/locators',\n                rank: 3\n            },\n            {\n                id: 'DVEGraphicsTemplateJSON',\n                name: 'CasparCG template config',\n                description: 'Position (and style) data for the boxes in the CasparCG template',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 4\n            },\n            {\n                id: 'DVEGraphicsKey',\n                name: 'CasparCG key file',\n                description: 'Key file for DVE',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 5\n            },\n            {\n                id: 'DVEGraphicsFrame',\n                name: 'CasparCG frame file',\n                description: 'Frames file for caspar',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 6\n            }\n        ]\n    },\n    {\n        /*\n        Graphic template setup\n        Grafik template (viz)\n        Source layer\n        Layer mapping\n        inews code\n        inews name\n        destination\tdefault out (default, S, B, O)\n        var 1 name\n        var 2 name\n        note\n        */\n        id: 'GFXTemplates',\n        name: 'GFX Templates',\n        description: 'This table can contain info in two ways. Things marked (**) are always required. If you want to do the mapping from iNews-code, then all (*)-elements are aslo required. VizTemplate is what the graphic is called in viz. Source layer is the ID of the Sofie Source layer in the UI (i.e. \"studio0_graphicsTema\"). Layer mapping is the Sofie studio layer mapping (i.e \"viz_layer_tema\").  iNews command can be something like \"KG=\", then iNews Name is the thing that follows in iNes i.e. \"ident_nyhederne\"',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n        required: false,\n        defaultVal: [\n            {\n                _id: '',\n                VizTemplate: '',\n                SourceLayer: '',\n                LayerMapping: '',\n                INewsCode: '',\n                INewsName: '',\n                VizDestination: '',\n                OutType: '',\n                Argument1: '',\n                Argument2: '',\n                IsDesign: false\n            }\n        ],\n        columns: [\n            {\n                id: 'INewsCode',\n                name: 'iNews Command (*)',\n                description: 'The code as it will appear in iNews',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: false,\n                defaultVal: '',\n                rank: 0\n            },\n            {\n                id: 'INewsName',\n                name: 'iNews Name (*)',\n                description: 'The name after the code',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: false,\n                defaultVal: '',\n                rank: 1\n            },\n            {\n                id: 'VizTemplate',\n                name: 'Viz Template Name (**)',\n                description: 'The name of the Viz Template',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 2\n            },\n            {\n                id: 'VizDestination',\n                name: 'Viz Destination (*)',\n                description: 'The name of the Viz Engine',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: false,\n                defaultVal: '',\n                rank: 3\n            },\n            {\n                id: 'OutType',\n                name: 'Out type',\n                description: 'The type of out, none follow timecode, S stays on to ??, B stays on to ??, O stays on to ??',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: false,\n                defaultVal: '',\n                rank: 4\n            },\n            {\n                id: 'IsDesign',\n                name: 'Changes Design',\n                description: 'Whether this cue changes the design',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n                required: false,\n                defaultVal: false,\n                rank: 5\n            },\n            {\n                id: 'SourceLayer',\n                name: 'Source layer (**)',\n                description: 'The ID of the source layer to place the piece on in Sofie UI',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.SOURCE_LAYERS,\n                multiple: false,\n                required: true,\n                defaultVal: '',\n                rank: 6\n            },\n            {\n                id: 'LayerMapping',\n                name: 'Layer mapping (**)',\n                description: 'The Sofie Layer mapping to use in playback. This will ensure proper graphic transition logic by matching the graphic layers.',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n                filters: {\n                    deviceTypes: [timeline_state_resolver_types_1.DeviceType.CASPARCG]\n                },\n                multiple: false,\n                required: true,\n                defaultVal: '',\n                rank: 7\n            }\n        ]\n    },\n    {\n        /*\n        Wipes Config\n        Effekt number\n        Clip name\n        Alpha at start\n        Alpha at end\n        */\n        id: 'WipesConfig',\n        name: 'Wipes Configuration',\n        description: 'Wipes effekts configuration',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n        required: false,\n        defaultVal: [\n            {\n                _id: '',\n                EffektNumber: 0,\n                ClipName: '',\n                Duration: 0,\n                StartAlpha: 0,\n                EndAlpha: 0\n            }\n        ],\n        columns: [\n            {\n                id: 'EffektNumber',\n                name: 'Effekt Number',\n                description: 'The Effect Number',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 0\n            },\n            {\n                id: 'ClipName',\n                name: 'Clip Name',\n                description: 'The name of the wipe clip',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 1\n            },\n            {\n                id: 'Duration',\n                name: 'Effekt Duration',\n                description: 'Duration of the effekt',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 2\n            },\n            {\n                id: 'StartAlpha',\n                name: 'Alpha at Start',\n                description: 'Number of frames of alpha at start',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 3\n            },\n            {\n                id: 'EndAlpha',\n                name: 'Alpha at End',\n                description: 'Number of frames of alpha at end',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 4\n            }\n        ]\n    },\n    {\n        /*\n        Breaker Config\n        Effekt number\n        Clip name\n        Alpha at start\n        Alpha at end\n        */\n        id: 'BreakerConfig',\n        name: 'Breaker Configuration',\n        description: 'Clip name is the clip name without file extension. Duration is the length of the file, including trailing audio. Alpha start is the number of frames from the first frame and until the jingle covers the full frame. The alpha end is how many frames from the alpha starts fading out, until the very end of the file.',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n        required: false,\n        defaultVal: [\n            {\n                _id: '',\n                BreakerName: '',\n                ClipName: '',\n                Duration: 0,\n                StartAlpha: 0,\n                EndAlpha: 0,\n                Autonext: true\n            }\n        ],\n        columns: [\n            {\n                id: 'BreakerName',\n                name: 'Breaker name',\n                description: 'Breaker name as typed in iNews',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 0\n            },\n            {\n                id: 'ClipName',\n                name: 'Clip Name',\n                description: 'The name of the breaker clip to play',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 1\n            },\n            {\n                id: 'Duration',\n                name: 'Effekt Duration',\n                description: 'Duration of the effekt',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 2\n            },\n            {\n                id: 'StartAlpha',\n                name: 'Alpha at Start',\n                description: 'Number of frames of alpha at start',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 3\n            },\n            {\n                id: 'EndAlpha',\n                name: 'Alpha at End',\n                description: 'Number of frames of alpha at end',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 0,\n                rank: 4\n            },\n            {\n                id: 'Autonext',\n                name: 'Autonext',\n                description: '',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n                required: true,\n                defaultVal: true,\n                rank: 5\n            }\n        ]\n    },\n    {\n        id: 'DefaultTemplateDuration',\n        name: 'Default Template Duration',\n        description: 'Default Template Duration',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: true,\n        defaultVal: 4\n    },\n    {\n        /*\n        LYD Mappings\n        iNews Name\n        File Name\n        */\n        id: 'LYDConfig',\n        name: 'LYD Config',\n        description: 'Map LYD iNews names to file names',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n        required: false,\n        defaultVal: [\n            {\n                _id: '',\n                INewsName: '',\n                FileName: ''\n            }\n        ],\n        columns: [\n            {\n                id: 'INewsName',\n                name: 'iNews Name',\n                description: 'Name of LYD as in iNews',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 0\n            },\n            {\n                id: 'FileName',\n                name: 'File Name',\n                description: 'The name of the LYD file',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n                required: true,\n                defaultVal: '',\n                rank: 1\n            },\n            {\n                id: 'FadeIn',\n                name: 'Fade In',\n                description: 'ms duration to fade in file',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 1000,\n                rank: 2\n            },\n            {\n                id: 'FadeOut',\n                name: 'Fade Out',\n                description: 'ms duration to fade out file',\n                type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n                required: true,\n                defaultVal: 1000,\n                rank: 3\n            }\n        ]\n    }\n];\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(9);\nexports.STUDIO_MICS = [\n    layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_1_ST_A,\n    layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_2_ST_A,\n    layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_3_ST_A\n];\nexports.LIVE_AUDIO = []; // TODO\nexports.STICKY_LAYERS = []; // TODO\nfunction GetSisyfosTimelineObjForCamera(sourceType, enable) {\n    if (!enable) {\n        enable = { start: 0 };\n    }\n    const audioTimeline = [];\n    const useMic = !sourceType.match(/^(?:KAM|CAM)(?:ERA)? (.+) minus mic(.*)$/i);\n    const camName = sourceType.match(/^(?:KAM|CAM)(?:ERA)? (.+)$/i);\n    if ((useMic && camName) || !!sourceType.match(/server|telefon|full|evs/i)) {\n        audioTimeline.push(...exports.STUDIO_MICS.map(layer => {\n            return tv2_common_1.literal({\n                id: '',\n                enable: enable ? enable : { start: 0 },\n                priority: 1,\n                layer,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 1\n                }\n            });\n        }));\n    }\n    return audioTimeline;\n}\nexports.GetSisyfosTimelineObjForCamera = GetSisyfosTimelineObjForCamera;\n// export function GetLayersForEkstern(context: NotesContext, sources: SourceInfo[], sourceType: string) {\n// \tconst eksternProps = sourceType.match(/^(?:LIVE|SKYPE) ([^\\s]+)(?: (.+))?$/i)\n// \tlet eksternLayers: string[] = []\n// \tif (eksternProps) {\n// \t\tconst source = eksternProps[1]\n// \t\tif (source) {\n// \t\t\tswitch (source) {\n// \t\t\t\tcase '1':\n// \t\t\t\t\teksternLayers = [OfftubeSisyfosLLayer.SisyfosSourceLive_1]\n// \t\t\t\t\tbreak\n// \t\t\t\tcase '2':\n// \t\t\t\t\teksternLayers = [OfftubeSisyfosLLayer.SisyfosSourceLive_2]\n// \t\t\t\t\tbreak\n// \t\t\t\tcase '3':\n// \t\t\t\t\teksternLayers = [\n// \t\t\t\t\t\tOfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Stereo,\n// \t\t\t\t\t\tOfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Surround\n// \t\t\t\t\t]\n// \t\t\t\t\tbreak\n// \t\t\t}\n// \t\t}\n// \t\tconst sourceInfo = FindSourceInfoStrict(context, sources, SourceLayerType.REMOTE, sourceType)\n// \t\tif (sourceInfo && sourceInfo.sisyfosLayers) {\n// \t\t\teksternLayers.push(...sourceInfo.sisyfosLayers)\n// \t\t}\n// \t}\n// \treturn eksternLayers\n// }\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst layers_1 = __webpack_require__(9);\nconst layers_2 = __webpack_require__(10);\nfunction OfftubeEvaluateGrafikCaspar(config, _context, pieces, adlibPieces, _partid, parsedCue, _engine, _adlib, partDefinition, isTlfPrimary, rank) {\n    let engine = _engine;\n    if (config.showStyle.GFXTemplates) {\n        const templ = config.showStyle.GFXTemplates.find(t => t.INewsName.toUpperCase() === parsedCue.template.toUpperCase() &&\n            t.INewsCode.toString()\n                .replace(/=/gi, '')\n                .toUpperCase() === parsedCue.iNewsCommand.toUpperCase());\n        if (templ) {\n            if (templ.IsDesign) {\n                return;\n            }\n            engine = tv2_common_1.TranslateEngine(templ.VizDestination);\n        }\n    }\n    const isIdentGrafik = !!parsedCue.template.match(/direkte/i);\n    if (engine === 'FULL') {\n        let adLibPiece = CreateFullAdLib(config, partDefinition, GetTemplateName(config, parsedCue), false);\n        adlibPieces.push(adLibPiece);\n        // Repeat for flow producer\n        adLibPiece = CreateFullAdLib(config, partDefinition, GetTemplateName(config, parsedCue), true);\n        adlibPieces.push(adLibPiece);\n        const piece = CreateFullPiece(config, partDefinition, GetTemplateName(config, parsedCue));\n        pieces.push(piece);\n    }\n    else {\n        // TODO: Wall\n        const adLibPiece = tv2_common_1.literal({\n            _rank: rank || 0,\n            externalId: partDefinition.externalId,\n            name: `${grafikName(config, parsedCue)}`,\n            sourceLayerId: GetSourceLayerForGrafik(config, GetTemplateName(config, parsedCue)),\n            outputLayerId: layers_2.OfftubeOutputLayers.OVERLAY,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n            tags: [tv2_constants_1.AdlibTags.ADLIB_FLOW_PRODUCER],\n            content: {\n                timelineObjects: GetCasparOverlayTimeline(config, engine, parsedCue, isIdentGrafik, partDefinition)\n            }\n        });\n        adlibPieces.push(adLibPiece);\n        const piece = tv2_common_1.literal(Object.assign(Object.assign(Object.assign(Object.assign({ _id: '', externalId: partDefinition.externalId, name: `${grafikName(config, parsedCue)}` }, (isTlfPrimary || engine === 'WALL'\n            ? { enable: { start: 0 } }\n            : {\n                enable: Object.assign({}, CreateTimingGrafik(config, parsedCue))\n            })), { sourceLayerId: GetSourceLayerForGrafik(config, GetTemplateName(config, parsedCue)), outputLayerId: layers_2.OfftubeOutputLayers.OVERLAY, infiniteMode: GetInfiniteModeForGrafik(engine, config, parsedCue, isTlfPrimary, isIdentGrafik) }), (isTlfPrimary || (parsedCue.end && parsedCue.end.infiniteMode)\n            ? {}\n            : { expectedDuration: CreateTimingGrafik(config, parsedCue).duration || GetDefaultOut(config) })), { content: {\n                timelineObjects: GetCasparOverlayTimeline(config, engine, parsedCue, isIdentGrafik, partDefinition)\n            } }));\n        pieces.push(piece);\n    }\n}\nexports.OfftubeEvaluateGrafikCaspar = OfftubeEvaluateGrafikCaspar;\nfunction GetCasparOverlayTimeline(config, engine, parsedCue, isIdentGrafik, partDefinition) {\n    return [\n        tv2_common_1.literal({\n            id: '',\n            enable: GetEnableForGrafikOfftube(engine, parsedCue, isIdentGrafik, partDefinition),\n            layer: GetTimelineLayerForGrafik(config, GetTemplateName(config, parsedCue)),\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.TEMPLATE,\n                templateType: 'html',\n                name: GetTemplateName(config, parsedCue),\n                data: tv2_common_1.literal({\n                    partialUpdate: true,\n                    rendererDisplay: 'program',\n                    slots: createContentForGraphicTemplate(GetTemplateName(config, parsedCue), parsedCue)\n                }),\n                useStopCommand: false\n            }\n        })\n    ];\n}\nexports.GetCasparOverlayTimeline = GetCasparOverlayTimeline;\nfunction createContentForGraphicTemplate(graphicName, parsedCue) {\n    switch (graphicName.toLowerCase()) {\n        // TODO: When creating new templates in the future\n        case 'arkiv':\n            return {\n                [graphicName]: {\n                    display: 'program',\n                    payload: {\n                        type: \"ARKIV\" /* ARKIV */,\n                        text: parsedCue.textFields[0]\n                    }\n                }\n            };\n        case 'billederfra_logo':\n            return {\n                [graphicName]: {\n                    display: 'program',\n                    payload: {\n                        type: \"BILLEDERFRA_LOGO\" /* BILLEDERFRA_LOGO */,\n                        logo: parsedCue.textFields[0]\n                    }\n                }\n            };\n        case 'bund':\n            return {\n                [graphicName]: {\n                    display: 'program',\n                    payload: {\n                        type: \"BUND\" /* BUND */,\n                        firstLine: parsedCue.textFields[0],\n                        secondLine: parsedCue.textFields[1]\n                    }\n                }\n            };\n        case 'direkte':\n            return {\n                [graphicName]: {\n                    display: 'program',\n                    payload: {\n                        type: \"DIREKTE\" /* DIREKTE */,\n                        location: parsedCue.textFields[0]\n                    }\n                }\n            };\n        case 'ident_nyhederne':\n            return {\n                [graphicName]: {\n                    display: 'program',\n                    payload: {\n                        type: \"IDENT\" /* IDENT */,\n                        variant: 'ident_nyhederne',\n                        text: parsedCue.textFields[0]\n                    }\n                }\n            };\n        case 'ident_news':\n            return {\n                [graphicName]: {\n                    display: 'program',\n                    payload: {\n                        type: \"IDENT\" /* IDENT */,\n                        variant: 'ident_news',\n                        text: parsedCue.textFields[0]\n                    }\n                }\n            };\n        case 'ident_tv2sport':\n            return {\n                [graphicName]: {\n                    display: 'program',\n                    payload: {\n                        type: \"IDENT\" /* IDENT */,\n                        variant: 'ident_tv2sport',\n                        text: parsedCue.textFields[0]\n                    }\n                }\n            };\n        case 'ident_blank':\n            return {\n                [graphicName]: {\n                    display: 'program',\n                    payload: {\n                        type: \"IDENT\" /* IDENT */,\n                        variant: 'ident_blank',\n                        text: parsedCue.textFields[0]\n                    }\n                }\n            };\n        case 'topt':\n            return {\n                [graphicName]: {\n                    display: 'program',\n                    payload: {\n                        type: \"TOPT\" /* TOPT */,\n                        text: parsedCue.textFields[0] // TODO: Should indexing be pulled from config?\n                    }\n                }\n            };\n        default:\n            // Unknown template\n            // Loactors are skipped right now\n            /**\n             * TODO: Maybe we could return the following, to allow for custom templates?\n             * {\n             * \t\t[graphicName]: {\n             * \t\t\tpayload: {\n             * \t\t\t\ttext: parsedCue.textFields\n             * \t\t\t}\n             * \t\t}\n             * }\n             */\n            return {};\n    }\n}\nfunction CreateFullPiece(config, partDefinition, template) {\n    return tv2_common_1.literal({\n        _id: '',\n        enable: {\n            start: 0 // TODO: Time\n        },\n        externalId: partDefinition.externalId,\n        name: `${template}`,\n        sourceLayerId: layers_2.OffTubeSourceLayer.SelectedAdlibGraphicsFull,\n        outputLayerId: layers_2.OfftubeOutputLayers.SELECTED_ADLIB,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        content: CreateFullContent(config, partDefinition, template, true)\n    });\n}\nfunction CreateFullAdLib(config, partDefinition, template, flowProducer) {\n    return tv2_common_1.literal({\n        _rank: 0,\n        externalId: partDefinition.externalId,\n        name: `${template}`,\n        sourceLayerId: flowProducer ? layers_2.OffTubeSourceLayer.PgmFull : layers_2.OffTubeSourceLayer.SelectedAdlibGraphicsFull,\n        outputLayerId: flowProducer ? layers_2.OfftubeOutputLayers.PGM : layers_2.OfftubeOutputLayers.SELECTED_ADLIB,\n        toBeQueued: true,\n        canCombineQueue: !flowProducer,\n        infiniteMode: flowProducer ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart : tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment,\n        tags: flowProducer ? ['flow_producer'] : [],\n        content: CreateFullContent(config, partDefinition, template, flowProducer)\n    });\n}\nfunction CreateFullContent(config, _partDefinition, template, flowProducer) {\n    return {\n        fileName: template,\n        path: `${config.studio.ClipSourcePath}\\\\${template}${config.studio.ClipFileExtension}`,\n        mediaFlowIds: [config.studio.MediaFlowId],\n        timelineObjects: [\n            tv2_common_1.literal({\n                id: '',\n                enable: {\n                    while: `.${tv2_constants_1.Enablers.OFFTUBE_ENABLE_FULL}`\n                },\n                priority: 100,\n                layer: layers_1.OfftubeCasparLLayer.CasparGraphicsFull,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                    file: template,\n                    loop: true,\n                    mixer: {\n                        opacity: 100\n                    }\n                }\n            }),\n            tv2_common_1.literal({\n                id: '',\n                enable: {\n                    while: `.${tv2_constants_1.Enablers.OFFTUBE_ENABLE_FULL}`\n                },\n                priority: 100,\n                layer: layers_1.OfftubeAtemLLayer.AtemMEClean,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                    me: {\n                        input: config.studio.AtemSource.GFXFull,\n                        transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                    }\n                }\n            }),\n            ...(flowProducer\n                ? [\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: {\n                            while: '1'\n                        },\n                        priority: 100,\n                        layer: layers_1.OfftubeAbstractLLayer.OfftubeAbstractLLayerPgmEnabler,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ABSTRACT\n                        },\n                        classes: [tv2_constants_1.Enablers.OFFTUBE_ENABLE_FULL]\n                    })\n                ]\n                : [])\n        ]\n    };\n}\n// TODO: All of the below was copy-pasted and then adapted from AFVD blueprints, can they be made generic?\n// TODO: Is this valid for offtubes?\nfunction GetEnableForGrafikOfftube(engine, cue, isIdentGrafik, partDefinition) {\n    if (engine === 'WALL') {\n        return {\n            while: '1'\n        };\n    }\n    if (isIdentGrafik) {\n        return {\n            while: `.${tv2_constants_1.ControlClasses.ShowIdentGraphic} & !.full`\n        };\n    }\n    if (cue.end && cue.end.infiniteMode && cue.end.infiniteMode === 'B' && partDefinition) {\n        return { while: `.${tv2_common_1.PartToParentClass('studio0', partDefinition)} & !.adlib_deparent & !.full` };\n    }\n    const timing = tv2_common_1.CreateTimingEnable(cue);\n    if (!timing.infiniteMode) {\n        return timing.enable;\n    }\n    return {\n        while: '!.full'\n    };\n}\nfunction GetInfiniteModeForGrafik(engine, config, parsedCue, isTlf, isIdent) {\n    return engine === 'WALL'\n        ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite\n        : isTlf\n            ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart\n            : isIdent\n                ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment\n                : parsedCue.end && parsedCue.end.infiniteMode\n                    ? tv2_common_1.InfiniteMode(parsedCue.end.infiniteMode, tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal)\n                    : FindInfiniteModeFromConfig(config, parsedCue);\n}\nexports.GetInfiniteModeForGrafik = GetInfiniteModeForGrafik;\nfunction FindInfiniteModeFromConfig(config, parsedCue) {\n    if (config.showStyle.GFXTemplates) {\n        const template = GetTemplateName(config, parsedCue);\n        const conf = config.showStyle.GFXTemplates.find(cnf => cnf.VizTemplate ? cnf.VizTemplate.toString().toUpperCase() === template.toUpperCase() : false);\n        if (!conf) {\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal;\n        }\n        if (!conf.OutType || !conf.OutType.toString().length) {\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal;\n        }\n        const type = conf.OutType.toString().toUpperCase();\n        if (type !== 'B' && type !== 'S' && type !== 'O') {\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal;\n        }\n        return tv2_common_1.InfiniteMode(type, tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal);\n    }\n    return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal;\n}\nexports.FindInfiniteModeFromConfig = FindInfiniteModeFromConfig;\nfunction GetSourceLayerForGrafik(config, name) {\n    const conf = config.showStyle.GFXTemplates\n        ? config.showStyle.GFXTemplates.find(gfk => gfk.VizTemplate.toString() === name)\n        : undefined;\n    if (!conf) {\n        return layers_2.OffTubeSourceLayer.PgmGraphicsOverlay;\n    }\n    switch (conf.SourceLayer) {\n        // TODO: When adding more sourcelayers\n        // This is here to guard against bad user input\n        case layers_2.OffTubeSourceLayer.PgmGraphicsHeadline:\n            return layers_2.OffTubeSourceLayer.PgmGraphicsHeadline;\n        case layers_2.OffTubeSourceLayer.PgmGraphicsIdent:\n            return layers_2.OffTubeSourceLayer.PgmGraphicsIdent;\n        case layers_2.OffTubeSourceLayer.PgmGraphicsLower:\n            return layers_2.OffTubeSourceLayer.PgmGraphicsLower;\n        case layers_2.OffTubeSourceLayer.PgmGraphicsOverlay:\n            return layers_2.OffTubeSourceLayer.PgmGraphicsOverlay;\n        case layers_2.OffTubeSourceLayer.PgmGraphicsTLF:\n            return layers_2.OffTubeSourceLayer.PgmGraphicsTLF;\n        case layers_2.OffTubeSourceLayer.PgmGraphicsTema:\n            return layers_2.OffTubeSourceLayer.PgmGraphicsTema;\n        case layers_2.OffTubeSourceLayer.PgmGraphicsTop:\n            return layers_2.OffTubeSourceLayer.PgmGraphicsTop;\n        case layers_2.OffTubeSourceLayer.WallGraphics:\n            return layers_2.OffTubeSourceLayer.WallGraphics;\n        default:\n            return layers_2.OffTubeSourceLayer.PgmGraphicsOverlay;\n    }\n}\nfunction GetTimelineLayerForGrafik(config, name) {\n    const conf = config.showStyle.GFXTemplates\n        ? config.showStyle.GFXTemplates.find(gfk => gfk.VizTemplate.toString() === name)\n        : undefined;\n    if (!conf) {\n        return tv2_common_1.GraphicLLayer.GraphicLLayerOverlay;\n    }\n    switch (conf.LayerMapping) {\n        // TODO: When adding more output layers\n        case tv2_common_1.GraphicLLayer.GraphicLLayerOverlayIdent:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlayIdent;\n        case tv2_common_1.GraphicLLayer.GraphicLLayerOverlayTopt:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlayTopt;\n        case tv2_common_1.GraphicLLayer.GraphicLLayerOverlayLower:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlayLower;\n        case tv2_common_1.GraphicLLayer.GraphicLLayerOverlayHeadline:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlayHeadline;\n        case tv2_common_1.GraphicLLayer.GraphicLLayerOverlayTema:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlayTema;\n        case tv2_common_1.GraphicLLayer.GraphicLLayerWall:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerWall;\n        default:\n            return tv2_common_1.GraphicLLayer.GraphicLLayerOverlay;\n    }\n}\nexports.GetTimelineLayerForGrafik = GetTimelineLayerForGrafik;\nfunction grafikName(config, parsedCue) {\n    if (parsedCue.type === tv2_constants_1.CueType.Grafik) {\n        return `${parsedCue.template ? `${GetTemplateName(config, parsedCue)}` : ''}${parsedCue.textFields\n            .filter(txt => !txt.match(/^;.\\.../i))\n            .map(txt => ` - ${txt}`)}`.replace(/,/gi, '');\n    }\n    else {\n        return `${parsedCue.name ? parsedCue.name : ''}`;\n    }\n}\nfunction GetGrafikDuration(config, cue) {\n    if (config.showStyle.GFXTemplates) {\n        if (cue.type === tv2_constants_1.CueType.Grafik) {\n            const template = config.showStyle.GFXTemplates.find(templ => templ.INewsName ? templ.INewsName.toString().toUpperCase() === cue.template.toUpperCase() : false);\n            if (template) {\n                if (template.OutType && !template.OutType.toString().match(/default/i)) {\n                    return undefined;\n                }\n            }\n        }\n        else {\n            const template = config.showStyle.GFXTemplates.find(templ => templ.INewsName ? templ.INewsName.toString().toUpperCase() === cue.vcpid.toString().toUpperCase() : false);\n            if (template) {\n                if (template.OutType && !template.OutType.toString().match(/default/i)) {\n                    return undefined;\n                }\n            }\n        }\n    }\n    return GetDefaultOut(config);\n}\nexports.GetGrafikDuration = GetGrafikDuration;\n// TODO: This is copied from gallery D\nfunction CreateTimingGrafik(config, cue) {\n    const ret = { start: 0, duration: 0 };\n    const start = cue.start ? tv2_common_1.CalculateTime(cue.start) : 0;\n    start !== undefined ? (ret.start = start) : (ret.start = 0);\n    const duration = GetGrafikDuration(config, cue);\n    const end = cue.end\n        ? cue.end.infiniteMode\n            ? undefined\n            : tv2_common_1.CalculateTime(cue.end)\n        : duration\n            ? ret.start + duration\n            : undefined;\n    ret.duration = end ? end - ret.start : undefined;\n    return ret;\n}\nexports.CreateTimingGrafik = CreateTimingGrafik;\nfunction GetTemplateName(config, cue) {\n    if (config.showStyle.GFXTemplates) {\n        const template = config.showStyle.GFXTemplates.find(templ => templ.INewsName ? templ.INewsName.toString().toUpperCase() === cue.template.toUpperCase() : false);\n        if (template && template.VizTemplate.toString().length) {\n            return template.VizTemplate.toString();\n        }\n    }\n    // This means unconfigured templates will still be supported, with default out.\n    return cue.template;\n}\nfunction GetDefaultOut(config) {\n    if (config.showStyle.DefaultTemplateDuration !== undefined) {\n        return Number(config.showStyle.DefaultTemplateDuration) * 1000;\n    }\n    return 4 * 1000;\n}\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst EvaluateCues_1 = __webpack_require__(78);\n/**\n * Evaluates all non-adlib pieces, extracts the timeline objects from generated pieces, and places those objects into the timeline objets of a parent piece.\n * @param context Part context.\n * @param config Showstyle config.\n * @param partDefinition Part to evaluate cues from.\n * @param parentPiece Part to add timeline to.\n * @param selectedCueTypes Filter to only extract cues of a certain type.\n */\nfunction MergePiecesAsTimeline(context, config, partDefinition, parentPiece, selectedCueTypes) {\n    const piecesForTimeline = [];\n    if (parentPiece.content && parentPiece.content.timelineObjects) {\n        EvaluateCues_1.OfftubeEvaluateCues(context, config, piecesForTimeline, piecesForTimeline, partDefinition.cues, partDefinition, {\n            excludeAdlibs: true,\n            selectedCueTypes\n        });\n        piecesForTimeline.forEach(piece => {\n            if (piece.content) {\n                ;\n                parentPiece.content.timelineObjects.push(...piece.content.timelineObjects.filter(obj => obj.content.deviceType !== timeline_state_resolver_types_1.DeviceType.ATEM // Remove any timeline objects that affect PGM\n                // TODO: Keyers?\n                ));\n            }\n        });\n    }\n    return parentPiece;\n}\nexports.MergePiecesAsTimeline = MergePiecesAsTimeline;\n\n\n/***/ }),\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */,\n/* 144 */,\n/* 145 */,\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */,\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst config_manifests_1 = __webpack_require__(100);\nconst migrations_1 = __webpack_require__(84);\nconst tv2_common_1 = __webpack_require__(0);\nconst onTimelineGenerate_1 = __webpack_require__(151);\nconst getRundown_1 = __webpack_require__(154);\nconst getSegment_1 = __webpack_require__(155);\nconst onAsRunEvent_1 = __webpack_require__(166);\nconst manifest = {\n    blueprintType: tv_automation_sofie_blueprints_integration_1.BlueprintManifestType.SHOWSTYLE,\n    blueprintVersion: \"0.1.0+v1.1.9\",\n    integrationVersion: \"0.0.0\",\n    TSRVersion: \"0.0.0\",\n    minimumCoreVersion: '1.2.0',\n    getShowStyleVariantId: getRundown_1.getShowStyleVariantId,\n    getRundown: getRundown_1.getRundown,\n    getSegment: getSegment_1.getSegment,\n    onAsRunEvent: onAsRunEvent_1.default,\n    onTimelineGenerate: onTimelineGenerate_1.onTimelineGenerateOfftube,\n    getEndStateForPart: tv2_common_1.getEndStateForPart,\n    showStyleConfigManifest: config_manifests_1.showStyleConfigManifest,\n    showStyleMigrations: migrations_1.showStyleMigrations\n};\nexports.default = manifest;\n\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(9);\nconst config_1 = __webpack_require__(95);\nfunction onTimelineGenerateOfftube(context, timeline, previousPersistentState, previousPartEndState, resolvedPieces) {\n    return tv2_common_1.onTimelineGenerate(context, timeline, previousPersistentState, previousPartEndState, resolvedPieces, config_1.parseConfig, {\n        Caspar: {\n            ClipPending: layers_1.OfftubeCasparLLayer.CasparPlayerClipPending,\n            PlayerClip: layers_1.CasparPlayerClip\n        },\n        Sisyfos: {\n            ClipPending: layers_1.OfftubeSisyfosLLayer.SisyfosSourceClipPending,\n            PlayerA: layers_1.OfftubeSisyfosLLayer.SisyfosSourceServerA,\n            PlayerB: layers_1.OfftubeSisyfosLLayer.SisyfosSourceServerB\n        }\n    }, layers_1.OfftubeCasparLLayer.CasparPlayerClipPending);\n}\nexports.onTimelineGenerateOfftube = onTimelineGenerateOfftube;\n\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst objectPath = __webpack_require__(90);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst config_manifests_1 = __webpack_require__(83);\nconst sources_1 = __webpack_require__(153);\nfunction applyToConfig(context, config, manifest, sourceName, overrides) {\n    _.each(manifest, (val) => {\n        let newVal = val.defaultVal;\n        const overrideVal = overrides[val.id];\n        if (overrideVal !== undefined) {\n            switch (val.type) {\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.ENUM:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.SELECT:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS:\n                    newVal = overrideVal;\n                    break;\n                case tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.SOURCE_LAYERS:\n                    newVal = overrideVal;\n                    break;\n                default:\n                    tv2_common_1.assertUnreachable(val);\n                    context.warning('Unknown config field type: ' + val);\n                    break;\n            }\n        }\n        else if (val.required) {\n            context.warning(`Required config not defined in ${sourceName}: \"${val.name}\"`);\n        }\n        objectPath.set(config, val.id, newVal);\n    });\n}\nexports.applyToConfig = applyToConfig;\nfunction defaultStudioConfig(context) {\n    const config = {\n        studio: {},\n        // showStyle: {} as any,\n        sources: [],\n        mediaPlayers: [],\n        liveAudio: [],\n        stickyLayers: []\n    };\n    // Load values injected by core, not via manifest\n    _.each(config_manifests_1.CORE_INJECTED_KEYS, (id) => {\n        // Use the key as the value. Good enough for now\n        objectPath.set(config.studio, id, id);\n    });\n    // Load the config\n    applyToConfig(context, config.studio, config_manifests_1.studioConfigManifest, 'Studio', {});\n    // applyToConfig(context, config.showStyle, showStyleConfigManifest, 'ShowStyle', {})\n    config.sources = sources_1.parseSources(config.studio);\n    config.mediaPlayers = sources_1.parseMediaPlayers(config.studio);\n    return config;\n}\nexports.defaultStudioConfig = defaultStudioConfig;\nfunction parseStudioConfig(context) {\n    const config = {\n        studio: {},\n        // showStyle: {} as any,\n        sources: [],\n        mediaPlayers: [],\n        liveAudio: [],\n        stickyLayers: []\n    };\n    // Load values injected by core, not via manifest\n    const studioConfig = context.getStudioConfig();\n    _.each(config_manifests_1.CORE_INJECTED_KEYS, (id) => {\n        objectPath.set(config.studio, id, studioConfig[id]);\n    });\n    // Load the config\n    applyToConfig(context, config.studio, config_manifests_1.studioConfigManifest, 'Studio', studioConfig);\n    // applyToConfig(context, config.showStyle, showStyleConfigManifest, 'ShowStyle', context.getShowStyleConfig())\n    config.sources = sources_1.parseSources(config.studio);\n    config.mediaPlayers = sources_1.parseMediaPlayers(config.studio);\n    return config;\n}\nexports.parseStudioConfig = parseStudioConfig;\n\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nfunction parseMediaPlayers(studioConfig) {\n    return studioConfig.ABMediaPlayers.map(player => ({ id: player.SourceName, val: player.AtemSource.toString() }));\n}\nexports.parseMediaPlayers = parseMediaPlayers;\nfunction parseSources(studioConfig) {\n    const rmInputMap = tv2_common_1.ParseMappingTable(studioConfig.SourcesRM, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE);\n    const kamInputMap = tv2_common_1.ParseMappingTable(studioConfig.SourcesCam, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA);\n    return rmInputMap.concat(kamInputMap);\n}\nexports.parseSources = parseSources;\n\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst layers_1 = __webpack_require__(9);\nconst sisyfosChannels_1 = __webpack_require__(94);\nconst atem_1 = __webpack_require__(11);\nconst OfftubeDVEContent_1 = __webpack_require__(96);\nconst config_1 = __webpack_require__(95);\nconst sisyfos_1 = __webpack_require__(101);\nconst layers_2 = __webpack_require__(10);\nfunction getShowStyleVariantId(_context, showStyleVariants, _ingestRundown) {\n    const variant = _.first(showStyleVariants);\n    if (variant) {\n        return variant._id;\n    }\n    return null;\n}\nexports.getShowStyleVariantId = getShowStyleVariantId;\nfunction getRundown(context, ingestRundown) {\n    const config = config_1.parseConfig(context);\n    let startTime = 0;\n    let endTime = 0;\n    // Set start / end times\n    if ('payload' in ingestRundown) {\n        if (ingestRundown.payload.expectedStart) {\n            startTime = Number(ingestRundown.payload.expectedStart);\n        }\n        if (ingestRundown.payload.expectedEnd) {\n            endTime = Number(ingestRundown.payload.expectedEnd);\n        }\n    }\n    // Can't end before we begin\n    if (endTime < startTime) {\n        endTime = startTime;\n    }\n    return {\n        rundown: tv2_common_1.literal({\n            externalId: ingestRundown.externalId,\n            name: ingestRundown.name,\n            expectedStart: startTime,\n            expectedDuration: endTime - startTime\n        }),\n        globalAdLibPieces: getGlobalAdLibPiecesOffTube(context, config),\n        baseline: getBaseline(config)\n    };\n}\nexports.getRundown = getRundown;\nfunction getGlobalAdLibPiecesOffTube(context, config) {\n    const adlibItems = [];\n    let globalRank = 1000;\n    function makeSsrcAdlibBoxes(layer, port, mediaPlayer) {\n        // Generate boxes with classes to map across each layer\n        const boxObjs = _.map(OfftubeDVEContent_1.boxMappings, (m, i) => tv2_common_1.literal({\n            id: '',\n            enable: { while: `.${layer}_${m}` },\n            priority: 1,\n            layer: m,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC,\n                ssrc: {\n                    boxes: [\n                        // Pad until we are on the right box\n                        ..._.range(i).map(() => ({})),\n                        // Add the source setter\n                        { source: port }\n                    ]\n                }\n            },\n            metaData: {\n                dveAdlibEnabler: `.${layer}_${m} & !.${tv2_constants_1.ControlClasses.DVEOnAir}`,\n                mediaPlayerSession: mediaPlayer ? tv2_constants_1.MEDIA_PLAYER_AUTO : undefined\n            }\n        }));\n        const audioWhile = boxObjs.map(obj => obj.enable.while).join(' | ');\n        return {\n            boxObjs,\n            audioWhile: `(.${tv2_constants_1.Enablers.OFFTUBE_ENABLE_DVE}) & (${audioWhile})`\n        };\n    }\n    function makeCameraAdLibs(info, rank, preview = false) {\n        const res = [];\n        const camSisyfos = sisyfos_1.GetSisyfosTimelineObjForCamera(`Kamera ${info.id}`);\n        res.push({\n            externalId: 'cam',\n            name: `Kamera ${info.id}`,\n            _rank: rank,\n            sourceLayerId: layers_2.OffTubeSourceLayer.PgmCam,\n            outputLayerId: layers_2.OfftubeOutputLayers.PGM,\n            expectedDuration: 0,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            toBeQueued: preview,\n            metaData: tv2_common_1.GetCameraMetaData(config, tv2_common_1.GetLayersForCamera(config, info)),\n            content: {\n                timelineObjects: _.compact([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: { while: '1' },\n                        priority: 1,\n                        layer: layers_1.OfftubeAtemLLayer.AtemMEClean,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: info.port,\n                                transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                            }\n                        },\n                        classes: ['adlib_deparent']\n                    }),\n                    ...camSisyfos,\n                    ...config.stickyLayers\n                        .filter(layer => camSisyfos.map(obj => obj.layer).indexOf(layer) === -1)\n                        .map(layer => {\n                        return tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 1,\n                            layer,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: 0\n                            },\n                            metaData: {\n                                sisyfosPersistLevel: true\n                            }\n                        });\n                    }),\n                    // Force server to be muted (for adlibbing over DVE)\n                    ...[\n                        layers_1.OfftubeSisyfosLLayer.SisyfosSourceClipPending,\n                        layers_1.OfftubeSisyfosLLayer.SisyfosSourceServerA,\n                        layers_1.OfftubeSisyfosLLayer.SisyfosSourceServerB\n                    ].map(layer => {\n                        return tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 2,\n                            layer,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: 0\n                            }\n                        });\n                    })\n                ])\n            }\n        });\n        return res;\n    }\n    // ssrc box\n    function makeCameraAdlibBoxes(info, rank) {\n        const res = [];\n        _.forEach(_.values(OfftubeDVEContent_1.boxLayers), (layer, i) => {\n            const { boxObjs, audioWhile } = makeSsrcAdlibBoxes(layer, info.port);\n            res.push({\n                externalId: 'cam',\n                name: info.id + '',\n                _rank: rank * 100 + i,\n                sourceLayerId: layer,\n                outputLayerId: 'sec',\n                expectedDuration: 0,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n                content: {\n                    timelineObjects: _.compact([\n                        ...boxObjs,\n                        ...sisyfos_1.GetSisyfosTimelineObjForCamera(`Kamera ${info.id}`, { while: audioWhile })\n                    ])\n                }\n            });\n        });\n        return res;\n    }\n    function makeRemoteAdLibs(info, rank) {\n        const res = [];\n        const eksternSisyfos = [\n            ...tv2_common_1.GetSisyfosTimelineObjForEkstern(context, config.sources, `Live ${info.id}`, tv2_common_1.GetLayersForEkstern),\n            ...sisyfos_1.GetSisyfosTimelineObjForCamera('telefon')\n        ];\n        res.push({\n            externalId: 'live',\n            name: info.id + '',\n            _rank: rank,\n            sourceLayerId: layers_2.OffTubeSourceLayer.PgmLive,\n            outputLayerId: layers_2.OfftubeOutputLayers.PGM,\n            expectedDuration: 0,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            toBeQueued: true,\n            metaData: tv2_common_1.GetEksternMetaData(config.stickyLayers, config.studio.StudioMics, tv2_common_1.GetLayersForEkstern(context, config.sources, `Live ${info.id}`)),\n            content: {\n                timelineObjects: _.compact([\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: { while: '1' },\n                        priority: 1,\n                        layer: layers_1.OfftubeAtemLLayer.AtemMEClean,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: info.port,\n                                transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                            }\n                        },\n                        classes: ['adlib_deparent']\n                    }),\n                    ...eksternSisyfos,\n                    ...config.stickyLayers\n                        .filter(layer => eksternSisyfos.map(obj => obj.layer).indexOf(layer) === -1)\n                        .filter(layer => config.liveAudio.indexOf(layer) === -1)\n                        .map(layer => {\n                        return tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 1,\n                            layer,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: 0\n                            },\n                            metaData: {\n                                sisyfosPersistLevel: true\n                            }\n                        });\n                    }),\n                    // Force server to be muted (for adlibbing over DVE)\n                    ...[\n                        layers_1.OfftubeSisyfosLLayer.SisyfosSourceClipPending,\n                        layers_1.OfftubeSisyfosLLayer.SisyfosSourceServerA,\n                        layers_1.OfftubeSisyfosLLayer.SisyfosSourceServerB\n                    ].map(layer => {\n                        return tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 2,\n                            layer,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                                isPgm: 0\n                            }\n                        });\n                    })\n                ])\n            }\n        });\n        return res;\n    }\n    // ssrc box\n    function makeRemoteAdlibBoxes(info, rank) {\n        const res = [];\n        _.forEach(_.values(OfftubeDVEContent_1.boxLayers), (layer, i) => {\n            const { boxObjs, audioWhile } = makeSsrcAdlibBoxes(layer, info.port);\n            res.push({\n                externalId: 'cam',\n                name: info.id + '',\n                _rank: rank * 100 + i,\n                sourceLayerId: layer,\n                outputLayerId: 'sec',\n                expectedDuration: 0,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n                content: {\n                    timelineObjects: _.compact([\n                        ...boxObjs,\n                        ...tv2_common_1.GetSisyfosTimelineObjForEkstern(context, config.sources, `Live ${info.id}`, tv2_common_1.GetLayersForEkstern, {\n                            while: audioWhile\n                        }),\n                        ...sisyfos_1.GetSisyfosTimelineObjForCamera('telefon', { while: audioWhile })\n                    ])\n                }\n            });\n        });\n        return res;\n    }\n    // Shortcuts\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA)\n        .slice(0, 5) // the first x cameras to create INP1/2/3 cam-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeCameraAdLibs(o, globalRank++));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA)\n        .slice(0, 5) // the first x cameras to create preview cam-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeCameraAdLibs(o, globalRank++, true));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA)\n        .slice(0, 5) // the first x cameras to create INP1/2/3 cam-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeCameraAdlibBoxes(o, globalRank++));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE)\n        .slice(0, 10) // the first x cameras to create live-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeRemoteAdLibs(o, globalRank++));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE)\n        .slice(0, 10) // the first x cameras to create INP1/2/3 live-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeRemoteAdlibBoxes(o, globalRank++));\n    });\n    _.each(config.showStyle.DVEStyles, (dveConfig, i) => {\n        // const boxSources = ['', '', '', '']\n        const content = tv2_common_1.MakeContentDVE2(context, config, dveConfig, {}, undefined, OfftubeDVEContent_1.OFFTUBE_DVE_GENERATOR_OPTIONS);\n        if (content.valid) {\n            adlibItems.push({\n                externalId: `dve-${dveConfig.DVEName}`,\n                name: (dveConfig.DVEName || 'DVE') + '',\n                _rank: 200 + i,\n                sourceLayerId: layers_2.OffTubeSourceLayer.SelectedAdLibDVE,\n                outputLayerId: layers_2.OfftubeOutputLayers.PGM,\n                expectedDuration: 0,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n                toBeQueued: true,\n                content: content.content,\n                adlibPreroll: Number(config.studio.CasparPrerollDuration) || 0\n            });\n        }\n    });\n    // Multiview adlibs\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA)\n        .slice(0, 5) // the first x cameras to create INP1/2/3 cam-adlibs from\n        .forEach(o => {\n        adlibItems.push(tv2_common_1.literal({\n            _rank: globalRank++,\n            externalId: 'setNextToCam',\n            name: `Kamera ${o.id}`,\n            sourceLayerId: layers_2.OffTubeSourceLayer.PgmCam,\n            outputLayerId: layers_2.OfftubeOutputLayers.PGM,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            toBeQueued: true,\n            canCombineQueue: true,\n            content: {\n                timelineObjects: [\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: {\n                            while: '1'\n                        },\n                        layer: layers_1.OfftubeAtemLLayer.AtemMEClean,\n                        priority: 1,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: o.port,\n                                transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                            }\n                        }\n                    })\n                ]\n            },\n            tags: [tv2_constants_1.AdlibTags.OFFTUBE_SET_CAM_NEXT]\n        }));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE)\n        .slice(0, 5)\n        .forEach(o => {\n        adlibItems.push(tv2_common_1.literal({\n            _rank: globalRank++,\n            externalId: `setNextToRemote-${o.id}`,\n            name: `Live ${o.id}`,\n            sourceLayerId: layers_2.OffTubeSourceLayer.PgmLive,\n            outputLayerId: layers_2.OfftubeOutputLayers.PGM,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            toBeQueued: true,\n            canCombineQueue: true,\n            content: {\n                timelineObjects: [\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: {\n                            while: '1'\n                        },\n                        layer: layers_1.OfftubeAtemLLayer.AtemMEClean,\n                        priority: 1,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: o.port,\n                                transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                            }\n                        }\n                    })\n                ]\n            },\n            tags: [tv2_constants_1.AdlibTags.OFFTUBE_SET_REMOTE_NEXT]\n        }));\n    });\n    adlibItems.push(tv2_common_1.literal({\n        _rank: globalRank++,\n        externalId: 'setNextToFull',\n        name: 'Full Graphic',\n        sourceLayerId: layers_2.OffTubeSourceLayer.PgmFull,\n        outputLayerId: layers_2.OfftubeOutputLayers.PGM,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        toBeQueued: true,\n        canCombineQueue: true,\n        content: {\n            timelineObjects: [\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        while: '1'\n                    },\n                    layer: layers_1.OfftubeAtemLLayer.AtemMEClean,\n                    priority: 10,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                        me: {\n                            input: config.studio.AtemSource.GFXFull,\n                            transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                        }\n                    },\n                    classes: [tv2_constants_1.Enablers.OFFTUBE_ENABLE_FULL]\n                })\n            ]\n        },\n        tags: [tv2_constants_1.AdlibTags.OFFTUBE_SET_FULL_NEXT]\n    }));\n    // TODO: Future\n    /*adlibItems.push(\n        literal<IBlueprintAdLibPiece>({\n            _rank: globalRank++,\n            externalId: 'setNextToJingle',\n            name: 'Set Jingle Next',\n            sourceLayerId: OffTubeSourceLayer.PgmSourceSelect,\n            outputLayerId: OfftubeOutputLayers.SEC,\n            infiniteMode: PieceLifespan.OutOnNextPart,\n            toBeQueued: true,\n            content: {\n                timelineObjects: [] // TODO\n            },\n            tags: [AdlibTags.OFFTUBE_SET_JINGLE_NEXT]\n        })\n    )*/\n    adlibItems.push(tv2_common_1.literal({\n        _rank: globalRank++,\n        externalId: 'setNextToServer',\n        name: 'Server',\n        sourceLayerId: layers_2.OffTubeSourceLayer.PgmServer,\n        outputLayerId: layers_2.OfftubeOutputLayers.PGM,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        toBeQueued: true,\n        canCombineQueue: true,\n        content: {\n            timelineObjects: [\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        while: '1'\n                    },\n                    priority: 1,\n                    layer: layers_1.OfftubeAbstractLLayer.OfftubeAbstractLLayerPgmEnabler,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ABSTRACT\n                    },\n                    classes: [tv2_constants_1.Enablers.OFFTUBE_ENABLE_SERVER]\n                })\n            ]\n        },\n        tags: [tv2_constants_1.AdlibTags.OFFTUBE_SET_SERVER_NEXT]\n    }));\n    adlibItems.push(tv2_common_1.literal({\n        _rank: globalRank++,\n        externalId: 'setNextToDVE',\n        name: 'DVE',\n        sourceLayerId: layers_2.OffTubeSourceLayer.PgmDVE,\n        outputLayerId: layers_2.OfftubeOutputLayers.PGM,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        toBeQueued: true,\n        canCombineQueue: true,\n        content: {\n            timelineObjects: [\n                tv2_common_1.literal({\n                    id: '',\n                    enable: {\n                        while: '1'\n                    },\n                    priority: 1,\n                    layer: layers_1.OfftubeAbstractLLayer.OfftubeAbstractLLayerPgmEnabler,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ABSTRACT\n                    },\n                    classes: [tv2_constants_1.Enablers.OFFTUBE_ENABLE_DVE]\n                })\n            ]\n        },\n        tags: [tv2_constants_1.AdlibTags.OFFTUBE_SET_DVE_NEXT]\n    }));\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA)\n        .slice(0, 5) // the first x cameras to create INP1/2/3 cam-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeCameraAdLibs(o, globalRank++));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA)\n        .slice(0, 5) // the first x cameras to create preview cam-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeCameraAdLibs(o, globalRank++, true));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA)\n        .slice(0, 5) // the first x cameras to create INP1/2/3 cam-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeCameraAdlibBoxes(o, globalRank++));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE && !u.id.match(`DP`))\n        .slice(0, 10) // the first x cameras to create live-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeRemoteAdLibs(o, globalRank++));\n    });\n    config.sources\n        .filter(u => u.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE && !u.id.match(`DP`))\n        .slice(0, 10) // the first x cameras to create INP1/2/3 live-adlibs from\n        .forEach(o => {\n        adlibItems.push(...makeRemoteAdlibBoxes(o, globalRank++));\n    });\n    return adlibItems;\n}\nfunction getBaseline(config) {\n    return [\n        // Default timeline\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeAtemLLayer.AtemMEClean,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                me: {\n                    input: config.studio.AtemSource.Default,\n                    transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                }\n            }\n        }),\n        // route default outputs\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeAtemLLayer.AtemAuxClean,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                aux: {\n                    input: atem_1.AtemSourceIndex.Prg2\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeAtemLLayer.AtemAuxScreen,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                aux: {\n                    input: config.studio.AtemSource.Loop\n                }\n            }\n        }),\n        // keyers\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: `!.${tv2_constants_1.Enablers.OFFTUBE_ENABLE_FULL}` },\n            priority: 0,\n            layer: layers_1.OfftubeAtemLLayer.AtemDSKGraphics,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK,\n                dsk: {\n                    onAir: true,\n                    sources: {\n                        fillSource: config.studio.AtemSource.DSK1F,\n                        cutSource: config.studio.AtemSource.DSK1K\n                    },\n                    properties: {\n                        tie: false,\n                        preMultiply: true,\n                        clip: config.studio.AtemSettings.CCGClip * 10,\n                        gain: config.studio.AtemSettings.CCGGain * 10,\n                        mask: {\n                            enabled: false\n                        }\n                    }\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeAtemLLayer.AtemSSrcArt,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRCPROPS,\n                ssrcProps: {\n                    artFillSource: config.studio.AtemSource.SplitArtF,\n                    artCutSource: config.studio.AtemSource.SplitArtK,\n                    artOption: 1,\n                    artPreMultiplied: true\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeAtemLLayer.AtemSSrcDefault,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC,\n                ssrc: {\n                    boxes: [\n                        {\n                            // left\n                            enabled: true,\n                            source: atem_1.AtemSourceIndex.Bars,\n                            size: 580,\n                            x: -800,\n                            y: 50,\n                            cropped: true,\n                            cropRight: 2000\n                        },\n                        {\n                            // right\n                            enabled: true,\n                            source: atem_1.AtemSourceIndex.Bars,\n                            size: 580,\n                            x: 800,\n                            y: 50\n                            // note: this sits behind box1, so don't crop it to ensure there is no gap between\n                        },\n                        {\n                            // box 3\n                            enabled: false\n                        },\n                        {\n                            // box 4\n                            enabled: false\n                        }\n                    ]\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeCasparLLayer.CasparCGDVEFrame,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                file: 'empty',\n                mixer: {\n                    opacity: 0\n                },\n                transitions: {\n                    inTransition: {\n                        type: timeline_state_resolver_types_1.Transition.CUT,\n                        duration: tv2_constants_1.CONSTANTS.DefaultClipFadeOut\n                    }\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeCasparLLayer.CasparCGDVEKey,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                file: 'empty',\n                mixer: {\n                    opacity: 0\n                },\n                transitions: {\n                    inTransition: {\n                        type: timeline_state_resolver_types_1.Transition.CUT,\n                        duration: tv2_constants_1.CONSTANTS.DefaultClipFadeOut\n                    }\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeCasparLLayer.CasparCGDVETemplate,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                file: 'empty',\n                mixer: {\n                    opacity: 0\n                },\n                transitions: {\n                    inTransition: {\n                        type: timeline_state_resolver_types_1.Transition.CUT,\n                        duration: tv2_constants_1.CONSTANTS.DefaultClipFadeOut\n                    }\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeCasparLLayer.CasparCGDVELoop,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                file: 'empty',\n                transitions: {\n                    inTransition: {\n                        type: timeline_state_resolver_types_1.Transition.CUT,\n                        duration: tv2_constants_1.CONSTANTS.DefaultClipFadeOut\n                    }\n                }\n            }\n        }),\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeCasparLLayer.CasparGraphicsFull,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                file: 'empty',\n                mixer: {\n                    opacity: 0\n                }\n            }\n        }),\n        // create sisyfos channels from the config\n        ...Object.keys(sisyfosChannels_1.sisyfosChannels).map(key => {\n            const llayer = key;\n            const channel = sisyfosChannels_1.sisyfosChannels[llayer];\n            return tv2_common_1.literal({\n                id: '',\n                enable: { while: '1' },\n                priority: 0,\n                layer: llayer,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: channel.isPgm,\n                    visible: true,\n                    label: channel.label\n                }\n            });\n        }),\n        // Route ME 2 PGM to ME 1 PGM\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeAtemLLayer.AtemMEProgram,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                me: {\n                    input: atem_1.AtemSourceIndex.Prg2,\n                    transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                }\n            }\n        }),\n        ...(config.showStyle.CasparCGLoadingClip && config.showStyle.CasparCGLoadingClip.length\n            ? [...config.mediaPlayers.map(mp => layers_1.CasparPlayerClipLoadingLoop(mp.id))].map(layer => {\n                return tv2_common_1.literal({\n                    id: '',\n                    enable: { while: '1' },\n                    priority: 0,\n                    layer,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                        file: config.showStyle.CasparCGLoadingClip,\n                        loop: true\n                    }\n                });\n            })\n            : [])\n    ];\n}\n\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst layers_1 = __webpack_require__(9);\nconst config_1 = __webpack_require__(95);\nconst layers_2 = __webpack_require__(10);\nconst OfftubeDVE_1 = __webpack_require__(156);\nconst OfftubeKam_1 = __webpack_require__(162);\nconst OfftubeServer_1 = __webpack_require__(163);\nconst OfftubeUnknown_1 = __webpack_require__(164);\nconst OfftubeVO_1 = __webpack_require__(165);\nfunction getSegment(context, ingestSegment) {\n    const result = tv2_common_1.getSegmentBase(context, ingestSegment, {\n        parseConfig: config_1.parseConfig,\n        TransformCuesIntoShowstyle: tv2_common_1.TransformCuesIntoShowstyle,\n        CreatePartContinuity,\n        CreatePartUnknown: OfftubeUnknown_1.CreatePartUnknown,\n        CreatePartKam: OfftubeKam_1.OfftubeCreatePartKam,\n        CreatePartServer: OfftubeServer_1.OfftubeCreatePartServer,\n        CreatePartVO: OfftubeVO_1.OfftubeCreatePartVO,\n        CreatePartDVE: OfftubeDVE_1.OfftubeCreatePartDVE,\n        CreatePartGrafik: OfftubeUnknown_1.CreatePartUnknown,\n        CreatePartEVS: OfftubeUnknown_1.CreatePartUnknown,\n        CreatePartEkstern: OfftubeUnknown_1.CreatePartUnknown,\n        CreatePartIntro: OfftubeUnknown_1.CreatePartUnknown,\n        CreatePartTeknik: OfftubeUnknown_1.CreatePartUnknown,\n        CreatePartTelefon: OfftubeUnknown_1.CreatePartUnknown\n    });\n    return {\n        segment: result.segment,\n        parts: result.parts\n    };\n}\nexports.getSegment = getSegment;\nclass PartContext2 {\n    constructor(baseContext, externalId) {\n        this.baseContext = baseContext;\n        this.externalId = externalId;\n        this.rundownId = baseContext.rundownId;\n        this.rundown = baseContext.rundown;\n    }\n    /** PartContext */\n    getRuntimeArguments() {\n        return this.baseContext.getRuntimeArguments(this.externalId) || {};\n    }\n    /** IShowStyleConfigContext */\n    getShowStyleConfig() {\n        return this.baseContext.getShowStyleConfig();\n    }\n    getShowStyleConfigRef(configKey) {\n        return this.baseContext.getShowStyleConfigRef(configKey);\n    }\n    /** IStudioContext */\n    getStudioMappings() {\n        return this.baseContext.getStudioMappings();\n    }\n    /** IStudioConfigContext */\n    getStudioConfig() {\n        return this.baseContext.getStudioConfig();\n    }\n    getStudioConfigRef(configKey) {\n        return this.baseContext.getStudioConfigRef(configKey);\n    }\n    /** NotesContext */\n    error(message) {\n        return this.baseContext.error(message);\n    }\n    warning(message) {\n        return this.baseContext.warning(message);\n    }\n    getNotes() {\n        return this.baseContext.getNotes();\n    }\n    /** ICommonContext */\n    getHashId(originString, originIsNotUnique) {\n        return this.baseContext.getHashId(`${this.externalId}_${originString}`, originIsNotUnique);\n    }\n    unhashId(hash) {\n        return this.baseContext.unhashId(hash);\n    }\n}\nexports.PartContext2 = PartContext2;\nfunction CreatePartContinuity(config, ingestSegment) {\n    return tv2_common_1.literal({\n        part: {\n            externalId: `${ingestSegment.externalId}-CONTINUITY`,\n            title: 'CONTINUITY',\n            typeVariant: ''\n        },\n        pieces: [\n            tv2_common_1.literal({\n                _id: '',\n                externalId: `${ingestSegment.externalId}-CONTINUITY`,\n                enable: {\n                    start: 0\n                },\n                name: 'CONTINUITY',\n                sourceLayerId: layers_2.OffTubeSourceLayer.PgmContinuity,\n                outputLayerId: 'pgm',\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment,\n                content: tv2_common_1.literal({\n                    studioLabel: '',\n                    switcherInput: config.studio.AtemSource.Continuity,\n                    timelineObjects: _.compact([\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: {\n                                start: 0\n                            },\n                            priority: 1,\n                            layer: layers_1.OfftubeAtemLLayer.AtemMEClean,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                                me: {\n                                    input: config.studio.AtemSource.Continuity,\n                                    transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                                }\n                            }\n                        })\n                    ])\n                })\n            })\n        ],\n        adLibPieces: []\n    });\n}\n\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst EvaluateCues_1 = __webpack_require__(78);\nconst layers_1 = __webpack_require__(10);\nfunction OfftubeCreatePartDVE(context, config, partDefinition, totalWords) {\n    const partTime = tv2_common_1.PartTime(config, partDefinition, totalWords, false);\n    const part = tv2_common_1.literal({\n        externalId: partDefinition.externalId,\n        title: `DVE`,\n        typeVariant: '',\n        autoNext: false,\n        expectedDuration: partTime\n    });\n    const pieces = [];\n    const adLibPieces = [];\n    EvaluateCues_1.OfftubeEvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, { adlib: true });\n    if (partDefinition.cues.filter(cue => cue.type === tv2_constants_1.CueType.DVE).length) {\n        part.prerollDuration = config.studio.CasparPrerollDuration;\n    }\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    tv2_common_1.AddScript(partDefinition, pieces, partTime, layers_1.OffTubeSourceLayer.PgmScript);\n    return {\n        part,\n        pieces,\n        adLibPieces\n    };\n}\nexports.OfftubeCreatePartDVE = OfftubeCreatePartDVE;\n\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst layers_1 = __webpack_require__(9);\nconst OfftubeDVEContent_1 = __webpack_require__(96);\nconst layers_2 = __webpack_require__(10);\nfunction OfftubeEvaluateAdLib(context, config, adLibPieces, partId, parsedCue, partDefinition, rank) {\n    if (parsedCue.variant.match(/server/i)) {\n        // Create server AdLib\n        const file = partDefinition.fields.videoId;\n        const duration = Number(partDefinition.fields.tapeTime) * 1000 || 0;\n        const adlibServer = tv2_common_1.CreateAdlibServer(config, rank, partId, `adlib_server_${file}`, partDefinition, file, false, {\n            Caspar: {\n                ClipPending: layers_1.OfftubeCasparLLayer.CasparPlayerClipPending\n            },\n            Sisyfos: {\n                ClipPending: layers_1.OfftubeSisyfosLLayer.SisyfosSourceClipPending\n            },\n            ATEM: {\n                MEPGM: layers_1.OfftubeAtemLLayer.AtemMEProgram\n            },\n            STICKY_LAYERS: config.stickyLayers,\n            PgmServer: layers_2.OffTubeSourceLayer.SelectedAdLibServer,\n            PgmVoiceOver: layers_2.OffTubeSourceLayer.SelectedAdLibVoiceOver\n        });\n        adlibServer.toBeQueued = true;\n        adlibServer.canCombineQueue = true;\n        adlibServer.tags = [tv2_constants_1.AdlibTags.OFFTUBE_100pc_SERVER];\n        adlibServer.name = file;\n        // TODO: This should happen in above function\n        adlibServer.expectedDuration = duration;\n        adLibPieces.push(adlibServer);\n        const adlibFlowProducer = tv2_common_1.CreateAdlibServer(config, rank, partId, `adlib_server_${file}`, partDefinition, file, false, {\n            Caspar: {\n                ClipPending: layers_1.OfftubeCasparLLayer.CasparPlayerClipPending\n            },\n            Sisyfos: {\n                ClipPending: layers_1.OfftubeSisyfosLLayer.SisyfosSourceClipPending\n            },\n            ATEM: {\n                MEPGM: layers_1.OfftubeAtemLLayer.AtemMEProgram\n            },\n            STICKY_LAYERS: config.stickyLayers,\n            PgmServer: layers_2.OffTubeSourceLayer.PgmServer,\n            PgmVoiceOver: layers_2.OffTubeSourceLayer.PgmVoiceOver\n        });\n        adlibFlowProducer.toBeQueued = true;\n        adlibFlowProducer.canCombineQueue = true;\n        adlibFlowProducer.tags = [tv2_constants_1.AdlibTags.ADLIB_FLOW_PRODUCER];\n        adlibFlowProducer.name = file;\n        // TODO: This should happen in above function\n        adlibFlowProducer.expectedDuration = duration;\n        adLibPieces.push(adlibFlowProducer);\n    }\n    else {\n        // DVE\n        if (!parsedCue.variant) {\n            return;\n        }\n        const rawTemplate = tv2_common_1.GetDVETemplate(config.showStyle.DVEStyles, parsedCue.variant); // TODO - is this correct?\n        if (!rawTemplate) {\n            context.warning(`Could not find template ${parsedCue.variant}`);\n            return;\n        }\n        if (!tv2_common_1.TemplateIsValid(JSON.parse(rawTemplate.DVEJSON))) {\n            context.warning(`Invalid DVE template ${parsedCue.variant}`);\n            return;\n        }\n        const cueDVE = {\n            type: tv2_constants_1.CueType.DVE,\n            template: parsedCue.variant,\n            sources: parsedCue.inputs ? parsedCue.inputs : {},\n            labels: parsedCue.bynavn ? [parsedCue.bynavn] : [],\n            iNewsCommand: 'DVE'\n        };\n        console.log(JSON.stringify(cueDVE));\n        const content = OfftubeDVEContent_1.OfftubeMakeContentDVE(context, config, partDefinition, cueDVE, rawTemplate, false, true);\n        let sticky = {};\n        content.stickyLayers.forEach(layer => {\n            sticky = Object.assign(Object.assign({}, sticky), { [layer]: {\n                    value: 1,\n                    followsPrevious: false\n                } });\n        });\n        adLibPieces.push(tv2_common_1.literal({\n            _rank: rank,\n            externalId: partId,\n            name: `DVE: ${parsedCue.variant}`,\n            sourceLayerId: layers_2.OffTubeSourceLayer.SelectedAdLibDVE,\n            outputLayerId: 'pgm',\n            toBeQueued: true,\n            content: content.content,\n            invalid: !content.valid,\n            metaData: tv2_common_1.literal({\n                stickySisyfosLevels: sticky\n            })\n        }));\n        adLibPieces.push(tv2_common_1.literal({\n            _rank: rank,\n            externalId: partId,\n            name: `DVE: ${parsedCue.variant}`,\n            sourceLayerId: layers_2.OffTubeSourceLayer.PgmDVE,\n            outputLayerId: 'pgm',\n            toBeQueued: true,\n            content: content.content,\n            invalid: !content.valid,\n            tags: [tv2_constants_1.AdlibTags.ADLIB_FLOW_PRODUCER],\n            metaData: tv2_common_1.literal({\n                stickySisyfosLevels: sticky\n            })\n        }));\n    }\n}\nexports.OfftubeEvaluateAdLib = OfftubeEvaluateAdLib;\n\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst layers_1 = __webpack_require__(9);\nconst OfftubeDVEContent_1 = __webpack_require__(96);\nconst layers_2 = __webpack_require__(10);\nfunction OfftubeEvaluateDVE(context, config, pieces, adlibPieces, partDefinition, parsedCue, _adlib, rank) {\n    if (!parsedCue.template) {\n        return;\n    }\n    const rawTemplate = tv2_common_1.GetDVETemplate(config.showStyle.DVEStyles, parsedCue.template);\n    if (!rawTemplate) {\n        context.warning(`Could not find template ${parsedCue.template}`);\n        return;\n    }\n    if (!tv2_common_1.TemplateIsValid(JSON.parse(rawTemplate.DVEJSON))) {\n        context.warning(`Invalid DVE template ${parsedCue.template}`);\n        return;\n    }\n    const adlibContent = OfftubeDVEContent_1.OfftubeMakeContentDVE(context, config, partDefinition, parsedCue, rawTemplate, tv2_common_1.AddParentClass(partDefinition), true);\n    const pieceContent = OfftubeDVEContent_1.OfftubeMakeContentDVE(context, config, partDefinition, parsedCue, rawTemplate, tv2_common_1.AddParentClass(partDefinition));\n    if (adlibContent.valid && pieceContent.valid) {\n        const dveAdlib = tv2_common_1.literal({\n            _rank: rank || 0,\n            externalId: partDefinition.externalId,\n            name: `${parsedCue.template}`,\n            outputLayerId: 'pgm',\n            sourceLayerId: layers_2.OffTubeSourceLayer.SelectedAdLibDVE,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment,\n            toBeQueued: true,\n            canCombineQueue: true,\n            content: adlibContent.content,\n            adlibPreroll: Number(config.studio.CasparPrerollDuration) || 0\n        });\n        adlibPieces.push(dveAdlib);\n        adlibPieces.push(tv2_common_1.literal(Object.assign(Object.assign({}, dveAdlib), { sourceLayerId: layers_2.OffTubeSourceLayer.PgmDVE, infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart, tags: [tv2_constants_1.AdlibTags.ADLIB_FLOW_PRODUCER], content: Object.assign(Object.assign({}, dveAdlib.content), { timelineObjects: [\n                    ...dveAdlib.content.timelineObjects,\n                    tv2_common_1.literal({\n                        id: '',\n                        enable: {\n                            while: '1'\n                        },\n                        priority: 1,\n                        layer: layers_1.OfftubeAbstractLLayer.OfftubeAbstractLLayerPgmEnabler,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ABSTRACT\n                        },\n                        classes: [tv2_constants_1.Enablers.OFFTUBE_ENABLE_DVE]\n                    })\n                ] }) })));\n        let start = parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0;\n        start = start ? start : 0;\n        const end = parsedCue.end ? tv2_common_1.CalculateTime(parsedCue.end) : undefined;\n        pieces.push(tv2_common_1.literal({\n            _id: '',\n            externalId: partDefinition.externalId,\n            name: `DVE: ${parsedCue.template}`,\n            enable: Object.assign({ start }, (end ? { duration: end - start } : {})),\n            outputLayerId: 'pgm',\n            sourceLayerId: layers_2.OffTubeSourceLayer.PgmDVE,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            toBeQueued: true,\n            content: pieceContent.content,\n            adlibPreroll: Number(config.studio.CasparPrerollDuration) || 0,\n            metaData: tv2_common_1.literal({\n                mediaPlayerSessions: [partDefinition.segmentExternalId]\n            })\n        }));\n    }\n}\nexports.OfftubeEvaluateDVE = OfftubeEvaluateDVE;\n\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst layers_1 = __webpack_require__(9);\nconst layers_2 = __webpack_require__(10);\nfunction OfftubeEvaluateJingle(context, config, pieces, adlibPieces, parsedCue, part, _adlib, rank, effekt) {\n    if (!config.showStyle.BreakerConfig) {\n        context.warning(`Jingles have not been configured`);\n        return;\n    }\n    let file = '';\n    const jingle = config.showStyle.BreakerConfig.find(brkr => brkr.BreakerName ? brkr.BreakerName.toString().toUpperCase() === parsedCue.clip.toUpperCase() : false);\n    if (!jingle) {\n        context.warning(`Jingle ${parsedCue.clip} is not configured`);\n        return;\n    }\n    else {\n        file = jingle.ClipName.toString();\n    }\n    const p = tv2_common_1.GetJinglePartProperties(context, config, part);\n    if (JSON.stringify(p) === JSON.stringify({})) {\n        context.warning(`Could not create adlib for ${parsedCue.clip}`);\n        return;\n    }\n    const props = p;\n    adlibPieces.push(tv2_common_1.literal({\n        _rank: rank !== null && rank !== void 0 ? rank : 0,\n        externalId: `${part.externalId}-JINGLE-adlib`,\n        name: effekt ? `EFFEKT ${parsedCue.clip}` : parsedCue.clip,\n        sourceLayerId: layers_2.OffTubeSourceLayer.PgmJingle,\n        outputLayerId: 'jingle',\n        content: createJingleContent(config, file),\n        toBeQueued: true,\n        adlibAutoNext: props.autoNext,\n        adlibAutoNextOverlap: props.autoNextOverlap,\n        adlibPreroll: props.prerollDuration,\n        expectedDuration: props.expectedDuration,\n        adlibDisableOutTransition: false,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        tags: [tv2_constants_1.AdlibTags.OFFTUBE_100pc_SERVER] // TODO: Maybe this should be different?\n    }));\n    pieces.push(tv2_common_1.literal({\n        _id: '',\n        externalId: `${part.externalId}-JINGLE`,\n        name: effekt ? `EFFEKT ${parsedCue.clip}` : parsedCue.clip,\n        enable: {\n            start: 0\n        },\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        outputLayerId: 'jingle',\n        sourceLayerId: layers_2.OffTubeSourceLayer.PgmJingle,\n        content: createJingleContent(config, file)\n    }));\n}\nexports.OfftubeEvaluateJingle = OfftubeEvaluateJingle;\nfunction createJingleContent(config, file) {\n    return tv2_common_1.CreateJingleContentBase(config, file, {\n        Caspar: {\n            PlayerJingle: layers_1.OfftubeCasparLLayer.CasparPlayerJingle\n        },\n        ATEM: {\n            DSKJingle: layers_1.OfftubeAtemLLayer.AtemDSKGraphics\n        },\n        Sisyfos: {\n            PlayerJingle: layers_1.OfftubeSisyfosLLayer.SisyfosSourceJingle\n        }\n    }, true);\n}\n\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nconst OfftubeGrafikCaspar_1 = __webpack_require__(102);\nfunction OfftubeEvaluateTargetEngine(context, config, pieces, adlibPieces, _partId, partDefinition, parsedCue, _adlib) {\n    // TODO: Future: Target a specific engine\n    if (!parsedCue.data.engine.match(/full|ovl|wall/i)) {\n        context.warning(`Could not find engine to target for: ${parsedCue.data.engine}`);\n        return;\n    }\n    // Offtubes: Only allow full for now\n    if (!parsedCue.data.engine.match(/full|ovl/i)) {\n        return;\n    }\n    if (parsedCue.data.grafik) {\n        if (parsedCue.data.grafik.type === tv2_constants_1.CueType.Grafik) {\n            OfftubeGrafikCaspar_1.OfftubeEvaluateGrafikCaspar(config, context, pieces, adlibPieces, partDefinition.externalId, parsedCue.data.grafik, !!parsedCue.data.engine.match(/full/i) ? 'FULL' : 'OVL', // TODO: Target wall\n            true, partDefinition);\n        }\n        else {\n            const cueMosToGrafik = {\n                type: tv2_constants_1.CueType.Grafik,\n                template: parsedCue.data.grafik.vcpid.toString(),\n                cue: parsedCue.data.grafik.iNewsCommand,\n                textFields: [],\n                iNewsCommand: parsedCue.data.grafik.iNewsCommand\n            };\n            OfftubeGrafikCaspar_1.OfftubeEvaluateGrafikCaspar(config, context, pieces, adlibPieces, partDefinition.externalId, cueMosToGrafik, !!parsedCue.data.engine.match(/full/i) ? 'FULL' : 'OVL', // TODO: Target wall\n            true, partDefinition);\n        }\n    }\n}\nexports.OfftubeEvaluateTargetEngine = OfftubeEvaluateTargetEngine;\n\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(9);\nconst layers_2 = __webpack_require__(10);\nfunction OfftubeEvaluateVIZ(context, config, pieces, adlibPieces, partId, parsedCue, adlib, rank) {\n    tv2_common_1.EvaluateVIZBase(context, config, pieces, adlibPieces, partId, parsedCue, false, {\n        SourceLayerDVEBackground: layers_2.OffTubeSourceLayer.PgmDVEBackground,\n        CasparLLayerDVELoop: layers_1.OfftubeCasparLLayer.CasparCGDVELoop\n    }, adlib, rank);\n}\nexports.OfftubeEvaluateVIZ = OfftubeEvaluateVIZ;\n\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst layers_1 = __webpack_require__(9);\nconst EvaluateCues_1 = __webpack_require__(78);\nconst layers_2 = __webpack_require__(10);\nfunction OfftubeCreatePartKam(context, config, partDefinition, totalWords) {\n    const partTime = tv2_common_1.PartTime(config, partDefinition, totalWords, false);\n    const part = tv2_common_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.rawType,\n        metaData: {},\n        typeVariant: '',\n        expectedDuration: partTime > 0 ? partTime : undefined\n    });\n    const adLibPieces = [];\n    const pieces = [];\n    if (partDefinition.rawType.match(/kam cs 3/i)) {\n        pieces.push(tv2_common_1.literal({\n            _id: '',\n            externalId: partDefinition.externalId,\n            name: 'CS 3 (JINGLE)',\n            enable: { start: 0 },\n            outputLayerId: 'pgm',\n            sourceLayerId: layers_2.OffTubeSourceLayer.PgmJingle,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            content: {\n                studioLabel: '',\n                switcherInput: config.studio.AtemSource.DSK1F,\n                timelineObjects: tv2_common_1.literal([\n                    tv2_common_1.literal({\n                        id: ``,\n                        enable: {\n                            start: 0\n                        },\n                        priority: 1,\n                        layer: layers_1.OfftubeAtemLLayer.AtemMEClean,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: config.studio.AtemSource.DSK1F,\n                                transition: partDefinition.transition\n                                    ? tv2_common_1.TransitionFromString(partDefinition.transition.style)\n                                    : timeline_state_resolver_types_1.AtemTransitionStyle.CUT,\n                                transitionSettings: tv2_common_1.TransitionSettings(partDefinition)\n                            }\n                        }\n                    })\n                ])\n            }\n        }));\n    }\n    else {\n        const sourceInfoCam = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, partDefinition.rawType);\n        if (sourceInfoCam === undefined) {\n            return tv2_common_1.CreatePartInvalid(partDefinition);\n        }\n        const atemInput = sourceInfoCam.port;\n        // part = { ...part, ...CreateEffektForpart(context, config, partDefinition, pieces) }\n        // TODO: EFFEKT\n        pieces.push(tv2_common_1.literal({\n            _id: '',\n            externalId: partDefinition.externalId,\n            name: part.title,\n            enable: { start: 0 },\n            outputLayerId: 'pgm',\n            sourceLayerId: layers_2.OffTubeSourceLayer.PgmCam,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            metaData: tv2_common_1.GetCameraMetaData(config, tv2_common_1.GetLayersForCamera(config, sourceInfoCam)),\n            content: {\n                studioLabel: '',\n                switcherInput: atemInput,\n                timelineObjects: tv2_common_1.literal([\n                    tv2_common_1.literal(Object.assign({ id: ``, enable: {\n                            start: 0\n                        }, priority: 1, layer: layers_1.OfftubeAtemLLayer.AtemMEProgram, content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                input: Number(atemInput),\n                                transition: partDefinition.transition\n                                    ? tv2_common_1.TransitionFromString(partDefinition.transition.style)\n                                    : timeline_state_resolver_types_1.AtemTransitionStyle.CUT,\n                                transitionSettings: tv2_common_1.TransitionSettings(partDefinition)\n                            }\n                        } }, (tv2_common_1.AddParentClass(partDefinition)\n                        ? { classes: [tv2_common_1.CameraParentClass('studio0', partDefinition.variant.name)] }\n                        : {}))),\n                    ...tv2_common_1.GetSisyfosTimelineObjForCamera(context, config, partDefinition.rawType)\n                ])\n            }\n        }));\n    }\n    EvaluateCues_1.OfftubeEvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, {});\n    tv2_common_1.AddScript(partDefinition, pieces, partTime, layers_2.OffTubeSourceLayer.PgmScript);\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.OfftubeCreatePartKam = OfftubeCreatePartKam;\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst layers_1 = __webpack_require__(9);\nconst EvaluateCues_1 = __webpack_require__(78);\nconst MergePiecesAsTimeline_1 = __webpack_require__(103);\nconst layers_2 = __webpack_require__(10);\nfunction OfftubeCreatePartServer(context, config, partDefinition, segmentExternalId) {\n    const basePartProps = tv2_common_1.CreatePartServerBase(context, config, partDefinition);\n    if (basePartProps.invalid) {\n        return basePartProps.part;\n    }\n    let part = basePartProps.part.part;\n    const pieces = basePartProps.part.pieces;\n    const adLibPieces = basePartProps.part.adLibPieces;\n    const file = basePartProps.file;\n    const duration = basePartProps.duration;\n    part = Object.assign({}, part\n    // TODO: Effekt\n    // ...CreateEffektForpart(context, config, partDefinition, pieces)\n    );\n    pieces.push(tv2_common_1.literal({\n        _id: '',\n        externalId: partDefinition.externalId,\n        name: file,\n        enable: { start: 0 },\n        outputLayerId: 'pgm',\n        sourceLayerId: layers_2.OffTubeSourceLayer.PgmServer,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        metaData: tv2_common_1.literal({\n            mediaPlayerSessions: [segmentExternalId]\n        }),\n        content: tv2_common_1.MakeContentServer(file, segmentExternalId, partDefinition, config, {\n            Caspar: {\n                ClipPending: layers_1.OfftubeCasparLLayer.CasparPlayerClipPending\n            },\n            Sisyfos: {\n                ClipPending: layers_1.OfftubeSisyfosLLayer.SisyfosSourceClipPending\n            },\n            ATEM: {\n                MEPGM: layers_1.OfftubeAtemLLayer.AtemMEProgram\n            }\n        }),\n        adlibPreroll: config.studio.CasparPrerollDuration\n    }));\n    let adlibServer = tv2_common_1.CreateAdlibServer(config, 0, partDefinition.externalId, tv2_constants_1.MEDIA_PLAYER_AUTO, partDefinition, file, false, {\n        PgmServer: layers_2.OffTubeSourceLayer.SelectedAdLibServer,\n        PgmVoiceOver: layers_2.OffTubeSourceLayer.SelectedAdLibVoiceOver,\n        Caspar: {\n            ClipPending: layers_1.OfftubeCasparLLayer.CasparPlayerClipPending\n        },\n        ATEM: {\n            MEPGM: layers_1.OfftubeAtemLLayer.AtemMEClean\n        },\n        Sisyfos: {\n            ClipPending: layers_1.OfftubeSisyfosLLayer.SisyfosSourceClipPending\n        }\n    }, {\n        isOfftube: true,\n        tagAsAdlib: true,\n        enabler: tv2_constants_1.Enablers.OFFTUBE_ENABLE_SERVER\n    });\n    adlibServer.toBeQueued = true;\n    adlibServer.canCombineQueue = true;\n    adlibServer.tags = [tv2_constants_1.AdlibTags.OFFTUBE_100pc_SERVER];\n    adlibServer.name = file;\n    // TODO: This should happen in above function\n    adlibServer.expectedDuration = duration;\n    // TODO: Merge graphics into server part as timeline objects\n    EvaluateCues_1.OfftubeEvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, {\n        adlibsOnly: true\n    });\n    adlibServer = MergePiecesAsTimeline_1.MergePiecesAsTimeline(context, config, partDefinition, adlibServer, [\n        tv2_constants_1.CueType.Grafik,\n        tv2_constants_1.CueType.TargetEngine,\n        tv2_constants_1.CueType.VIZ\n    ]);\n    adLibPieces.push(adlibServer);\n    tv2_common_1.AddScript(partDefinition, pieces, duration, layers_2.OffTubeSourceLayer.PgmScript);\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.OfftubeCreatePartServer = OfftubeCreatePartServer;\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst EvaluateCues_1 = __webpack_require__(78);\nconst layers_1 = __webpack_require__(10);\nfunction CreatePartUnknown(context, config, partDefinition, totalWords, asAdlibs) {\n    const partTime = tv2_common_1.PartTime(config, partDefinition, totalWords);\n    let part = tv2_common_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.type + ' - ' + partDefinition.rawType,\n        metaData: {},\n        typeVariant: '',\n        autoNext: false,\n        expectedDuration: partTime\n    });\n    const adLibPieces = [];\n    const pieces = [];\n    EvaluateCues_1.OfftubeEvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, { adlib: asAdlibs });\n    part = Object.assign(Object.assign({}, part), tv2_common_1.GetJinglePartProperties(context, config, partDefinition));\n    if (partDefinition.cues.filter(cue => cue.type === tv2_constants_1.CueType.DVE).length) {\n        part.prerollDuration = config.studio.CasparPrerollDuration;\n    }\n    tv2_common_1.AddScript(partDefinition, pieces, partTime, layers_1.OffTubeSourceLayer.PgmScript);\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.CreatePartUnknown = CreatePartUnknown;\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst layers_1 = __webpack_require__(9);\nconst EvaluateCues_1 = __webpack_require__(78);\nconst MergePiecesAsTimeline_1 = __webpack_require__(103);\nconst sisyfos_1 = __webpack_require__(101);\nconst layers_2 = __webpack_require__(10);\nfunction OfftubeCreatePartVO(context, config, partDefinition, segmentExternalId, totalWords, totalTime) {\n    var _a;\n    const basePartProps = tv2_common_1.CreatePartServerBase(context, config, partDefinition);\n    if (basePartProps.invalid) {\n        return basePartProps.part;\n    }\n    const part = basePartProps.part.part;\n    const pieces = basePartProps.part.pieces;\n    const adLibPieces = basePartProps.part.adLibPieces;\n    const file = basePartProps.file;\n    const duration = basePartProps.duration;\n    const sanitisedScript = partDefinition.script.replace(/\\n/g, '').replace(/\\r/g, '');\n    // TODO: EFFEKT\n    // part = { ...part, ...CreateEffektForpart(context, config, partDefinition, pieces) }\n    pieces.push(tv2_common_1.literal({\n        _id: '',\n        externalId: partDefinition.externalId,\n        name: file,\n        enable: { start: 0 },\n        outputLayerId: 'pgm',\n        sourceLayerId: layers_2.OffTubeSourceLayer.PgmServer,\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        metaData: tv2_common_1.literal({\n            mediaPlayerSessions: [segmentExternalId]\n        }),\n        content: tv2_common_1.MakeContentServer(file, segmentExternalId, partDefinition, config, {\n            Caspar: {\n                ClipPending: layers_1.OfftubeCasparLLayer.CasparPlayerClipPending\n            },\n            Sisyfos: {\n                ClipPending: layers_1.OfftubeSisyfosLLayer.SisyfosSourceClipPending\n            },\n            ATEM: {\n                MEPGM: layers_1.OfftubeAtemLLayer.AtemMEProgram\n            }\n        }),\n        adlibPreroll: config.studio.CasparPrerollDuration\n    }));\n    let adlibServer = tv2_common_1.CreateAdlibServer(config, 0, partDefinition.externalId, segmentExternalId, partDefinition, file, true, {\n        PgmServer: layers_2.OffTubeSourceLayer.SelectedAdLibServer,\n        PgmVoiceOver: layers_2.OffTubeSourceLayer.SelectedAdLibVoiceOver,\n        Caspar: {\n            ClipPending: layers_1.OfftubeCasparLLayer.CasparPlayerClipPending\n        },\n        ATEM: {\n            MEPGM: layers_1.OfftubeAtemLLayer.AtemMEClean\n        },\n        Sisyfos: {\n            ClipPending: layers_1.OfftubeSisyfosLLayer.SisyfosSourceClipPending\n        }\n    }, {\n        isOfftube: true,\n        tagAsAdlib: true,\n        enabler: tv2_constants_1.Enablers.OFFTUBE_ENABLE_SERVER\n    });\n    adlibServer.name = file;\n    adlibServer.toBeQueued = true;\n    adlibServer.canCombineQueue = true;\n    adlibServer.tags = [tv2_constants_1.AdlibTags.OFFTUBE_ADLIB_SERVER];\n    adlibServer.expectedDuration = (sanitisedScript.length / totalWords) * (totalTime * 1000 - duration) + duration;\n    (_a = adlibServer.content) === null || _a === void 0 ? void 0 : _a.timelineObjects.push(...sisyfos_1.GetSisyfosTimelineObjForCamera('server'));\n    EvaluateCues_1.OfftubeEvaluateCues(context, config, pieces, adLibPieces, partDefinition.cues, partDefinition, { adlibsOnly: true });\n    adlibServer = MergePiecesAsTimeline_1.MergePiecesAsTimeline(context, config, partDefinition, adlibServer, [\n        tv2_constants_1.CueType.Grafik,\n        tv2_constants_1.CueType.TargetEngine,\n        tv2_constants_1.CueType.VIZ\n    ]);\n    adLibPieces.push(adlibServer);\n    tv2_common_1.AddScript(partDefinition, pieces, duration, layers_2.OffTubeSourceLayer.PgmScript);\n    if (pieces.length === 0) {\n        part.invalid = true;\n    }\n    return {\n        part,\n        adLibPieces,\n        pieces\n    };\n}\nexports.OfftubeCreatePartVO = OfftubeCreatePartVO;\n\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This function is called whenever an item in the as-run-log is created\n */\nfunction default_1(_context) {\n    return Promise.resolve([]);\n}\nexports.default = default_1;\n\n\n/***/ })\n/******/ ]);",
            "modified": 1590581732119,
            "studioConfigManifest": [],
            "showStyleConfigManifest": [
                {
                    "id": "CasparCGLoadingClip",
                    "name": "CasparCG Loading Clip",
                    "description": "Clip to play when media is loading",
                    "type": "string",
                    "defaultVal": "LoadingLoop",
                    "required": true
                },
                {
                    "id": "DVEStyles",
                    "name": "DVE Layouts",
                    "description": "",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "DVEName": "",
                            "DVEInputs": "",
                            "DVEJSON": "{}",
                            "DVEGraphicsTemplate": "",
                            "DVEGraphicsTemplateJSON": "{}",
                            "DVEGraphicsKey": "",
                            "DVEGraphicsFrame": ""
                        }
                    ],
                    "columns": [
                        {
                            "id": "DVEName",
                            "name": "DVE name",
                            "description": "The name as it will appear in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "DVEInputs",
                            "name": "Box inputs",
                            "description": "I.e.: 1:INP1;2:INP3; as an example to chose which ATEM boxes to assign iNews inputs to",
                            "type": "string",
                            "required": true,
                            "defaultVal": "1:INP1;2:INP2;3:INP3;4:INP4",
                            "rank": 1
                        },
                        {
                            "id": "DVEJSON",
                            "name": "DVE config",
                            "description": "DVE config pulled from ATEM",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 2
                        },
                        {
                            "id": "DVEGraphicsTemplate",
                            "name": "CasparCG template",
                            "description": "File name (path) for CasparCG overlay template (locators)",
                            "type": "string",
                            "required": true,
                            "defaultVal": "dve/locators",
                            "rank": 3
                        },
                        {
                            "id": "DVEGraphicsTemplateJSON",
                            "name": "CasparCG template config",
                            "description": "Position (and style) data for the boxes in the CasparCG template",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 4
                        },
                        {
                            "id": "DVEGraphicsKey",
                            "name": "CasparCG key file",
                            "description": "Key file for DVE",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 5
                        },
                        {
                            "id": "DVEGraphicsFrame",
                            "name": "CasparCG frame file",
                            "description": "Frames file for caspar",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 6
                        }
                    ]
                },
                {
                    "id": "GFXTemplates",
                    "name": "GFX Templates",
                    "description": "This table can contain info in two ways. Things marked (**) are always required. If you want to do the mapping from iNews-code, then all (*)-elements are aslo required. VizTemplate is what the graphic is called in viz. Source layer is the ID of the Sofie Source layer in the UI (i.e. \"studio0_graphicsTema\"). Layer mapping is the Sofie studio layer mapping (i.e \"viz_layer_tema\").  iNews command can be something like \"KG=\", then iNews Name is the thing that follows in iNes i.e. \"ident_nyhederne\"",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "VizTemplate": "",
                            "SourceLayer": "",
                            "LayerMapping": "",
                            "INewsCode": "",
                            "INewsName": "",
                            "VizDestination": "",
                            "OutType": "",
                            "Argument1": "",
                            "Argument2": "",
                            "IsDesign": false
                        }
                    ],
                    "columns": [
                        {
                            "id": "INewsCode",
                            "name": "iNews Command (*)",
                            "description": "The code as it will appear in iNews",
                            "type": "string",
                            "required": false,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "INewsName",
                            "name": "iNews Name (*)",
                            "description": "The name after the code",
                            "type": "string",
                            "required": false,
                            "defaultVal": "",
                            "rank": 1
                        },
                        {
                            "id": "VizTemplate",
                            "name": "Viz Template Name (**)",
                            "description": "The name of the Viz Template",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 2
                        },
                        {
                            "id": "VizDestination",
                            "name": "Viz Destination (*)",
                            "description": "The name of the Viz Engine",
                            "type": "string",
                            "required": false,
                            "defaultVal": "",
                            "rank": 3
                        },
                        {
                            "id": "OutType",
                            "name": "Out type",
                            "description": "The type of out, none follow timecode, S stays on to ??, B stays on to ??, O stays on to ??",
                            "type": "string",
                            "required": false,
                            "defaultVal": "",
                            "rank": 4
                        },
                        {
                            "id": "IsDesign",
                            "name": "Changes Design",
                            "description": "Whether this cue changes the design",
                            "type": "boolean",
                            "required": false,
                            "defaultVal": false,
                            "rank": 5
                        },
                        {
                            "id": "SourceLayer",
                            "name": "Source layer (**)",
                            "description": "The ID of the source layer to place the piece on in Sofie UI",
                            "type": "source_layers",
                            "multiple": false,
                            "required": true,
                            "defaultVal": "",
                            "rank": 6
                        },
                        {
                            "id": "LayerMapping",
                            "name": "Layer mapping (**)",
                            "description": "The Sofie Layer mapping to use in playback. This will ensure proper graphic transition logic by matching the graphic layers.",
                            "type": "layer_mappings",
                            "filters": {
                                "deviceTypes": [
                                    1
                                ]
                            },
                            "multiple": false,
                            "required": true,
                            "defaultVal": "",
                            "rank": 7
                        }
                    ]
                },
                {
                    "id": "WipesConfig",
                    "name": "Wipes Configuration",
                    "description": "Wipes effekts configuration",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "EffektNumber": 0,
                            "ClipName": "",
                            "Duration": 0,
                            "StartAlpha": 0,
                            "EndAlpha": 0
                        }
                    ],
                    "columns": [
                        {
                            "id": "EffektNumber",
                            "name": "Effekt Number",
                            "description": "The Effect Number",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 0
                        },
                        {
                            "id": "ClipName",
                            "name": "Clip Name",
                            "description": "The name of the wipe clip",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 1
                        },
                        {
                            "id": "Duration",
                            "name": "Effekt Duration",
                            "description": "Duration of the effekt",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 2
                        },
                        {
                            "id": "StartAlpha",
                            "name": "Alpha at Start",
                            "description": "Number of frames of alpha at start",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 3
                        },
                        {
                            "id": "EndAlpha",
                            "name": "Alpha at End",
                            "description": "Number of frames of alpha at end",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 4
                        }
                    ]
                },
                {
                    "id": "BreakerConfig",
                    "name": "Breaker Configuration",
                    "description": "Clip name is the clip name without file extension. Duration is the length of the file, including trailing audio. Alpha start is the number of frames from the first frame and until the jingle covers the full frame. The alpha end is how many frames from the alpha starts fading out, until the very end of the file.",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "BreakerName": "",
                            "ClipName": "",
                            "Duration": 0,
                            "StartAlpha": 0,
                            "EndAlpha": 0,
                            "Autonext": true
                        }
                    ],
                    "columns": [
                        {
                            "id": "BreakerName",
                            "name": "Breaker name",
                            "description": "Breaker name as typed in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "ClipName",
                            "name": "Clip Name",
                            "description": "The name of the breaker clip to play",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 1
                        },
                        {
                            "id": "Duration",
                            "name": "Effekt Duration",
                            "description": "Duration of the effekt",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 2
                        },
                        {
                            "id": "StartAlpha",
                            "name": "Alpha at Start",
                            "description": "Number of frames of alpha at start",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 3
                        },
                        {
                            "id": "EndAlpha",
                            "name": "Alpha at End",
                            "description": "Number of frames of alpha at end",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 4
                        },
                        {
                            "id": "Autonext",
                            "name": "Autonext",
                            "description": "",
                            "type": "boolean",
                            "required": true,
                            "defaultVal": true,
                            "rank": 5
                        }
                    ]
                },
                {
                    "id": "DefaultTemplateDuration",
                    "name": "Default Template Duration",
                    "description": "Default Template Duration",
                    "type": "number",
                    "required": true,
                    "defaultVal": 4
                },
                {
                    "id": "LYDConfig",
                    "name": "LYD Config",
                    "description": "Map LYD iNews names to file names",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "INewsName": "",
                            "FileName": ""
                        }
                    ],
                    "columns": [
                        {
                            "id": "INewsName",
                            "name": "iNews Name",
                            "description": "Name of LYD as in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "FileName",
                            "name": "File Name",
                            "description": "The name of the LYD file",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 1
                        },
                        {
                            "id": "FadeIn",
                            "name": "Fade In",
                            "description": "ms duration to fade in file",
                            "type": "number",
                            "required": true,
                            "defaultVal": 1000,
                            "rank": 2
                        },
                        {
                            "id": "FadeOut",
                            "name": "Fade Out",
                            "description": "ms duration to fade out file",
                            "type": "number",
                            "required": true,
                            "defaultVal": 1000,
                            "rank": 3
                        }
                    ]
                }
            ],
            "databaseVersion": {
                "studio": {},
                "showStyle": {}
            },
            "blueprintVersion": "0.1.0+v1.1.9",
            "integrationVersion": "0.0.0",
            "TSRVersion": "0.0.0",
            "minimumCoreVersion": "1.2.0",
            "blueprintType": "showstyle"
        },
        {
            "_id": "tv2_offtube_studio",
            "name": "tv2_offtube_studio",
            "created": 1590581732152,
            "code": "/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 143);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(41), exports);\ntslib_1.__exportStar(__webpack_require__(12), exports);\ntslib_1.__exportStar(__webpack_require__(42), exports);\ntslib_1.__exportStar(__webpack_require__(8), exports);\ntslib_1.__exportStar(__webpack_require__(49), exports);\ntslib_1.__exportStar(__webpack_require__(50), exports);\ntslib_1.__exportStar(__webpack_require__(51), exports);\ntslib_1.__exportStar(__webpack_require__(52), exports);\ntslib_1.__exportStar(__webpack_require__(53), exports);\ntslib_1.__exportStar(__webpack_require__(54), exports);\ntslib_1.__exportStar(__webpack_require__(55), exports);\ntslib_1.__exportStar(__webpack_require__(56), exports);\ntslib_1.__exportStar(__webpack_require__(57), exports);\ntslib_1.__exportStar(__webpack_require__(58), exports);\ntslib_1.__exportStar(__webpack_require__(61), exports);\ntslib_1.__exportStar(__webpack_require__(63), exports);\ntslib_1.__exportStar(__webpack_require__(66), exports);\ntslib_1.__exportStar(__webpack_require__(69), exports);\ntslib_1.__exportStar(__webpack_require__(16), exports);\ntslib_1.__exportStar(__webpack_require__(72), exports);\ntslib_1.__exportStar(__webpack_require__(73), exports);\ntslib_1.__exportStar(__webpack_require__(76), exports);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(25), exports);\ntslib_1.__exportStar(__webpack_require__(26), exports);\ntslib_1.__exportStar(__webpack_require__(27), exports);\ntslib_1.__exportStar(__webpack_require__(28), exports);\ntslib_1.__exportStar(__webpack_require__(29), exports);\ntslib_1.__exportStar(__webpack_require__(30), exports);\ntslib_1.__exportStar(__webpack_require__(31), exports);\ntslib_1.__exportStar(__webpack_require__(32), exports);\ntslib_1.__exportStar(__webpack_require__(33), exports);\ntslib_1.__exportStar(__webpack_require__(34), exports);\ntslib_1.__exportStar(__webpack_require__(35), exports);\ntslib_1.__exportStar(__webpack_require__(36), exports);\ntslib_1.__exportStar(__webpack_require__(37), exports);\nconst Timeline = __webpack_require__(38);\nexports.Timeline = Timeline;\nvar DeviceType;\n(function (DeviceType) {\n    DeviceType[DeviceType[\"ABSTRACT\"] = 0] = \"ABSTRACT\";\n    DeviceType[DeviceType[\"CASPARCG\"] = 1] = \"CASPARCG\";\n    DeviceType[DeviceType[\"ATEM\"] = 2] = \"ATEM\";\n    DeviceType[DeviceType[\"LAWO\"] = 3] = \"LAWO\";\n    DeviceType[DeviceType[\"HTTPSEND\"] = 4] = \"HTTPSEND\";\n    DeviceType[DeviceType[\"PANASONIC_PTZ\"] = 5] = \"PANASONIC_PTZ\";\n    DeviceType[DeviceType[\"TCPSEND\"] = 6] = \"TCPSEND\";\n    DeviceType[DeviceType[\"HYPERDECK\"] = 7] = \"HYPERDECK\";\n    DeviceType[DeviceType[\"PHAROS\"] = 8] = \"PHAROS\";\n    DeviceType[DeviceType[\"OSC\"] = 9] = \"OSC\";\n    DeviceType[DeviceType[\"HTTPWATCHER\"] = 10] = \"HTTPWATCHER\";\n    DeviceType[DeviceType[\"SISYFOS\"] = 11] = \"SISYFOS\";\n    DeviceType[DeviceType[\"QUANTEL\"] = 12] = \"QUANTEL\";\n    DeviceType[DeviceType[\"VIZMSE\"] = 13] = \"VIZMSE\";\n    DeviceType[DeviceType[\"SINGULAR_LIVE\"] = 14] = \"SINGULAR_LIVE\";\n})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(17), exports);\ntslib_1.__exportStar(__webpack_require__(18), exports);\ntslib_1.__exportStar(__webpack_require__(19), exports);\ntslib_1.__exportStar(__webpack_require__(20), exports);\ntslib_1.__exportStar(__webpack_require__(21), exports);\ntslib_1.__exportStar(__webpack_require__(22), exports);\ntslib_1.__exportStar(__webpack_require__(23), exports);\ntslib_1.__exportStar(__webpack_require__(24), exports);\ntslib_1.__exportStar(__webpack_require__(39), exports);\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = _;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(44), exports);\ntslib_1.__exportStar(__webpack_require__(45), exports);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n\n\n/***/ }),\n/* 6 */,\n/* 7 */,\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nfunction literal(o) {\n    return o;\n}\nexports.literal = literal;\nfunction assertUnreachable(_never) {\n    throw new Error('Switch validation failed, look for assertUnreachable(...)');\n}\nexports.assertUnreachable = assertUnreachable;\nfunction createVirtualPiece(layer, enable, mainPiece) {\n    return {\n        _id: '',\n        name: '',\n        externalId: mainPiece ? mainPiece.externalId : '-',\n        enable: typeof enable === 'number'\n            ? {\n                start: enable,\n                duration: 0\n            }\n            : enable,\n        sourceLayerId: layer,\n        outputLayerId: 'pgm',\n        virtual: true,\n        content: {\n            timelineObjects: []\n        }\n    };\n}\nexports.createVirtualPiece = createVirtualPiece;\nfunction createEmptyObject(obj) {\n    return literal(Object.assign(Object.assign({ id: '', priority: 0 }, obj), { content: {\n            deviceType: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n            type: 'empty'\n        } }));\n}\nexports.createEmptyObject = createEmptyObject;\n/**\n * Returs true if the piece is interface IBlueprintAdLibPiece\n * @param {IBlueprintPiece | IBlueprintAdLibPiece} piece Piece to check\n */\nfunction isAdLibPiece(piece) {\n    return '_rank' in piece;\n}\nexports.isAdLibPiece = isAdLibPiece;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\n/** Get all the Real LLayers (map to devices). Note: Does not include some which are dynamically generated */\nfunction RealLLayers() {\n    return (_.values(OfftubeAbstractLLayer)\n        // @ts-ignore\n        .concat(_.values(OfftubeSisyfosLLayer))\n        .concat(_.values(OfftubeAtemLLayer))\n        .concat(_.values(OfftubeCasparLLayer))\n        .concat(_.values(tv2_common_1.GraphicLLayer)));\n}\nexports.RealLLayers = RealLLayers;\nvar OfftubeAbstractLLayer;\n(function (OfftubeAbstractLLayer) {\n    /** Contains the classes to enable infinites */\n    OfftubeAbstractLLayer[\"OfftubeAbstractLLayerPgmEnabler\"] = \"offtube_abstract_pgm_enabler\";\n})(OfftubeAbstractLLayer = exports.OfftubeAbstractLLayer || (exports.OfftubeAbstractLLayer = {}));\nvar OfftubeSisyfosLLayer;\n(function (OfftubeSisyfosLLayer) {\n    OfftubeSisyfosLLayer[\"SisyfosSourceClipPending\"] = \"sisyfos_source_clip_pending\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceJingle\"] = \"sisyfos_source_jingle\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceHost_1_ST_A\"] = \"sisyfos_source_Host_1_st_a\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceHost_2_ST_A\"] = \"sisyfos_source_Host_2_st_a\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceHost_3_ST_A\"] = \"sisyfos_source_Host_3_st_a\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceLive_1\"] = \"sisyfos_source_live_1\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceLive_2\"] = \"sisyfos_source_live_2\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceWorldFeed_Stereo\"] = \"sisyfos_source_world_feed_stereo\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceWorldFeed_Surround\"] = \"sisyfos_source_world_feed_surround\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceServerA\"] = \"sisyfos_source_server_a\";\n    OfftubeSisyfosLLayer[\"SisyfosSourceServerB\"] = \"sisyfos_source_server_b\";\n})(OfftubeSisyfosLLayer = exports.OfftubeSisyfosLLayer || (exports.OfftubeSisyfosLLayer = {}));\nvar OfftubeAtemLLayer;\n(function (OfftubeAtemLLayer) {\n    OfftubeAtemLLayer[\"AtemMEClean\"] = \"atem_me_clean\";\n    OfftubeAtemLLayer[\"AtemDSKGraphics\"] = \"atem_dsk_graphics\";\n    OfftubeAtemLLayer[\"AtemMEProgram\"] = \"atem_me_program\";\n    OfftubeAtemLLayer[\"AtemSSrcArt\"] = \"atem_supersource_art\";\n    OfftubeAtemLLayer[\"AtemSSrcDefault\"] = \"atem_supersource_default\";\n    OfftubeAtemLLayer[\"AtemAuxClean\"] = \"atem_aux_clean\";\n    OfftubeAtemLLayer[\"AtemAuxScreen\"] = \"atem_aux_screen\";\n    OfftubeAtemLLayer[\"AtemSSrcBox1\"] = \"atem_supersource_z_box1\";\n    OfftubeAtemLLayer[\"AtemSSrcBox2\"] = \"atem_supersource_z_box2\";\n    OfftubeAtemLLayer[\"AtemSSrcBox3\"] = \"atem_supersource_z_box3\";\n    OfftubeAtemLLayer[\"AtemSSrcBox4\"] = \"atem_supersource_z_box4\";\n})(OfftubeAtemLLayer = exports.OfftubeAtemLLayer || (exports.OfftubeAtemLLayer = {}));\nvar OfftubeCasparLLayer;\n(function (OfftubeCasparLLayer) {\n    OfftubeCasparLLayer[\"CasparPlayerClipPending\"] = \"casparcg_player_clip_pending\";\n    OfftubeCasparLLayer[\"CasparGraphicsOverlay\"] = \"casparcg_graphics_overlay\";\n    OfftubeCasparLLayer[\"CasparPlayerJingle\"] = \"casparcg_player_jingle\";\n    OfftubeCasparLLayer[\"CasparGraphicsFull\"] = \"casparcg_graphics_full\";\n    OfftubeCasparLLayer[\"CasparCGDVELoop\"] = \"casparcg_dve_loop\";\n    OfftubeCasparLLayer[\"CasparCGDVETemplate\"] = \"casparcg_cg_dve_template\";\n    OfftubeCasparLLayer[\"CasparCGDVEKey\"] = \"casparcg_dve_key\";\n    OfftubeCasparLLayer[\"CasparCGDVEFrame\"] = \"casparcg_dve_frame\";\n    OfftubeCasparLLayer[\"CasparStudioScreenLoop\"] = \"casparcg_studio_screen_loop\";\n})(OfftubeCasparLLayer = exports.OfftubeCasparLLayer || (exports.OfftubeCasparLLayer = {}));\nfunction CasparPlayerClip(i) {\n    return `casparcg_player_clip_${i}`;\n}\nexports.CasparPlayerClip = CasparPlayerClip;\nfunction CasparPlayerClipLoadingLoop(i) {\n    return `casparcg_player_clip_${i}_loading_loop`;\n}\nexports.CasparPlayerClipLoadingLoop = CasparPlayerClipLoadingLoop;\n\n\n/***/ }),\n/* 10 */,\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AtemSourceIndex;\n(function (AtemSourceIndex) {\n    AtemSourceIndex[AtemSourceIndex[\"Blk\"] = 0] = \"Blk\";\n    AtemSourceIndex[AtemSourceIndex[\"Bars\"] = 1000] = \"Bars\";\n    AtemSourceIndex[AtemSourceIndex[\"Col1\"] = 2001] = \"Col1\";\n    AtemSourceIndex[AtemSourceIndex[\"Col2\"] = 2002] = \"Col2\";\n    AtemSourceIndex[AtemSourceIndex[\"MP1\"] = 3010] = \"MP1\";\n    AtemSourceIndex[AtemSourceIndex[\"MP1K\"] = 3011] = \"MP1K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP2\"] = 3020] = \"MP2\";\n    AtemSourceIndex[AtemSourceIndex[\"MP2K\"] = 3021] = \"MP2K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP3\"] = 3030] = \"MP3\";\n    AtemSourceIndex[AtemSourceIndex[\"MP3K\"] = 3031] = \"MP3K\";\n    AtemSourceIndex[AtemSourceIndex[\"MP4\"] = 3040] = \"MP4\";\n    AtemSourceIndex[AtemSourceIndex[\"MP4K\"] = 3041] = \"MP4K\";\n    AtemSourceIndex[AtemSourceIndex[\"SSrc\"] = 6000] = \"SSrc\";\n    AtemSourceIndex[AtemSourceIndex[\"SSrc2\"] = 6001] = \"SSrc2\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd1\"] = 7001] = \"Cfd1\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd2\"] = 7002] = \"Cfd2\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd3\"] = 7003] = \"Cfd3\";\n    AtemSourceIndex[AtemSourceIndex[\"Cfd4\"] = 7004] = \"Cfd4\";\n    AtemSourceIndex[AtemSourceIndex[\"Output1\"] = 8001] = \"Output1\";\n    AtemSourceIndex[AtemSourceIndex[\"Output2\"] = 8002] = \"Output2\";\n    AtemSourceIndex[AtemSourceIndex[\"Output3\"] = 8003] = \"Output3\";\n    AtemSourceIndex[AtemSourceIndex[\"Output4\"] = 8004] = \"Output4\";\n    AtemSourceIndex[AtemSourceIndex[\"Output5\"] = 8005] = \"Output5\";\n    AtemSourceIndex[AtemSourceIndex[\"Output6\"] = 8006] = \"Output6\";\n    AtemSourceIndex[AtemSourceIndex[\"Output7\"] = 8007] = \"Output7\";\n    AtemSourceIndex[AtemSourceIndex[\"Output8\"] = 8008] = \"Output8\";\n    AtemSourceIndex[AtemSourceIndex[\"Output9\"] = 8009] = \"Output9\";\n    AtemSourceIndex[AtemSourceIndex[\"Output10\"] = 80010] = \"Output10\";\n    AtemSourceIndex[AtemSourceIndex[\"Output11\"] = 80011] = \"Output11\";\n    AtemSourceIndex[AtemSourceIndex[\"Output12\"] = 80012] = \"Output12\";\n    AtemSourceIndex[AtemSourceIndex[\"Output13\"] = 80013] = \"Output13\";\n    AtemSourceIndex[AtemSourceIndex[\"Output14\"] = 80014] = \"Output14\";\n    AtemSourceIndex[AtemSourceIndex[\"Output15\"] = 80015] = \"Output15\";\n    AtemSourceIndex[AtemSourceIndex[\"Output16\"] = 80016] = \"Output16\";\n    AtemSourceIndex[AtemSourceIndex[\"Output17\"] = 80017] = \"Output17\";\n    AtemSourceIndex[AtemSourceIndex[\"Output18\"] = 80018] = \"Output18\";\n    AtemSourceIndex[AtemSourceIndex[\"Output19\"] = 80019] = \"Output19\";\n    AtemSourceIndex[AtemSourceIndex[\"Output20\"] = 80020] = \"Output20\";\n    AtemSourceIndex[AtemSourceIndex[\"Output21\"] = 80021] = \"Output21\";\n    AtemSourceIndex[AtemSourceIndex[\"Output22\"] = 80022] = \"Output22\";\n    AtemSourceIndex[AtemSourceIndex[\"Output23\"] = 80023] = \"Output23\";\n    AtemSourceIndex[AtemSourceIndex[\"Output24\"] = 80024] = \"Output24\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg1\"] = 10010] = \"Prg1\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv1\"] = 10011] = \"Prv1\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg2\"] = 10020] = \"Prg2\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv2\"] = 10021] = \"Prv2\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg3\"] = 10030] = \"Prg3\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv3\"] = 10031] = \"Prv3\";\n    AtemSourceIndex[AtemSourceIndex[\"Prg4\"] = 10040] = \"Prg4\";\n    AtemSourceIndex[AtemSourceIndex[\"Prv4\"] = 10041] = \"Prv4\";\n})(AtemSourceIndex = exports.AtemSourceIndex || (exports.AtemSourceIndex = {}));\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TimeFromFrames(frames) {\n    return (1000 / 25) * frames;\n}\nexports.TimeFromFrames = TimeFromFrames;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nfunction ParseCue(cue) {\n    if (!cue) {\n        return {\n            type: tv2_constants_1.CueType.Unknown,\n            iNewsCommand: ''\n        };\n    }\n    cue = cue.filter(c => c !== '');\n    // Replace multiple spaces / tabs with a single space\n    cue = cue.map(c => c.trim().replace(/\\s+/g, ' '));\n    if (cue.length === 0) {\n        return {\n            type: tv2_constants_1.CueType.Unknown,\n            iNewsCommand: ''\n        };\n    }\n    if (cue[0].match(/^[#* ]?kg[= ]ovl-all-out$/i) || cue[0].match(/^[#* ]?kg[= ]altud$/i)) {\n        // All out\n        return parseAllOut(cue);\n    }\n    else if (cue[0].match(/(?:^[*|#]?kg[ |=])|(?:^digi)/i)) {\n        // kg (Grafik)\n        return parsekg(cue);\n    }\n    else if (cue[0].match(/^]] [a-z]\\d\\.\\d [a-z] \\d \\[\\[$/i)) {\n        // MOS\n        return parseMOS(cue);\n    }\n    else if (cue[0].match(/[#|*]?cg\\d+[ -]pilotdata/i)) {\n        return parseMOS(cue);\n    }\n    else if (cue[0].match(/^EKSTERN=/i)) {\n        // EKSTERN\n        const eksternSource = cue[0].match(/^EKSTERN=(.+)$/i);\n        if (eksternSource) {\n            return {\n                type: tv2_constants_1.CueType.Ekstern,\n                source: eksternSource[1],\n                iNewsCommand: 'EKSTERN'\n            };\n        }\n    }\n    else if (cue[0].match(/^DVE=/i)) {\n        // DVE\n        return parseDVE(cue);\n    }\n    else if (cue[0].match(/^TELEFON=/i)) {\n        // Telefon\n        return parseTelefon(cue);\n    }\n    else if (cue[0].match(/^SS|(?:GRAFIK)=(?:.*)(?:$| )/i)) {\n        // Target engine\n        return parseTargetEngine(cue);\n    }\n    else if (cue[0].match(/^SS|(?:GRAFIK|VIZ)=(?:full|ovl|wall)(?:$| )/i)) {\n        return parseTargetEngine(cue);\n    }\n    else if (cue[0].match(/^VIZ=/i)) {\n        return parseVIZCues(cue);\n    }\n    else if (cue[0].match(/^STUDIE=MIC ON OFF$/i)) {\n        return parseMic(cue);\n    }\n    else if (cue[0].match(/^ADLIBPI?X=/i)) {\n        return parseAdLib(cue);\n    }\n    else if (cue[0].match(/^KOMMANDO=/i)) {\n        return parseKommando(cue);\n    }\n    else if (cue[0].match(/^LYD=/i)) {\n        return parseLYD(cue);\n    }\n    else if (cue[0].match(/^JINGLE\\d+=/i)) {\n        return parseJingle(cue);\n    }\n    return {\n        type: tv2_constants_1.CueType.Unknown,\n        iNewsCommand: ''\n    };\n}\nexports.ParseCue = ParseCue;\nfunction parsekg(cue) {\n    let kgCue = {\n        type: tv2_constants_1.CueType.Grafik,\n        template: '',\n        cue: '',\n        textFields: [],\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^([*|#]?kg|digi)/i);\n    kgCue.iNewsCommand = command ? command[1] : 'kg';\n    const firstLineValues = cue[0].match(/^[*|#]?kg[ |=]([\\w|\\d]+)( (.+))*$/i);\n    if (firstLineValues) {\n        kgCue.cue = cue[0].match(/kg/) ? 'kg' : 'KG'; // THIS ONE SHOULD NOT BE INSENSITIVE\n        kgCue.template = firstLineValues[1];\n        if (firstLineValues[3]) {\n            kgCue.textFields.push(firstLineValues[3]);\n        }\n    }\n    else if (cue[0].match(/^DIGI=/i)) {\n        kgCue.cue = 'DIGI';\n        const templateType = cue[0].match(/^DIGI=(.+)$/i);\n        if (templateType) {\n            kgCue.template = templateType[1];\n        }\n    }\n    let textFields = cue.length - 1;\n    if (isTime(cue[cue.length - 1])) {\n        kgCue = Object.assign(Object.assign({}, kgCue), parseTime(cue[cue.length - 1]));\n    }\n    else if (!cue[cue.length - 1].match(/;x.xx/i)) {\n        textFields += 1;\n    }\n    else {\n        kgCue.adlib = true;\n        const end = parseTime(cue[cue.length - 1]).end;\n        if (end) {\n            kgCue = Object.assign(Object.assign({}, kgCue), { end });\n        }\n    }\n    for (let i = 1; i < textFields; i++) {\n        kgCue.textFields.push(cue[i]);\n    }\n    if (!kgCue.start) {\n        kgCue.adlib = true;\n    }\n    return kgCue;\n}\nfunction parseMOS(cue) {\n    const mosCue = {\n        type: tv2_constants_1.CueType.MOS,\n        name: '',\n        vcpid: -1,\n        continueCount: -1,\n        iNewsCommand: 'VCP'\n    };\n    const realCue = [];\n    cue.forEach(line => {\n        if (!line.match(/[#|*]?cg\\d+[ -]pilotdata/i) &&\n            !line.match(/^]] [a-z]\\d\\.\\d [a-z] \\d \\[\\[$/i) &&\n            !line.match(/cg\\d+ \\]\\] .+? \\[\\[ pilotdata/i)) {\n            realCue.push(line);\n        }\n        else if (!!line.match(/[#|*]?cg\\d+[ -]pilotdata/i)) {\n            const engine = line.match(/[#|*]?cg(\\d+)[ -]pilotdata/i);\n            if (engine && engine[1]) {\n                mosCue.engine = engine[1];\n            }\n        }\n    });\n    if (realCue.length === 4) {\n        const vcpid = realCue[1].match(/^VCPID=(\\d+)$/i);\n        const continueCount = realCue[2].match(/^ContinueCount=(-?\\d+)$/i);\n        const timing = realCue[0].match(/L\\|(M|\\d{1,2}(?:\\:\\d{1,2}){0,2})\\|([SBO]|\\d{1,2}(?:\\:\\d{1,2}){0,2})$/i);\n        if (vcpid && continueCount) {\n            mosCue.name = realCue[0];\n            mosCue.vcpid = Number(vcpid[1]);\n            mosCue.continueCount = Number(continueCount[1]);\n            if (!!mosCue.name.match(/^ST4_WALL/i)) {\n                mosCue.isActuallyWall = true;\n            }\n            if (timing) {\n                if (timing[1] === 'M') {\n                    mosCue.adlib = true;\n                }\n                else if (isMosTime(timing[1])) {\n                    mosCue.start = parseTime(timing[1]).start;\n                }\n                if (timing[2].match(/[SBO]/i)) {\n                    mosCue.end = {\n                        infiniteMode: timing[2]\n                    };\n                }\n                else if (isMosTime(timing[2])) {\n                    mosCue.end = parseTime(timing[2]).start;\n                }\n            }\n            else {\n                mosCue.start = { seconds: 0 };\n            }\n        }\n    }\n    return mosCue;\n}\nfunction parseDVE(cue) {\n    let dvecue = {\n        type: tv2_constants_1.CueType.DVE,\n        template: '',\n        sources: {},\n        labels: [],\n        iNewsCommand: 'DVE'\n    };\n    cue.forEach(c => {\n        if (c.match(/^DVE=/i)) {\n            const template = c.match(/^DVE=(.+)$/i);\n            if (template) {\n                dvecue.template = template[1];\n            }\n        }\n        else if (c.match(/^INP\\d+=/i)) {\n            const input = c.match(/^(INP\\d)+=(.+)$/i);\n            if (input && input[1] && input[2]) {\n                dvecue.sources[input[1].toUpperCase()] = input[2];\n            }\n        }\n        else if (c.match(/^BYNAVN=/i)) {\n            const labels = c.match(/^BYNAVN=(.+)$/i);\n            if (labels) {\n                dvecue.labels = labels[1].split(/\\/|\\\\/i);\n            }\n        }\n        else if (isTime(c)) {\n            dvecue = Object.assign(Object.assign({}, dvecue), parseTime(c));\n        }\n    });\n    return dvecue;\n}\nfunction parseTelefon(cue) {\n    const telefonCue = {\n        type: tv2_constants_1.CueType.Telefon,\n        source: '',\n        iNewsCommand: 'TELEFON'\n    };\n    const source = cue[0].match(/^TELEFON=(.+)$/i);\n    if (source) {\n        telefonCue.source = source[1];\n    }\n    if (cue.length > 1) {\n        // tslint:disable-next-line:prefer-conditional-expression\n        if (cue[1].match(/(?:^[*|#]?kg[ |=])|(?:^digi)/i)) {\n            telefonCue.vizObj = parsekg(cue.slice(1, cue.length));\n        }\n        else {\n            telefonCue.vizObj = parseMOS(cue.slice(1, cue.length));\n        }\n    }\n    return telefonCue;\n}\nfunction parseVIZCues(cue) {\n    let vizCues = {\n        type: tv2_constants_1.CueType.VIZ,\n        rawType: cue[0],\n        content: {},\n        design: '',\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^(VIZ|GRAFIK)/i);\n    vizCues.iNewsCommand = command ? command[1] : 'VIZ';\n    const design = cue[0].match(/^(?:VIZ|GRAFIK)=(.*)$/i);\n    if (design) {\n        vizCues.design = design[1];\n    }\n    for (let i = 1; i < cue.length; i++) {\n        if (isTime(cue[i])) {\n            vizCues = Object.assign(Object.assign({}, vizCues), parseTime(cue[i]));\n        }\n        else {\n            const c = cue[i].split('=');\n            vizCues.content[c[0].toString().toUpperCase()] = c[1];\n        }\n    }\n    return vizCues;\n}\nfunction parseMic(cue) {\n    let micCue = {\n        type: tv2_constants_1.CueType.Mic,\n        mics: {},\n        iNewsCommand: 'STUDIE'\n    };\n    cue.forEach(c => {\n        if (!c.match(/^STUDIE=MIC ON OFF$/i)) {\n            if (isTime(c)) {\n                micCue = Object.assign(Object.assign({}, micCue), parseTime(c));\n            }\n            else {\n                const micState = c.match(/^(.+)=((?:ON)|(?:OFF))?$/i);\n                if (micState) {\n                    micCue.mics[micState[1].toString()] = micState[2] ? micState[2] === 'ON' : false;\n                }\n            }\n        }\n    });\n    return micCue;\n}\nfunction parseAdLib(cue) {\n    const adlib = {\n        type: tv2_constants_1.CueType.AdLib,\n        variant: '',\n        inputs: {},\n        iNewsCommand: 'ADLIBPIX'\n    };\n    const variant = cue[0].match(/^ADLIBPI?X=(.+)$/i);\n    if (variant) {\n        adlib.variant = variant[1];\n    }\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < cue.length; i++) {\n        const input = cue[i].match(/^(INP\\d)+=(.+)$/i);\n        if (input && input[1] && input[2] && adlib.inputs !== undefined) {\n            adlib.inputs[input[1].toString().toUpperCase()] = input[2];\n        }\n        const bynavn = cue[i].match(/^BYNAVN=(.)$/i);\n        if (bynavn) {\n            adlib.bynavn = bynavn[1];\n        }\n    }\n    return adlib;\n}\nfunction parseKommando(cue) {\n    let kommandoCue = {\n        type: tv2_constants_1.CueType.Profile,\n        profile: '',\n        iNewsCommand: 'KOMMANDO'\n    };\n    if (cue[1]) {\n        kommandoCue.profile = cue[1];\n    }\n    if (cue[2] && isTime(cue[2])) {\n        kommandoCue = Object.assign(Object.assign({}, kommandoCue), parseTime(cue[2]));\n    }\n    return kommandoCue;\n}\nfunction parseLYD(cue) {\n    let lydCue = {\n        type: tv2_constants_1.CueType.LYD,\n        variant: '',\n        iNewsCommand: 'LYD'\n    };\n    const command = cue[0].match(/^LYD=(.*)$/i);\n    if (command) {\n        lydCue.variant = command[1];\n    }\n    if (cue[1]) {\n        if (isTime(cue[1])) {\n            lydCue = Object.assign(Object.assign({}, lydCue), parseTime(cue[1]));\n        }\n        else if (cue[1].match(/;x.xx/i)) {\n            lydCue.adlib = true;\n        }\n    }\n    return lydCue;\n}\nfunction parseJingle(cue) {\n    const jingleCue = {\n        type: tv2_constants_1.CueType.Jingle,\n        clip: '',\n        iNewsCommand: 'JINGLE'\n    };\n    const clip = cue[0].match(/^JINGLE\\d+=(.*)$/i);\n    if (clip && clip[1]) {\n        jingleCue.clip = clip[1];\n    }\n    return jingleCue;\n}\nfunction parseTargetEngine(cue) {\n    let engineCue = {\n        type: tv2_constants_1.CueType.TargetEngine,\n        rawType: cue[0],\n        content: {},\n        data: {\n            engine: ''\n        },\n        iNewsCommand: ''\n    };\n    const command = cue[0].match(/^(VIZ|GRAFIK|SS)/i);\n    engineCue.iNewsCommand = command ? command[1] : 'SS';\n    const engine = cue[0].match(/^(?:VIZ|GRAFIK|SS)=(.*)$/i);\n    if (engine) {\n        engineCue.data.engine = engine[1];\n    }\n    for (let i = 1; i < cue.length; i++) {\n        if (isTime(cue[i])) {\n            engineCue = Object.assign(Object.assign({}, engineCue), parseTime(cue[i]));\n        }\n        else {\n            const c = cue[i].split('=');\n            engineCue.content[c[0].toString().toUpperCase()] = c[1];\n        }\n    }\n    return engineCue;\n}\nfunction parseAllOut(cue) {\n    let clearCue = {\n        type: tv2_constants_1.CueType.ClearGrafiks,\n        iNewsCommand: ''\n    };\n    let time = false;\n    cue.forEach(c => {\n        const command = c.match(/^([#* ]?kg)/i);\n        if (command) {\n            clearCue.iNewsCommand = command[1];\n        }\n        if (isTime(c)) {\n            time = true;\n            clearCue = Object.assign(Object.assign({}, clearCue), parseTime(c));\n        }\n    });\n    if (!time) {\n        clearCue.adlib = true;\n    }\n    return clearCue;\n}\nfunction isTime(line) {\n    return (line &&\n        !!line\n            .replace(/\\s+/gi, '')\n            .match(/^;\\d{1,2}(?:(?:\\.\\d{1,2}){0,1}){0,2}(?:(?:-\\d{1,2}(?:(?:\\.\\d{1,2}){0,1}){0,2}){0,1}|(?:-[BSO]))$/i));\n}\nexports.isTime = isTime;\nfunction isMosTime(line) {\n    return !!line.replace(/\\s+/gi, '').match(/\\d{1,2}(?:\\:\\d{1,2}){1,2}/i);\n}\nexports.isMosTime = isMosTime;\nfunction parseTime(line) {\n    const retTime = {\n        start: {},\n        end: {}\n    };\n    const startAndEnd = line.split('-');\n    startAndEnd[0] = startAndEnd[0].replace(';', '');\n    startAndEnd.forEach((time, i) => {\n        time = time.replace(/\\s+/gi, '');\n        const field = i === 0 ? 'start' : 'end';\n        if (time.match(/^[BSO]$/i) && i !== 0) {\n            retTime[field].infiniteMode = time;\n        }\n        else {\n            if (!!time.match(/\\./i)) {\n                const timeSegments = time.split('.');\n                if (timeSegments[0]) {\n                    retTime[field].seconds = (Number(timeSegments[0]) || 0) * 60;\n                }\n                if (timeSegments[1]) {\n                    if (retTime[field].seconds) {\n                        retTime[field].seconds += Number(timeSegments[1].replace('.', '')) || 0;\n                    }\n                    else {\n                        retTime[field].seconds = Number(timeSegments[1].replace('.', '')) || 0;\n                    }\n                }\n                if (timeSegments[2]) {\n                    retTime[field].frames = Number(timeSegments[2].replace('.', '')) || 0;\n                }\n            }\n            else {\n                const timeSegments = time.split(':');\n                if (timeSegments[0]) {\n                    retTime[field].seconds = (Number(timeSegments[0]) || 0) * 60;\n                }\n                if (timeSegments[1]) {\n                    if (retTime[field].seconds) {\n                        retTime[field].seconds += Number(timeSegments[1]) || 0;\n                    }\n                    else {\n                        retTime[field].seconds = Number(timeSegments[1]) || 0;\n                    }\n                }\n            }\n        }\n    });\n    if (!Object.keys(retTime.start).length) {\n        retTime.start = undefined;\n    }\n    if (!Object.keys(retTime.end).length) {\n        retTime.end = undefined;\n    }\n    return retTime;\n}\nexports.parseTime = parseTime;\n/**\n * Creates a parent class for a part, for keeping children of the parent alive when the parent is alive.\n * @param studio Studio name that the part belongs to.\n * @param partDefinition Part to create parent string for.\n */\nfunction PartToParentClass(studio, partDefinition) {\n    switch (partDefinition.type) {\n        case \"Kam\" /* Kam */:\n            return CameraParentClass(studio, partDefinition.variant.name);\n        case \"Server\" /* Server */:\n            const clip = partDefinition.fields.videoId;\n            if (clip) {\n                return ServerParentClass(studio, clip);\n            }\n            else {\n                return;\n            }\n        case \"EVS\" /* EVS */:\n            return EVSParentClass(studio, partDefinition.variant.evs);\n        case \"Unknown\" /* Unknown */:\n            return UnknownPartParentClass(studio, partDefinition);\n        default:\n            return;\n    }\n}\nexports.PartToParentClass = PartToParentClass;\nfunction CameraParentClass(studio, cameraName) {\n    return `${studio.toLowerCase()}_parent_camera_${cameraName.toLowerCase()}`;\n}\nexports.CameraParentClass = CameraParentClass;\nfunction EksternParentClass(studio, source) {\n    return `${studio.toLowerCase()}_parent_ekstern_${source.toLowerCase()}`;\n}\nexports.EksternParentClass = EksternParentClass;\nfunction ServerParentClass(studio, clip) {\n    return `${studio.toLowerCase()}_parent_server_${clip.toLowerCase()}`;\n}\nexports.ServerParentClass = ServerParentClass;\nfunction EVSParentClass(studio, evs) {\n    return `${studio.toLowerCase()}_parent_evs_${evs.toLowerCase()}`;\n}\nexports.EVSParentClass = EVSParentClass;\nfunction DVEParentClass(studio, dve) {\n    return `${studio.toLowerCase()}_parent_dve_${dve.toLowerCase()}`;\n}\nexports.DVEParentClass = DVEParentClass;\nfunction TLFParentClass(studio, source) {\n    return `${studio.toLowerCase()}_parent_tlf_${source.toLowerCase()}`;\n}\nexports.TLFParentClass = TLFParentClass;\nfunction UnknownPartParentClass(studio, partDefinition) {\n    const firstCue = partDefinition.cues[0];\n    if (!firstCue) {\n        return;\n    }\n    switch (firstCue.type) {\n        case tv2_constants_1.CueType.DVE:\n            return DVEParentClass(studio, firstCue.template);\n        case tv2_constants_1.CueType.Ekstern:\n            return EksternParentClass(studio, firstCue.source);\n        case tv2_constants_1.CueType.Telefon:\n            return TLFParentClass(studio, firstCue.source);\n        default:\n            return;\n    }\n}\nexports.UnknownPartParentClass = UnknownPartParentClass;\nfunction AddParentClass(partDefinition) {\n    return !!partDefinition.cues.filter(cue => (cue.type === tv2_constants_1.CueType.Grafik || cue.type === tv2_constants_1.CueType.MOS) &&\n        cue.end &&\n        cue.end.infiniteMode &&\n        cue.end.infiniteMode === 'B').length;\n}\nexports.AddParentClass = AddParentClass;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nfunction CreatePartInvalid(ingestPart, externalIdSuffix) {\n    const part = tv2_common_1.literal({\n        externalId: ingestPart.externalId + (externalIdSuffix ? `_${externalIdSuffix}` : ''),\n        title: ingestPart.rawType || 'Unknown',\n        metaData: {},\n        typeVariant: '',\n        invalid: true,\n        autoNext: true\n    });\n    return {\n        part,\n        adLibPieces: [],\n        pieces: []\n    };\n}\nexports.CreatePartInvalid = CreatePartInvalid;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nfunction MakeContentServer(file, mediaPlayerSessionId, partDefinition, config, sourceLayers, adLib, offtubeOptions) {\n    return tv2_common_1.literal({\n        studioLabel: '',\n        fileName: file,\n        path: `${config.studio.ClipSourcePath}\\\\${file}${config.studio.ClipFileExtension}`,\n        mediaFlowIds: [config.studio.MediaFlowId],\n        firstWords: '',\n        lastWords: '',\n        timelineObjects: tv2_common_1.literal([\n            tv2_common_1.literal(Object.assign(Object.assign({ id: '', enable: {\n                    while: '1'\n                }, priority: 1, layer: sourceLayers.Caspar.ClipPending, content: Object.assign({ deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG, type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA, file, loop: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? false : adLib, noStarttime: true }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? { playing: false } : {})) }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? {\n                keyframes: [\n                    {\n                        id: '',\n                        enable: {\n                            while: `.${offtubeOptions.enabler}`\n                        },\n                        content: {\n                            inPoint: 0,\n                            playing: true\n                        }\n                    }\n                ]\n            }\n                : {})), { metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                }, classes: [...(tv2_common_1.AddParentClass(partDefinition) && !adLib ? [tv2_common_1.ServerParentClass('studio0', file)] : [])] })),\n            tv2_common_1.literal({\n                id: '',\n                enable: getServerAdlibEnable(!!adLib, config.studio.CasparPrerollDuration, offtubeOptions),\n                priority: 1,\n                layer: sourceLayers.ATEM.MEPGM,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                    me: {\n                        input: undefined,\n                        transition: partDefinition.transition\n                            ? tv2_common_1.TransitionFromString(partDefinition.transition.style)\n                            : timeline_state_resolver_types_1.AtemTransitionStyle.CUT,\n                        transitionSettings: tv2_common_1.TransitionSettings(partDefinition)\n                    }\n                },\n                metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                },\n                classes: [...(adLib ? ['adlib_deparent'] : [])]\n            }),\n            tv2_common_1.literal({\n                id: '',\n                enable: getServerAdlibEnable(!!adLib, 0, offtubeOptions),\n                priority: 1,\n                layer: sourceLayers.Sisyfos.ClipPending,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    // isPgm: voiceOver ? 2 : 1\n                    isPgm: 1\n                },\n                metaData: {\n                    mediaPlayerSession: mediaPlayerSessionId\n                },\n                classes: []\n            }),\n            ...(sourceLayers.STICKY_LAYERS\n                ? sourceLayers.STICKY_LAYERS.map(layer => {\n                    return tv2_common_1.literal({\n                        id: '',\n                        enable: getServerAdlibEnable(!!adLib, 0, offtubeOptions),\n                        priority: 1,\n                        layer,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                            isPgm: 0\n                        },\n                        metaData: {\n                            sisyfosPersistLevel: true\n                        }\n                    });\n                })\n                : [])\n        ])\n    });\n}\nexports.MakeContentServer = MakeContentServer;\nfunction getServerAdlibEnable(adlib, startTime, offtubeOptions) {\n    if (adlib && (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube)) {\n        return {\n            while: `.${offtubeOptions.enabler}`\n        };\n    }\n    return {\n        start: startTime\n    };\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(70), exports);\ntslib_1.__exportStar(__webpack_require__(71), exports);\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BlueprintManifestType;\n(function (BlueprintManifestType) {\n    BlueprintManifestType[\"SYSTEM\"] = \"system\";\n    BlueprintManifestType[\"STUDIO\"] = \"studio\";\n    BlueprintManifestType[\"SHOWSTYLE\"] = \"showstyle\";\n})(BlueprintManifestType = exports.BlueprintManifestType || (exports.BlueprintManifestType = {}));\n//# sourceMappingURL=api.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IBlueprintAsRunLogEventContent;\n(function (IBlueprintAsRunLogEventContent) {\n    IBlueprintAsRunLogEventContent[\"STARTEDPLAYBACK\"] = \"startedPlayback\";\n    IBlueprintAsRunLogEventContent[\"STOPPEDPLAYBACK\"] = \"stoppedPlayback\";\n})(IBlueprintAsRunLogEventContent = exports.IBlueprintAsRunLogEventContent || (exports.IBlueprintAsRunLogEventContent = {}));\n//# sourceMappingURL=asRunLog.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConfigManifestEntryType;\n(function (ConfigManifestEntryType) {\n    ConfigManifestEntryType[\"STRING\"] = \"string\";\n    ConfigManifestEntryType[\"NUMBER\"] = \"number\";\n    ConfigManifestEntryType[\"BOOLEAN\"] = \"boolean\";\n    ConfigManifestEntryType[\"ENUM\"] = \"enum\";\n    ConfigManifestEntryType[\"TABLE\"] = \"table\";\n    ConfigManifestEntryType[\"SELECT\"] = \"select\";\n    ConfigManifestEntryType[\"SOURCE_LAYERS\"] = \"source_layers\";\n    ConfigManifestEntryType[\"LAYER_MAPPINGS\"] = \"layer_mappings\";\n})(ConfigManifestEntryType = exports.ConfigManifestEntryType || (exports.ConfigManifestEntryType = {}));\n//# sourceMappingURL=config.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** The type of the source layer, used to enable specific functions for special-type layers */\nvar SourceLayerType;\n(function (SourceLayerType) {\n    SourceLayerType[SourceLayerType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    SourceLayerType[SourceLayerType[\"CAMERA\"] = 1] = \"CAMERA\";\n    SourceLayerType[SourceLayerType[\"VT\"] = 2] = \"VT\";\n    SourceLayerType[SourceLayerType[\"REMOTE\"] = 3] = \"REMOTE\";\n    SourceLayerType[SourceLayerType[\"SCRIPT\"] = 4] = \"SCRIPT\";\n    SourceLayerType[SourceLayerType[\"GRAPHICS\"] = 5] = \"GRAPHICS\";\n    SourceLayerType[SourceLayerType[\"SPLITS\"] = 6] = \"SPLITS\";\n    SourceLayerType[SourceLayerType[\"AUDIO\"] = 7] = \"AUDIO\";\n    SourceLayerType[SourceLayerType[\"CAMERA_MOVEMENT\"] = 8] = \"CAMERA_MOVEMENT\";\n    SourceLayerType[SourceLayerType[\"METADATA\"] = 9] = \"METADATA\";\n    SourceLayerType[SourceLayerType[\"LOWER_THIRD\"] = 10] = \"LOWER_THIRD\";\n    SourceLayerType[SourceLayerType[\"LIVE_SPEAK\"] = 11] = \"LIVE_SPEAK\";\n    SourceLayerType[SourceLayerType[\"MIC\"] = 12] = \"MIC\";\n    SourceLayerType[SourceLayerType[\"TRANSITION\"] = 13] = \"TRANSITION\";\n    SourceLayerType[SourceLayerType[\"LIGHTS\"] = 14] = \"LIGHTS\";\n})(SourceLayerType = exports.SourceLayerType || (exports.SourceLayerType = {}));\n//# sourceMappingURL=content.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IBlueprintExternalMessageQueueType;\n(function (IBlueprintExternalMessageQueueType) {\n    IBlueprintExternalMessageQueueType[\"SOAP\"] = \"soap\";\n    IBlueprintExternalMessageQueueType[\"SLACK\"] = \"slack\";\n    IBlueprintExternalMessageQueueType[\"RABBIT_MQ\"] = \"rabbitmq\";\n})(IBlueprintExternalMessageQueueType = exports.IBlueprintExternalMessageQueueType || (exports.IBlueprintExternalMessageQueueType = {}));\n//# sourceMappingURL=message.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PartHoldMode;\n(function (PartHoldMode) {\n    PartHoldMode[PartHoldMode[\"NONE\"] = 0] = \"NONE\";\n    PartHoldMode[PartHoldMode[\"FROM\"] = 1] = \"FROM\";\n    PartHoldMode[PartHoldMode[\"TO\"] = 2] = \"TO\";\n})(PartHoldMode = exports.PartHoldMode || (exports.PartHoldMode = {}));\nvar PieceLifespan;\n(function (PieceLifespan) {\n    PieceLifespan[PieceLifespan[\"Normal\"] = 0] = \"Normal\";\n    PieceLifespan[PieceLifespan[\"OutOnNextPart\"] = 1] = \"OutOnNextPart\";\n    PieceLifespan[PieceLifespan[\"OutOnNextSegment\"] = 2] = \"OutOnNextSegment\";\n    PieceLifespan[PieceLifespan[\"Infinite\"] = 3] = \"Infinite\";\n})(PieceLifespan = exports.PieceLifespan || (exports.PieceLifespan = {}));\n//# sourceMappingURL=rundown.js.map\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LookaheadMode;\n(function (LookaheadMode) {\n    LookaheadMode[LookaheadMode[\"NONE\"] = 0] = \"NONE\";\n    LookaheadMode[LookaheadMode[\"PRELOAD\"] = 1] = \"PRELOAD\";\n    LookaheadMode[LookaheadMode[\"RETAIN\"] = 2] = \"RETAIN\";\n    LookaheadMode[LookaheadMode[\"WHEN_CLEAR\"] = 3] = \"WHEN_CLEAR\";\n})(LookaheadMode = exports.LookaheadMode || (exports.LookaheadMode = {}));\n//# sourceMappingURL=studio.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nexports.Timeline = timeline_state_resolver_types_1.Timeline;\nvar PlayoutTimelinePrefixes;\n(function (PlayoutTimelinePrefixes) {\n    PlayoutTimelinePrefixes[\"PART_GROUP_PREFIX\"] = \"part_group_\";\n    PlayoutTimelinePrefixes[\"PART_GROUP_FIRST_ITEM_PREFIX\"] = \"part_group_firstobject_\";\n    PlayoutTimelinePrefixes[\"PIECE_GROUP_PREFIX\"] = \"piece_group_\";\n    PlayoutTimelinePrefixes[\"PIECE_GROUP_FIRST_ITEM_PREFIX\"] = \"piece_group_firstobject_\";\n})(PlayoutTimelinePrefixes = exports.PlayoutTimelinePrefixes || (exports.PlayoutTimelinePrefixes = {}));\nfunction getPartGroupId(part) {\n    if (typeof part === 'string') {\n        return PlayoutTimelinePrefixes.PART_GROUP_PREFIX + part;\n    }\n    return PlayoutTimelinePrefixes.PART_GROUP_PREFIX + part._id;\n}\nexports.getPartGroupId = getPartGroupId;\nfunction getPieceGroupId(piece) {\n    if (typeof piece === 'string') {\n        return PlayoutTimelinePrefixes.PIECE_GROUP_PREFIX + piece;\n    }\n    return PlayoutTimelinePrefixes.PIECE_GROUP_PREFIX + piece._id;\n}\nexports.getPieceGroupId = getPieceGroupId;\nfunction getPartFirstObjectId(part) {\n    if (typeof part === 'string') {\n        return PlayoutTimelinePrefixes.PART_GROUP_FIRST_ITEM_PREFIX + part;\n    }\n    return PlayoutTimelinePrefixes.PART_GROUP_FIRST_ITEM_PREFIX + part._id;\n}\nexports.getPartFirstObjectId = getPartFirstObjectId;\nfunction getPieceFirstObjectId(piece) {\n    if (typeof piece === 'string') {\n        return PlayoutTimelinePrefixes.PIECE_GROUP_FIRST_ITEM_PREFIX + piece;\n    }\n    return PlayoutTimelinePrefixes.PIECE_GROUP_FIRST_ITEM_PREFIX + piece._id;\n}\nexports.getPieceFirstObjectId = getPieceFirstObjectId;\nvar TimelineObjHoldMode;\n(function (TimelineObjHoldMode) {\n    TimelineObjHoldMode[TimelineObjHoldMode[\"NORMAL\"] = 0] = \"NORMAL\";\n    TimelineObjHoldMode[TimelineObjHoldMode[\"ONLY\"] = 1] = \"ONLY\";\n    TimelineObjHoldMode[TimelineObjHoldMode[\"EXCEPT\"] = 2] = \"EXCEPT\"; // Only use when not in HOLD\n})(TimelineObjHoldMode = exports.TimelineObjHoldMode || (exports.TimelineObjHoldMode = {}));\n//# sourceMappingURL=timeline.js.map\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingAtemType;\n(function (MappingAtemType) {\n    MappingAtemType[MappingAtemType[\"MixEffect\"] = 0] = \"MixEffect\";\n    MappingAtemType[MappingAtemType[\"DownStreamKeyer\"] = 1] = \"DownStreamKeyer\";\n    MappingAtemType[MappingAtemType[\"SuperSourceBox\"] = 2] = \"SuperSourceBox\";\n    MappingAtemType[MappingAtemType[\"Auxilliary\"] = 3] = \"Auxilliary\";\n    MappingAtemType[MappingAtemType[\"MediaPlayer\"] = 4] = \"MediaPlayer\";\n    MappingAtemType[MappingAtemType[\"SuperSourceProperties\"] = 5] = \"SuperSourceProperties\";\n    MappingAtemType[MappingAtemType[\"AudioChannel\"] = 6] = \"AudioChannel\";\n    MappingAtemType[MappingAtemType[\"MacroPlayer\"] = 7] = \"MacroPlayer\";\n})(MappingAtemType = exports.MappingAtemType || (exports.MappingAtemType = {}));\nvar TimelineContentTypeAtem;\n(function (TimelineContentTypeAtem) {\n    TimelineContentTypeAtem[\"ME\"] = \"me\";\n    TimelineContentTypeAtem[\"DSK\"] = \"dsk\";\n    TimelineContentTypeAtem[\"AUX\"] = \"aux\";\n    TimelineContentTypeAtem[\"SSRC\"] = \"ssrc\";\n    TimelineContentTypeAtem[\"SSRCPROPS\"] = \"ssrcProps\";\n    TimelineContentTypeAtem[\"MEDIAPLAYER\"] = \"mp\";\n    TimelineContentTypeAtem[\"AUDIOCHANNEL\"] = \"audioChan\";\n    TimelineContentTypeAtem[\"MACROPLAYER\"] = \"macroPlayer\";\n})(TimelineContentTypeAtem = exports.TimelineContentTypeAtem || (exports.TimelineContentTypeAtem = {}));\nvar AtemTransitionStyle;\n(function (AtemTransitionStyle) {\n    AtemTransitionStyle[AtemTransitionStyle[\"MIX\"] = 0] = \"MIX\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DIP\"] = 1] = \"DIP\";\n    AtemTransitionStyle[AtemTransitionStyle[\"WIPE\"] = 2] = \"WIPE\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DVE\"] = 3] = \"DVE\";\n    AtemTransitionStyle[AtemTransitionStyle[\"STING\"] = 4] = \"STING\";\n    AtemTransitionStyle[AtemTransitionStyle[\"CUT\"] = 5] = \"CUT\";\n    AtemTransitionStyle[AtemTransitionStyle[\"DUMMY\"] = 6] = \"DUMMY\";\n})(AtemTransitionStyle = exports.AtemTransitionStyle || (exports.AtemTransitionStyle = {}));\n//# sourceMappingURL=atem.js.map\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeCasparCg;\n(function (TimelineContentTypeCasparCg) {\n    TimelineContentTypeCasparCg[\"MEDIA\"] = \"media\";\n    TimelineContentTypeCasparCg[\"IP\"] = \"ip\";\n    TimelineContentTypeCasparCg[\"INPUT\"] = \"input\";\n    TimelineContentTypeCasparCg[\"TEMPLATE\"] = \"template\";\n    TimelineContentTypeCasparCg[\"HTMLPAGE\"] = \"htmlpage\";\n    TimelineContentTypeCasparCg[\"ROUTE\"] = \"route\";\n    TimelineContentTypeCasparCg[\"RECORD\"] = \"record\";\n})(TimelineContentTypeCasparCg = exports.TimelineContentTypeCasparCg || (exports.TimelineContentTypeCasparCg = {}));\n// Note: enums copied from casparcg-connection\nvar Transition;\n(function (Transition) {\n    Transition[\"MIX\"] = \"MIX\";\n    Transition[\"CUT\"] = \"CUT\";\n    Transition[\"PUSH\"] = \"PUSH\";\n    Transition[\"WIPE\"] = \"WIPE\";\n    Transition[\"SLIDE\"] = \"SLIDE\";\n    Transition[\"STING\"] = \"STING\";\n})(Transition = exports.Transition || (exports.Transition = {}));\nvar Ease;\n(function (Ease) {\n    Ease[\"LINEAR\"] = \"LINEAR\";\n    Ease[\"NONE\"] = \"NONE\";\n    Ease[\"EASEINBACK\"] = \"EASEINBACK\";\n    Ease[\"EASEINBOUNCE\"] = \"EASEINBOUNCE\";\n    Ease[\"EASEINCIRC\"] = \"EASEINCIRC\";\n    Ease[\"EASEINCUBIC\"] = \"EASEINCUBIC\";\n    Ease[\"EASEINELASTIC\"] = \"EASEINELASTIC\";\n    Ease[\"EASEINEXPO\"] = \"EASEINEXPO\";\n    Ease[\"EASEINOUTBACK\"] = \"EASEINOUTBACK\";\n    Ease[\"EASEINOUTBOUNCE\"] = \"EASEINOUTBOUNCE\";\n    Ease[\"EASEINOUTCIRC\"] = \"EASEINOUTCIRC\";\n    Ease[\"EASEINOUTCUBIC\"] = \"EASEINOUTCUBIC\";\n    Ease[\"EASEINOUTELASTIC\"] = \"EASEINOUTELASTIC\";\n    Ease[\"EASEINOUTEXPO\"] = \"EASEINOUTEXPO\";\n    Ease[\"EASEINOUTQUAD\"] = \"EASEINOUTQUAD\";\n    Ease[\"EASEINOUTQUART\"] = \"EASEINOUTQUART\";\n    Ease[\"EASEINOUTQUINT\"] = \"EASEINOUTQUINT\";\n    Ease[\"EASEINOUTSINE\"] = \"EASEINOUTSINE\";\n    Ease[\"EASEINQUAD\"] = \"EASEINQUAD\";\n    Ease[\"EASEINQUART\"] = \"EASEINQUART\";\n    Ease[\"EASEINQUINT\"] = \"EASEINQUINT\";\n    Ease[\"EASEINSINE\"] = \"EASEINSINE\";\n    Ease[\"EASELINEAR\"] = \"EASELINEAR\";\n    Ease[\"EASENONE\"] = \"EASENONE\";\n    Ease[\"EASEOUTBACK\"] = \"EASEOUTBACK\";\n    Ease[\"EASEOUTBOUNCE\"] = \"EASEOUTBOUNCE\";\n    Ease[\"EASEOUTCIRC\"] = \"EASEOUTCIRC\";\n    Ease[\"EASEOUTCUBIC\"] = \"EASEOUTCUBIC\";\n    Ease[\"EASEOUTELASTIC\"] = \"EASEOUTELASTIC\";\n    Ease[\"EASEOUTEXPO\"] = \"EASEOUTEXPO\";\n    Ease[\"EASEOUTINBACK\"] = \"EASEOUTINBACK\";\n    Ease[\"EASEOUTINBOUNCE\"] = \"EASEOUTINBOUNCE\";\n    Ease[\"EASEOUTINCIRC\"] = \"EASEOUTINCIRC\";\n    Ease[\"EASEOUTINCUBIC\"] = \"EASEOUTINCUBIC\";\n    Ease[\"EASEOUTINELASTIC\"] = \"EASEOUTINELASTIC\";\n    Ease[\"EASEOUTINEXPO\"] = \"EASEOUTINEXPO\";\n    Ease[\"EASEOUTINQUAD\"] = \"EASEOUTINQUAD\";\n    Ease[\"EASEOUTINQUART\"] = \"EASEOUTINQUART\";\n    Ease[\"EASEOUTINQUINT\"] = \"EASEOUTINQUINT\";\n    Ease[\"EASEOUTINSINE\"] = \"EASEOUTINSINE\";\n    Ease[\"EASEOUTQUAD\"] = \"EASEOUTQUAD\";\n    Ease[\"EASEOUTQUART\"] = \"EASEOUTQUART\";\n    Ease[\"EASEOUTQUINT\"] = \"EASEOUTQUINT\";\n    Ease[\"EASEOUTSINE\"] = \"EASEOUTSINE\";\n    Ease[\"IN_BACK\"] = \"IN_BACK\";\n    Ease[\"IN_BOUNCE\"] = \"IN_BOUNCE\";\n    Ease[\"IN_CIRC\"] = \"IN_CIRC\";\n    Ease[\"IN_CUBIC\"] = \"IN_CUBIC\";\n    Ease[\"IN_ELASTIC\"] = \"IN_ELASTIC\";\n    Ease[\"IN_EXPO\"] = \"IN_EXPO\";\n    Ease[\"IN_OUT_BACK\"] = \"IN_OUT_BACK\";\n    Ease[\"IN_OUT_BOUNCE\"] = \"IN_OUT_BOUNCE\";\n    Ease[\"IN_OUT_CIRC\"] = \"IN_OUT_CIRC\";\n    Ease[\"IN_OUT_CUBIC\"] = \"IN_OUT_CUBIC\";\n    Ease[\"IN_OUT_ELASTIC\"] = \"IN_OUT_ELASTIC\";\n    Ease[\"IN_OUT_EXPO\"] = \"IN_OUT_EXPO\";\n    Ease[\"IN_OUT_QUAD\"] = \"IN_OUT_QUAD\";\n    Ease[\"IN_OUT_QUART\"] = \"IN_OUT_QUART\";\n    Ease[\"IN_OUT_QUINT\"] = \"IN_OUT_QUINT\";\n    Ease[\"IN_OUT_SINE\"] = \"IN_OUT_SINE\";\n    Ease[\"IN_QUAD\"] = \"IN_QUAD\";\n    Ease[\"IN_QUART\"] = \"IN_QUART\";\n    Ease[\"IN_QUINT\"] = \"IN_QUINT\";\n    Ease[\"IN_SINE\"] = \"IN_SINE\";\n    Ease[\"OUT_BACK\"] = \"OUT_BACK\";\n    Ease[\"OUT_BOUNCE\"] = \"OUT_BOUNCE\";\n    Ease[\"OUT_CIRC\"] = \"OUT_CIRC\";\n    Ease[\"OUT_CUBIC\"] = \"OUT_CUBIC\";\n    Ease[\"OUT_ELASTIC\"] = \"OUT_ELASTIC\";\n    Ease[\"OUT_EXPO\"] = \"OUT_EXPO\";\n    Ease[\"OUT_IN_BACK\"] = \"OUT_IN_BACK\";\n    Ease[\"OUT_IN_BOUNCE\"] = \"OUT_IN_BOUNCE\";\n    Ease[\"OUT_IN_CIRC\"] = \"OUT_IN_CIRC\";\n    Ease[\"OUT_IN_CUBIC\"] = \"OUT_IN_CUBIC\";\n    Ease[\"OUT_IN_ELASTIC\"] = \"OUT_IN_ELASTIC\";\n    Ease[\"OUT_IN_EXPO\"] = \"OUT_IN_EXPO\";\n    Ease[\"OUT_IN_QUAD\"] = \"OUT_IN_QUAD\";\n    Ease[\"OUT_IN_QUART\"] = \"OUT_IN_QUART\";\n    Ease[\"OUT_IN_QUINT\"] = \"OUT_IN_QUINT\";\n    Ease[\"OUT_IN_SINE\"] = \"OUT_IN_SINE\";\n    Ease[\"OUT_QUAD\"] = \"OUT_QUAD\";\n    Ease[\"OUT_QUART\"] = \"OUT_QUART\";\n    Ease[\"OUT_QUINT\"] = \"OUT_QUINT\";\n})(Ease = exports.Ease || (exports.Ease = {}));\nvar Direction;\n(function (Direction) {\n    Direction[\"LEFT\"] = \"LEFT\";\n    Direction[\"RIGHT\"] = \"RIGHT\";\n})(Direction = exports.Direction || (exports.Direction = {}));\nvar BlendMode;\n(function (BlendMode) {\n    BlendMode[\"ADD\"] = \"ADD\";\n    BlendMode[\"AVERAGE\"] = \"AVERAGE\";\n    BlendMode[\"COLOR\"] = \"COLOR\";\n    BlendMode[\"COLOR_BURN\"] = \"COLOR_BURN\";\n    BlendMode[\"COLOR_DODGE\"] = \"COLOR_DODGE\";\n    BlendMode[\"CONTRAST\"] = \"CONTRAST\";\n    BlendMode[\"DARKEN\"] = \"DARKEN\";\n    BlendMode[\"DIFFERENCE\"] = \"DIFFERENCE\";\n    BlendMode[\"EXCLUSION\"] = \"EXCLUSION\";\n    BlendMode[\"GLOW\"] = \"GLOW\";\n    BlendMode[\"HARD_LIGHT\"] = \"HARD_LIGHT\";\n    BlendMode[\"HARD_MIX\"] = \"HARD_MIX\";\n    BlendMode[\"LIGHTEN\"] = \"LIGHTEN\";\n    BlendMode[\"LINEAR_BURN\"] = \"LINEAR_BURN\";\n    BlendMode[\"LINEAR_DODGE\"] = \"LINEAR_DODGE\";\n    BlendMode[\"LINEAR_LIGHT\"] = \"LINEAR_LIGHT\";\n    BlendMode[\"LUMINOSITY\"] = \"LUMINOSITY\";\n    BlendMode[\"MULTIPLY\"] = \"MULTIPLY\";\n    BlendMode[\"NEGATION\"] = \"NEGATION\";\n    BlendMode[\"NORMAL\"] = \"NORMAL\";\n    BlendMode[\"OVERLAY\"] = \"OVERLAY\";\n    BlendMode[\"PHOENIX\"] = \"PHOENIX\";\n    BlendMode[\"PIN_LIGHT\"] = \"PIN_LIGHT\";\n    BlendMode[\"REFLECT\"] = \"REFLECT\";\n    BlendMode[\"SATURATION\"] = \"SATURATION\";\n    BlendMode[\"SCREEN\"] = \"SCREEN\";\n    BlendMode[\"SOFT_LIGHT\"] = \"SOFT_LIGHT\";\n    BlendMode[\"SUBTRACT\"] = \"SUBTRACT\";\n    BlendMode[\"VIVID_LIGHT\"] = \"VIVID_LIGHT\";\n})(BlendMode = exports.BlendMode || (exports.BlendMode = {}));\nvar ChannelFormat;\n(function (ChannelFormat) {\n    ChannelFormat[\"PAL\"] = \"PAL\";\n    ChannelFormat[\"NTSC\"] = \"NTSC\";\n    ChannelFormat[\"SD_576P2500\"] = \"SD_576P2500\";\n    ChannelFormat[\"HD_720P2398\"] = \"HD_720P2398\";\n    ChannelFormat[\"HD_720P2400\"] = \"HD_720P2400\";\n    ChannelFormat[\"HD_720P2500\"] = \"HD_720P2500\";\n    ChannelFormat[\"HD_720P2997\"] = \"HD_720P2997\";\n    ChannelFormat[\"HD_720P3000\"] = \"HD_720P3000\";\n    ChannelFormat[\"HD_720P5000\"] = \"HD_720P5000\";\n    ChannelFormat[\"HD_720P5994\"] = \"HD_720P5994\";\n    ChannelFormat[\"HD_720P6000\"] = \"HD_720P6000\";\n    ChannelFormat[\"HD_1080I5000\"] = \"HD_1080I5000\";\n    ChannelFormat[\"HD_1080I5994\"] = \"HD_1080I5994\";\n    ChannelFormat[\"HD_1080I6000\"] = \"HD_1080I6000\";\n    ChannelFormat[\"HD_1080P2398\"] = \"HD_1080P2398\";\n    ChannelFormat[\"HD_1080P2400\"] = \"HD_1080P2400\";\n    ChannelFormat[\"HD_1080P2500\"] = \"HD_1080P2500\";\n    ChannelFormat[\"HD_1080P2997\"] = \"HD_1080P2997\";\n    ChannelFormat[\"HD_1080P3000\"] = \"HD_1080P3000\";\n    ChannelFormat[\"HD_1080P5000\"] = \"HD_1080P5000\";\n    ChannelFormat[\"HD_1080P5994\"] = \"HD_1080P5994\";\n    ChannelFormat[\"HD_1080P6000\"] = \"HD_1080P6000\";\n    ChannelFormat[\"DCI_1080P2398\"] = \"DCI_1080P2398\";\n    ChannelFormat[\"DCI_1080P2400\"] = \"DCI_1080P2400\";\n    ChannelFormat[\"DCI_1080P2500\"] = \"DCI_1080P2500\";\n    ChannelFormat[\"DCI_2160P2398\"] = \"DCI_2160P2398\";\n    ChannelFormat[\"DCI_2160P2400\"] = \"DCI_2160P2400\";\n    ChannelFormat[\"DCI_2160P2500\"] = \"DCI_2160P2500\";\n    ChannelFormat[\"UCH_2160P2400\"] = \"UCH_2160P2400\";\n    ChannelFormat[\"UHD_1556P2398\"] = \"UHD_1556P2398\";\n    ChannelFormat[\"UHD_1556P2400\"] = \"UHD_1556P2400\";\n    ChannelFormat[\"UHD_1556P2500\"] = \"UHD_1556P2500\";\n    ChannelFormat[\"UHD_2160P2398\"] = \"UHD_2160P2398\";\n    ChannelFormat[\"UHD_2160P2500\"] = \"UHD_2160P2500\";\n    ChannelFormat[\"UHD_2160P2997\"] = \"UHD_2160P2997\";\n    ChannelFormat[\"UHD_2160P3000\"] = \"UHD_2160P3000\";\n    ChannelFormat[\"UHD_2160P5000\"] = \"UHD_2160P5000\";\n    ChannelFormat[\"UHD_2160P5994\"] = \"UHD_2160P5994\";\n    ChannelFormat[\"INVALID\"] = \"INVALID\";\n})(ChannelFormat = exports.ChannelFormat || (exports.ChannelFormat = {}));\nvar Chroma;\n(function (Chroma) {\n    Chroma[\"BLUE\"] = \"BLUE\";\n    Chroma[\"GREEN\"] = \"GREEN\";\n    Chroma[\"NONE\"] = \"NONE\";\n})(Chroma = exports.Chroma || (exports.Chroma = {}));\n//# sourceMappingURL=casparcg.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeHTTP;\n(function (TimelineContentTypeHTTP) {\n    TimelineContentTypeHTTP[\"GET\"] = \"get\";\n    TimelineContentTypeHTTP[\"POST\"] = \"post\";\n    TimelineContentTypeHTTP[\"PUT\"] = \"put\";\n    TimelineContentTypeHTTP[\"DELETE\"] = \"delete\";\n})(TimelineContentTypeHTTP = exports.TimelineContentTypeHTTP || (exports.TimelineContentTypeHTTP = {}));\n//# sourceMappingURL=httpSend.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingHyperdeckType;\n(function (MappingHyperdeckType) {\n    MappingHyperdeckType[\"TRANSPORT\"] = \"transport\";\n})(MappingHyperdeckType = exports.MappingHyperdeckType || (exports.MappingHyperdeckType = {}));\nvar TimelineContentTypeHyperdeck;\n(function (TimelineContentTypeHyperdeck) {\n    TimelineContentTypeHyperdeck[\"TRANSPORT\"] = \"transport\";\n})(TimelineContentTypeHyperdeck = exports.TimelineContentTypeHyperdeck || (exports.TimelineContentTypeHyperdeck = {}));\n// Note: These are copied from hyperdeck-connection -----------\nvar TransportStatus;\n(function (TransportStatus) {\n    TransportStatus[\"PREVIEW\"] = \"preview\";\n    TransportStatus[\"STOPPED\"] = \"stopped\";\n    TransportStatus[\"PLAY\"] = \"play\";\n    TransportStatus[\"FORWARD\"] = \"forward\";\n    TransportStatus[\"REWIND\"] = \"rewind\";\n    TransportStatus[\"JOG\"] = \"jog\";\n    TransportStatus[\"SHUTTLE\"] = \"shuttle\";\n    TransportStatus[\"RECORD\"] = \"record\";\n})(TransportStatus = exports.TransportStatus || (exports.TransportStatus = {}));\nvar SlotId;\n(function (SlotId) {\n    SlotId[SlotId[\"ONE\"] = 1] = \"ONE\";\n    SlotId[SlotId[\"TWO\"] = 2] = \"TWO\";\n})(SlotId = exports.SlotId || (exports.SlotId = {}));\nvar SlotStatus;\n(function (SlotStatus) {\n    SlotStatus[\"EMPTY\"] = \"empty\";\n    SlotStatus[\"MOUNTING\"] = \"mounting\";\n    SlotStatus[\"ERROR\"] = \"error\";\n    SlotStatus[\"MOUNTED\"] = \"mounted\";\n})(SlotStatus = exports.SlotStatus || (exports.SlotStatus = {}));\nvar VideoFormat;\n(function (VideoFormat) {\n    VideoFormat[\"NTSC\"] = \"NTSC\";\n    VideoFormat[\"PAL\"] = \"PAL\";\n    VideoFormat[\"NTSCp\"] = \"NTSCp\";\n    VideoFormat[\"PALp\"] = \"PALp\";\n    VideoFormat[\"_720p50\"] = \"720p50\";\n    VideoFormat[\"_720p5994\"] = \"720p5994\";\n    VideoFormat[\"_720p60\"] = \"720p60\";\n    VideoFormat[\"_1080p23976\"] = \"1080p23976\";\n    VideoFormat[\"_1080p24\"] = \"1080p24\";\n    VideoFormat[\"_1080p25\"] = \"1080p25\";\n    VideoFormat[\"_1080p2997\"] = \"1080p2997\";\n    VideoFormat[\"_1080p30\"] = \"1080p30\";\n    VideoFormat[\"_1080i50\"] = \"1080i50\";\n    VideoFormat[\"_1080i5994\"] = \"1080i5994\";\n    VideoFormat[\"_1080i60\"] = \"1080i60\";\n    VideoFormat[\"_4Kp23976\"] = \"4Kp23976\";\n    VideoFormat[\"_4Kp24\"] = \"4Kp24\";\n    VideoFormat[\"_4Kp25\"] = \"4Kp25\";\n    VideoFormat[\"_4Kp2997\"] = \"4Kp2997\";\n    VideoFormat[\"_4Kp30\"] = \"4Kp30\";\n    VideoFormat[\"_4Kp50\"] = \"4Kp50\";\n    VideoFormat[\"_4Kp5994\"] = \"4Kp5994\";\n    VideoFormat[\"_4Kp60\"] = \"4Kp60\";\n})(VideoFormat = exports.VideoFormat || (exports.VideoFormat = {}));\n//# sourceMappingURL=hyperdeck.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingLawoType;\n(function (MappingLawoType) {\n    MappingLawoType[\"SOURCE\"] = \"source\";\n    MappingLawoType[\"FULL_PATH\"] = \"fullpath\";\n    MappingLawoType[\"TRIGGER_VALUE\"] = \"triggerValue\";\n})(MappingLawoType = exports.MappingLawoType || (exports.MappingLawoType = {}));\nvar TimelineContentTypeLawo;\n(function (TimelineContentTypeLawo) {\n    TimelineContentTypeLawo[\"SOURCE\"] = \"lawosource\";\n    TimelineContentTypeLawo[\"EMBER_PROPERTY\"] = \"lawofullpathemberproperty\";\n    TimelineContentTypeLawo[\"TRIGGER_VALUE\"] = \"triggervalue\";\n})(TimelineContentTypeLawo = exports.TimelineContentTypeLawo || (exports.TimelineContentTypeLawo = {}));\nvar EmberTypes;\n(function (EmberTypes) {\n    EmberTypes[\"STRING\"] = \"string\";\n    EmberTypes[\"INTEGER\"] = \"integer\";\n    EmberTypes[\"REAL\"] = \"real\";\n    EmberTypes[\"BOOLEAN\"] = \"bool\";\n})(EmberTypes = exports.EmberTypes || (exports.EmberTypes = {}));\n//# sourceMappingURL=lawo.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeOSC;\n(function (TimelineContentTypeOSC) {\n    TimelineContentTypeOSC[\"OSC\"] = \"osc\";\n})(TimelineContentTypeOSC = exports.TimelineContentTypeOSC || (exports.TimelineContentTypeOSC = {}));\nvar OSCValueType;\n(function (OSCValueType) {\n    OSCValueType[\"INT\"] = \"i\";\n    OSCValueType[\"FLOAT\"] = \"f\";\n    OSCValueType[\"STRING\"] = \"s\";\n    OSCValueType[\"BLOB\"] = \"b\";\n})(OSCValueType = exports.OSCValueType || (exports.OSCValueType = {}));\n//# sourceMappingURL=osc.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypePharos;\n(function (TimelineContentTypePharos) {\n    TimelineContentTypePharos[\"SCENE\"] = \"scene\";\n    TimelineContentTypePharos[\"TIMELINE\"] = \"timeline\";\n})(TimelineContentTypePharos = exports.TimelineContentTypePharos || (exports.TimelineContentTypePharos = {}));\n//# sourceMappingURL=pharos.js.map\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MappingPanasonicPtzType;\n(function (MappingPanasonicPtzType) {\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"PRESET_SPEED\"] = 0] = \"PRESET_SPEED\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"PRESET\"] = 1] = \"PRESET\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"ZOOM\"] = 2] = \"ZOOM\";\n    MappingPanasonicPtzType[MappingPanasonicPtzType[\"ZOOM_SPEED\"] = 3] = \"ZOOM_SPEED\";\n})(MappingPanasonicPtzType = exports.MappingPanasonicPtzType || (exports.MappingPanasonicPtzType = {}));\nvar TimelineContentTypePanasonicPtz;\n(function (TimelineContentTypePanasonicPtz) {\n    TimelineContentTypePanasonicPtz[\"PRESET\"] = \"presetMem\";\n    TimelineContentTypePanasonicPtz[\"SPEED\"] = \"presetSpeed\";\n    TimelineContentTypePanasonicPtz[\"ZOOM_SPEED\"] = \"zoomSpeed\";\n    TimelineContentTypePanasonicPtz[\"ZOOM\"] = \"zoom\";\n})(TimelineContentTypePanasonicPtz = exports.TimelineContentTypePanasonicPtz || (exports.TimelineContentTypePanasonicPtz = {}));\n//# sourceMappingURL=panasonicPTZ.js.map\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeSisyfos;\n(function (TimelineContentTypeSisyfos) {\n    TimelineContentTypeSisyfos[\"SISYFOS\"] = \"sisyfos\";\n})(TimelineContentTypeSisyfos = exports.TimelineContentTypeSisyfos || (exports.TimelineContentTypeSisyfos = {}));\nvar Commands;\n(function (Commands) {\n    Commands[\"TOGGLE_PGM\"] = \"togglePgm\";\n    Commands[\"TOGGLE_PST\"] = \"togglePst\";\n    Commands[\"SET_FADER\"] = \"setFader\";\n    Commands[\"CLEAR_PST_ROW\"] = \"clearPstRow\";\n    Commands[\"LABEL\"] = \"label\";\n    Commands[\"TAKE\"] = \"take\";\n    Commands[\"VISIBLE\"] = \"visible\";\n    Commands[\"RESYNC\"] = \"resync\";\n})(Commands = exports.Commands || (exports.Commands = {}));\n// ------------------------------------------------------\n//# sourceMappingURL=sisyfos.js.map\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QuantelControlMode;\n(function (QuantelControlMode) {\n    /** Try to avoid freeze-frames when playing */\n    QuantelControlMode[\"QUALITY\"] = \"quality\";\n    /** Try to play as fast as possible */\n    QuantelControlMode[\"SPEED\"] = \"speed\";\n})(QuantelControlMode = exports.QuantelControlMode || (exports.QuantelControlMode = {}));\nvar QuantelTransitionType;\n(function (QuantelTransitionType) {\n    QuantelTransitionType[QuantelTransitionType[\"DELAY\"] = 0] = \"DELAY\";\n})(QuantelTransitionType = exports.QuantelTransitionType || (exports.QuantelTransitionType = {}));\n//# sourceMappingURL=quantel.js.map\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeTcp;\n(function (TimelineContentTypeTcp) {\n    TimelineContentTypeTcp[\"GET\"] = \"get\";\n    TimelineContentTypeTcp[\"POST\"] = \"post\";\n    TimelineContentTypeTcp[\"PUT\"] = \"put\";\n    TimelineContentTypeTcp[\"DELETE\"] = \"delete\";\n})(TimelineContentTypeTcp = exports.TimelineContentTypeTcp || (exports.TimelineContentTypeTcp = {}));\n//# sourceMappingURL=tcpSend.js.map\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeVizMSE;\n(function (TimelineContentTypeVizMSE) {\n    TimelineContentTypeVizMSE[\"ELEMENT_INTERNAL\"] = \"element_internal\";\n    TimelineContentTypeVizMSE[\"ELEMENT_PILOT\"] = \"element_pilot\";\n    TimelineContentTypeVizMSE[\"CONTINUE\"] = \"continue\";\n    TimelineContentTypeVizMSE[\"LOAD_ALL_ELEMENTS\"] = \"load_all_elements\";\n    TimelineContentTypeVizMSE[\"CLEAR_ALL_ELEMENTS\"] = \"clear_all_elements\";\n})(TimelineContentTypeVizMSE = exports.TimelineContentTypeVizMSE || (exports.TimelineContentTypeVizMSE = {}));\nvar VIZMSETransitionType;\n(function (VIZMSETransitionType) {\n    VIZMSETransitionType[VIZMSETransitionType[\"DELAY\"] = 0] = \"DELAY\";\n})(VIZMSETransitionType = exports.VIZMSETransitionType || (exports.VIZMSETransitionType = {}));\n//# sourceMappingURL=vizMSE.js.map\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimelineContentTypeSingularLive;\n(function (TimelineContentTypeSingularLive) {\n    TimelineContentTypeSingularLive[\"COMPOSITION\"] = \"composition\";\n})(TimelineContentTypeSingularLive = exports.TimelineContentTypeSingularLive || (exports.TimelineContentTypeSingularLive = {}));\n//# sourceMappingURL=singularLive.js.map\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Note: These types are copies from superfly-timeline\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Enums ------------------------------------------------------------\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"START\"] = 0] = \"START\";\n    EventType[EventType[\"END\"] = 1] = \"END\";\n    EventType[EventType[\"KEYFRAME\"] = 2] = \"KEYFRAME\";\n})(EventType = exports.EventType || (exports.EventType = {}));\n//# sourceMappingURL=superfly-timeline.js.map\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\nconst _ = __webpack_require__(3);\nvar iterateDeeplyEnum;\n(function (iterateDeeplyEnum) {\n    iterateDeeplyEnum[\"CONTINUE\"] = \"$continue\";\n})(iterateDeeplyEnum = exports.iterateDeeplyEnum || (exports.iterateDeeplyEnum = {}));\n/**\n * Iterates deeply through object or array\n * @param obj the object or array to iterate through\n * @param iteratee function to apply on every attribute\n */\nfunction iterateDeeply(obj, iteratee, key) {\n    const newValue = iteratee(obj, key);\n    if (newValue === iterateDeeplyEnum.CONTINUE) {\n        // Continue iterate deeper if possible\n        if (_.isObject(obj)) {\n            // object or array\n            _.each(obj, (v, k) => {\n                obj[k] = iterateDeeply(v, iteratee, k);\n            });\n        }\n        else {\n            // don't change anything\n        }\n        return obj;\n    }\n    else {\n        return newValue;\n    }\n}\nexports.iterateDeeply = iterateDeeply;\n/**\n * Iterates deeply through object or array, using an asynchronous iteratee\n * @param obj the object or array to iterate through\n * @param iteratee function to apply on every attribute\n */\nfunction iterateDeeplyAsync(obj, iteratee, key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const newValue = yield iteratee(obj, key);\n        if (newValue === iterateDeeplyEnum.CONTINUE) {\n            // Continue iterate deeper if possible\n            if (_.isObject(obj)) {\n                // object or array\n                yield Promise.all(_.map(obj, (v, k) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                    obj[k] = yield iterateDeeplyAsync(v, iteratee, k);\n                })));\n            }\n            else {\n                // don't change anything\n            }\n            return obj;\n        }\n        else {\n            return newValue;\n        }\n    });\n}\nexports.iterateDeeplyAsync = iterateDeeplyAsync;\n//# sourceMappingURL=util.js.map\n\n/***/ }),\n/* 40 */,\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst FRAME_TIME = 1000 / 25; // TODO: This should be pulled from config.\nfunction CreateTiming(cue) {\n    if (cue.adlib) {\n        return CreateTimingAdLib(cue);\n    }\n    else {\n        return CreateTimingEnable(cue);\n    }\n}\nexports.CreateTiming = CreateTiming;\nfunction CreateTimingEnable(cue) {\n    const result = {\n        enable: {},\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal\n    };\n    if (cue.start) {\n        ;\n        result.enable.start = CalculateTime(cue.start);\n    }\n    else {\n        ;\n        result.enable.start = 0;\n    }\n    if (cue.end) {\n        if (cue.end.infiniteMode) {\n            result.infiniteMode = InfiniteMode(cue.end.infiniteMode, tv_automation_sofie_blueprints_integration_1.PieceLifespan.Normal);\n        }\n        else {\n            const end = CalculateTime(cue.end);\n            result.enable.duration = end\n                ? result.enable.start\n                    ? end - Number(result.enable.start)\n                    : end\n                : undefined;\n        }\n    }\n    else {\n        result.infiniteMode = tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart;\n    }\n    return result;\n}\nexports.CreateTimingEnable = CreateTimingEnable;\nfunction CreateTimingAdLib(cue) {\n    const result = {\n        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n        expectedDuration: 0\n    };\n    if (cue.end) {\n        if (cue.end.infiniteMode) {\n            result.infiniteMode = InfiniteMode(cue.end.infiniteMode, tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart);\n        }\n        else {\n            result.expectedDuration = CalculateTime(cue.end);\n        }\n    }\n    return result;\n}\nexports.CreateTimingAdLib = CreateTimingAdLib;\nfunction InfiniteMode(mode, defaultLifespan) {\n    switch (mode) {\n        case 'B':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart;\n        case 'S':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment;\n        case 'O':\n            return tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite;\n    }\n    return defaultLifespan;\n}\nexports.InfiniteMode = InfiniteMode;\nfunction CalculateTime(time) {\n    if (time.infiniteMode) {\n        return;\n    }\n    let result = 0;\n    if (time.seconds) {\n        result += time.seconds * 1000;\n    }\n    if (time.frames) {\n        result += time.frames * FRAME_TIME;\n    }\n    return result;\n}\nexports.CalculateTime = CalculateTime;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(43), exports);\ntslib_1.__exportStar(__webpack_require__(46), exports);\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nfunction TransformCuesIntoShowstyle(config, partDefinition) {\n    let i = -1;\n    while (i + 1 < partDefinition.cues.length) {\n        i++;\n        const cue = partDefinition.cues[i];\n        if (cue.type === tv2_constants_1.CueType.TargetEngine && cue.data.engine && cue.data.engine.toUpperCase() !== 'OVL1') {\n            const conf = config.GFXTemplates.find(gfx => gfx.INewsName.toUpperCase() === cue.data.engine.toUpperCase() &&\n                gfx.INewsCode.toUpperCase() === cue.iNewsCommand.toUpperCase());\n            if (!conf) {\n                continue;\n            }\n            if (conf.VizTemplate.toUpperCase() === 'VCP') {\n                const nextCue = partDefinition.cues[i + 1];\n                if (!nextCue) {\n                    if (!cue.grafik) {\n                        continue;\n                    }\n                    cue.data.grafik = cue.grafik;\n                    delete cue.grafik;\n                    cue.data.engine = conf.VizDestination.trim();\n                    partDefinition.cues[i] = cue;\n                }\n                else {\n                    if (nextCue.type !== tv2_constants_1.CueType.MOS) {\n                        continue;\n                    }\n                    cue.data.grafik = nextCue;\n                    cue.data.engine = conf.VizDestination.trim();\n                    partDefinition.cues[i] = cue;\n                    i++;\n                    partDefinition.cues.splice(i, 1);\n                }\n            }\n            else {\n                const gfxGue = {\n                    type: tv2_constants_1.CueType.Grafik,\n                    template: conf.VizTemplate.toUpperCase(),\n                    cue: `${cue.iNewsCommand}=${cue.data.engine}`,\n                    textFields: [],\n                    iNewsCommand: cue.iNewsCommand\n                };\n                cue.data.engine = conf.VizDestination.trim();\n                cue.data.grafik = gfxGue;\n                partDefinition.cues[i] = cue;\n            }\n        }\n    }\n    return partDefinition;\n}\nexports.TransformCuesIntoShowstyle = TransformCuesIntoShowstyle;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NoteType;\n(function (NoteType) {\n    NoteType[NoteType[\"WARNING\"] = 1] = \"WARNING\";\n    NoteType[NoteType[\"ERROR\"] = 2] = \"ERROR\";\n})(NoteType = exports.NoteType || (exports.NoteType = {}));\nvar MediaPlayerClaimType;\n(function (MediaPlayerClaimType) {\n    MediaPlayerClaimType[MediaPlayerClaimType[\"Preloaded\"] = 0] = \"Preloaded\";\n    MediaPlayerClaimType[MediaPlayerClaimType[\"Active\"] = 1] = \"Active\";\n})(MediaPlayerClaimType = exports.MediaPlayerClaimType || (exports.MediaPlayerClaimType = {}));\nvar CueType;\n(function (CueType) {\n    CueType[CueType[\"Unknown\"] = 0] = \"Unknown\";\n    CueType[CueType[\"Grafik\"] = 1] = \"Grafik\";\n    CueType[CueType[\"MOS\"] = 2] = \"MOS\";\n    CueType[CueType[\"Ekstern\"] = 3] = \"Ekstern\";\n    CueType[CueType[\"DVE\"] = 4] = \"DVE\";\n    CueType[CueType[\"Telefon\"] = 5] = \"Telefon\";\n    CueType[CueType[\"VIZ\"] = 6] = \"VIZ\";\n    CueType[CueType[\"Mic\"] = 7] = \"Mic\";\n    CueType[CueType[\"AdLib\"] = 8] = \"AdLib\";\n    CueType[CueType[\"LYD\"] = 9] = \"LYD\";\n    CueType[CueType[\"Jingle\"] = 10] = \"Jingle\";\n    CueType[CueType[\"Design\"] = 11] = \"Design\";\n    CueType[CueType[\"Profile\"] = 12] = \"Profile\";\n    CueType[CueType[\"TargetEngine\"] = 13] = \"TargetEngine\";\n    CueType[CueType[\"ClearGrafiks\"] = 14] = \"ClearGrafiks\";\n})(CueType = exports.CueType || (exports.CueType = {}));\nvar Enablers;\n(function (Enablers) {\n    Enablers[\"OFFTUBE_ENABLE_SERVER\"] = \"offtube_enable_server\";\n    Enablers[\"OFFTUBE_ENABLE_FULL\"] = \"offtube_enable_full\";\n    Enablers[\"OFFTUBE_ENABLE_DVE\"] = \"offtube_enable_dve\";\n})(Enablers = exports.Enablers || (exports.Enablers = {}));\nvar AdlibTags;\n(function (AdlibTags) {\n    AdlibTags[\"OFFTUBE_ADLIB_SERVER\"] = \"offtube_adlib_server\";\n    AdlibTags[\"OFFTUBE_100pc_SERVER\"] = \"offtube_adlib_100pc_server\";\n    AdlibTags[\"OFFTUBE_SET_CAM_NEXT\"] = \"offtube_set_cam_next\";\n    AdlibTags[\"OFFTUBE_SET_REMOTE_NEXT\"] = \"offtube_set_remote_next\";\n    AdlibTags[\"OFFTUBE_SET_FULL_NEXT\"] = \"offtube_set_full_next\";\n    AdlibTags[\"OFFTUBE_SET_JINGLE_NEXT\"] = \"offtube_set_jingle_next\";\n    AdlibTags[\"OFFTUBE_SET_SERVER_NEXT\"] = \"offtube_set_server_next\";\n    AdlibTags[\"OFFTUBE_SET_DVE_NEXT\"] = \"offtube_set_dve_next\";\n    AdlibTags[\"ADLIB_FLOW_PRODUCER\"] = \"flow_producer\";\n})(AdlibTags = exports.AdlibTags || (exports.AdlibTags = {}));\nvar ControlClasses;\n(function (ControlClasses) {\n    ControlClasses[\"ShowIdentGraphic\"] = \"show_ident_graphic\";\n    ControlClasses[\"DVEOnAir\"] = \"dve_on_air\"; // DVE Part is on air\n})(ControlClasses = exports.ControlClasses || (exports.ControlClasses = {}));\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONSTANTS = {\n    DefaultClipFadeOut: 35 * 40 // 35 frames\n};\n// Note: This doesnt play nice with transitions, so if they are required, then auto cannot be used\nexports.MEDIA_PLAYER_AUTO = 'auto';\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(47), exports);\ntslib_1.__exportStar(__webpack_require__(13), exports);\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nconst postProcessDefinitions_1 = __webpack_require__(48);\nconst ParseCue_1 = __webpack_require__(13);\nconst ACCEPTED_RED_TEXT = /\\b(KAM(?:\\d+)?|CAM(?:\\d+)?|KAMERA(?:\\d+)?|CAMERA(?:\\d+)?|SERVER|ATTACK|TEKNIK|GRAFIK|EVS ?\\d+(?:VOV?)?|VOV?|VOSB)+\\b/gi;\nfunction ParseBody(segmentId, segmentName, body, cues, fields, modified) {\n    const definitions = [];\n    let definition = initDefinition(fields, modified, segmentName);\n    // Handle intro segments, they have special behaviour.\n    if (segmentName === 'INTRO') {\n        ;\n        definition.type = \"INTRO\" /* INTRO */;\n        cues.forEach(cue => {\n            if (cue !== null) {\n                definition.cues.push(ParseCue_1.ParseCue(cue));\n            }\n        });\n        definition.rawType = 'INTRO';\n        definition.externalId = `${segmentId}-${definitions.length}`;\n        definition.segmentExternalId = segmentId;\n        definitions.push(definition);\n        definition = initDefinition(fields, modified, segmentName);\n        return definitions;\n    }\n    let lines = body.split('\\r\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = lines[i].replace(/<cc>(.*?)<\\/cc>/gi, '');\n    }\n    lines = lines.filter(line => line !== '<p></p>' && line !== '<p><pi></pi></p>');\n    lines.forEach(line => {\n        const type = line.match(/<pi>(.*?)<\\/pi>/i);\n        if (type) {\n            const typeStr = type[1]\n                .replace(/<[a-z]+>/gi, '')\n                .replace(/<\\/[a-z]+>/gi, '')\n                .replace(/[^\\w\\s]*\\B[^\\w\\s]/gi, '')\n                .replace(/[\\s]+/i, ' ')\n                .replace(/<tab>/i, '')\n                .replace(/<\\/tab>/i, '')\n                .trim();\n            if (typeStr && !!typeStr.match(ACCEPTED_RED_TEXT)) {\n                const inlineCues = line\n                    .replace(/<\\/?p>/g, '')\n                    .split(/<pi>(.*?)<\\/pi>/i)\n                    .filter(cue => cue !== '' && !cue.match(/<\\/a>/));\n                /** Hold any secondary cues in the form: `[] KAM 1` */\n                const secondaryInlineCues = [];\n                // Find all inline primaries appearing before the red text\n                let pos = 0;\n                let redTextFound = false;\n                while (pos < inlineCues.length && !redTextFound) {\n                    if (inlineCues[pos].match(ACCEPTED_RED_TEXT)) {\n                        redTextFound = true;\n                    }\n                    else {\n                        const parsedCues = getCuesInLine(inlineCues[pos], cues);\n                        parsedCues.forEach(cue => {\n                            // Create standalone parts for primary cues.\n                            if (isPrimaryCue(cue)) {\n                                if (shouldPushDefinition(definition)) {\n                                    definitions.push(definition);\n                                    definition = initDefinition(fields, modified, segmentName);\n                                }\n                                definition = makeDefinitionPrimaryCue(segmentId, definitions.length, '', fields, modified, segmentName, definition.type, cue);\n                                definition.cues.push(cue);\n                            }\n                            else {\n                                secondaryInlineCues.push(cue);\n                            }\n                            line = line.replace(inlineCues[pos], '');\n                        });\n                    }\n                    pos++;\n                }\n                line = line.replace(/<\\/a>/g, '');\n                if (shouldPushDefinition(definition)) {\n                    definitions.push(definition);\n                    definition = initDefinition(fields, modified, segmentName);\n                }\n                definition = makeDefinition(segmentId, definitions.length, typeStr, fields, modified, segmentName);\n                definition.cues.push(...secondaryInlineCues);\n            }\n            if (typeStr && typeStr.match(/SLUTORD/i)) {\n                if (definition.endWords) {\n                    definition.endWords += ` ${typeStr.replace(/^SLUTORD:? ?/i, '')}`;\n                }\n                else {\n                    definition.endWords = typeStr.replace(/^SLUTORD:? ?/i, '');\n                }\n            }\n        }\n        addScript(line, definition);\n        // Add any remaining cues in the line.\n        if (cueInLine(line)) {\n            const parsedCues = getCuesInLine(line, cues);\n            parsedCues.forEach(cue => {\n                if (isPrimaryCue(cue)) {\n                    let storedScript = '';\n                    if (shouldPushDefinition(definition)) {\n                        definitions.push(definition);\n                        definition = initDefinition(fields, modified, segmentName);\n                    }\n                    else if (definition.script.length) {\n                        storedScript = definition.script;\n                    }\n                    definition = makeDefinitionPrimaryCue(segmentId, definitions.length, definition.rawType, fields, modified, segmentName, definition.type, cue);\n                    definition.script = storedScript;\n                }\n                definition.cues.push(cue);\n            });\n        }\n    });\n    if (shouldPushDefinition(definition)) {\n        definitions.push(definition);\n        definition = initDefinition(fields, modified, segmentName);\n    }\n    // Flatten cues such as targetEngine.\n    definitions.forEach(partDefinition => {\n        if (partDefinition.cues.length) {\n            while (FindTargetPair(partDefinition)) {\n                // NO-OP\n            }\n        }\n    });\n    return postProcessDefinitions_1.PostProcessDefinitions(definitions, segmentId);\n}\nexports.ParseBody = ParseBody;\nfunction FindTargetPair(partDefinition) {\n    const index = partDefinition.cues.findIndex(cue => (cue.type === tv2_constants_1.CueType.TargetEngine && !cue.grafik && !!cue.data.engine.match(/FULL|WALL|OVL/i)) ||\n        (cue.type === tv2_constants_1.CueType.Telefon && !cue.vizObj));\n    if (index === -1) {\n        // No more targets\n        return false;\n    }\n    if (index + 1 < partDefinition.cues.length) {\n        if (partDefinition.cues[index + 1].type === tv2_constants_1.CueType.MOS) {\n            const mosCue = partDefinition.cues[index + 1];\n            if (partDefinition.cues[index].type === tv2_constants_1.CueType.TargetEngine) {\n                const targetCue = partDefinition.cues[index];\n                targetCue.grafik = mosCue;\n                partDefinition.cues[index] = targetCue;\n            }\n            else {\n                const targetCue = partDefinition.cues[index];\n                targetCue.vizObj = mosCue;\n                partDefinition.cues[index] = targetCue;\n            }\n            partDefinition.cues.splice(index + 1, 1);\n            return true;\n        }\n        else {\n            // Target with no grafik\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexports.FindTargetPair = FindTargetPair;\n/** Creates an initial part definition. */\nfunction initDefinition(fields, modified, segmentName) {\n    return {\n        externalId: '',\n        type: \"Unknown\" /* Unknown */,\n        rawType: '',\n        variant: {},\n        cues: [],\n        script: '',\n        fields,\n        modified,\n        storyName: segmentName,\n        segmentExternalId: ''\n    };\n}\n/** Returns true if there is a cue in the given line. */\nfunction cueInLine(line) {\n    return !!line.match(/<a idref=[\"|'](\\d+)[\"|']>/gi);\n}\n/** Returns all the cues in a given line as parsed cues. */\nfunction getCuesInLine(line, cues) {\n    if (!cueInLine(line)) {\n        return [];\n    }\n    const definitions = [];\n    const cue = line.match(/<a idref=[\"|'](\\d+)[\"|']>/gi);\n    cue === null || cue === void 0 ? void 0 : cue.forEach(c => {\n        const value = c.match(/<a idref=[\"|'](\\d+)[\"|']>/i);\n        if (value) {\n            const realCue = cues[Number(value[1])];\n            if (realCue) {\n                definitions.push(ParseCue_1.ParseCue(realCue));\n            }\n        }\n    });\n    return definitions;\n}\nfunction addScript(line, definition) {\n    const script = line.match(/<p>(.*)?<\\/p>/i);\n    if (script && script[1] && !script[1].match(/<pi>(.*?)<\\/pi>/i)) {\n        const trimscript = script[1]\n            .replace(/<.*?>/gi, '')\n            .replace('\\n\\r', '')\n            .trim();\n        if (trimscript) {\n            definition.script += `${trimscript}\\n`;\n        }\n    }\n}\nfunction isPrimaryCue(cue) {\n    return (cue.type === tv2_constants_1.CueType.Telefon ||\n        cue.type === tv2_constants_1.CueType.Ekstern ||\n        cue.type === tv2_constants_1.CueType.DVE ||\n        (cue.type === tv2_constants_1.CueType.TargetEngine && cue.data.engine.toUpperCase() === 'FULL'));\n}\nfunction shouldPushDefinition(definition) {\n    return ((definition.cues.length ||\n        (definition.script.length && definition.cues.length) ||\n        definition.type !== \"Unknown\" /* Unknown */) &&\n        !(definition.type === \"Grafik\" /* Grafik */ && definition.cues.length === 0));\n}\nfunction makeDefinitionPrimaryCue(segmentId, i, typeStr, fields, modified, storyName, partType, cue) {\n    const definition = makeDefinition(segmentId, i, typeStr, fields, modified, storyName);\n    switch (cue.type) {\n        case tv2_constants_1.CueType.Ekstern:\n            definition.type = \"Ekstern\" /* Ekstern */;\n            break;\n        case tv2_constants_1.CueType.DVE:\n            definition.type = \"DVE\" /* DVE */;\n            break;\n        case tv2_constants_1.CueType.Telefon:\n            definition.type = \"Telefon\" /* Telefon */;\n            break;\n        case tv2_constants_1.CueType.TargetEngine:\n            definition.type = partType;\n            break;\n        default:\n            // For log purposes + to catch future issues.\n            console.log(`Blueprint recieved non-primary cue when creating primary cue part. Likely a new primary cue type has been added recently.`);\n            break;\n    }\n    return definition;\n}\nfunction makeDefinition(segmentId, i, typeStr, fields, modified, storyName) {\n    const part = Object.assign(Object.assign({ externalId: `${segmentId}-${i}` }, extractTypeProperties(typeStr)), { rawType: typeStr\n            .replace(/effekt \\d+/gi, '')\n            .replace(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/gi, '')\n            .replace(/\\s+/gi, ' ')\n            .trim(), cues: [], script: '', fields,\n        modified,\n        storyName, segmentExternalId: '' });\n    return part;\n}\nfunction extractTypeProperties(typeStr) {\n    const effektMatch = typeStr.match(/effekt (\\d+)/i);\n    const transitionMatch = typeStr.match(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/i);\n    const definition = {};\n    if (effektMatch) {\n        definition.effekt = Number(effektMatch[1]);\n    }\n    if (transitionMatch) {\n        definition.transition = {\n            style: transitionMatch[1].toUpperCase(),\n            duration: transitionMatch[2] ? Number(transitionMatch[2]) : undefined\n        };\n    }\n    const tokens = typeStr\n        .replace(/effekt (\\d+)/gi, '')\n        .replace(/(MIX|DIP|WIPE|STING)( \\d+)?(?:$| |\\n)/gi, '')\n        .replace(/100%/g, '')\n        .replace(/\\s+/gi, ' ')\n        .trim()\n        .split(' ');\n    const firstToken = tokens[0];\n    if (firstToken.match(/KAM|CAM/i)) {\n        const adjacentKamNumber = tokens[0].match(/KAM(\\d+)/i);\n        return Object.assign({ type: \"Kam\" /* Kam */, variant: {\n                name: adjacentKamNumber ? adjacentKamNumber[1] : tokens[1]\n            } }, definition);\n    }\n    else if (firstToken.match(/SERVER/i) || firstToken.match(/ATTACK/i)) {\n        return Object.assign({ type: \"Server\" /* Server */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/TEKNIK/i)) {\n        return Object.assign({ type: \"Teknik\" /* Teknik */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/GRAFIK/i)) {\n        return Object.assign({ type: \"Grafik\" /* Grafik */, variant: {} }, definition);\n    }\n    else if (typeStr.match(/EVS ?\\d+(?:VOV?)?/i)) {\n        const strippedToken = typeStr.match(/EVS ?(\\d+)(VOV?)?/i);\n        return {\n            type: \"EVS\" /* EVS */,\n            variant: {\n                evs: strippedToken && strippedToken[1] ? strippedToken[1] : '1',\n                isVO: !!strippedToken && !!strippedToken[2]\n            }\n        };\n    }\n    else if (firstToken.match(/VOV?/i)) {\n        return Object.assign({ type: \"VO\" /* VO */, variant: {} }, definition);\n    }\n    else if (firstToken.match(/VOSB/i)) {\n        return Object.assign({ type: \"VO\" /* VO */, variant: {} }, definition);\n    }\n    else {\n        return Object.assign({ type: \"Unknown\" /* Unknown */, variant: {} }, definition);\n    }\n}\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction PostProcessDefinitions(partDefinitions, segmentExternalId) {\n    const foundMap = {};\n    partDefinitions.forEach((part, i) => {\n        partDefinitions[i] = Object.assign(Object.assign({}, part), { externalId: getExternalId(segmentExternalId, part, foundMap), segmentExternalId });\n    });\n    return partDefinitions;\n}\nexports.PostProcessDefinitions = PostProcessDefinitions;\nfunction getExternalId(segmentId, partDefinition, foundMap) {\n    var _a, _b;\n    let id = `${segmentId}-${partDefinition.type.toString()}`;\n    switch (partDefinition.type) {\n        case \"EVS\" /* EVS */:\n            // Common pattern to see EV1 and EVS1VO in the same story. Changing from EVS1 to EVS1VO would mean a new part\n            id += `-${partDefinition.variant.evs}-${partDefinition.variant.isVO}`;\n            break;\n        case \"INTRO\" /* INTRO */:\n            // Intro must have a jingle cue, if it doesn't then padId will handle\n            const jingle = partDefinition.cues.find(cue => cue.type === tv2_constants_1.CueType.Jingle);\n            if (jingle) {\n                id += `-${jingle.clip}`;\n            }\n            break;\n        case \"Kam\" /* Kam */:\n            // No way of uniquely identifying, add some entropy from cues\n            id += `-${partDefinition.rawType}-${partDefinition.variant.name}-${partDefinition.cues.length}`;\n            break;\n        case \"Server\" /* Server */:\n            // Only one video Id per story. Changing the video Id will result in a new part\n            id += `-${partDefinition.fields.videoId ? partDefinition.fields.videoId : 'noId'}`;\n            break;\n        case \"Teknik\" /* Teknik */:\n            // Possibly an unused part type, not seen in production - only one example found in original test data\n            id += `-TEKNIK`;\n            break;\n        case \"VO\" /* VO */:\n            // Only one video Id per story. Changing the video Id will result in a new part\n            id += `-${partDefinition.fields.videoId}`;\n            break;\n        case \"Grafik\" /* Grafik */:\n        case \"DVE\" /* DVE */:\n        case \"Ekstern\" /* Ekstern */:\n        case \"Telefon\" /* Telefon */:\n        case \"Unknown\" /* Unknown */:\n            // Special cases based on cues\n            const firstCue = partDefinition.cues[0];\n            if (firstCue) {\n                switch (firstCue.type) {\n                    case tv2_constants_1.CueType.AdLib:\n                        id += `-${firstCue.variant}`;\n                        break;\n                    case tv2_constants_1.CueType.DVE:\n                        function countSources(sources) {\n                            let count = 0;\n                            for (const [key, value] of Object.entries(sources)) {\n                                if (key !== undefined && value !== undefined) {\n                                    count += 1;\n                                }\n                            }\n                            return count;\n                        }\n                        id += `-${firstCue.template}-${countSources(firstCue.sources)}`;\n                        break;\n                    case tv2_constants_1.CueType.Ekstern:\n                        // Identify based on live source. Changing live source will result in a new part\n                        id += `-${firstCue.source}`;\n                        break;\n                    case tv2_constants_1.CueType.Jingle:\n                        // Changing the jingle clip will result in a new part\n                        id += `-${firstCue.clip}`;\n                        break;\n                    case tv2_constants_1.CueType.TargetEngine:\n                        // Pair the engine will the graphic, common to see 'FULL' targeted multiple times in one story\n                        const end = ((_a = firstCue.grafik) === null || _a === void 0 ? void 0 : _a.type) === tv2_constants_1.CueType.Grafik\n                            ? firstCue.grafik.template\n                            : ((_b = firstCue.grafik) === null || _b === void 0 ? void 0 : _b.type) === tv2_constants_1.CueType.MOS\n                                ? firstCue.grafik.vcpid\n                                : '';\n                        id += `-${firstCue.data.engine}-${end}`;\n                        break;\n                    case tv2_constants_1.CueType.Telefon:\n                        id += `-${firstCue.source}`;\n                        break;\n                    case tv2_constants_1.CueType.MOS:\n                        id += `-${firstCue.vcpid}`;\n                        break;\n                }\n            }\n            else {\n                // This should never happen. Log it in case it ever occurs.\n                console.log(`Adding part with potentially bad Id: ${JSON.stringify(partDefinition)}`);\n                id += `UNKNOWN`;\n            }\n            break;\n        default:\n            tv2_common_1.assertUnreachable(partDefinition);\n    }\n    id = padId(id.trim().replace(/ /g, '-'), foundMap);\n    return id;\n    // return md5(`${id}`)\n}\nfunction padId(id, foundMap) {\n    if (Object.keys(foundMap).includes(id)) {\n        foundMap[id] += 1;\n        id = `${id}-${foundMap[id]}`;\n    }\n    else {\n        foundMap[id] = 1;\n    }\n    foundMap = foundMap;\n    return id;\n}\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nfunction parseMapStr(context, str, canBeStrings) {\n    str = str.trim();\n    const res = [];\n    const inputs = str.split(',');\n    inputs.forEach(i => {\n        if (i === '') {\n            return;\n        }\n        try {\n            const p = i.split(':');\n            if (p.length === 2) {\n                const ind = p[0];\n                const val = parseInt(p[1], 10);\n                if (!canBeStrings && !isNaN(val)) {\n                    res.push({ id: ind, val: parseInt(p[1], 10) });\n                    return;\n                }\n                else if (canBeStrings && p[1] !== undefined) {\n                    res.push({ id: ind, val: p[1] });\n                    return;\n                }\n            }\n        }\n        catch (e) {\n            // Ignore?\n        }\n        if (context) {\n            context.warning('Invalid input map chunk: ' + i);\n        }\n    });\n    return res;\n}\nexports.parseMapStr = parseMapStr;\nfunction ParseMappingTable(studioConfig, type) {\n    return studioConfig.map(conf => ({\n        type,\n        id: conf.SourceName,\n        port: conf.AtemSource,\n        sisyfosLayers: conf.SisyfosLayers\n    }));\n}\nexports.ParseMappingTable = ParseMappingTable;\nfunction FindSourceInfo(sources, type, id) {\n    id = id.replace(/\\s+/i, ' ').trim();\n    switch (type) {\n        case tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA:\n            const cameraName = id.match(/^(?:KAM|CAM)(?:ERA)? ?(.+)$/i);\n            if (cameraName === undefined || cameraName === null) {\n                return undefined;\n            }\n            return _.find(sources, s => s.type === type && s.id === cameraName[1].replace(/minus mic/i, '').trim());\n        case tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE:\n            const remoteName = id.match(/^(?:LIVE|SKYPE|EVS) ?(.+).*$/i);\n            if (!remoteName) {\n                return undefined;\n            }\n            if (id.match(/^LIVE/i)) {\n                return _.find(sources, s => s.type === type && s.id === remoteName[1]);\n            }\n            else if (id.match(/^EVS/i)) {\n                return _.find(sources, s => s.type === tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE && s.id === `DP${remoteName[1]}`);\n            }\n            else {\n                // Skype\n                return _.find(sources, s => s.type === type && s.id === `S${remoteName[1]}`);\n            }\n        default:\n            return undefined;\n    }\n}\nexports.FindSourceInfo = FindSourceInfo;\nfunction FindSourceInfoStrict(context, sources, type, id) {\n    const source = FindSourceInfo(sources, type, id);\n    if (!source) {\n        context.warning(`Invalid source \"${id}\" of type \"${type}\"`);\n    }\n    return source;\n}\nexports.FindSourceInfoStrict = FindSourceInfoStrict;\nfunction FindSourceByName(context, sources, name) {\n    name = (name + '').toLowerCase();\n    if (name.indexOf('k') === 0 || name.indexOf('c') === 0) {\n        return FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, name);\n    }\n    // TODO: This will be different for TV 2\n    if (name.indexOf('r') === 0) {\n        return FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, name);\n    }\n    context.warning(`Invalid source name \"${name}\"`);\n    return undefined;\n}\nexports.FindSourceByName = FindSourceByName;\nfunction GetInputValue(context, sources, name) {\n    let input = 1000;\n    const source = FindSourceByName(context, sources, name);\n    if (source !== undefined) {\n        input = tv2_common_1.literal(source).port;\n    }\n    return input;\n}\nexports.GetInputValue = GetInputValue;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction PartTime(config, partDefinition, totalWords, defaultTime = true) {\n    const storyDuration = Number(partDefinition.fields.audioTime) * 1000 || 0;\n    const partTime = (partDefinition.script.replace(/[\\r\\n]/g, '').length / totalWords) * storyDuration;\n    return Math.min(partTime > 0 ? partTime : defaultTime ? config.studio.DefaultPartDuration : 0, config.studio.MaximumPartDuration || 10000);\n}\nexports.PartTime = PartTime;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PartContext2 {\n    constructor(baseContext, externalId) {\n        this.baseContext = baseContext;\n        this.externalId = externalId;\n        this.rundownId = baseContext.rundownId;\n        this.rundown = baseContext.rundown;\n    }\n    /** PartContext */\n    getRuntimeArguments() {\n        return this.baseContext.getRuntimeArguments(this.externalId) || {};\n    }\n    /** IShowStyleConfigContext */\n    getShowStyleConfig() {\n        return this.baseContext.getShowStyleConfig();\n    }\n    getShowStyleConfigRef(configKey) {\n        return this.baseContext.getShowStyleConfigRef(configKey);\n    }\n    /** IStudioContext */\n    getStudioMappings() {\n        return this.baseContext.getStudioMappings();\n    }\n    /** IStudioConfigContext */\n    getStudioConfig() {\n        return this.baseContext.getStudioConfig();\n    }\n    getStudioConfigRef(configKey) {\n        return this.baseContext.getStudioConfigRef(configKey);\n    }\n    /** NotesContext */\n    error(message) {\n        return this.baseContext.error(message);\n    }\n    warning(message) {\n        return this.baseContext.warning(message);\n    }\n    getNotes() {\n        return this.baseContext.getNotes();\n    }\n    /** ICommonContext */\n    getHashId(originString, originIsNotUnique) {\n        return this.baseContext.getHashId(`${this.externalId}_${originString}`, originIsNotUnique);\n    }\n    unhashId(hash) {\n        return this.baseContext.unhashId(hash);\n    }\n}\nexports.PartContext2 = PartContext2;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction getSegmentBase(context, ingestSegment, showStyleOptions) {\n    const segment = tv2_common_1.literal({\n        name: ingestSegment.name,\n        metaData: {},\n        identifier: ingestSegment.payload.iNewsStory.fields.pageNumber && ingestSegment.payload.iNewsStory.fields.pageNumber.trim()\n            ? ingestSegment.payload.iNewsStory.fields.pageNumber.trim()\n            : undefined\n    });\n    const config = showStyleOptions.parseConfig(context);\n    if (ingestSegment.payload.iNewsStory.meta.float === 'float') {\n        segment.isHidden = true;\n        return {\n            segment,\n            parts: []\n        };\n    }\n    else {\n        segment.isHidden = false;\n    }\n    let blueprintParts = [];\n    const parsedParts = tv2_common_1.ParseBody(ingestSegment.externalId, ingestSegment.name, ingestSegment.payload.iNewsStory.body, ingestSegment.payload.iNewsStory.cues, ingestSegment.payload.iNewsStory.fields, ingestSegment.payload.iNewsStory.fields.modifyDate);\n    const totalWords = parsedParts.reduce((prev, cur) => {\n        if (cur.type === \"Server\" /* Server */) {\n            return prev;\n        }\n        return prev + cur.script.replace(/\\n/g, '').replace(/\\r/g, '').length;\n    }, 0);\n    if (segment.name.trim().match(/^CONTINUITY$/i)) {\n        blueprintParts.push(showStyleOptions.CreatePartContinuity(config, ingestSegment));\n        return {\n            segment,\n            parts: blueprintParts\n        };\n    }\n    let serverParts = 0;\n    let jingleTime = 0;\n    let serverTime = 0;\n    for (const par of parsedParts) {\n        // Apply showstyle-specific transformations of cues.\n        const part = showStyleOptions.TransformCuesIntoShowstyle(config.showStyle, par);\n        const partContext = new tv2_common_1.PartContext2(context, part.externalId);\n        // Make orphaned secondary cues into adlibs\n        if (tv2_common_1.GetNextPartCue(part, -1) === -1 &&\n            part.type === \"Unknown\" /* Unknown */ &&\n            part.cues.filter(cue => cue.type === tv2_constants_1.CueType.Jingle || cue.type === tv2_constants_1.CueType.AdLib).length === 0) {\n            blueprintParts.push(showStyleOptions.CreatePartUnknown(partContext, config, part, totalWords, true));\n            continue;\n        }\n        switch (part.type) {\n            case \"INTRO\" /* INTRO */:\n                if (showStyleOptions.CreatePartIntro) {\n                    blueprintParts.push(showStyleOptions.CreatePartIntro(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Kam\" /* Kam */:\n                if (showStyleOptions.CreatePartKam) {\n                    blueprintParts.push(showStyleOptions.CreatePartKam(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Server\" /* Server */:\n                if (showStyleOptions.CreatePartServer) {\n                    blueprintParts.push(showStyleOptions.CreatePartServer(partContext, config, part, ingestSegment.externalId));\n                }\n                break;\n            case \"Teknik\" /* Teknik */:\n                if (showStyleOptions.CreatePartTeknik) {\n                    blueprintParts.push(showStyleOptions.CreatePartTeknik(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Grafik\" /* Grafik */:\n                if (showStyleOptions.CreatePartGrafik) {\n                    blueprintParts.push(showStyleOptions.CreatePartGrafik(partContext, config, part, totalWords));\n                }\n                break;\n            case \"VO\" /* VO */:\n                if (showStyleOptions.CreatePartVO) {\n                    blueprintParts.push(showStyleOptions.CreatePartVO(partContext, config, part, ingestSegment.externalId, totalWords, Number(ingestSegment.payload.iNewsStory.fields.totalTime)));\n                }\n                break;\n            case \"DVE\" /* DVE */:\n                if (showStyleOptions.CreatePartDVE) {\n                    blueprintParts.push(showStyleOptions.CreatePartDVE(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Ekstern\" /* Ekstern */:\n                if (showStyleOptions.CreatePartEkstern) {\n                    blueprintParts.push(showStyleOptions.CreatePartEkstern(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Telefon\" /* Telefon */:\n                if (showStyleOptions.CreatePartTelefon) {\n                    blueprintParts.push(showStyleOptions.CreatePartTelefon(partContext, config, part, totalWords));\n                }\n                break;\n            case \"Unknown\" /* Unknown */:\n                if (part.cues.length) {\n                    blueprintParts.push(showStyleOptions.CreatePartUnknown(partContext, config, part, totalWords));\n                }\n                break;\n            case \"EVS\" /* EVS */:\n                if (showStyleOptions.CreatePartEVS) {\n                    blueprintParts.push(showStyleOptions.CreatePartEVS(partContext, config, part, totalWords));\n                }\n                break;\n            default:\n                tv2_common_1.assertUnreachable(part);\n                break;\n        }\n        if (part.type === \"Server\" /* Server */ ||\n            (part.type === \"VO\" /* VO */ && (Number(part.fields.tapeTime) > 0 || part.script.length))) {\n            if (blueprintParts[blueprintParts.length - 1]) {\n                serverTime += Number(blueprintParts[blueprintParts.length - 1].part.expectedDuration);\n                serverParts++;\n            }\n        }\n        if (part.cues.filter(cue => cue.type === tv2_constants_1.CueType.Jingle).length) {\n            if (blueprintParts[blueprintParts.length - 1]) {\n                const t = blueprintParts[blueprintParts.length - 1].part.expectedDuration;\n                if (t) {\n                    jingleTime += t;\n                }\n            }\n        }\n    }\n    let allocatedTime = blueprintParts.reduce((prev, cur) => {\n        return prev + (cur.part.expectedDuration ? cur.part.expectedDuration : 0);\n    }, 0) - jingleTime;\n    if (allocatedTime < 0) {\n        allocatedTime = 0;\n    }\n    blueprintParts.forEach(part => {\n        part.part.displayDurationGroup = ingestSegment.externalId;\n        if (!part.part.expectedDuration && Number(ingestSegment.payload.iNewsStory.fields.totalTime) > 0) {\n            part.part.expectedDuration =\n                (Number(ingestSegment.payload.iNewsStory.fields.totalTime) * 1000 - allocatedTime - serverTime || 0) /\n                    (blueprintParts.length - serverParts);\n            if (part.part.expectedDuration < 0) {\n                part.part.expectedDuration = 0;\n            }\n            if (part.part.expectedDuration > config.studio.MaximumPartDuration) {\n                part.part.expectedDuration = config.studio.MaximumPartDuration;\n            }\n        }\n    });\n    let extraTime = Number(ingestSegment.payload.iNewsStory.fields.totalTime) * 1000;\n    blueprintParts.forEach(part => {\n        if (part.part.expectedDuration === undefined || part.part.expectedDuration < 0) {\n            part.part.expectedDuration =\n                extraTime > config.studio.DefaultPartDuration\n                    ? extraTime > config.studio.MaximumPartDuration\n                        ? config.studio.MaximumPartDuration\n                        : extraTime\n                    : config.studio.DefaultPartDuration;\n        }\n        extraTime -= part.part.expectedDuration;\n        if (part.part.displayDuration && (part.part.displayDuration < 0 || isNaN(part.part.displayDuration))) {\n            part.part.displayDuration = 0;\n        }\n    });\n    if (blueprintParts.filter(part => part.pieces.length === 0 && part.adLibPieces.length).length === blueprintParts.length) {\n        segment.isHidden = true;\n    }\n    if (extraTime > 0 &&\n        // Filter out Jingle-only parts\n        (blueprintParts.length !== 1 ||\n            (blueprintParts[blueprintParts.length - 1] &&\n                !blueprintParts[blueprintParts.length - 1].pieces.some(piece => piece.sourceLayerId === 'studio0_jingle')))) {\n        const gapPart = tv2_common_1.literal({\n            part: tv2_common_1.literal({\n                externalId: `${ingestSegment.externalId}-GAP`,\n                title: `Adlib Gap`,\n                metaData: {},\n                typeVariant: '',\n                gap: true,\n                invalid: true,\n                expectedDuration: extraTime,\n                displayDurationGroup: ingestSegment.externalId\n            }),\n            pieces: [],\n            adLibPieces: []\n        });\n        blueprintParts.push(gapPart);\n    }\n    if (blueprintParts.filter(part => part.part.invalid === true).length === blueprintParts.length &&\n        ingestSegment.payload.iNewsStory.cues.length === 0) {\n        segment.isHidden = true;\n    }\n    blueprintParts = blueprintParts.map(part => {\n        const actualPart = part.part;\n        actualPart.metaData = tv2_common_1.literal(Object.assign(Object.assign({}, actualPart.metaData), { segmentExternalId: ingestSegment.externalId }));\n        if (actualPart.autoNext === undefined) {\n            actualPart.autoNext = false;\n        }\n        if (actualPart.invalid === undefined) {\n            actualPart.invalid = false;\n        }\n        return Object.assign(Object.assign({}, part), { part: actualPart });\n    });\n    return {\n        segment,\n        parts: blueprintParts\n    };\n}\nexports.getSegmentBase = getSegmentBase;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\n/**\n * Finds the index of the next primary cue.\n * @param partdefinition Part.\n * @param currentCue Index of current cue.\n */\nfunction GetNextPartCue(partdefinition, currentCue) {\n    const index = partdefinition.cues\n        .slice(currentCue + 1)\n        .findIndex(cue => cue.type === tv2_constants_1.CueType.DVE ||\n        cue.type === tv2_constants_1.CueType.Ekstern ||\n        (cue.type === tv2_constants_1.CueType.TargetEngine &&\n            cue.data.engine.match(/full/i) &&\n            partdefinition.type !== \"Grafik\" /* Grafik */) ||\n        cue.type === tv2_constants_1.CueType.Telefon);\n    if (index === -1) {\n        return -1;\n    }\n    return index + currentCue + 1;\n}\nexports.GetNextPartCue = GetNextPartCue;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_constants_1 = __webpack_require__(4);\nconst frameTime_1 = __webpack_require__(12);\n// TODO: OFFTUBE: find a way to do this for adlibs\nfunction GetJinglePartProperties(_context, config, part) {\n    if (part.cues) {\n        const cue = part.cues.find(c => c.type === tv2_constants_1.CueType.Jingle);\n        if (cue) {\n            const realBreaker = config.showStyle.BreakerConfig.find(conf => {\n                return conf.BreakerName && typeof conf.BreakerName === 'string'\n                    ? conf.BreakerName.toString()\n                        .trim()\n                        .toUpperCase() === cue.clip.toUpperCase()\n                    : false;\n            });\n            if (realBreaker) {\n                return {\n                    expectedDuration: frameTime_1.TimeFromFrames(Number(realBreaker.Duration)) -\n                        frameTime_1.TimeFromFrames(Number(realBreaker.EndAlpha)) -\n                        frameTime_1.TimeFromFrames(Number(realBreaker.StartAlpha)),\n                    prerollDuration: config.studio.CasparPrerollDuration + frameTime_1.TimeFromFrames(Number(realBreaker.StartAlpha)),\n                    autoNextOverlap: frameTime_1.TimeFromFrames(Number(realBreaker.EndAlpha)),\n                    disableOutTransition: false,\n                    autoNext: realBreaker.Autonext === true\n                };\n            }\n        }\n    }\n    return {};\n}\nexports.GetJinglePartProperties = GetJinglePartProperties;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nfunction EvaluateCuesBase(showStyleOptions, context, config, pieces, adLibPieces, cues, partDefinition, options) {\n    var _a;\n    let adLibRank = 0;\n    for (const cue of cues) {\n        if (cue && !SkipCue(cue, options.selectedCueTypes, options.excludeAdlibs, options.adlibsOnly)) {\n            const shouldAdlib = /* config.showStyle.IsOfftube || */ options.adlib ? true : cue.adlib ? true : false;\n            switch (cue.type) {\n                case tv2_constants_1.CueType.Grafik:\n                    if (showStyleOptions.EvaluateCueGrafik) {\n                        showStyleOptions.EvaluateCueGrafik(config, context, pieces, adLibPieces, partDefinition.externalId, cue, 'OVL', shouldAdlib, partDefinition, false, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.MOS:\n                    if (showStyleOptions.EvaluateCueMOS) {\n                        showStyleOptions.EvaluateCueMOS(config, context, pieces, adLibPieces, partDefinition.externalId, cue, cue.type === tv2_constants_1.CueType.MOS && ((_a = cue.engine) === null || _a === void 0 ? void 0 : _a.match(/FULL/i)) ? 'FULL' : 'OVL', shouldAdlib, false, adLibRank, options.isGrafikPart);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Ekstern:\n                    if (showStyleOptions.EvaluateCueEkstern) {\n                        showStyleOptions.EvaluateCueEkstern(context, config, pieces, adLibPieces, partDefinition.externalId, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.DVE:\n                    if (showStyleOptions.EvaluateCueDVE) {\n                        showStyleOptions.EvaluateCueDVE(context, config, pieces, adLibPieces, partDefinition, cue, shouldAdlib, adLibRank);\n                        // Always make an adlib for DVEs\n                        if (!shouldAdlib) {\n                            showStyleOptions.EvaluateCueDVE(context, config, pieces, adLibPieces, partDefinition, cue, true, adLibRank);\n                        }\n                    }\n                    break;\n                case tv2_constants_1.CueType.AdLib:\n                    if (showStyleOptions.EvaluateCueAdLib) {\n                        showStyleOptions.EvaluateCueAdLib(context, config, adLibPieces, partDefinition.externalId, cue, partDefinition, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Telefon:\n                    if (showStyleOptions.EvaluateCueTelefon) {\n                        showStyleOptions.EvaluateCueTelefon(config, context, pieces, adLibPieces, partDefinition.externalId, partDefinition, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.VIZ:\n                    if (showStyleOptions.EvaluateCueVIZ) {\n                        showStyleOptions.EvaluateCueVIZ(context, config, pieces, adLibPieces, partDefinition.externalId, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Jingle:\n                    if (showStyleOptions.EvaluateCueJingle) {\n                        showStyleOptions.EvaluateCueJingle(context, config, pieces, adLibPieces, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.LYD:\n                    if (showStyleOptions.EvaluateCueLYD) {\n                        showStyleOptions.EvaluateCueLYD(context, config, pieces, adLibPieces, cue, partDefinition, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.Design:\n                    if (showStyleOptions.EvaluateCueDesign) {\n                        showStyleOptions.EvaluateCueDesign(config, context, pieces, adLibPieces, partDefinition.externalId, cue, shouldAdlib, adLibRank);\n                    }\n                    break;\n                case tv2_constants_1.CueType.TargetEngine:\n                    if (showStyleOptions.EvaluateCueTargetEngine) {\n                        showStyleOptions.EvaluateCueTargetEngine(context, config, pieces, adLibPieces, partDefinition.externalId, partDefinition, cue, shouldAdlib);\n                    }\n                    break;\n                case tv2_constants_1.CueType.ClearGrafiks:\n                    if (showStyleOptions.EvaluateCueClearGrafiks) {\n                        showStyleOptions.EvaluateCueClearGrafiks(pieces, partDefinition.externalId, cue, shouldAdlib);\n                    }\n                    break;\n                default:\n                    if (cue.type !== tv2_constants_1.CueType.Unknown && cue.type !== tv2_constants_1.CueType.Profile && cue.type !== tv2_constants_1.CueType.Mic) {\n                        // TODO: Profile -> Change the profile as defined in VIZ device settings\n                        // TODO: Mic -> For the future\n                        // context.warning(`Unimplemented cue type: ${CueType[cue.type]}`)\n                        tv2_common_1.assertUnreachable(cue);\n                    }\n                    break;\n            }\n            if (shouldAdlib || cue.type === tv2_constants_1.CueType.AdLib || cue.type === tv2_constants_1.CueType.DVE) {\n                adLibRank++;\n            }\n        }\n    }\n    ;\n    [...pieces, ...adLibPieces].forEach(piece => {\n        if (piece.content && piece.content.timelineObjects) {\n            piece.content.timelineObjects.forEach((obj) => {\n                if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.VIZMSE) {\n                    if (!piece.expectedPlayoutItems) {\n                        piece.expectedPlayoutItems = [];\n                    }\n                    if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL) {\n                        const o = obj;\n                        const name = obj.content.templateName;\n                        if (name && name.length) {\n                            piece.expectedPlayoutItems.push({\n                                deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                content: {\n                                    templateName: obj.content.templateName,\n                                    templateData: obj.content.templateData,\n                                    channelName: o.content.channelName,\n                                    rundownId: ''\n                                }\n                            });\n                        }\n                    }\n                    else if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_PILOT) {\n                        const name = obj.content.templateVcpId;\n                        if (name !== undefined && name.toString().length) {\n                            piece.expectedPlayoutItems.push({\n                                deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                content: {\n                                    templateName: obj.content.templateVcpId,\n                                    channelName: obj.content.channelName,\n                                    rundownId: ''\n                                }\n                            });\n                        }\n                    }\n                    else if (obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeVizMSE.CLEAR_ALL_ELEMENTS) {\n                        piece.expectedPlayoutItems.push({\n                            deviceSubType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                            content: {\n                                templateName: 'altud',\n                                channelName: 'OVL1',\n                                templateData: [],\n                                rundownId: ''\n                            }\n                        });\n                    }\n                }\n            });\n        }\n    });\n}\nexports.EvaluateCuesBase = EvaluateCuesBase;\nfunction SkipCue(cue, selectedCueTypes, excludeAdlibs, adlibsOnly) {\n    if (excludeAdlibs === true && cue.adlib) {\n        return true;\n    }\n    if (adlibsOnly === true && !cue.adlib) {\n        return true;\n    }\n    if (selectedCueTypes && !selectedCueTypes.includes(cue.type)) {\n        return true;\n    }\n    return false;\n}\nexports.SkipCue = SkipCue;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nfunction TransitionFromString(str) {\n    if (str.match(/MIX/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.MIX;\n    }\n    else if (str.match(/DIP/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.DIP;\n    }\n    else if (str.match(/WIPE/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.WIPE;\n    }\n    else if (str.match(/STING/i)) {\n        return timeline_state_resolver_types_1.AtemTransitionStyle.STING;\n    }\n    return timeline_state_resolver_types_1.AtemTransitionStyle.CUT;\n}\nexports.TransitionFromString = TransitionFromString;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TransitionSettings(part) {\n    if (part.transition && part.transition.duration) {\n        if (part.transition.style === 'WIPE') {\n            return {\n                wipe: {\n                    rate: part.transition.duration\n                }\n            };\n        }\n        return {\n            mix: {\n                rate: part.transition.duration\n            }\n        };\n    }\n    return {};\n}\nexports.TransitionSettings = TransitionSettings;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(59), exports);\ntslib_1.__exportStar(__webpack_require__(60), exports);\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nfunction EvaluateVIZBase(context, config, pieces, adlibPieces, partId, parsedCue, useVizEngine, sourceLayers, adlib, rank) {\n    if (parsedCue.design.match(/^dve-triopage$/i)) {\n        const fileName = parsedCue.content.TRIOPAGE ? parsedCue.content.TRIOPAGE : parsedCue.content.GRAFIK;\n        const path = `dve/${fileName}`;\n        if (adlib) {\n            adlibPieces.push(tv2_common_1.literal({\n                _rank: rank || 0,\n                externalId: partId,\n                name: fileName,\n                outputLayerId: 'sec',\n                sourceLayerId: sourceLayers.SourceLayerDVEBackground,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                content: tv2_common_1.literal({\n                    fileName,\n                    path,\n                    timelineObjects: _.compact([\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: { start: 0 },\n                            priority: 100,\n                            layer: sourceLayers.CasparLLayerDVELoop,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: path,\n                                loop: true\n                            }\n                        })\n                    ])\n                })\n            }));\n        }\n        else {\n            pieces.push(tv2_common_1.literal({\n                _id: '',\n                externalId: partId,\n                name: fileName,\n                enable: {\n                    start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                },\n                outputLayerId: 'sec',\n                sourceLayerId: sourceLayers.SourceLayerDVEBackground,\n                infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                content: tv2_common_1.literal({\n                    fileName,\n                    path,\n                    timelineObjects: _.compact([\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: { start: 0 },\n                            priority: 100,\n                            layer: sourceLayers.CasparLLayerDVELoop,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: path,\n                                loop: true\n                            }\n                        })\n                    ])\n                })\n            }));\n        }\n    }\n    else if (parsedCue.rawType.match(/^VIZ=grafik-design$/i)) {\n        context.warning('VIZ=grafik-design is not supported for this showstyle');\n    }\n    else if (parsedCue.rawType.match(/^VIZ=full$/i)) {\n        if (useVizEngine) {\n            if (sourceLayers.SourceLayerVizFullIn1 && sourceLayers.AtemLLayerAtemAuxVizOvlIn1) {\n                if (!parsedCue.content.INP1) {\n                    context.warning(`No input provided by ${parsedCue.rawType}`);\n                    return;\n                }\n                let sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, parsedCue.content.INP1);\n                if (!sourceInfo) {\n                    sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, parsedCue.content.INP1);\n                    if (!sourceInfo) {\n                        context.warning(`Could not find source ${parsedCue.content.INP1}`);\n                        return;\n                    }\n                }\n                pieces.push(tv2_common_1.literal({\n                    _id: '',\n                    externalId: partId,\n                    enable: {\n                        start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                    },\n                    name: parsedCue.content.INP1 || '',\n                    outputLayerId: 'aux',\n                    sourceLayerId: sourceLayers.SourceLayerVizFullIn1,\n                    infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                    content: tv2_common_1.literal({\n                        studioLabel: '',\n                        switcherInput: sourceInfo.port,\n                        timelineObjects: _.compact([\n                            tv2_common_1.literal({\n                                id: '',\n                                enable: { start: 0 },\n                                priority: 100,\n                                layer: sourceLayers.AtemLLayerAtemAuxVizOvlIn1,\n                                content: {\n                                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX,\n                                    aux: {\n                                        input: sourceInfo.port\n                                    }\n                                }\n                            })\n                        ])\n                    })\n                }));\n            }\n            else {\n                context.warning(`Could not route source to Viz engine, this studio is not configured correctly.`);\n            }\n        }\n    }\n    else {\n        if (useVizEngine) {\n            if (sourceLayers.SourceLayerDesign && sourceLayers.GraphicLLayerGraphicLLayerDesign) {\n                const path = parsedCue.content.triopage ? parsedCue.content.triopage : parsedCue.content.GRAFIK;\n                if (!path || !path.length) {\n                    context.warning(`No valid template found for ${parsedCue.design}`);\n                    return;\n                }\n                if (adlib) {\n                    adlibPieces.push(tv2_common_1.literal({\n                        _rank: rank || 0,\n                        externalId: partId,\n                        name: path,\n                        outputLayerId: 'sec',\n                        sourceLayerId: sourceLayers.SourceLayerDesign,\n                        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                        content: tv2_common_1.literal({\n                            fileName: path,\n                            path,\n                            timelineObjects: _.compact([\n                                tv2_common_1.literal({\n                                    id: '',\n                                    enable: { start: 0 },\n                                    priority: 100,\n                                    layer: sourceLayers.GraphicLLayerGraphicLLayerDesign,\n                                    content: {\n                                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                                        templateName: path,\n                                        templateData: []\n                                    }\n                                })\n                            ])\n                        })\n                    }));\n                }\n                else {\n                    pieces.push(tv2_common_1.literal({\n                        _id: '',\n                        externalId: partId,\n                        name: path,\n                        enable: {\n                            start: parsedCue.start ? tv2_common_1.CalculateTime(parsedCue.start) : 0\n                        },\n                        outputLayerId: 'sec',\n                        sourceLayerId: sourceLayers.SourceLayerDesign,\n                        infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.Infinite,\n                        content: tv2_common_1.literal({\n                            fileName: path,\n                            path,\n                            timelineObjects: _.compact([\n                                tv2_common_1.literal({\n                                    id: '',\n                                    enable: { start: 0 },\n                                    priority: 100,\n                                    layer: sourceLayers.GraphicLLayerGraphicLLayerDesign,\n                                    content: {\n                                        deviceType: timeline_state_resolver_types_1.DeviceType.VIZMSE,\n                                        type: timeline_state_resolver_types_1.TimelineContentTypeVizMSE.ELEMENT_INTERNAL,\n                                        templateName: path,\n                                        templateData: []\n                                    }\n                                })\n                            ])\n                        })\n                    }));\n                }\n            }\n            else {\n                context.warning(`Could not create VIZ design, this studio is not configured correctly.`);\n            }\n        }\n    }\n}\nexports.EvaluateVIZBase = EvaluateVIZBase;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\n/**\n * Check that a template string is valid.\n * @param template User-provided template.\n */\nfunction TemplateIsValid(template) {\n    let boxesValid = false;\n    let indexValid = false;\n    let propertiesValid = false;\n    let borderValid = false;\n    if (Object.keys(template).indexOf('boxes') !== -1) {\n        if (_.isEqual(Object.keys(template.boxes), ['0', '1', '2', '3'])) {\n            boxesValid = true;\n        }\n    }\n    if (Object.keys(template).indexOf('index') !== -1) {\n        indexValid = true;\n    }\n    if (Object.keys(template).indexOf('properties') !== -1) {\n        if (_.isEqual(Object.keys(template.properties), [\n            'artFillSource',\n            'artCutSource',\n            'artOption',\n            'artPreMultiplied',\n            'artClip',\n            'artGain',\n            'artInvertKey'\n        ])) {\n            propertiesValid = true;\n        }\n    }\n    if (Object.keys(template).indexOf('border') !== -1) {\n        if (_.isEqual(Object.keys(template.border), [\n            'borderEnabled',\n            'borderBevel',\n            'borderOuterWidth',\n            'borderInnerWidth',\n            'borderOuterSoftness',\n            'borderInnerSoftness',\n            'borderBevelSoftness',\n            'borderBevelPosition',\n            'borderHue',\n            'borderSaturation',\n            'borderLuma',\n            'borderLightSourceDirection',\n            'borderLightSourceAltitude'\n        ])) {\n            borderValid = true;\n        }\n    }\n    if (boxesValid && indexValid && propertiesValid && borderValid) {\n        return true;\n    }\n    return false;\n}\nexports.TemplateIsValid = TemplateIsValid;\nfunction GetDVETemplate(config, templateName) {\n    return config ? config.find(c => c.DVEName.toString().toUpperCase() === templateName.toUpperCase()) : undefined;\n}\nexports.GetDVETemplate = GetDVETemplate;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(62), exports);\ntslib_1.__exportStar(__webpack_require__(14), exports);\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = __webpack_require__(8);\nconst invalid_1 = __webpack_require__(14);\nfunction CreatePartServerBase(context, config, partDefinition) {\n    if (partDefinition.fields === undefined) {\n        context.warning('Video ID not set!');\n        return { part: invalid_1.CreatePartInvalid(partDefinition), file: '', duration: 0, invalid: true };\n    }\n    if (!partDefinition.fields.videoId) {\n        context.warning('Video ID not set!');\n        return { part: invalid_1.CreatePartInvalid(partDefinition), file: '', duration: 0, invalid: true };\n    }\n    const file = partDefinition.fields.videoId;\n    const duration = Number(partDefinition.fields.tapeTime) * 1000 || 0;\n    const basePart = util_1.literal({\n        externalId: partDefinition.externalId,\n        title: partDefinition.rawType,\n        metaData: {},\n        typeVariant: '',\n        expectedDuration: duration || 1000,\n        prerollDuration: config.studio.CasparPrerollDuration\n    });\n    return {\n        part: {\n            part: basePart,\n            adLibPieces: [],\n            pieces: []\n        },\n        file,\n        duration\n    };\n}\nexports.CreatePartServerBase = CreatePartServerBase;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(64), exports);\ntslib_1.__exportStar(__webpack_require__(65), exports);\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst server_1 = __webpack_require__(15);\nfunction CreateAdlibServer(config, rank, externalId, mediaPlayerSession, partDefinition, file, vo, sourceLayers, offtubeOptions) {\n    return tv2_common_1.literal(Object.assign(Object.assign({ _rank: rank, externalId }, ((offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? { tags: offtubeOptions.tagAsAdlib ? [tv2_constants_1.AdlibTags.OFFTUBE_ADLIB_SERVER] : [] } : {})), { name: `${partDefinition.storyName} Server: ${file}`, sourceLayerId: vo ? sourceLayers.PgmVoiceOver : sourceLayers.PgmServer, outputLayerId: 'pgm', infiniteMode: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextSegment : tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart, toBeQueued: !(offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube), metaData: tv2_common_1.literal({\n            mediaPlayerSessions: (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? [tv2_constants_1.MEDIA_PLAYER_AUTO] : [mediaPlayerSession]\n        }), content: server_1.MakeContentServer(file, (offtubeOptions === null || offtubeOptions === void 0 ? void 0 : offtubeOptions.isOfftube) ? tv2_constants_1.MEDIA_PLAYER_AUTO : mediaPlayerSession, partDefinition, config, sourceLayers, true, offtubeOptions), adlibPreroll: config.studio.CasparPrerollDuration }));\n}\nexports.CreateAdlibServer = CreateAdlibServer;\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst PREVIEW_CHARACTERS = 30;\n// export function AddScript(part: PartDefinition, pieces: IBlueprintPiece[], duration: number, slutord: boolean) {\nfunction AddScript(part, pieces, duration, sourceLayerId) {\n    if (!pieces.length) {\n        return;\n    }\n    let script = part.script.replace(/^\\**/i, '').trim();\n    if (part.endWords) {\n        script = script.length ? `${script} SLUTORD: ${part.endWords}` : part.endWords;\n    }\n    if (script.length) {\n        const stripLength = Math.min(PREVIEW_CHARACTERS, script.length);\n        pieces.push(tv2_common_1.literal({\n            _id: '',\n            externalId: part.externalId,\n            name: script.slice(0, stripLength),\n            enable: {\n                start: 0,\n                duration\n            },\n            outputLayerId: 'manus',\n            sourceLayerId,\n            infiniteMode: tv_automation_sofie_blueprints_integration_1.PieceLifespan.OutOnNextPart,\n            content: tv2_common_1.literal({\n                firstWords: script.slice(0, stripLength),\n                lastWords: script\n                    .replace(/\\n/gi, ' ')\n                    .trim()\n                    .slice(script.length - stripLength)\n                    .trim(),\n                fullScript: script,\n                sourceDuration: duration,\n                lastModified: part.modified * 1000\n            })\n        }));\n    }\n}\nexports.AddScript = AddScript;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(15), exports);\ntslib_1.__exportStar(__webpack_require__(67), exports);\ntslib_1.__exportStar(__webpack_require__(68), exports);\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst tv2_constants_1 = __webpack_require__(4);\nconst _ = __webpack_require__(3);\nconst atem_1 = __webpack_require__(11);\nfunction MakeContentDVEBase(context, config, partDefinition, parsedCue, dveConfig, dveGeneratorOptions, addClass, adlib) {\n    if (!dveConfig) {\n        context.warning(`DVE ${parsedCue.template} is not configured`);\n        return {\n            valid: false,\n            content: {\n                boxSourceConfiguration: [],\n                timelineObjects: [],\n                dveConfiguration: []\n            },\n            stickyLayers: []\n        };\n    }\n    // console.log('boxmap1', boxMap)\n    // boxMap = boxMap.filter(map => map !== '')\n    // console.log('boxmap2', boxMap)\n    const graphicsTemplateContent = {};\n    parsedCue.labels.forEach((label, i) => {\n        graphicsTemplateContent[`locator${i + 1}`] = label;\n    });\n    return MakeContentDVE2(context, config, dveConfig, graphicsTemplateContent, parsedCue.sources, dveGeneratorOptions, addClass ? tv2_common_1.DVEParentClass('studio0', dveConfig.DVEName) : undefined, adlib, partDefinition);\n}\nexports.MakeContentDVEBase = MakeContentDVEBase;\nfunction MakeContentDVE2(context, config, dveConfig, graphicsTemplateContent, sources, dveGeneratorOptions, className, adlib, partDefinition, offtube) {\n    var _a;\n    const template = JSON.parse(dveConfig.DVEJSON);\n    const inputs = dveConfig.DVEInputs\n        ? dveConfig.DVEInputs.toString().split(';')\n        : '1:INP1;2:INP2;3:INP3;4:INP4'.split(';');\n    const boxMap = [];\n    const classes = [];\n    inputs.forEach(source => {\n        const sourceProps = source.split(':');\n        const fromCue = sourceProps[1];\n        const targetBox = Number(sourceProps[0]);\n        if (!fromCue || !targetBox || isNaN(targetBox)) {\n            context.warning(`Invalid DVE mapping: ${sourceProps}`);\n            return;\n        }\n        const sourceLayer = dveGeneratorOptions.boxLayers[fromCue];\n        classes.push(`${sourceLayer}_${dveGeneratorOptions.boxMappings[targetBox - 1]}`);\n        let usedServer = false;\n        if (sources) {\n            const prop = sources[fromCue];\n            if (prop === null || prop === void 0 ? void 0 : prop.match(/[K|C]AM(?:era)? ?.*/i)) {\n                const match = prop.match(/[K|C]AM(?:era)? ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `KAM ${match[1]}`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/LIVE ?.*/i)) {\n                const match = prop.match(/LIVE ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `LIVE ${match[1]}`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/full/i)) {\n                boxMap[targetBox - 1] = { source: `ENGINE FULL`, sourceLayer };\n            }\n            else if (prop === null || prop === void 0 ? void 0 : prop.match(/EVS ?.*/i)) {\n                const match = prop.match(/EVS ?(.*)/i);\n                boxMap[targetBox - 1] = { source: `EVS ${match[1]}`, sourceLayer };\n            }\n            else if (prop) {\n                if (partDefinition && partDefinition.fields.videoId && !usedServer) {\n                    boxMap[targetBox - 1] = { source: `SERVER ${partDefinition.fields.videoId}`, sourceLayer };\n                    usedServer = true;\n                }\n                else {\n                    boxMap[targetBox - 1] = { source: prop, sourceLayer };\n                }\n            }\n            else {\n                if (partDefinition && partDefinition.fields.videoId && !usedServer) {\n                    boxMap[targetBox - 1] = { source: `SERVER ${partDefinition.fields.videoId}`, sourceLayer };\n                    usedServer = true;\n                }\n                else {\n                    context.warning(`Missing mapping for ${targetBox}`);\n                    boxMap[targetBox - 1] = { source: '', sourceLayer };\n                }\n            }\n        }\n        else {\n            // Need something to keep the layout etc\n            boxMap[targetBox - 1] = { source: '', sourceLayer };\n        }\n    });\n    const boxes = _.map(template.boxes, box => (Object.assign(Object.assign({}, box), { source: config.studio.AtemSource.Default })));\n    const dveTimeline = [];\n    const boxSources = [];\n    const setBoxSource = (num, sourceInfo, mappingFrom) => {\n        if (boxes[num]) {\n            boxes[num].source = Number(sourceInfo.port);\n            boxSources.push(Object.assign(Object.assign({}, boxSource(sourceInfo, mappingFrom)), tv2_common_1.literal({\n                studioLabel: '',\n                switcherInput: Number(sourceInfo.port),\n                timelineObjects: []\n            })));\n        }\n    };\n    let valid = true;\n    let server = false;\n    const timelineStartObjId = `ssrc-${(_a = partDefinition === null || partDefinition === void 0 ? void 0 : partDefinition.externalId) !== null && _a !== void 0 ? _a : ''}-${template}`;\n    boxMap.forEach((mappingFrom, num) => {\n        if (mappingFrom === undefined || mappingFrom.source === '') {\n            if (sources) {\n                // If it is intentional there are no sources, then ignore\n                // TODO - should this warn?\n                context.warning(`Missing source type for DVE box: ${num + 1}`);\n                valid = false;\n            }\n        }\n        else {\n            const props = mappingFrom.source.split(' ');\n            const sourceType = props[0];\n            const sourceInput = props[1];\n            if (!sourceType || !sourceInput) {\n                context.warning(`Invalid DVE source: ${mappingFrom.source}`);\n                return;\n            }\n            const audioEnable = {\n                while: `!\\$${mappingFrom.sourceLayer}`\n                // while: `!.${ControlClasses.DVEBoxOverridePrefix + boxMappings[num]}`\n            }; // TODO - test\n            if (sourceType.match(/KAM/i)) {\n                const sourceInfoCam = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, mappingFrom.source);\n                if (sourceInfoCam === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoCam, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, mappingFrom.source, audioEnable));\n            }\n            else if (sourceType.match(/LIVE/i) || sourceType.match(/SKYPE/i)) {\n                const sourceInfoLive = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, mappingFrom.source);\n                if (sourceInfoLive === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoLive, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForEkstern(context, config.sources, mappingFrom.source, dveGeneratorOptions.dveTimelineGenerators.GetLayersForEkstern, audioEnable));\n            }\n            else if (sourceType.match(/EVS/i)) {\n                const sourceInfoDelayedPlayback = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, mappingFrom.source);\n                if (sourceInfoDelayedPlayback === undefined) {\n                    context.warning(`Invalid source: ${mappingFrom.source}`);\n                    valid = false;\n                    return;\n                }\n                setBoxSource(num, sourceInfoDelayedPlayback, mappingFrom.source);\n                dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, 'evs'));\n            }\n            else if (sourceType.match(/ENGINE/i)) {\n                if (sourceInput.match(/full/i)) {\n                    const sourceInfoFull = {\n                        type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.GRAPHICS,\n                        id: 'full',\n                        port: config.studio.AtemSource.DSK1F\n                    };\n                    setBoxSource(num, sourceInfoFull, mappingFrom.source);\n                    dveTimeline.push(...dveGeneratorOptions.dveTimelineGenerators.GetSisyfosTimelineObjForCamera(context, config, 'full'));\n                }\n                else {\n                    context.warning(`Unsupported engine for DVE: ${sourceInput}`);\n                }\n            }\n            else if (sourceType.match(/SERVER/i)) {\n                const file = partDefinition ? partDefinition.fields.videoId : undefined;\n                server = true;\n                setBoxSource(num, {\n                    type: tv_automation_sofie_blueprints_integration_1.SourceLayerType.VT,\n                    id: 'SERVER',\n                    port: -1\n                }, mappingFrom.source);\n                dveTimeline.push(tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, undefined, undefined, true),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.CasparLLayer.ClipPending,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                        file: adlib ? 'continue' : file ? file : 'continue',\n                        loop: true\n                    },\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    },\n                    classes: [`dve_placeholder`]\n                }), tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, undefined, undefined, true),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.SisyfosLLayer.ClipPending,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                        isPgm: 1\n                    },\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    },\n                    classes: []\n                }));\n                return;\n            }\n            else {\n                context.warning(`Unknown source type for DVE: ${mappingFrom.source}`);\n                valid = false;\n            }\n        }\n    });\n    const graphicsTemplateName = dveConfig.DVEGraphicsTemplate ? dveConfig.DVEGraphicsTemplate.toString() : '';\n    const graphicsTemplateStyle = dveConfig.DVEGraphicsTemplateJSON\n        ? JSON.parse(dveConfig.DVEGraphicsTemplateJSON.toString())\n        : '';\n    const keyFile = dveConfig.DVEGraphicsKey ? dveConfig.DVEGraphicsKey.toString() : '';\n    const frameFile = dveConfig.DVEGraphicsFrame ? dveConfig.DVEGraphicsFrame.toString() : '';\n    if (adlib) {\n        dveTimeline.push(...config.stickyLayers\n            .filter(layer => dveTimeline.map(obj => obj.layer).indexOf(layer) === -1)\n            .filter(layer => config.liveAudio.indexOf(layer) === -1)\n            .map(layer => {\n            return tv2_common_1.literal({\n                id: '',\n                enable: getDVEEnable(!!offtube),\n                priority: 1,\n                layer,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 0\n                },\n                metaData: {\n                    sisyfosPersistLevel: true\n                }\n            });\n        }));\n    }\n    return {\n        valid,\n        content: tv2_common_1.literal({\n            boxSourceConfiguration: boxSources,\n            dveConfiguration: {},\n            timelineObjects: _.compact([\n                // Setup classes for adlibs to be able to override boxes\n                tv2_common_1.createEmptyObject({\n                    enable: getDVEEnable(!!offtube),\n                    layer: 'dve_lookahead_control',\n                    classes: [tv2_constants_1.ControlClasses.DVEOnAir]\n                }),\n                // setup ssrc\n                tv2_common_1.literal({\n                    id: offtube ? timelineStartObjId : '',\n                    enable: getDVEEnable(!!offtube),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.ATEM.SSrcDefault,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC,\n                        ssrc: { boxes }\n                    },\n                    classes: className ? [...classes, className] : classes,\n                    metaData: {\n                        mediaPlayerSession: server\n                            ? partDefinition\n                                ? partDefinition.segmentExternalId\n                                : tv2_constants_1.MEDIA_PLAYER_AUTO\n                            : undefined\n                    }\n                }),\n                tv2_common_1.literal({\n                    id: '',\n                    enable: getDVEEnable(!!offtube, Number(config.studio.CasparPrerollDuration) - 10, timelineStartObjId),\n                    priority: 1,\n                    layer: dveGeneratorOptions.dveLayers.ATEM.SSrcArt,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRCPROPS,\n                        ssrcProps: {\n                            artFillSource: config.studio.AtemSource.SplitArtF,\n                            artCutSource: config.studio.AtemSource.SplitArtK,\n                            artOption: 1,\n                            artPreMultiplied: true\n                        }\n                    }\n                }),\n                tv2_common_1.literal(Object.assign({ id: '', enable: getDVEEnable(!!offtube, Number(config.studio.CasparPrerollDuration), timelineStartObjId), priority: 1, layer: dveGeneratorOptions.dveLayers.ATEM.MEProgram, content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                        me: {\n                            input: atem_1.AtemSourceIndex.SSrc,\n                            transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                        }\n                    } }, (adlib ? { classes: ['adlib_deparent'] } : {}))),\n                ...(graphicsTemplateName\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVETemplate,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.TEMPLATE,\n                                templateType: 'html',\n                                name: graphicsTemplateName,\n                                data: {\n                                    display: {\n                                        isPreview: false,\n                                        displayState: 'locators'\n                                    },\n                                    locators: {\n                                        style: graphicsTemplateStyle ? graphicsTemplateStyle : {},\n                                        content: graphicsTemplateContent\n                                    }\n                                },\n                                useStopCommand: false\n                            }\n                        })\n                    ]\n                    : []),\n                ...(keyFile\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVEKey,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: keyFile,\n                                mixer: {\n                                    keyer: true\n                                },\n                                loop: true\n                            }\n                        })\n                    ]\n                    : []),\n                ...(frameFile\n                    ? [\n                        tv2_common_1.literal({\n                            id: '',\n                            enable: getDVEEnable(!!offtube),\n                            priority: 1,\n                            layer: dveGeneratorOptions.dveLayers.CASPAR.CGDVEFrame,\n                            content: {\n                                deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                                type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                                file: frameFile,\n                                loop: true\n                            }\n                        })\n                    ]\n                    : []),\n                ...dveTimeline\n            ])\n        }),\n        stickyLayers: [\n            ...dveTimeline\n                .filter(obj => obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS)\n                .filter(obj => dveGeneratorOptions.AUDIO_LAYERS.includes(obj.layer.toString()))\n                .filter(obj => !dveGeneratorOptions.EXCLUDED_LAYERS.includes(obj.layer.toString()))\n                .map(obj => obj.layer.toString())\n        ]\n    };\n}\nexports.MakeContentDVE2 = MakeContentDVE2;\nfunction boxSource(info, label) {\n    return {\n        studioLabel: label,\n        switcherInput: info.port,\n        type: info.type\n    };\n}\nfunction getDVEEnable(offtube, offsetFromStart, startId, media) {\n    if (offsetFromStart) {\n        return offtube\n            ? { start: startId ? `#${startId}.start + ${offsetFromStart}` : offsetFromStart }\n            : { start: offsetFromStart !== null && offsetFromStart !== void 0 ? offsetFromStart : 0 };\n    }\n    return offtube\n        ? { while: `.${[tv2_constants_1.Enablers.OFFTUBE_ENABLE_DVE]}` }\n        : media\n            ? { while: '1' }\n            : { start: offsetFromStart !== null && offsetFromStart !== void 0 ? offsetFromStart : 0 };\n}\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst util_1 = __webpack_require__(8);\nfunction CreateJingleContentBase(config, file, layers, preMultiplied) {\n    return util_1.literal({\n        studioLabel: '',\n        fileName: file,\n        path: file,\n        firstWords: '',\n        lastWords: '',\n        timelineObjects: util_1.literal([\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: 0\n                },\n                priority: 1,\n                layer: layers.Caspar.PlayerJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeCasparCg.MEDIA,\n                    file\n                }\n            }),\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: Number(config.studio.CasparPrerollDuration)\n                },\n                priority: 1,\n                layer: layers.ATEM.DSKJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeAtem.DSK,\n                    dsk: {\n                        onAir: true,\n                        sources: {\n                            fillSource: config.studio.AtemSource.JingleFill,\n                            cutSource: config.studio.AtemSource.JingleKey\n                        },\n                        properties: {\n                            tie: false,\n                            preMultiply: preMultiplied,\n                            clip: config.studio.AtemSettings.CCGClip * 10,\n                            gain: config.studio.AtemSettings.CCGGain * 10,\n                            mask: {\n                                enabled: false\n                            }\n                        }\n                    }\n                },\n                classes: ['MIX_MINUS_OVERRIDE_DSK']\n            }),\n            ...(layers.ATEM.USKCleanEffekt\n                ? [\n                    util_1.literal({\n                        id: '',\n                        enable: {\n                            start: Number(config.studio.CasparPrerollDuration)\n                        },\n                        priority: 1,\n                        layer: layers.ATEM.USKCleanEffekt,\n                        content: {\n                            deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                            type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                            me: {\n                                upstreamKeyers: [\n                                    {\n                                        upstreamKeyerId: 0,\n                                        onAir: true,\n                                        mixEffectKeyType: 0,\n                                        flyEnabled: false,\n                                        fillSource: config.studio.AtemSource.JingleFill,\n                                        cutSource: config.studio.AtemSource.JingleKey,\n                                        maskEnabled: false,\n                                        lumaSettings: {\n                                            preMultiplied,\n                                            clip: config.studio.AtemSettings.CCGClip * 10,\n                                            gain: config.studio.AtemSettings.CCGGain * 10 // input is percents (0-100), atem uses 1-000\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    })\n                ]\n                : []),\n            util_1.literal({\n                id: '',\n                enable: {\n                    start: 0\n                },\n                priority: 1,\n                layer: layers.Sisyfos.PlayerJingle,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 1\n                }\n            })\n        ])\n    });\n}\nexports.CreateJingleContentBase = CreateJingleContentBase;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst _ = __webpack_require__(3);\nconst helpers_1 = __webpack_require__(16);\nfunction onTimelineGenerate(context, timeline, previousPersistentState, previousPartEndState, resolvedPieces, parseConfig, sourceLayers, casparLayerClipPending) {\n    const previousPartEndState2 = previousPartEndState;\n    const replacedSessions = {}; // TODO: Replace with map\n    const config = parseConfig(context);\n    // Find server in pgm\n    const activeServerObj = timeline.find(o => o.layer.toString() === casparLayerClipPending && !o.isLookahead);\n    // Find any placeholders to replace\n    const objsToReplace = timeline.filter(o => { var _a; return ((_a = o.classes) === null || _a === void 0 ? void 0 : _a.includes(`dve_placeholder`)) && !o.id.match(/^previous/i); });\n    // Replace contents of placeholder objects\n    // TOD: Replace this with an adlib action\n    objsToReplace.forEach(objToReplace => {\n        const index = timeline.indexOf(objToReplace);\n        if (objToReplace && activeServerObj) {\n            objToReplace.content = activeServerObj.content;\n            let replaceMeta = objToReplace.metaData;\n            const activeMeta = activeServerObj.metaData;\n            if (activeMeta && activeMeta.mediaPlayerSession && replaceMeta && replaceMeta.mediaPlayerSession) {\n                replacedSessions[replaceMeta.mediaPlayerSession] = activeMeta.mediaPlayerSession;\n                replaceMeta = Object.assign(Object.assign({}, replaceMeta), { mediaPlayerSession: activeMeta.mediaPlayerSession });\n            }\n            objToReplace.metaData = replaceMeta;\n        }\n        timeline[index] = objToReplace;\n    });\n    // Replace all sessions that have been overwritten\n    _.each(timeline, o => {\n        const meta = o.metaData;\n        if (meta && meta.mediaPlayerSession) {\n            if (Object.keys(replacedSessions).includes(meta.mediaPlayerSession)) {\n                meta.mediaPlayerSession = replacedSessions[meta.mediaPlayerSession];\n                o.metaData = meta;\n            }\n        }\n    });\n    // Do the same for pieces\n    _.each(resolvedPieces, piece => {\n        if (piece.metaData) {\n            const meta = piece.metaData;\n            if (meta.mediaPlayerSessions) {\n                piece.metaData.mediaPlayerSessions = meta.mediaPlayerSessions.map(session => {\n                    if (Object.keys(replacedSessions).includes(session)) {\n                        return replacedSessions[session];\n                    }\n                    return session;\n                });\n            }\n        }\n    });\n    copyPreviousSisyfosLevels(context, timeline, previousPartEndState2 ? previousPartEndState2.stickySisyfosLevels : {}, resolvedPieces);\n    const persistentState = {\n        activeMediaPlayers: {},\n        segmentSession: context.part.segmentId\n    };\n    const previousPersistentState2 = previousPersistentState;\n    persistentState.activeMediaPlayers = helpers_1.assignMediaPlayers(context, config, timeline, previousPersistentState2 ? previousPersistentState2.activeMediaPlayers : {}, resolvedPieces, sourceLayers);\n    dveBoxLookaheadUseOriginalEnable(timeline);\n    return Promise.resolve({\n        timeline,\n        persistentState\n    });\n}\nexports.onTimelineGenerate = onTimelineGenerate;\nfunction getEndStateForPart(_context, _previousPersistentState, previousPartEndState, resolvedPieces, time) {\n    const endState = {\n        stickySisyfosLevels: {},\n        mediaPlayerSessions: {}\n    };\n    const previousPartEndState2 = previousPartEndState;\n    const activePieces = _.filter(resolvedPieces, p => p.enable && p.enable.start <= time && (!p.enable.end || p.enable.end >= time));\n    _.each(activePieces, piece => {\n        preservePieceSisfosLevel(endState, previousPartEndState2, piece);\n    });\n    _.each(activePieces, piece => {\n        if (piece.metaData) {\n            const meta = piece.metaData.mediaPlayerSessions;\n            if (meta && meta.length) {\n                endState.mediaPlayerSessions[piece.sourceLayerId] = meta;\n            }\n        }\n    });\n    return endState;\n}\nexports.getEndStateForPart = getEndStateForPart;\n/**\n * DVE box lookahead uses classes to select the correct object.\n * Lookahead is replacing this selector rule with a '1' which causes every box to show the same.\n * This simply restores the original enable, which gets put into metaData for this purpose.\n */\nfunction dveBoxLookaheadUseOriginalEnable(timeline) {\n    // DVE_box lookahead class\n    _.each(timeline, obj => {\n        const obj2 = obj;\n        if (obj2.isLookahead &&\n            obj2.content.deviceType === timeline_state_resolver_types_1.DeviceType.ATEM &&\n            obj2.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC\n        // obj2.enable &&\n        // (obj2.enable.while === '1' || obj2.enable.while === 1)\n        ) {\n            const origClass = obj2.metaData ? obj2.metaData.dveAdlibEnabler : undefined;\n            if (origClass) {\n                // Restore the original enable rule\n                obj2.enable = { while: origClass };\n            }\n        }\n    });\n}\nfunction preservePieceSisfosLevel(endState, previousPartEndState, piece) {\n    const metaData = piece.metaData;\n    if (metaData) {\n        // Loop through rm level persistance\n        if (metaData.stickySisyfosLevels) {\n            for (const key of Object.keys(metaData.stickySisyfosLevels)) {\n                const values = metaData.stickySisyfosLevels[key];\n                // Follow the previous state, if specified, or start with this exposed value\n                endState.stickySisyfosLevels[key] =\n                    values.followsPrevious &&\n                        previousPartEndState &&\n                        previousPartEndState.stickySisyfosLevels &&\n                        previousPartEndState.stickySisyfosLevels[key]\n                        ? previousPartEndState.stickySisfosLevels[key]\n                        : values.value;\n            }\n        }\n    }\n}\nexports.preservePieceSisfosLevel = preservePieceSisfosLevel;\nfunction isSisyfosSource(obj) {\n    return (obj.content &&\n        obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS &&\n        obj.content.type === timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS);\n}\nfunction copyPreviousSisyfosLevels(context, timelineObjs, previousLevels, resolvedPieces) {\n    // This needs to look at previous pieces within the part, to make it work for adlibs\n    const sisyfosObjs = timelineObjs.filter(isSisyfosSource);\n    // Pieces should be ordered, we shall assume that\n    const groupedPieces = _.groupBy(resolvedPieces, p => p.enable.start);\n    _.each(groupedPieces, pieces => {\n        const pieceIds = _.pluck(pieces, '_id'); // getPieceGroupId(p._id))\n        // Find all the objs that start here\n        const objs = sisyfosObjs.filter(o => {\n            const groupId = o.pieceId;\n            return groupId && pieceIds.indexOf(groupId) !== -1;\n        });\n        // Stop if no objects\n        if (objs.length === 0 || !pieces[0].enable) {\n            return;\n        }\n        // Find the active pieces before this time\n        const time = pieces[0].enable.start;\n        // Start of part\n        if (time !== 0) {\n            // Calculate the previous 'state'\n            const activePieces = _.filter(resolvedPieces, p => {\n                if (!p.enable) {\n                    return false;\n                }\n                const start = p.enable.start; // Core should be always setting this to a number\n                const duration = p.playoutDuration;\n                // Piece must start before target, and end at or after target starts\n                return start < time && (duration === undefined || start + duration >= time);\n            });\n            const newPreviousLevels = {};\n            _.each(activePieces, piece => {\n                const metadata = piece.metaData;\n                if (metadata && metadata.stickySisyfosLevels) {\n                    _.each(metadata.stickySisyfosLevels, (val, id) => {\n                        // context.warning(\n                        // \t`New level from ${piece._id} for ${id} of ${JSON.stringify(val)} (last was ${previousLevels[id]})`\n                        // )\n                        if (newPreviousLevels[id]) {\n                            context.warning('duplicate level, going with the first!');\n                        }\n                        else {\n                            if (val.followsPrevious && previousLevels[id] !== undefined) {\n                                newPreviousLevels[id] = previousLevels[id];\n                            }\n                            else {\n                                newPreviousLevels[id] = val.value;\n                            }\n                        }\n                    });\n                }\n            });\n            // Apply newly calculated levels\n            previousLevels = newPreviousLevels;\n        }\n        // Apply newly calculated levels\n        _.each(objs, sisyfosObj => {\n            const contentObj = sisyfosObj.content;\n            const previousVal = previousLevels[sisyfosObj.layer + ''];\n            if (contentObj && previousVal !== undefined && sisyfosObj.metaData && sisyfosObj.metaData.sisyfosPersistLevel) {\n                contentObj.isPgm = previousVal;\n            }\n        });\n    });\n}\nexports.copyPreviousSisyfosLevels = copyPreviousSisyfosLevels;\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_constants_1 = __webpack_require__(4);\nconst _ = __webpack_require__(3);\nfunction reversePreviousAssignment(previousAssignment) {\n    const previousAssignmentRev = {};\n    for (const key of _.keys(previousAssignment)) {\n        _.each(previousAssignment[key] || [], v2 => {\n            previousAssignmentRev[v2.sessionId] = v2;\n        });\n    }\n    return previousAssignmentRev;\n}\nfunction maxUndefined(a, b) {\n    if (a === undefined) {\n        return b;\n    }\n    if (b === undefined) {\n        return a;\n    }\n    return Math.max(a, b);\n}\nfunction calculateSessionTimeRanges(resolvedPieces) {\n    const piecesWantingMediaPlayers = _.filter(resolvedPieces, p => {\n        if (!p.metaData) {\n            return false;\n        }\n        const metadata = p.metaData;\n        return (metadata.mediaPlayerSessions || []).length > 0;\n    });\n    const sessionRequests = {};\n    _.each(piecesWantingMediaPlayers, p => {\n        const metadata = p.metaData;\n        const start = p.enable.start;\n        const duration = p.playoutDuration;\n        const end = duration !== undefined ? start + duration : undefined;\n        // Track the range of each session\n        _.each(metadata.mediaPlayerSessions || [], sessionId => {\n            // TODO - will fixed ids ever be wanted? Is it reasonable to want to have the same session across multiple pieces?\n            // Infinites are the exception here, but anything else?\n            // Perhaps the id given should be prefixed with the piece(instance) id? And sharing sessions can be figured out when it becomes needed\n            if (sessionId === '' || sessionId === tv2_constants_1.MEDIA_PLAYER_AUTO) {\n                sessionId = `${p.infiniteId || p._id}`;\n            }\n            // Note: multiple generated sessionIds for a single piece will not work as there will not be enough info to assign objects to different players\n            const val = sessionRequests[sessionId] || undefined;\n            if (val) {\n                sessionRequests[sessionId] = {\n                    start: Math.min(val.start, start),\n                    end: maxUndefined(val.end, end),\n                    optional: val.optional && (metadata.mediaPlayerOptional || false)\n                };\n            }\n            else {\n                sessionRequests[sessionId] = {\n                    start,\n                    end,\n                    optional: metadata.mediaPlayerOptional || false\n                };\n            }\n        });\n    });\n    return sessionRequests;\n}\nfunction findNextAvailablePlayer(config, inUse, req) {\n    const pickFirstNotInUse = (inUseRequests) => {\n        const inUseIds = _.compact(_.map(inUseRequests, r => r.player));\n        for (const mp of config.mediaPlayers) {\n            if (inUseIds.indexOf(mp.id) === -1) {\n                return mp.id;\n            }\n        }\n        return undefined;\n    };\n    const tryForInUse = (filteredInUse) => {\n        // Try finding something which is free\n        let mpId = pickFirstNotInUse(inUse);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // Try reclaiming any lookahead\n        const allActiveUses = _.filter(filteredInUse, r => r.type !== tv2_constants_1.MediaPlayerClaimType.Preloaded);\n        mpId = pickFirstNotInUse(allActiveUses);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // Is there something ending at the same time this starts?\n        const activeUsesNotEndingNow = _.filter(filteredInUse, r => r.end === undefined || r.end > req.start);\n        mpId = pickFirstNotInUse(activeUsesNotEndingNow);\n        if (mpId !== undefined) {\n            return mpId;\n        }\n        // TODO - more strategies?\n        return undefined;\n    };\n    // Try with all players in use\n    let res = tryForInUse(inUse);\n    if (res !== undefined) {\n        return res;\n    }\n    // Try again with optional ones ignored\n    res = tryForInUse(_.filter(inUse, r => !r.optional));\n    if (res !== undefined) {\n        return res;\n    }\n    // TODO - more strategies?\n    // Nothing was free\n    return undefined;\n}\nfunction doesRequestOverlap(thisReq, other) {\n    if (thisReq.id === other.id) {\n        return false;\n    }\n    if (other.player === undefined) {\n        return false;\n    }\n    if (thisReq.start >= other.start && thisReq.start < (other.end || Infinity)) {\n        return true;\n    }\n    if (other.start >= thisReq.start && other.start < (thisReq.end || Infinity)) {\n        return true;\n    }\n    return false;\n}\nexports.doesRequestOverlap = doesRequestOverlap;\nfunction resolveMediaPlayerAssignments(context, config, previousAssignmentRev, resolvedPieces) {\n    const debugLog = config.studio.ABPlaybackDebugLogging;\n    const sessionRequests = calculateSessionTimeRanges(resolvedPieces);\n    // In future this may want a better fit algorithm than this. This only applies if being done for multiple clips playing simultaneously, and more players\n    // Convert requests into a sorted array\n    const activeRequests = [];\n    _.each(sessionRequests, (r, sessionId) => {\n        if (r) {\n            const prev = previousAssignmentRev[sessionId];\n            activeRequests.push({\n                id: sessionId,\n                start: r.start,\n                end: r.end,\n                player: prev ? prev.playerId.toString() : undefined,\n                type: prev && prev.lookahead ? tv2_constants_1.MediaPlayerClaimType.Preloaded : tv2_constants_1.MediaPlayerClaimType.Active,\n                optional: r.optional\n            });\n        }\n    });\n    _.sortBy(activeRequests, r => r.start);\n    // Go through and assign players\n    if (debugLog) {\n        context.warning('all reqs' + JSON.stringify(activeRequests, undefined, 4));\n    }\n    _.each(activeRequests, req => {\n        if (req.player !== undefined) {\n            // Keep existing assignment\n            if (debugLog) {\n                context.warning('Retained mp' + req.player + ' for ' + req.id);\n            }\n            return;\n        }\n        const otherActive = _.filter(activeRequests, r => doesRequestOverlap(req, r));\n        if (debugLog) {\n            context.warning(`for ${JSON.stringify(req)} there is: ${JSON.stringify(otherActive, undefined, 4)}`);\n        }\n        // TODO - what about playing the same piece back-to-back?\n        const nextPlayerId = findNextAvailablePlayer(config, otherActive, req);\n        if (nextPlayerId === undefined) {\n            context.warning('All the mediaplayers are in use (' + req.id + ')!');\n        }\n        else {\n            _.each(otherActive, o => {\n                if (o.player === nextPlayerId) {\n                    if (debugLog) {\n                        context.warning('Stole mp from ' + o.id);\n                    }\n                    o.player = undefined;\n                }\n            });\n            req.player = nextPlayerId;\n            if (debugLog) {\n                context.warning('Assigned mp' + req.player + ' to ' + req.id + '_' + JSON.stringify(req));\n            }\n        }\n    });\n    if (debugLog) {\n        context.warning('result' + JSON.stringify(activeRequests));\n    }\n    return activeRequests;\n}\nexports.resolveMediaPlayerAssignments = resolveMediaPlayerAssignments;\nfunction updateObjectsToMediaPlayer(context, config, playerId, objs, sourceLayers) {\n    _.each(objs, obj => {\n        // Mutate each object to the correct player\n        if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.CASPARCG) {\n            if (obj.layer === sourceLayers.Caspar.ClipPending) {\n                obj.layer = sourceLayers.Caspar.PlayerClip(playerId);\n            }\n            else if (obj.lookaheadForLayer === sourceLayers.Caspar.ClipPending) {\n                // This works on the assumption that layer will contain lookaheadForLayer, but not the exact syntax.\n                // Hopefully this will be durable to any potential future core changes\n                obj.layer = (obj.layer + '').replace(obj.lookaheadForLayer.toString(), sourceLayers.Caspar.PlayerClip(playerId));\n                obj.lookaheadForLayer = sourceLayers.Caspar.PlayerClip(playerId);\n            }\n            else {\n                context.warning(`Moving object to mediaPlayer that probably shouldnt be? (from layer: ${obj.layer})`);\n                // context.warning(obj)\n            }\n        }\n        else if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.ATEM) {\n            let atemInput = _.find(config.mediaPlayers, mp => mp.id === playerId.toString());\n            if (!atemInput) {\n                context.warning(`Trying to find atem input for unknown mediaPlayer: #${playerId}`);\n                atemInput = { id: playerId.toString(), val: config.studio.AtemSource.Default.toString() };\n            }\n            const atemObj = obj;\n            if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.ME) {\n                const atemObj2 = atemObj;\n                atemObj2.content.me.input = Number(atemInput.val) || 0;\n            }\n            else if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.AUX) {\n                const atemObj2 = atemObj;\n                atemObj2.content.aux.input = Number(atemInput.val) || 0;\n            }\n            else if (atemObj.content.type === timeline_state_resolver_types_1.TimelineContentTypeAtem.SSRC) {\n                const atemObj2 = atemObj;\n                // Find box with no source\n                const input = Number(atemInput.val) || 0;\n                atemObj2.content.ssrc.boxes.forEach((box, i) => {\n                    if (box.source === -1) {\n                        atemObj2.content.ssrc.boxes[i].source = input; // Pgm box\n                    }\n                });\n            }\n            else {\n                context.warning(`Trying to move ATEM object of unknown type (${atemObj.content.type}) for media player assignment`);\n            }\n        }\n        else if (obj.content.deviceType === timeline_state_resolver_types_1.DeviceType.SISYFOS) {\n            if (obj.layer === sourceLayers.Sisyfos.ClipPending) {\n                // TODO: Change when adding more servers\n                obj.layer = playerId === 1 ? sourceLayers.Sisyfos.PlayerA : sourceLayers.Sisyfos.PlayerB;\n            }\n            else if (obj.lookaheadForLayer === sourceLayers.Sisyfos.ClipPending) {\n                // This works on the assumption that layer will contain lookaheadForLayer, but not the exact syntax.\n                // Hopefully this will be durable to any potential future core changes\n                const targetPlayer = playerId === 1 ? sourceLayers.Sisyfos.PlayerA : sourceLayers.Sisyfos.PlayerB;\n                // TODO: Change when adding more servers\n                obj.layer = (obj.layer + '').replace(obj.lookaheadForLayer.toString(), targetPlayer);\n                obj.lookaheadForLayer = targetPlayer;\n            }\n            else {\n                context.warning(`Moving object to mediaPlayer that probably shouldnt be? (from layer: ${obj.layer})`);\n                // context.warning(obj)\n            }\n        }\n        else {\n            context.warning(`Trying to move object of unknown type (${obj.content.deviceType}) for media player assignment`);\n        }\n    });\n}\nfunction assignMediaPlayers(context, config, timelineObjs, previousAssignment, resolvedPieces, sourceLayers) {\n    const previousAssignmentRev = reversePreviousAssignment(previousAssignment);\n    const activeRequests = resolveMediaPlayerAssignments(context, config, previousAssignmentRev, resolvedPieces);\n    return applyMediaPlayersAssignments(context, config, timelineObjs, previousAssignmentRev, activeRequests, sourceLayers);\n}\nexports.assignMediaPlayers = assignMediaPlayers;\nfunction applyMediaPlayersAssignments(context, config, timelineObjs, previousAssignmentRev, activeRequests, sourceLayers) {\n    const debugLog = config.studio.ABPlaybackDebugLogging;\n    const newAssignments = {};\n    const persistAssignment = (sessionId, playerId, lookahead) => {\n        let ls = newAssignments[playerId];\n        if (!ls) {\n            newAssignments[playerId] = ls = [];\n        }\n        ls.push({ sessionId, playerId, lookahead });\n    };\n    // collect objects by their sessionId\n    const labelledObjs = timelineObjs.filter(o => o.metaData && o.metaData.mediaPlayerSession);\n    const groupedObjs = _.groupBy(labelledObjs, o => {\n        const sessionId = (o.metaData || {}).mediaPlayerSession;\n        if (sessionId === '' || sessionId === tv2_constants_1.MEDIA_PLAYER_AUTO) {\n            return o.infinitePieceId || o.pieceId || tv2_constants_1.MEDIA_PLAYER_AUTO;\n        }\n        else {\n            return sessionId;\n        }\n    });\n    // Apply the known assignments\n    const remainingGroups = [];\n    _.each(groupedObjs, (group, groupId) => {\n        const request = _.find(activeRequests, req => req.id === groupId);\n        if (request) {\n            if (request.player) {\n                // TODO - what if player is undefined?\n                updateObjectsToMediaPlayer(context, config, Number(request.player) || 0, group, sourceLayers);\n                persistAssignment(groupId, Number(request.player) || 0, false);\n            }\n        }\n        else {\n            remainingGroups.push({ id: groupId, objs: group });\n        }\n    });\n    // Find the groups needing more work\n    // Not matching a request means this is either a rogue object in a mislabeled piece, or lookahead for a future part.\n    const unknownGroups = [];\n    const lookaheadGroups = [];\n    _.each(remainingGroups, grp => {\n        // If this is lookahead for a future part (no end set on the object)\n        const isFuturePartLookahead = _.all(grp.objs, o => !!o.isLookahead /*|| (o as any).wasLookahead*/ && o.enable.duration === undefined && o.enable.end === undefined);\n        if (isFuturePartLookahead) {\n            lookaheadGroups.push(grp);\n        }\n        else {\n            unknownGroups.push(grp);\n        }\n    });\n    // These are the groups that shouldn't exist, so are likely a bug. There isnt a lot we can do beyond warn about the potential bug\n    _.each(unknownGroups, grp => {\n        const objIds = _.map(grp.objs, o => o.id);\n        const prev = previousAssignmentRev[grp.id];\n        if (prev) {\n            updateObjectsToMediaPlayer(context, config, prev.playerId, grp.objs, sourceLayers);\n            persistAssignment(grp.id, prev.playerId, false);\n            context.warning(`Found unexpected session remaining on the timeline: \"${grp.id}\" belonging to ${objIds}. This may cause playback glitches`);\n        }\n        else {\n            context.warning(`Found unexpected unknown session on the timeline: \"${grp.id}\" belonging to ${objIds}. This could result in black playback`);\n        }\n    });\n    let mediaPlayerUsageEnd = [];\n    for (const mp of config.mediaPlayers) {\n        // Block players with an 'infinite' clip from being used for lookahead\n        const endTimes = _.map(_.filter(activeRequests, s => s.player === mp.id), s => s.end);\n        const realEndTimes = _.filter(endTimes, e => e !== undefined);\n        if (endTimes.length === realEndTimes.length) {\n            // No infinite(undefined) ones, so find the highest end\n            mediaPlayerUsageEnd.push({\n                playerId: Number(mp.id) || 0,\n                end: realEndTimes.length === 0 ? 0 : _.max(realEndTimes)\n            });\n        }\n    }\n    // Sort by the end time\n    mediaPlayerUsageEnd = _.sortBy(mediaPlayerUsageEnd, u => u.end).reverse();\n    // Finish up with allocating lookahead based on what is left. If there is no space left that is not a problem until playback is closer\n    _.each(lookaheadGroups, grp => {\n        if (debugLog) {\n            context.warning(`Attempting assignment for future lookahead ${grp.id}`);\n        }\n        const prev = previousAssignmentRev[grp.id];\n        let nextPlayer;\n        if (debugLog) {\n            context.warning('Players are available at:' + JSON.stringify(mediaPlayerUsageEnd));\n        }\n        const prevAssignment = prev ? _.find(mediaPlayerUsageEnd, mp => mp.playerId === prev.playerId) : undefined;\n        if (prevAssignment && (prevAssignment.end === 0 || false)) {\n            // TODO - decide if the previous assignment is still suitable\n            if (debugLog) {\n                context.warning('lookahead can retain existing player');\n            }\n            nextPlayer = prevAssignment;\n            mediaPlayerUsageEnd = _.without(mediaPlayerUsageEnd, prevAssignment);\n        }\n        else {\n            // Take the next from the queue, as it is the next freed\n            nextPlayer = mediaPlayerUsageEnd.pop();\n        }\n        if (nextPlayer === undefined) {\n            if (debugLog) {\n                context.warning('no player available for lookahead. This likely means one is in use by a playing clip');\n            }\n        }\n        else {\n            if (debugLog) {\n                context.warning(`lookahead chose: ${nextPlayer.playerId} (Free after: ${nextPlayer.end})`);\n            }\n            // Record the assignment, so that the next update can try and reuse it\n            persistAssignment(grp.id, nextPlayer.playerId, true);\n            updateObjectsToMediaPlayer(context, config, nextPlayer.playerId, grp.objs, sourceLayers);\n        }\n    });\n    if (debugLog) {\n        context.warning('new assignments:' + JSON.stringify(newAssignments));\n    }\n    return newAssignments;\n}\nexports.applyMediaPlayersAssignments = applyMediaPlayersAssignments;\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst util_1 = __webpack_require__(8);\nfunction GetStickyForPiece(layers, STICKY_LAYERS) {\n    return util_1.literal({\n        stickySisyfosLevels: _.object(layers\n            .filter(layer => STICKY_LAYERS.indexOf(layer.layer) !== -1)\n            .map(layer => {\n            return [\n                layer.layer,\n                {\n                    value: layer.isPgm,\n                    followsPrevious: false\n                }\n            ];\n        }))\n    });\n}\nexports.GetStickyForPiece = GetStickyForPiece;\nfunction GetEksternMetaData(STICKY_LAYERS, studioMics, layers) {\n    return layers && layers.length\n        ? GetStickyForPiece([\n            ...layers.map(layer => {\n                return { layer, isPgm: 1 };\n            }),\n            ...studioMics.map(l => {\n                return { layer: l, isPgm: 1 };\n            })\n        ], STICKY_LAYERS)\n        : undefined;\n}\nexports.GetEksternMetaData = GetEksternMetaData;\nfunction GetCameraMetaData(config, layers) {\n    return GetStickyForPiece([...(layers || []), ...config.studio.StudioMics].map(l => {\n        return { layer: l, isPgm: 1 };\n    }), config.stickyLayers);\n}\nexports.GetCameraMetaData = GetCameraMetaData;\nfunction GetSisyfosTimelineObjForEkstern(context, sources, sourceType, getLayersForEkstern, enable) {\n    if (!enable) {\n        enable = { start: 0 };\n    }\n    const audioTimeline = [];\n    const layers = getLayersForEkstern(context, sources, sourceType);\n    if (!layers || !layers.length) {\n        context.warning(`Could not set audio levels for ${sourceType}`);\n        return audioTimeline;\n    }\n    layers.forEach(layer => {\n        audioTimeline.push(util_1.literal({\n            id: '',\n            enable: enable,\n            priority: 1,\n            layer,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                isPgm: 1\n            }\n        }));\n    });\n    return audioTimeline;\n}\nexports.GetSisyfosTimelineObjForEkstern = GetSisyfosTimelineObjForEkstern;\nfunction GetLayersForEkstern(context, sources, sourceType) {\n    const eksternProps = sourceType.match(/^(?:LIVE|SKYPE) ([^\\s]+)(?: (.+))?$/i);\n    const eksternLayers = [];\n    if (eksternProps) {\n        const sourceInfo = tv2_common_1.FindSourceInfoStrict(context, sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.REMOTE, sourceType);\n        if (sourceInfo && sourceInfo.sisyfosLayers) {\n            eksternLayers.push(...sourceInfo.sisyfosLayers);\n        }\n    }\n    return eksternLayers;\n}\nexports.GetLayersForEkstern = GetLayersForEkstern;\nfunction GetSisyfosTimelineObjForCamera(context, config, sourceType, enable) {\n    if (!enable) {\n        enable = { start: 0 };\n    }\n    const audioTimeline = [];\n    const useMic = !sourceType.match(/^(?:KAM|CAM)(?:ERA)? (.+) minus mic(.*)$/i);\n    const camName = sourceType.match(/^(?:KAM|CAM)(?:ERA)? (.+)$/i);\n    const nonCam = !!sourceType.match(/server|telefon|full|evs/i);\n    if ((useMic && camName) || nonCam) {\n        const camLayers = [];\n        if (useMic && camName) {\n            const sourceInfo = tv2_common_1.FindSourceInfoStrict(context, config.sources, tv_automation_sofie_blueprints_integration_1.SourceLayerType.CAMERA, sourceType);\n            if (sourceInfo) {\n                if (sourceInfo.sisyfosLayers) {\n                    camLayers.push(...sourceInfo.sisyfosLayers);\n                }\n                if (sourceInfo.useStudioMics) {\n                    camLayers.push(...config.studio.StudioMics);\n                }\n            }\n        }\n        else if (nonCam) {\n            camLayers.push(...config.studio.StudioMics);\n        }\n        audioTimeline.push(...camLayers.map(layer => {\n            return util_1.literal({\n                id: '',\n                enable: enable ? enable : { start: 0 },\n                priority: 1,\n                layer,\n                content: {\n                    deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                    type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                    isPgm: 1\n                }\n            });\n        }));\n    }\n    return audioTimeline;\n}\nexports.GetSisyfosTimelineObjForCamera = GetSisyfosTimelineObjForCamera;\nfunction GetLayersForCamera(config, sourceInfo) {\n    const cameraLayers = [];\n    if (sourceInfo.sisyfosLayers) {\n        cameraLayers.push(...sourceInfo.sisyfosLayers);\n    }\n    if (sourceInfo.useStudioMics) {\n        cameraLayers.push(...config.studio.StudioMics);\n    }\n    return cameraLayers;\n}\nexports.GetLayersForCamera = GetLayersForCamera;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction TranslateEngine(eng) {\n    return !!eng.match(/WALL/i) ? 'WALL' : !!eng.match(/FULL/i) ? 'FULL' : 'OVL';\n}\nexports.TranslateEngine = TranslateEngine;\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(74), exports);\ntslib_1.__exportStar(__webpack_require__(75), exports);\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Layers shared across showstyles, to maintain compatibility with config tables.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GraphicLLayer;\n(function (GraphicLLayer) {\n    GraphicLLayer[\"GraphicLLayerOverlay\"] = \"graphic_overlay\";\n    GraphicLLayer[\"GraphicLLayerOverlayIdent\"] = \"graphic_overlay_ident\";\n    GraphicLLayer[\"GraphicLLayerOverlayTopt\"] = \"graphic_overlay_topt\";\n    GraphicLLayer[\"GraphicLLayerOverlayLower\"] = \"graphic_overlay_lower\";\n    GraphicLLayer[\"GraphicLLayerOverlayHeadline\"] = \"graphic_overlay_headline\";\n    GraphicLLayer[\"GraphicLLayerOverlayTema\"] = \"graphic_overlay_tema\";\n    GraphicLLayer[\"GraphicLLayerPilot\"] = \"graphic_pilot\";\n    GraphicLLayer[\"GraphicLLayerPilotOverlay\"] = \"graphic_pilot_overlay\";\n    GraphicLLayer[\"GraphicLLayerDesign\"] = \"graphic_design\";\n    GraphicLLayer[\"GraphicLLayerAdLibs\"] = \"graphic_adlibs\";\n    GraphicLLayer[\"GraphicLLayerWall\"] = \"graphic_wall\"; // <= viz_layer_wall\n})(GraphicLLayer = exports.GraphicLLayer || (exports.GraphicLLayer = {}));\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SharedSourceLayers;\n(function (SharedSourceLayers) {\n    SharedSourceLayers[\"PgmCam\"] = \"studio0_camera\";\n    SharedSourceLayers[\"PgmLive\"] = \"studio0_live\";\n    SharedSourceLayers[\"PgmDVE\"] = \"studio0_dve\";\n    // PgmDVEAdlib = 'studio0_dve_adlib', // TODO: Future: Adlib functions?\n    SharedSourceLayers[\"PgmServer\"] = \"studio0_clip\";\n    SharedSourceLayers[\"PgmVoiceOver\"] = \"studio0_voiceover\";\n    // Graphics\n    SharedSourceLayers[\"PgmGraphicsIdent\"] = \"studio0_graphicsIdent\";\n    SharedSourceLayers[\"PgmGraphicsIdentPersistent\"] = \"studio0_graphicsIdent_persistent\";\n    SharedSourceLayers[\"PgmGraphicsTop\"] = \"studio0_graphicsTop\";\n    SharedSourceLayers[\"PgmGraphicsLower\"] = \"studio0_graphicsLower\";\n    SharedSourceLayers[\"PgmGraphicsHeadline\"] = \"studio0_graphicsHeadline\";\n    SharedSourceLayers[\"PgmGraphicsTema\"] = \"studio0_graphicsTema\";\n    SharedSourceLayers[\"PgmGraphicsTLF\"] = \"studio0_graphicsTelefon\";\n    /** General, 'fallback', overlay layer */\n    SharedSourceLayers[\"PgmGraphicsOverlay\"] = \"studio0_overlay\";\n    SharedSourceLayers[\"WallGraphics\"] = \"studio0_wall_graphics\";\n    // Note: there is a regex in core to ignore some DVE layers. That will need updating if adding more\n    SharedSourceLayers[\"PgmDVEBox1\"] = \"studio0_dve_box1\";\n    SharedSourceLayers[\"PgmDVEBox2\"] = \"studio0_dve_box2\";\n    SharedSourceLayers[\"PgmDVEBox3\"] = \"studio0_dve_box3\";\n    SharedSourceLayers[\"PgmDVEBox4\"] = \"studio0_dve_box4\";\n    // Other / sec / manus\n    SharedSourceLayers[\"PgmScript\"] = \"studio0_script\";\n})(SharedSourceLayers = exports.SharedSourceLayers || (exports.SharedSourceLayers = {}));\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(5);\ntslib_1.__exportStar(__webpack_require__(77), exports);\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst util_1 = __webpack_require__(8);\nfunction MoveSourcesToTable(versionStr, configName, withSisyfos, getSisyfosLayersForMigration, studioMics) {\n    const res = util_1.literal({\n        id: `studioConfig.moveToTable.${configName}`,\n        version: versionStr,\n        canBeRunAutomatically: true,\n        validate: (context) => {\n            const configVal = context.getConfig(configName);\n            if (configVal === undefined || typeof configVal === 'string') {\n                return `${configName} has old format or doesn't exist`;\n            }\n            return false;\n        },\n        migrate: (context) => {\n            const configVal = context.getConfig(configName);\n            const table = [];\n            if (configVal === undefined) {\n                context.setConfig(configName, table);\n            }\n            else if (typeof configVal === 'string') {\n                const oldConfig = tv2_common_1.parseMapStr(undefined, configVal, true);\n                _.each(oldConfig, (source, i) => {\n                    if (withSisyfos) {\n                        table.push(util_1.literal({\n                            _id: i.toString(),\n                            SourceName: source.id,\n                            AtemSource: source.val,\n                            SisyfosLayers: getSisyfosLayersForMigration(configName, source.id.toString().toUpperCase()),\n                            StudioMics: !!studioMics\n                        }));\n                    }\n                    else {\n                        table.push(util_1.literal({\n                            _id: i.toString(),\n                            SourceName: source.id,\n                            AtemSource: source.val\n                        }));\n                    }\n                });\n                context.setConfig(configName, table);\n            }\n        }\n    });\n    return res;\n}\nexports.MoveSourcesToTable = MoveSourcesToTable;\n\n\n/***/ }),\n/* 78 */,\n/* 79 */,\n/* 80 */,\n/* 81 */,\n/* 82 */,\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nconst atem_1 = __webpack_require__(11);\nconst layers_1 = __webpack_require__(9);\nexports.CORE_INJECTED_KEYS = ['SofieHostURL'];\nconst DEFAULT_STUDIO_MICS_LAYERS = [\n    layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_1_ST_A,\n    layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_2_ST_A,\n    layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_3_ST_A\n];\nexports.manifestOfftubeSourcesCam = {\n    id: 'SourcesCam',\n    name: 'Camera Mapping',\n    description: 'Camera number to ATEM input and Sisyfos layer',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: true,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '',\n            AtemSource: 0,\n            SisyfosLayers: [],\n            StudioMics: true\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'Camera name',\n            description: 'Camera name as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for Camera',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for Camera',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: true,\n            rank: 3\n        }\n    ]\n};\nexports.manifestOfftubeSourcesRM = {\n    id: 'SourcesRM',\n    name: 'RM Mapping',\n    description: 'RM number to ATEM input',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 1,\n            SisyfosLayers: [layers_1.OfftubeSisyfosLLayer.SisyfosSourceLive_1],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 2,\n            SisyfosLayers: [layers_1.OfftubeSisyfosLLayer.SisyfosSourceLive_2],\n            StudioMics: false\n        },\n        {\n            _id: '',\n            SourceName: 'WF',\n            AtemSource: 3,\n            SisyfosLayers: [\n                layers_1.OfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Stereo,\n                layers_1.OfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Surround\n            ],\n            StudioMics: false\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'RM number',\n            description: 'RM number as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for RM input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        },\n        {\n            id: 'SisyfosLayers',\n            name: 'Sisyfos layers',\n            description: 'Sisyfos layers for RM input',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n            filters: {\n                deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n            },\n            required: true,\n            multiple: true,\n            defaultVal: [],\n            rank: 2\n        },\n        {\n            id: 'StudioMics',\n            name: 'Use Studio Mics',\n            description: 'Add Sisyfos layers for Studio Mics',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n            required: true,\n            defaultVal: true,\n            rank: 3\n        }\n    ]\n};\nexports.manifestOfftubeSourcesABMediaPlayers = {\n    id: 'ABMediaPlayers',\n    name: 'Media Players inputs',\n    description: 'ATEM inputs for A/B media players',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.TABLE,\n    required: false,\n    defaultVal: tv2_common_1.literal([\n        {\n            _id: '',\n            SourceName: '1',\n            AtemSource: 6\n        },\n        {\n            _id: '',\n            SourceName: '2',\n            AtemSource: 5\n        }\n    ]),\n    columns: [\n        {\n            id: 'SourceName',\n            name: 'Media player',\n            description: 'Media player name as typed in iNews',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n            required: true,\n            defaultVal: '',\n            rank: 0\n        },\n        {\n            id: 'AtemSource',\n            name: 'ATEM input',\n            description: 'ATEM vision mixer input for Media player',\n            type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n            required: true,\n            defaultVal: 0,\n            rank: 1\n        }\n    ]\n};\nexports.manifestOfftubeStudioMics = {\n    id: 'StudioMics',\n    name: 'Studio Mics',\n    description: 'Sisyfos layers for Studio Mics',\n    type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.LAYER_MAPPINGS,\n    filters: {\n        deviceTypes: [timeline_state_resolver_types_1.DeviceType.SISYFOS]\n    },\n    required: true,\n    multiple: true,\n    defaultVal: DEFAULT_STUDIO_MICS_LAYERS\n};\nexports.studioConfigManifest = [\n    {\n        id: 'MediaFlowId',\n        name: 'Media Flow Id',\n        description: '',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: false,\n        defaultVal: 'flow0'\n    },\n    {\n        id: 'ClipFileExtension',\n        name: 'Clip files extension',\n        description: 'Default file extension to clips to fetch from Omneon and play at CasparCG',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: true,\n        defaultVal: '.mxf'\n    },\n    {\n        id: 'ClipSourcePath',\n        name: 'Network base path',\n        description: 'The base path for the Omneon network share. Needs to match the base path of the source in Media manager',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.STRING,\n        required: true,\n        defaultVal: ''\n    },\n    exports.manifestOfftubeSourcesCam,\n    exports.manifestOfftubeSourcesRM,\n    exports.manifestOfftubeSourcesABMediaPlayers,\n    exports.manifestOfftubeStudioMics,\n    {\n        id: 'ABPlaybackDebugLogging',\n        name: 'Media players selection debug logging',\n        description: 'Enable debug logging for A/B media player selection',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.BOOLEAN,\n        required: false,\n        defaultVal: false\n    },\n    {\n        id: 'AtemSource.DSK1F',\n        name: 'ATEM DSK1 Fill',\n        description: 'ATEM vision mixer input for DSK1 Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 8\n    },\n    {\n        id: 'AtemSource.DSK1K',\n        name: 'ATEM DSK1 Key',\n        description: 'ATEM vision mixer input for DSK1 Key',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 7\n    },\n    {\n        id: 'AtemSource.JingleFill',\n        name: 'Jingle Fill Source',\n        description: 'ATEM vision mixer input for Jingle Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 8\n    },\n    {\n        id: 'AtemSource.JingleKey',\n        name: 'Jingle Key Source',\n        description: 'ATEM vision mixer input for Jingle Source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 7\n    },\n    {\n        id: 'AtemSettings.CCGClip',\n        name: 'CasparCG keyer clip',\n        description: 'CasparCG keyer clip',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 50.0\n    },\n    {\n        id: 'AtemSettings.CCGGain',\n        name: 'CasparCG keyer gain',\n        description: 'CasparCG keyer gain',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 12.5\n    },\n    {\n        id: 'AtemSource.SplitArtF',\n        name: 'ATEM Split Screen Art Fill',\n        description: 'ATEM vision mixer input for Split Screen Art Fill',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 10\n    },\n    {\n        id: 'AtemSource.SplitArtK',\n        name: 'ATEM Split Screen Art Key',\n        description: 'ATEM vision mixer input for Split Screen Art Key',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 9\n    },\n    {\n        id: 'AtemSource.SplitBackground',\n        name: 'ATEM split screen background loop source',\n        description: 'ATEM source for mos full-frame grafik background source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 11\n    },\n    {\n        id: 'AtemSource.GFXFull',\n        name: 'Full graphics source',\n        description: 'ATEM source for full graphics',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 7\n    },\n    {\n        id: 'AtemSource.Loop',\n        name: 'Studio screen loop graphics source',\n        description: 'ATEM source for loop for studio screen',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 12\n    },\n    {\n        id: 'AtemSource.Default',\n        name: 'ATEM Default source',\n        description: 'ATEM vision mixer default source',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: atem_1.AtemSourceIndex.Col1\n    },\n    {\n        id: 'AtemSource.Continuity',\n        name: 'ATEM continuity source',\n        description: 'ATEM input for continuity',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: atem_1.AtemSourceIndex.Col2\n    },\n    {\n        id: 'AudioBedSettings.fadeIn',\n        name: 'Bed Fade In',\n        description: 'Default fade in duration for audio beds',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 25\n    },\n    {\n        id: 'AudioBedSettings.volume',\n        name: 'Bed Volume',\n        description: 'Volume (0 - 100)',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 80\n    },\n    {\n        id: 'AudioBedSettings.fadeOut',\n        name: 'Bed Fade Out',\n        description: 'Default fade out duration for audio beds',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 25\n    },\n    {\n        id: 'CasparPrerollDuration',\n        name: 'Caspar preroll duration',\n        description: 'ms of preroll before switching to caspar',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 200 // 5 frames\n    },\n    {\n        id: 'MaximumPartDuration',\n        name: 'Maximum Part Duration',\n        description: 'Maximum duration (ms) to give parts in UI',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 10000\n    },\n    {\n        id: 'DefaultPartDuration',\n        name: 'Default Part Duration',\n        description: 'Duration to give parts by default',\n        type: tv_automation_sofie_blueprints_integration_1.ConfigManifestEntryType.NUMBER,\n        required: false,\n        defaultVal: 4000\n    }\n];\n\n\n/***/ }),\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst layers_1 = __webpack_require__(9);\nexports.sisyfosChannels = {\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_1_ST_A]: {\n        isPgm: 0,\n        label: 'VRT 1'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_2_ST_A]: {\n        isPgm: 0,\n        label: 'VRT 2'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceHost_3_ST_A]: {\n        isPgm: 0,\n        label: 'VRT 3'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceLive_1]: {\n        isPgm: 0,\n        label: 'LIVE 1'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceLive_2]: {\n        isPgm: 0,\n        label: 'LIVE 2'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Stereo]: {\n        isPgm: 0,\n        label: 'WF ST'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Surround]: {\n        isPgm: 0,\n        label: 'WF 5.1'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceServerA]: {\n        isPgm: 0,\n        label: 'Server A'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceServerB]: {\n        isPgm: 0,\n        label: 'Server B'\n    },\n    [layers_1.OfftubeSisyfosLLayer.SisyfosSourceJingle]: {\n        isPgm: 0,\n        label: 'JINGLE'\n    }\n};\n\n\n/***/ }),\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst config_manifests_1 = __webpack_require__(83);\nconst getBaseline_1 = __webpack_require__(144);\nconst getShowStyleId_1 = __webpack_require__(145);\nconst migrations_1 = __webpack_require__(146);\nconst manifest = {\n    blueprintType: tv_automation_sofie_blueprints_integration_1.BlueprintManifestType.STUDIO,\n    blueprintVersion: \"0.1.0+v1.1.9\",\n    integrationVersion: \"0.0.0\",\n    TSRVersion: \"0.0.0\",\n    minimumCoreVersion: '1.2.0',\n    studioConfigManifest: config_manifests_1.studioConfigManifest,\n    studioMigrations: migrations_1.studioMigrations,\n    getBaseline: getBaseline_1.getBaseline,\n    getShowStyleId: getShowStyleId_1.getShowStyleId\n};\nexports.default = manifest;\n\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst atem_1 = __webpack_require__(11);\nconst layers_1 = __webpack_require__(9);\nconst sisyfosChannels_1 = __webpack_require__(94);\nfunction filterMappings(input, filter) {\n    const result = {};\n    _.each(_.keys(input), k => {\n        const v = input[k];\n        if (filter(k, v)) {\n            result[k] = v;\n        }\n    });\n    return result;\n}\nfunction convertMappings(input, func) {\n    return _.map(_.keys(input), k => func(k, input[k]));\n}\nfunction getBaseline(context) {\n    const mappings = context.getStudioMappings();\n    const atemMeMappings = filterMappings(mappings, (_id, v) => v.device === timeline_state_resolver_types_1.DeviceType.ATEM && v.mappingType === timeline_state_resolver_types_1.MappingAtemType.MixEffect);\n    const sisyfosMappings = filterMappings(mappings, (_id, v) => v.device === timeline_state_resolver_types_1.DeviceType.SISYFOS);\n    return [\n        ...convertMappings(atemMeMappings, id => tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: id,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                me: {\n                    input: atem_1.AtemSourceIndex.Bars,\n                    transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                }\n            }\n        })),\n        ...convertMappings(sisyfosMappings, id => {\n            const sisyfosChannel = sisyfosChannels_1.sisyfosChannels[id];\n            if (sisyfosChannel) {\n                return tv2_common_1.literal({\n                    id: '',\n                    enable: { while: '1' },\n                    priority: 0,\n                    layer: id,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                        isPgm: sisyfosChannel.isPgm,\n                        label: sisyfosChannel.label,\n                        visible: true\n                    }\n                });\n            }\n            else {\n                return tv2_common_1.literal({\n                    id: '',\n                    enable: { while: '1' },\n                    priority: 0,\n                    layer: id,\n                    content: {\n                        deviceType: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n                        type: timeline_state_resolver_types_1.TimelineContentTypeSisyfos.SISYFOS,\n                        isPgm: 0,\n                        label: ''\n                    }\n                });\n            }\n        }),\n        // have ATEM output default still image\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeAtemLLayer.AtemMEClean,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                me: {\n                    input: atem_1.AtemSourceIndex.MP1,\n                    transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                }\n            }\n        }),\n        // Route ME 2 PGM to ME 1 PGM\n        tv2_common_1.literal({\n            id: '',\n            enable: { while: '1' },\n            priority: 0,\n            layer: layers_1.OfftubeAtemLLayer.AtemMEProgram,\n            content: {\n                deviceType: timeline_state_resolver_types_1.DeviceType.ATEM,\n                type: timeline_state_resolver_types_1.TimelineContentTypeAtem.ME,\n                me: {\n                    input: atem_1.AtemSourceIndex.Prg2,\n                    transition: timeline_state_resolver_types_1.AtemTransitionStyle.CUT\n                }\n            }\n        })\n    ];\n}\nexports.getBaseline = getBaseline;\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(3);\nfunction getShowStyleId(_context, showStyles, _ingestRundown) {\n    const showStyle = _.first(showStyles);\n    if (showStyle) {\n        return showStyle._id;\n    }\n    return null;\n}\nexports.getShowStyleId = getShowStyleId;\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst config_manifests_1 = __webpack_require__(83);\nconst devices_1 = __webpack_require__(147);\nconst util_1 = __webpack_require__(148);\n/**\n * Versions:\n * 0.1.0: Core 0.24.0\n */\nexports.studioMigrations = tv2_common_1.literal([\n    util_1.ensureStudioConfig('0.1.0', 'SourcesCam', config_manifests_1.manifestOfftubeSourcesCam.defaultVal, 'text', 'Studio config: Camera mappings', 'Enter the camera input mapping', config_manifests_1.manifestOfftubeSourcesCam.defaultVal),\n    util_1.ensureStudioConfig('0.1.0', 'SourcesRM', config_manifests_1.manifestOfftubeSourcesRM.defaultVal, 'text', 'Studio config: Remote mappings', 'Enter the remote input mapping', config_manifests_1.manifestOfftubeSourcesRM.defaultVal),\n    util_1.ensureStudioConfig('0.1.0', 'ABMediaPlayers', config_manifests_1.manifestOfftubeSourcesABMediaPlayers.defaultVal, 'text', 'Studio config: AB Media Players mappings', 'Enter the AB Media Players input mapping', config_manifests_1.manifestOfftubeSourcesABMediaPlayers.defaultVal),\n    util_1.ensureStudioConfig('0.1.0', 'StudioMics', config_manifests_1.manifestOfftubeStudioMics.defaultVal, 'text', 'Studio config: Studio Mics', 'Select the Sisyfos layers for Studio Mics', config_manifests_1.manifestOfftubeStudioMics.defaultVal),\n    ...devices_1.deviceMigrations,\n    // Fill in any mappings that did not exist before\n    // Note: These should only be run as the very final step of all migrations. otherwise they will add items too early, and confuse old migrations\n    ...util_1.getMappingsDefaultsMigrationSteps(\"0.1.0+v1.1.9\"),\n    tv2_common_1.MoveSourcesToTable('0.1.0', 'SourcesCam', true, util_1.GetSisyfosLayersForTableMigrationOfftube, true),\n    tv2_common_1.MoveSourcesToTable('0.1.0', 'SourcesRM', true, util_1.GetSisyfosLayersForTableMigrationOfftube, false),\n    tv2_common_1.MoveSourcesToTable('0.1.0', 'ABMediaPlayers', false, util_1.GetSisyfosLayersForTableMigrationOfftube, false)\n]);\n\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nfunction validateDevice(spec) {\n    return {\n        id: `Playout-gateway.${spec.id}.validate`,\n        version: \"0.1.0+v1.1.9\",\n        canBeRunAutomatically: false,\n        validate: (context) => {\n            const dev = context.getDevice(spec.id);\n            if (!dev) {\n                return false;\n            }\n            if (dev.type !== spec.type) {\n                return `Type is not \"${timeline_state_resolver_types_1.DeviceType[spec.type]}\"`;\n            }\n            if (spec.validate) {\n                return spec.validate(dev);\n            }\n            return false;\n        },\n        input: [\n            {\n                label: `Playout-gateway: device \"${spec.id}\" misconfigured`,\n                description: `Go into the settings of the Playout-gateway and setup the device \"${spec.id}\". ($validation)`,\n                inputType: null,\n                attribute: null\n            }\n        ]\n    };\n}\nfunction createDevice(spec) {\n    return {\n        id: `Playout-gateway.${spec.id}.create`,\n        version: spec.firstVersion,\n        canBeRunAutomatically: spec.input === undefined,\n        validate: (context) => {\n            if (spec.createCondition && !spec.createCondition(context)) {\n                return false;\n            }\n            const dev = context.getDevice(spec.id);\n            if (!dev) {\n                return `\"${spec.id}\" missing`;\n            }\n            return false;\n        },\n        migrate: (context, input) => {\n            if (spec.createCondition && !spec.createCondition(context)) {\n                return;\n            }\n            const dev = context.getDevice(spec.id);\n            if (!dev) {\n                const options = spec.defaultValue(input, context);\n                if (options) {\n                    context.insertDevice(spec.id, options);\n                }\n            }\n        },\n        input: spec.input,\n        dependOnResultFrom: spec.createDependsOn\n    };\n}\nconst devices = [\n    {\n        id: 'abstract0',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n        defaultValue: () => ({\n            type: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n            options: {}\n        })\n    },\n    {\n        id: 'caspar01',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        defaultValue: input => ({\n            type: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n            options: {\n                host: input.host,\n                port: 5250,\n                launcherHost: input.host,\n                launcherPort: 8005\n            }\n        }),\n        input: [\n            {\n                label: 'Device config caspar01: Host',\n                description: 'Enter the Host paramter, example: \"127.0.0.1\"',\n                inputType: 'text',\n                attribute: 'host',\n                defaultValue: undefined\n            }\n        ],\n        validate: device => {\n            if (!device.options) {\n                return 'Missing options';\n            }\n            const opts = device.options;\n            if (!opts.host) {\n                return 'Host is not set';\n            }\n            if (!opts.launcherHost) {\n                return 'Launcher host is not set';\n            }\n            return false;\n        },\n        createDependsOn: 'studioConfig.DevicePrefix'\n    },\n    {\n        id: 'caspar01-launcher',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.HTTPWATCHER,\n        defaultValue: (_input, context) => {\n            const mainDev = context.getDevice('caspar01');\n            if (mainDev && mainDev.options) {\n                const mainOpts = mainDev.options;\n                if (mainOpts.launcherHost) {\n                    return {\n                        type: timeline_state_resolver_types_1.DeviceType.HTTPWATCHER,\n                        options: {\n                            uri: `http://${mainOpts.launcherHost}:${mainOpts.launcherPort || 8005}/processes`,\n                            httpMethod: 'GET',\n                            expectedHttpResponse: 200,\n                            interval: 30000\n                        }\n                    };\n                }\n            }\n            return undefined;\n        },\n        validate: device => {\n            if (!device.options) {\n                return 'Missing options';\n            }\n            const opts = device.options;\n            if (!opts.uri) {\n                return 'URI is not set';\n            }\n            if (!opts.httpMethod) {\n                return 'HTTP Method is not set';\n            }\n            if (!opts.expectedHttpResponse) {\n                return 'Expected response is not set';\n            }\n            if (!opts.interval) {\n                return 'Inteval is not set';\n            }\n            return false;\n        },\n        createDependsOn: 'Playout-gateway.caspar01.create'\n    },\n    {\n        id: 'caspar01-scanner',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.HTTPWATCHER,\n        defaultValue: (_input, context) => {\n            const mainDev = context.getDevice('caspar01');\n            if (mainDev && mainDev.options) {\n                const mainOpts = mainDev.options;\n                if (mainOpts.launcherHost) {\n                    return {\n                        type: timeline_state_resolver_types_1.DeviceType.HTTPWATCHER,\n                        options: {\n                            uri: `http://${mainOpts.host}:8000/stat/seq`,\n                            httpMethod: 'GET',\n                            expectedHttpResponse: 200,\n                            interval: 30000\n                        }\n                    };\n                }\n            }\n            return undefined;\n        },\n        validate: device => {\n            if (!device.options) {\n                return 'Missing options';\n            }\n            const opts = device.options;\n            if (!opts.uri) {\n                return 'URI is not set';\n            }\n            if (!opts.httpMethod) {\n                return 'HTTP Method is not set';\n            }\n            if (!opts.expectedHttpResponse) {\n                return 'Expected response is not set';\n            }\n            if (!opts.interval) {\n                return 'Inteval is not set';\n            }\n            return false;\n        },\n        createDependsOn: 'Playout-gateway.caspar01.create'\n    },\n    {\n        id: 'atem0',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.ATEM,\n        defaultValue: input => ({\n            type: timeline_state_resolver_types_1.DeviceType.ATEM,\n            options: {\n                host: input.host,\n                port: 9910\n            }\n        }),\n        input: [\n            {\n                label: 'Device config atem0: Host',\n                description: 'Enter the Host paramter, example: \"127.0.0.1\"',\n                inputType: 'text',\n                attribute: 'host',\n                defaultValue: undefined\n            }\n        ],\n        validate: device => {\n            if (!device.options) {\n                return 'Missing options';\n            }\n            const opts = device.options;\n            if (!opts.host) {\n                return 'Host is not set';\n            }\n            return false;\n        }\n    },\n    {\n        id: 'http0',\n        firstVersion: '0.1.0',\n        type: timeline_state_resolver_types_1.DeviceType.HTTPSEND,\n        defaultValue: () => ({\n            type: timeline_state_resolver_types_1.DeviceType.HTTPSEND,\n            options: {\n                makeReadyCommands: []\n            }\n        })\n    }\n];\nexports.deviceMigrations = tv2_common_1.literal([\n    // create all devices\n    ..._.map(devices, createDevice),\n    // ensure all devices still look valid\n    ..._.map(devices, validateDevice)\n]);\n\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tv2_common_1 = __webpack_require__(0);\nconst _ = __webpack_require__(3);\nconst layers_1 = __webpack_require__(9);\nconst mappings_defaults_1 = __webpack_require__(149);\nfunction ensureStudioConfig(version, configName, value, // null if manual\ninputType, // EditAttribute types\nlabel, description, defaultValue, oldConfigName, dropdownOptions) {\n    return {\n        id: `studioConfig.${configName}`,\n        version,\n        canBeRunAutomatically: _.isNull(value) ? false : true,\n        validate: (context) => {\n            const configVal = context.getConfig(configName);\n            const oldConfigVal = oldConfigName && context.getConfig(oldConfigName);\n            if (configVal === undefined && oldConfigVal === undefined) {\n                return `${configName} is missing`;\n            }\n            return false;\n        },\n        input: (context) => {\n            const inputs = [];\n            const configVal = context.getConfig(configName);\n            if (inputType && configVal === undefined) {\n                inputs.push({\n                    label,\n                    description,\n                    inputType,\n                    attribute: 'value',\n                    defaultValue,\n                    dropdownOptions\n                });\n            }\n            return inputs;\n        },\n        migrate: (context, input) => {\n            context.setConfig(configName, _.isNull(value) ? input.value : value);\n        }\n    };\n}\nexports.ensureStudioConfig = ensureStudioConfig;\nfunction renameStudioConfig(version, oldConfigName, newConfigName, updateValue) {\n    return {\n        id: `studioConfig.${oldConfigName}`,\n        version,\n        canBeRunAutomatically: true,\n        validate: (context) => {\n            const configVal = context.getConfig(oldConfigName);\n            if (configVal !== undefined) {\n                return `${oldConfigName} is defined`;\n            }\n            return false;\n        },\n        migrate: (context) => {\n            const configVal = context.getConfig(oldConfigName);\n            if (configVal !== undefined) {\n                context.setConfig(newConfigName, updateValue ? updateValue(configVal) : configVal);\n                context.removeConfig(oldConfigName);\n            }\n        }\n    };\n}\nexports.renameStudioConfig = renameStudioConfig;\nfunction renameMapping(version, oldMappingName, newMappingName) {\n    return {\n        id: `studioMapping.${oldMappingName}`,\n        version,\n        canBeRunAutomatically: true,\n        validate: (context) => {\n            const mapping = context.getMapping(oldMappingName);\n            if (mapping !== undefined) {\n                return `${oldMappingName} is defined`;\n            }\n            return false;\n        },\n        migrate: (context) => {\n            const mapping = context.getMapping(oldMappingName);\n            if (mapping) {\n                context.insertMapping(newMappingName, mapping);\n                context.removeMapping(oldMappingName);\n            }\n        }\n    };\n}\nexports.renameMapping = renameMapping;\nfunction removeMapping(version, oldMappingName) {\n    return {\n        id: `studioMapping.${oldMappingName}`,\n        version,\n        canBeRunAutomatically: true,\n        validate: (context) => {\n            const mapping = context.getMapping(oldMappingName);\n            if (mapping) {\n                return `${oldMappingName} is defined`;\n            }\n            return false;\n        },\n        migrate: (context) => {\n            const mapping = context.getMapping(oldMappingName);\n            if (mapping) {\n                context.removeMapping(oldMappingName);\n            }\n        }\n    };\n}\nexports.removeMapping = removeMapping;\nfunction getMappingsDefaultsMigrationSteps(versionStr) {\n    const res = _.compact(_.map(mappings_defaults_1.default, (defaultVal, id) => {\n        return tv2_common_1.literal({\n            id: `mappings.defaults.${id}`,\n            version: versionStr,\n            canBeRunAutomatically: true,\n            validate: (context) => {\n                // Optional mappings based on studio settings can be dropped here\n                if (!context.getMapping(id)) {\n                    return `Mapping \"${id}\" doesn't exist on ShowBaseStyle`;\n                }\n                return false;\n            },\n            migrate: (context) => {\n                if (!context.getMapping(id)) {\n                    context.insertMapping(id, defaultVal);\n                }\n            }\n        });\n    }));\n    return res;\n}\nexports.getMappingsDefaultsMigrationSteps = getMappingsDefaultsMigrationSteps;\nfunction GetSisyfosLayersForTableMigrationOfftube(configName, val) {\n    switch (configName) {\n        case 'SourcesCam':\n            return [];\n        case 'SourcesRM':\n            switch (val) {\n                case '1':\n                    return [layers_1.OfftubeSisyfosLLayer.SisyfosSourceLive_1];\n                case '2':\n                    return [layers_1.OfftubeSisyfosLLayer.SisyfosSourceLive_2];\n                case 'WF':\n                case '3':\n                    return [\n                        layers_1.OfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Stereo,\n                        layers_1.OfftubeSisyfosLLayer.SisyfosSourceWorldFeed_Surround\n                    ];\n            }\n            break;\n    }\n    return [];\n}\nexports.GetSisyfosLayersForTableMigrationOfftube = GetSisyfosLayersForTableMigrationOfftube;\n\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeline_state_resolver_types_1 = __webpack_require__(1);\nconst tv_automation_sofie_blueprints_integration_1 = __webpack_require__(2);\nconst tv2_common_1 = __webpack_require__(0);\nexports.default = tv2_common_1.literal({\n    core_abstract: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n        deviceId: 'abstract0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    offtube_abstract_pgm_enabler: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n        deviceId: 'abstract0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    atem_me_clean: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.MixEffect,\n        index: 1 // 1 = ME2\n    }),\n    atem_me_program: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.MixEffect,\n        index: 0 // 0 = ME1\n    }),\n    atem_dsk_graphics: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.DownStreamKeyer,\n        index: 0 // 0 = DSK1\n    }),\n    atem_aux_clean: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.Auxilliary,\n        index: 0 // 0 = out 1\n    }),\n    atem_aux_screen: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.Auxilliary,\n        index: 1 // 1 = out 2\n    }),\n    atem_supersource_art: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceProperties,\n        index: 0 // 0 = SS\n    }),\n    atem_supersource_default: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.RETAIN,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceBox,\n        index: 0 // 0 = SS\n    }),\n    atem_supersource_z_box1: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        lookaheadMaxSearchDistance: 1,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceBox,\n        index: 0 // 0 = SS\n    }),\n    atem_supersource_z_box2: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        lookaheadMaxSearchDistance: 1,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceBox,\n        index: 0 // 0 = SS\n    }),\n    atem_supersource_z_box3: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        lookaheadMaxSearchDistance: 1,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceBox,\n        index: 0 // 0 = SS\n    }),\n    atem_supersource_z_box4: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ATEM,\n        deviceId: 'atem0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.WHEN_CLEAR,\n        lookaheadMaxSearchDistance: 1,\n        mappingType: timeline_state_resolver_types_1.MappingAtemType.SuperSourceBox,\n        index: 0 // 0 = SS\n    }),\n    sisyfos_source_clip_pending: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n        deviceId: 'abstract0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Host_1_st_a: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 0,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Host_2_st_a: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 1,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_Host_3_st_a: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 2,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_1: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 3,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_live_2: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 4,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_world_feed_stereo: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 5,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_world_feed_surround: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 6,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_server_a: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 7,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_server_b: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 8,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    sisyfos_source_jingle: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.SISYFOS,\n        deviceId: 'sisyfos0',\n        channel: 9,\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE\n    }),\n    casparcg_player_clip_pending: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.ABSTRACT,\n        deviceId: 'abstract0',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.PRELOAD,\n        lookaheadDepth: 2\n    }),\n    casparcg_player_clip_1: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        channel: 1,\n        layer: 110,\n        previewWhenNotOnAir: true\n    }),\n    casparcg_player_clip_2: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        channel: 2,\n        layer: 110,\n        previewWhenNotOnAir: true\n    }),\n    casparcg_player_clip_1_loading_loop: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        channel: 1,\n        layer: 109\n    }),\n    casparcg_player_clip_2_loading_loop: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        channel: 2,\n        layer: 109\n    }),\n    casparcg_graphics_overlay: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        channel: 3,\n        layer: 111,\n        previewWhenNotOnAir: true\n    }),\n    casparcg_player_jingle: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.PRELOAD,\n        channel: 3,\n        layer: 110,\n        previewWhenNotOnAir: true\n    }),\n    casparcg_graphics_full: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.PRELOAD,\n        channel: 3,\n        layer: 109,\n        previewWhenNotOnAir: true\n    }),\n    casparcg_cg_dve_template: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.RETAIN,\n        channel: 4,\n        layer: 120\n    }),\n    casparcg_dve_key: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.RETAIN,\n        previewWhenNotOnAir: true,\n        channel: 4,\n        layer: 109\n    }),\n    casparcg_dve_frame: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.RETAIN,\n        previewWhenNotOnAir: true,\n        channel: 4,\n        layer: 111\n    }),\n    casparcg_dve_loop: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.RETAIN,\n        previewWhenNotOnAir: true,\n        channel: 5,\n        layer: 110\n    }),\n    casparcg_studio_screen_loop: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.RETAIN,\n        previewWhenNotOnAir: true,\n        channel: 6,\n        layer: 110\n    }),\n    graphic_adlibs: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: false,\n        channel: 3,\n        layer: 111\n    }),\n    graphic_design: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: false,\n        channel: 3,\n        layer: 111\n    }),\n    graphic_overlay: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: false,\n        channel: 3,\n        layer: 111\n    }),\n    graphic_overlay_headline: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: false,\n        channel: 3,\n        layer: 111\n    }),\n    graphic_overlay_ident: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: false,\n        channel: 3,\n        layer: 111\n    }),\n    graphic_overlay_lower: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: false,\n        channel: 3,\n        layer: 111\n    }),\n    graphic_overlay_tema: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: false,\n        channel: 3,\n        layer: 111\n    }),\n    graphic_overlay_topt: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: false,\n        channel: 3,\n        layer: 111\n    }),\n    /** TODO: Revisit these */\n    graphic_pilot: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: false,\n        channel: 3,\n        layer: 111\n    }),\n    graphic_pilot_overlay: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: false,\n        channel: 3,\n        layer: 111\n    }),\n    graphic_wall: tv2_common_1.literal({\n        device: timeline_state_resolver_types_1.DeviceType.CASPARCG,\n        deviceId: 'caspar01',\n        lookahead: tv_automation_sofie_blueprints_integration_1.LookaheadMode.NONE,\n        previewWhenNotOnAir: false,\n        channel: 3,\n        layer: 111\n    })\n});\n\n\n/***/ })\n/******/ ]);",
            "modified": 1590581732152,
            "studioConfigManifest": [
                {
                    "id": "MediaFlowId",
                    "name": "Media Flow Id",
                    "description": "",
                    "type": "string",
                    "required": false,
                    "defaultVal": "flow0"
                },
                {
                    "id": "ClipFileExtension",
                    "name": "Clip files extension",
                    "description": "Default file extension to clips to fetch from Omneon and play at CasparCG",
                    "type": "string",
                    "required": true,
                    "defaultVal": ".mxf"
                },
                {
                    "id": "ClipSourcePath",
                    "name": "Network base path",
                    "description": "The base path for the Omneon network share. Needs to match the base path of the source in Media manager",
                    "type": "string",
                    "required": true,
                    "defaultVal": ""
                },
                {
                    "id": "SourcesCam",
                    "name": "Camera Mapping",
                    "description": "Camera number to ATEM input and Sisyfos layer",
                    "type": "table",
                    "required": true,
                    "defaultVal": [
                        {
                            "_id": "",
                            "SourceName": "",
                            "AtemSource": 0,
                            "SisyfosLayers": [],
                            "StudioMics": true
                        }
                    ],
                    "columns": [
                        {
                            "id": "SourceName",
                            "name": "Camera name",
                            "description": "Camera name as typed in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "AtemSource",
                            "name": "ATEM input",
                            "description": "ATEM vision mixer input for Camera",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 1
                        },
                        {
                            "id": "SisyfosLayers",
                            "name": "Sisyfos layers",
                            "description": "Sisyfos layers for Camera",
                            "type": "layer_mappings",
                            "filters": {
                                "deviceTypes": [
                                    11
                                ]
                            },
                            "required": true,
                            "multiple": true,
                            "defaultVal": [],
                            "rank": 2
                        },
                        {
                            "id": "StudioMics",
                            "name": "Use Studio Mics",
                            "description": "Add Sisyfos layers for Studio Mics",
                            "type": "boolean",
                            "required": true,
                            "defaultVal": true,
                            "rank": 3
                        }
                    ]
                },
                {
                    "id": "SourcesRM",
                    "name": "RM Mapping",
                    "description": "RM number to ATEM input",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "SourceName": "1",
                            "AtemSource": 1,
                            "SisyfosLayers": [
                                "sisyfos_source_live_1"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "2",
                            "AtemSource": 2,
                            "SisyfosLayers": [
                                "sisyfos_source_live_2"
                            ],
                            "StudioMics": false
                        },
                        {
                            "_id": "",
                            "SourceName": "WF",
                            "AtemSource": 3,
                            "SisyfosLayers": [
                                "sisyfos_source_world_feed_stereo",
                                "sisyfos_source_world_feed_surround"
                            ],
                            "StudioMics": false
                        }
                    ],
                    "columns": [
                        {
                            "id": "SourceName",
                            "name": "RM number",
                            "description": "RM number as typed in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "AtemSource",
                            "name": "ATEM input",
                            "description": "ATEM vision mixer input for RM input",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 1
                        },
                        {
                            "id": "SisyfosLayers",
                            "name": "Sisyfos layers",
                            "description": "Sisyfos layers for RM input",
                            "type": "layer_mappings",
                            "filters": {
                                "deviceTypes": [
                                    11
                                ]
                            },
                            "required": true,
                            "multiple": true,
                            "defaultVal": [],
                            "rank": 2
                        },
                        {
                            "id": "StudioMics",
                            "name": "Use Studio Mics",
                            "description": "Add Sisyfos layers for Studio Mics",
                            "type": "boolean",
                            "required": true,
                            "defaultVal": true,
                            "rank": 3
                        }
                    ]
                },
                {
                    "id": "ABMediaPlayers",
                    "name": "Media Players inputs",
                    "description": "ATEM inputs for A/B media players",
                    "type": "table",
                    "required": false,
                    "defaultVal": [
                        {
                            "_id": "",
                            "SourceName": "1",
                            "AtemSource": 6
                        },
                        {
                            "_id": "",
                            "SourceName": "2",
                            "AtemSource": 5
                        }
                    ],
                    "columns": [
                        {
                            "id": "SourceName",
                            "name": "Media player",
                            "description": "Media player name as typed in iNews",
                            "type": "string",
                            "required": true,
                            "defaultVal": "",
                            "rank": 0
                        },
                        {
                            "id": "AtemSource",
                            "name": "ATEM input",
                            "description": "ATEM vision mixer input for Media player",
                            "type": "number",
                            "required": true,
                            "defaultVal": 0,
                            "rank": 1
                        }
                    ]
                },
                {
                    "id": "StudioMics",
                    "name": "Studio Mics",
                    "description": "Sisyfos layers for Studio Mics",
                    "type": "layer_mappings",
                    "filters": {
                        "deviceTypes": [
                            11
                        ]
                    },
                    "required": true,
                    "multiple": true,
                    "defaultVal": [
                        "sisyfos_source_Host_1_st_a",
                        "sisyfos_source_Host_2_st_a",
                        "sisyfos_source_Host_3_st_a"
                    ]
                },
                {
                    "id": "ABPlaybackDebugLogging",
                    "name": "Media players selection debug logging",
                    "description": "Enable debug logging for A/B media player selection",
                    "type": "boolean",
                    "required": false,
                    "defaultVal": false
                },
                {
                    "id": "AtemSource.DSK1F",
                    "name": "ATEM DSK1 Fill",
                    "description": "ATEM vision mixer input for DSK1 Fill",
                    "type": "number",
                    "required": false,
                    "defaultVal": 8
                },
                {
                    "id": "AtemSource.DSK1K",
                    "name": "ATEM DSK1 Key",
                    "description": "ATEM vision mixer input for DSK1 Key",
                    "type": "number",
                    "required": false,
                    "defaultVal": 7
                },
                {
                    "id": "AtemSource.JingleFill",
                    "name": "Jingle Fill Source",
                    "description": "ATEM vision mixer input for Jingle Fill",
                    "type": "number",
                    "required": false,
                    "defaultVal": 8
                },
                {
                    "id": "AtemSource.JingleKey",
                    "name": "Jingle Key Source",
                    "description": "ATEM vision mixer input for Jingle Source",
                    "type": "number",
                    "required": false,
                    "defaultVal": 7
                },
                {
                    "id": "AtemSettings.CCGClip",
                    "name": "CasparCG keyer clip",
                    "description": "CasparCG keyer clip",
                    "type": "number",
                    "required": false,
                    "defaultVal": 50
                },
                {
                    "id": "AtemSettings.CCGGain",
                    "name": "CasparCG keyer gain",
                    "description": "CasparCG keyer gain",
                    "type": "number",
                    "required": false,
                    "defaultVal": 12.5
                },
                {
                    "id": "AtemSource.SplitArtF",
                    "name": "ATEM Split Screen Art Fill",
                    "description": "ATEM vision mixer input for Split Screen Art Fill",
                    "type": "number",
                    "required": false,
                    "defaultVal": 10
                },
                {
                    "id": "AtemSource.SplitArtK",
                    "name": "ATEM Split Screen Art Key",
                    "description": "ATEM vision mixer input for Split Screen Art Key",
                    "type": "number",
                    "required": false,
                    "defaultVal": 9
                },
                {
                    "id": "AtemSource.SplitBackground",
                    "name": "ATEM split screen background loop source",
                    "description": "ATEM source for mos full-frame grafik background source",
                    "type": "number",
                    "required": false,
                    "defaultVal": 11
                },
                {
                    "id": "AtemSource.GFXFull",
                    "name": "Full graphics source",
                    "description": "ATEM source for full graphics",
                    "type": "number",
                    "required": false,
                    "defaultVal": 7
                },
                {
                    "id": "AtemSource.Loop",
                    "name": "Studio screen loop graphics source",
                    "description": "ATEM source for loop for studio screen",
                    "type": "number",
                    "required": false,
                    "defaultVal": 12
                },
                {
                    "id": "AtemSource.Default",
                    "name": "ATEM Default source",
                    "description": "ATEM vision mixer default source",
                    "type": "number",
                    "required": false,
                    "defaultVal": 2001
                },
                {
                    "id": "AtemSource.Continuity",
                    "name": "ATEM continuity source",
                    "description": "ATEM input for continuity",
                    "type": "number",
                    "required": false,
                    "defaultVal": 2002
                },
                {
                    "id": "AudioBedSettings.fadeIn",
                    "name": "Bed Fade In",
                    "description": "Default fade in duration for audio beds",
                    "type": "number",
                    "required": false,
                    "defaultVal": 25
                },
                {
                    "id": "AudioBedSettings.volume",
                    "name": "Bed Volume",
                    "description": "Volume (0 - 100)",
                    "type": "number",
                    "required": false,
                    "defaultVal": 80
                },
                {
                    "id": "AudioBedSettings.fadeOut",
                    "name": "Bed Fade Out",
                    "description": "Default fade out duration for audio beds",
                    "type": "number",
                    "required": false,
                    "defaultVal": 25
                },
                {
                    "id": "CasparPrerollDuration",
                    "name": "Caspar preroll duration",
                    "description": "ms of preroll before switching to caspar",
                    "type": "number",
                    "required": false,
                    "defaultVal": 200
                },
                {
                    "id": "MaximumPartDuration",
                    "name": "Maximum Part Duration",
                    "description": "Maximum duration (ms) to give parts in UI",
                    "type": "number",
                    "required": false,
                    "defaultVal": 10000
                },
                {
                    "id": "DefaultPartDuration",
                    "name": "Default Part Duration",
                    "description": "Duration to give parts by default",
                    "type": "number",
                    "required": false,
                    "defaultVal": 4000
                }
            ],
            "showStyleConfigManifest": [],
            "databaseVersion": {
                "studio": {},
                "showStyle": {}
            },
            "blueprintVersion": "0.1.0+v1.1.9",
            "integrationVersion": "0.0.0",
            "TSRVersion": "0.0.0",
            "minimumCoreVersion": "1.2.0",
            "blueprintType": "studio"
        }
    ],
    "devices": [
        {
            "_id": "afvdmediamanager01MediaManager",
            "created": 1574426815019,
            "status": {
                "statusCode": 1,
                "messages": []
            },
            "studioId": "studio0",
            "connected": true,
            "connectionId": "t9cbKgmxkiLQzDy8k",
            "lastSeen": 1590652808757,
            "lastConnected": 1590581697572,
            "token": "jesper",
            "category": "media_manager",
            "type": "media_manager",
            "subType": "_process",
            "name": "Media Manager 01",
            "versions": {
                "_process": "0.0.0-develop",
                "tv-automation-server-core-integration": "1.2.0"
            },
            "settings": {
                "workers": 1,
                "lingerTime": 907200000,
                "mediaScanner": {
                    "port": 8000,
                    "host": "10.201.76.11"
                },
                "debugLogging": true,
                "workFlowLingerTime": 172800000,
                "cronJobTime": 60000,
                "monitors": {
                    "monitor0": {
                        "type": "mediascanner",
                        "storageId": "caspar01",
                        "host": "10.201.76.11",
                        "port": 8000
                    }
                },
                "storages": [
                    {
                        "id": "caspar01",
                        "type": "local_folder",
                        "options": {
                            "basePath": "d:\\media"
                        },
                        "support": {
                            "read": true,
                            "write": true
                        }
                    },
                    {
                        "id": "omneon",
                        "type": "file_share",
                        "options": {
                            "mappedNetworkedDriveTarget": "z",
                            "basePath": "\\\\vantageod1.tv2.local\\sofie\\ccg\\",
                            "onlySelectedFiles": true,
                            "mediaPath": ""
                        },
                        "support": {
                            "read": true,
                            "write": false
                        }
                    }
                ],
                "mediaFlows": [
                    {
                        "id": " omneon_to_casparcg01",
                        "mediaFlowType": "expected_items",
                        "sourceId": "omneon",
                        "destinationId": "caspar01"
                    }
                ]
            }
        },
        {
            "_id": "sofsrv01-od",
            "created": 1574426844130,
            "status": {
                "statusCode": 1,
                "messages": [
                    "Watching iNews Queues"
                ]
            },
            "studioId": "studio0",
            "connected": true,
            "connectionId": "P3hCtf3SudAvKaXdu",
            "lastSeen": 1590652812025,
            "lastConnected": 1590582964154,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "ingest",
            "type": "inews",
            "subType": "_process",
            "name": "iNews Gateway",
            "versions": {
                "_process": "0.0.1",
                "tv-automation-server-core-integration": "1.2.1"
            },
            "settings": {
                "hosts": [
                    {
                        "_id": "r3SX5DSJoWCKCcr2X",
                        "host": "10.201.45.21"
                    },
                    {
                        "_id": "wuRcgRZk5349Lf3Gh",
                        "host": "10.201.45.22"
                    }
                ],
                "queues": [
                    {
                        "_id": "4TyLpAbFCppYzKc8W",
                        "queue": "NYHEDERNE-TEST.SOFIE.POST-DEPLOY-TEST"
                    },
                    {
                        "_id": "rRx49NCcnfRu7oN3Y",
                        "queue": "NYHEDERNE-TEST.SOFIE.ON-AIR"
                    },
                    {
                        "_id": "8GdsPSEYSD8ucbFfK",
                        "queue": "SPORTEN.SPXRT.ON-AIR"
                    }
                ],
                "user": "sofie",
                "password": "sofie",
                "debugLogging": true
            },
            "lastDataReceived": 1590582998254,
            "ignore": false
        },
        {
            "_id": "afvdmediamanager01Monitormonitor0",
            "created": 1574505335459,
            "status": {
                "statusCode": 1,
                "messages": []
            },
            "connected": true,
            "connectionId": "t9cbKgmxkiLQzDy8k",
            "lastSeen": 1590652819160,
            "lastConnected": 1590581702160,
            "token": "jesper",
            "category": "media_manager",
            "type": "media_manager",
            "subType": "mediascanner",
            "name": "MediaScanner 01",
            "parentDeviceId": "afvdmediamanager01MediaManager",
            "versions": {
                "_process": "0.0.0-develop",
                "tv-automation-server-core-integration": "1.2.0"
            }
        },
        {
            "_id": "sofsrv01-odPlayoutCoreParent",
            "created": 1574698329857,
            "status": {
                "statusCode": 1,
                "messages": []
            },
            "studioId": "studio0",
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652834244,
            "lastConnected": 1590583410326,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": "_process",
            "name": "Playout gateway",
            "versions": {
                "_process": "0.0.0-develop",
                "atem-connection": "0.10.0",
                "atem-state": "0.8.1",
                "casparcg-connection": "4.9.0",
                "casparcg-state": "1.11.0",
                "emberplus": "1.7.17",
                "superfly-timeline": "7.3.0",
                "timeline-state-resolver": "0.0.0-develop",
                "tv-automation-server-core-integration": "1.2.1"
            },
            "settings": {
                "debugLogging": true,
                "multiThreading": true,
                "multiThreadedResolver": true,
                "reportAllCommands": true,
                "mediaScanner": {
                    "host": "disable"
                },
                "devices": {
                    "abstract0": {
                        "type": 0,
                        "options": {}
                    },
                    "caspar01": {
                        "type": 1,
                        "options": {
                            "host": "10.201.76.11",
                            "port": 5250,
                            "launcherHost": "10.201.76.11",
                            "launcherPort": 8005,
                            "retryInterval": false
                        },
                        "disable": false
                    },
                    "caspar01-launcher": {
                        "type": 10,
                        "options": {
                            "uri": "http://10.201.76.11:8005/processes",
                            "httpMethod": "GET",
                            "expectedHttpResponse": 200,
                            "interval": 30000
                        },
                        "disable": false
                    },
                    "caspar01-scanner": {
                        "type": 10,
                        "options": {
                            "uri": "http://10.201.76.11:8000/stat/seq",
                            "httpMethod": "GET",
                            "expectedHttpResponse": 200,
                            "interval": 30000
                        },
                        "disable": false
                    },
                    "atem0": {
                        "type": 2,
                        "options": {
                            "host": "10.208.47.11",
                            "port": 9910
                        },
                        "disable": false
                    },
                    "http0": {
                        "type": 4,
                        "options": {
                            "makeReadyCommands": []
                        },
                        "disable": false
                    },
                    "caspar02": {
                        "type": 1,
                        "options": {
                            "host": "10.201.76.12",
                            "port": 5250,
                            "launcherHost": "10.201.76.12",
                            "launcherPort": 8005,
                            "retryInterval": false
                        },
                        "disable": false
                    },
                    "sisyfos0": {
                        "type": 11,
                        "options": {
                            "host": "10.209.81.11",
                            "port": 5255
                        },
                        "disable": false
                    },
                    "caspar02-launcher": {
                        "type": 10,
                        "options": {
                            "uri": "http://10.201.76.12:8005/processes",
                            "httpMethod": "GET",
                            "expectedHttpResponse": 200,
                            "interval": 30000
                        },
                        "disable": false
                    },
                    "caspar02-scanner": {
                        "type": 10,
                        "options": {
                            "uri": "http://10.201.76.12:8000/stat/seq",
                            "keyword": "",
                            "interval": 30000,
                            "httpMethod": "GET",
                            "expectedHttpResponse": 200
                        },
                        "disable": false
                    },
                    "viz0": {
                        "type": 13,
                        "options": {
                            "host": "10.222.47.133",
                            "showID": "0B767FBB-70FD-4557-AE74-A2227EA7955C",
                            "profile": "SOFIE",
                            "preloadAllElements": true,
                            "playlistID": "461DB119-C51B-4994-802A-1E5D868C5500",
                            "dontDeactivateOnStandDown": false,
                            "clearAllTemplateName": "altud",
                            "onlyPreloadActiveRundown": true,
                            "initializeRundownOnLoadAll": false,
                            "clearAllOnMakeReady": false,
                            "restPort": 0,
                            "autoLoadInternalElements": true,
                            "clearAllCommands": [
                                "RENDERER*FRONT_LAYER SET_OBJECT ",
                                "RENDERER*BACK_LAYER SET_OBJECT ",
                                "RENDERER SET_OBJECT "
                            ]
                        },
                        "disable": false
                    }
                }
            }
        },
        {
            "_id": "sofsrv01-odPlayoutabstract0",
            "created": 1574698420372,
            "status": {
                "statusCode": 1
            },
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652819395,
            "lastConnected": 1590583410701,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": 0,
            "name": "Abstract abstract0",
            "parentDeviceId": "sofsrv01-odPlayoutCoreParent"
        },
        {
            "_id": "sofsrv01-odPlayoutsisyfos0",
            "created": 1574698420961,
            "status": {
                "statusCode": 1,
                "messages": []
            },
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652819550,
            "lastConnected": 1590583410884,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": 11,
            "name": "Sisyfos sisyfos0",
            "parentDeviceId": "sofsrv01-odPlayoutCoreParent"
        },
        {
            "_id": "sofsrv01-odPlayoutcaspar01-launcher",
            "created": 1574698421313,
            "status": {
                "statusCode": 1
            },
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652819796,
            "lastConnected": 1590583411182,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": 10,
            "name": "HTTP-Watch caspar01-launcher",
            "parentDeviceId": "sofsrv01-odPlayoutCoreParent"
        },
        {
            "_id": "sofsrv01-odPlayouthttp0",
            "created": 1574698421364,
            "status": {
                "statusCode": 1
            },
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652819733,
            "lastConnected": 1590583411078,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": 4,
            "name": "HTTP-Send http0",
            "parentDeviceId": "sofsrv01-odPlayoutCoreParent"
        },
        {
            "_id": "sofsrv01-odPlayoutcaspar01-scanner",
            "created": 1574698421432,
            "status": {
                "statusCode": 1
            },
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652819590,
            "lastConnected": 1590583410948,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": 10,
            "name": "HTTP-Watch caspar01-scanner",
            "parentDeviceId": "sofsrv01-odPlayoutCoreParent"
        },
        {
            "_id": "sofsrv01-odPlayoutcaspar02-launcher",
            "created": 1574698421486,
            "status": {
                "statusCode": 1
            },
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652819844,
            "lastConnected": 1590583411230,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": 10,
            "name": "HTTP-Watch caspar02-launcher",
            "parentDeviceId": "sofsrv01-odPlayoutCoreParent"
        },
        {
            "_id": "sofsrv01-odPlayoutcaspar02-scanner",
            "created": 1574698421568,
            "status": {
                "statusCode": 1
            },
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652819847,
            "lastConnected": 1590583411256,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": 10,
            "name": "HTTP-Watch caspar02-scanner",
            "parentDeviceId": "sofsrv01-odPlayoutCoreParent"
        },
        {
            "_id": "sofsrv01-odPlayoutcaspar02",
            "created": 1574698421614,
            "status": {
                "statusCode": 1,
                "messages": []
            },
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652819945,
            "lastConnected": 1590583411317,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": 1,
            "name": "CasparCG caspar02 10.201.76.12:5250",
            "parentDeviceId": "sofsrv01-odPlayoutCoreParent"
        },
        {
            "_id": "sofsrv01-odPlayoutcaspar01",
            "created": 1574698421680,
            "status": {
                "statusCode": 1,
                "messages": []
            },
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652819943,
            "lastConnected": 1590583411303,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": 1,
            "name": "CasparCG caspar01 10.201.76.11:5250",
            "parentDeviceId": "sofsrv01-odPlayoutCoreParent"
        },
        {
            "_id": "sofsrv01-odPlayoutatem0",
            "created": 1574698421874,
            "status": {
                "statusCode": 1,
                "messages": []
            },
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652820031,
            "lastConnected": 1590583411412,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": 2,
            "name": "Atem atem0",
            "parentDeviceId": "sofsrv01-odPlayoutCoreParent"
        },
        {
            "_id": "sofsrv01-odPlayoutviz0",
            "created": 1576058085364,
            "status": {
                "statusCode": 1,
                "messages": []
            },
            "connected": true,
            "connectionId": "fdMrpeviEu6gWSPd5",
            "lastSeen": 1590652820074,
            "lastConnected": 1590583411489,
            "token": "5634obvtosnfhgf64fbgf",
            "category": "playout",
            "type": "playout",
            "subType": 13,
            "name": "VizMSE ",
            "parentDeviceId": "sofsrv01-odPlayoutCoreParent",
            "ignore": false
        }
    ],
    "coreSystem": {
        "_id": "core",
        "created": 1574426928273,
        "modified": 1574426928273,
        "version": "1.3.0",
        "previousVersion": null,
        "storePath": "/opt/coredisk",
        "serviceMessages": {},
        "autoRewindLeavingSegment": true,
        "systemInfo": {
            "enabled": false,
            "message": "SuperFly: System rollback in progress"
        },
        "support": {
            "message": "<div>\n<h3>Ved fejl kontakt:<br/>TV Support 1660</h3>\n</div>"
        },
        "blueprintId": "tv2_system"
    },
    "deviceCommands": []
}